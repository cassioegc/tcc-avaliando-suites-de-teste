import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest4 {

    public static boolean debug = false;

    @Test
    public void test2001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2001");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet5 = user0.getAuthorities();
        user0.setActivationKey("Authority{name='error.concurrencyFailure'}");
        java.lang.String str8 = user0.getActivationKey();
        java.lang.String str9 = user0.getFirstName();
        java.lang.String str10 = user0.getLogin();
        org.junit.Assert.assertNotNull(authoritySet5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Authority{name='error.concurrencyFailure'}" + "'", str8, "Authority{name='error.concurrencyFailure'}");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test2002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2002");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM11 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("hi!", "", "");
        java.lang.String str12 = fieldErrorVM11.getObjectName();
        boolean boolean13 = socialUserConnection0.equals((java.lang.Object) fieldErrorVM11);
        socialUserConnection0.setRefreshToken("Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setProviderId("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        socialUserConnection0.setId((java.lang.Long) 10L);
        socialUserConnection0.setRefreshToken("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='false'}");
        socialUserConnection0.setId((java.lang.Long) (-1L));
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test2003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2003");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM4 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant5 = managedUserVM4.getCreatedDate();
        java.lang.Long long6 = managedUserVM4.getId();
        java.lang.Long long7 = managedUserVM4.getId();
        java.lang.String str8 = managedUserVM4.toString();
        managedUserVM4.setId((java.lang.Long) (-1L));
        java.util.Set<java.lang.String> strSet11 = managedUserVM4.getAuthorities();
        java.lang.String str12 = managedUserVM4.getImageUrl();
        org.springframework.http.ResponseEntity responseEntity13 = userResource3.createUser(managedUserVM4);
        java.time.Instant instant24 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant36 = null;
        java.time.Instant instant38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet42 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet42, strArray41);
        com.unifacisa.tcc.service.dto.UserDTO userDTO44 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant36, "hi!", instant38, (java.util.Set<java.lang.String>) strSet42);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM45 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", false, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoginVM{username='null', rememberMe=false}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", instant24, "hi!", instant26, (java.util.Set<java.lang.String>) strSet42);
        org.springframework.http.ResponseEntity responseEntity46 = userResource3.createUser(managedUserVM45);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.service.dto.UserDTO> userDTOResponseEntity48 = userResource3.getUser("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', refreshToken='null', expireTime=null}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str8, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(strSet11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(responseEntity13);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(responseEntity46);
    }

    @Test
    public void test2004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2004");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.Long long1 = aluno0.getId();
        com.unifacisa.tcc.domain.Aluno aluno3 = aluno0.habilitadoTcc((java.lang.Boolean) true);
        java.lang.Long long4 = aluno3.getNumeroContato();
        com.unifacisa.tcc.domain.Professor professor5 = aluno3.getProfessor();
        java.lang.Boolean boolean6 = aluno3.isHabilitadoTcc();
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNotNull(aluno3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(professor5);
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + true + "'", boolean6, true);
    }

    @Test
    public void test2005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2005");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor6 = null;
        aluno5.setProfessor(professor6);
        aluno5.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa11 = aluno5.primeiroNome("hi!");
        java.lang.Long long12 = aluno5.getId();
        com.unifacisa.tcc.domain.Aluno aluno14 = aluno5.habilitadoTcc((java.lang.Boolean) false);
        aluno5.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor17 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str18 = professor17.toString();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor20 = null;
        aluno19.setProfessor(professor20);
        java.lang.Long long22 = aluno19.getMatricula();
        java.lang.String str23 = aluno19.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean26 = aluno24.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor27 = aluno24.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean30 = aluno28.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno31 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor33 = null;
        aluno32.setProfessor(professor33);
        java.lang.Long long35 = aluno32.getMatricula();
        java.lang.String str36 = aluno32.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno37 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean39 = aluno37.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor40 = aluno37.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor42 = null;
        aluno41.setProfessor(professor42);
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        aluno44.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor48 = null;
        aluno47.setProfessor(professor48);
        aluno47.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor53 = null;
        aluno52.setProfessor(professor53);
        java.lang.Long long55 = aluno52.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno56 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean59 = aluno57.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno60 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor61 = null;
        aluno60.setProfessor(professor61);
        com.unifacisa.tcc.domain.Aluno[] alunoArray63 = new com.unifacisa.tcc.domain.Aluno[] { aluno19, aluno24, aluno28, aluno31, aluno32, aluno37, aluno41, aluno44, aluno47, aluno52, aluno56, aluno57, aluno60 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet64 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet64, alunoArray63);
        com.unifacisa.tcc.domain.Professor professor66 = professor17.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet64);
        com.unifacisa.tcc.domain.Aluno aluno67 = aluno5.professor(professor17);
        com.unifacisa.tcc.domain.Aluno aluno69 = aluno67.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor70 = aluno69.getProfessor();
        com.unifacisa.tcc.domain.Professor professor71 = professor2.removeAluno(aluno69);
        professor2.setNumeroContato((java.lang.Long) 0L);
        professor2.setEmail("UserDTO{login='null', firstName='null', lastName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:49.938Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:49.938Z, authorities=[]}");
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNotNull(pessoa11);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNotNull(aluno14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str18, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(professor27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(long35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(professor40);
        org.junit.Assert.assertNull(long55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(alunoArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(professor66);
        org.junit.Assert.assertNotNull(aluno67);
        org.junit.Assert.assertNotNull(aluno69);
        org.junit.Assert.assertNotNull(professor70);
        org.junit.Assert.assertNotNull(professor71);
    }

    @Test
    public void test2006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2006");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getImageUrl();
        java.lang.String str2 = managedUserVM0.getLangKey();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test2007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2007");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        java.time.Instant instant6 = user0.getLastModifiedDate();
        user0.setFirstName("LoginVM{username='null', rememberMe=false}");
        java.time.Instant instant9 = user0.getResetDate();
        java.lang.Long long10 = user0.getId();
        com.unifacisa.tcc.service.dto.UserDTO userDTO11 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        com.unifacisa.tcc.service.dto.UserDTO userDTO12 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        user0.setLangKey("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        user0.setResetKey("Aluno{id=null, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertNull(instant9);
        org.junit.Assert.assertNull(long10);
    }

    @Test
    public void test2008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2008");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user7 = userMapper5.userFromId((java.lang.Long) 100L);
        user7.setLangKey("");
        java.time.Instant instant10 = user7.getResetDate();
        java.time.Instant instant11 = user7.getCreatedDate();
        user0.setResetDate(instant11);
        boolean boolean13 = user0.getActivated();
        user0.setLangKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str16 = user0.getLogin();
        java.time.Instant instant17 = user0.getResetDate();
        org.junit.Assert.assertNotNull(user7);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(instant11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(instant17);
    }

    @Test
    public void test2009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2009");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            customSocialConnectionRepository3.removeConnections("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2010");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        aluno7.setPrimeiroNome("");
        java.lang.String str10 = aluno7.getPrimeiroNome();
        java.lang.Long long11 = aluno7.getMatricula();
        boolean boolean12 = user2.equals((java.lang.Object) aluno7);
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor14 = null;
        aluno13.setProfessor(professor14);
        aluno13.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = aluno13.primeiroNome("hi!");
        java.lang.Long long20 = aluno13.getId();
        com.unifacisa.tcc.domain.Aluno aluno22 = aluno13.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor23 = aluno13.getProfessor();
        java.lang.Boolean boolean24 = aluno13.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor25 = aluno13.getProfessor();
        boolean boolean26 = aluno7.equals((java.lang.Object) aluno13);
        com.unifacisa.tcc.domain.Professor professor27 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor29 = professor27.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa31 = professor27.email("");
        java.lang.String str32 = professor27.toString();
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor34 = null;
        aluno33.setProfessor(professor34);
        aluno33.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Professor professor38 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor40 = professor38.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa42 = professor38.email("");
        com.unifacisa.tcc.domain.Professor professor44 = professor38.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno45 = aluno33.professor(professor44);
        com.unifacisa.tcc.domain.Aluno aluno47 = aluno45.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor48 = professor27.addAluno(aluno45);
        com.unifacisa.tcc.domain.Aluno aluno49 = aluno7.professor(professor48);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa51 = aluno49.email("User{login='null', firstName='null', lastName='null', email='null', imageUrl='SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(long20);
        org.junit.Assert.assertNotNull(aluno22);
        org.junit.Assert.assertNull(professor23);
        org.junit.Assert.assertEquals("'" + boolean24 + "' != '" + false + "'", boolean24, false);
        org.junit.Assert.assertNull(professor25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(professor29);
        org.junit.Assert.assertNotNull(pessoa31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}" + "'", str32, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNotNull(professor40);
        org.junit.Assert.assertNotNull(pessoa42);
        org.junit.Assert.assertNotNull(professor44);
        org.junit.Assert.assertNotNull(aluno45);
        org.junit.Assert.assertNotNull(aluno47);
        org.junit.Assert.assertNotNull(professor48);
        org.junit.Assert.assertNotNull(aluno49);
        org.junit.Assert.assertNotNull(pessoa51);
    }

    @Test
    public void test2011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2011");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper3 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray4 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList5 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList5, userArray4);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList7 = userMapper3.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList5);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray9 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList10 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList10, userArray9);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList12 = userMapper8.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList10);
        java.time.Instant instant23 = null;
        java.time.Instant instant25 = null;
        java.time.Instant instant35 = null;
        java.time.Instant instant37 = null;
        java.lang.String[] strArray40 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet41 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet41, strArray40);
        com.unifacisa.tcc.service.dto.UserDTO userDTO43 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant35, "hi!", instant37, (java.util.Set<java.lang.String>) strSet41);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM44 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant23, "", instant25, (java.util.Set<java.lang.String>) strSet41);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet45 = userMapper8.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet41);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper46 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray47 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList48 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList48, userArray47);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList50 = userMapper46.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList48);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList51 = userMapper8.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList48);
        java.util.List<com.unifacisa.tcc.domain.User> userList52 = userMapper3.userDTOsToUsers(userDTOList51);
        java.util.List<com.unifacisa.tcc.domain.User> userList53 = userMapper0.userDTOsToUsers(userDTOList51);
        com.unifacisa.tcc.domain.User user55 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper56 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user58 = userMapper56.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.User user59 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper60 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user62 = userMapper60.userFromId((java.lang.Long) 100L);
        user62.setLangKey("");
        java.time.Instant instant65 = user62.getResetDate();
        java.time.Instant instant66 = user62.getCreatedDate();
        user59.setCreatedDate(instant66);
        com.unifacisa.tcc.service.dto.UserDTO userDTO68 = userMapper56.userToUserDTO(user59);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper69 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray70 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList71 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList71, userArray70);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList73 = userMapper69.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList71);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList74 = userMapper56.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList71);
        java.util.List<com.unifacisa.tcc.domain.User> userList75 = userMapper0.userDTOsToUsers(userDTOList74);
        com.unifacisa.tcc.domain.User user77 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.User user78 = new com.unifacisa.tcc.domain.User();
        java.lang.String str79 = user78.toString();
        user78.setPassword("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str82 = user78.getPassword();
        com.unifacisa.tcc.service.dto.UserDTO userDTO83 = userMapper0.userToUserDTO(user78);
        user78.setId((java.lang.Long) 0L);
        user78.setCreatedBy("Aluno{id=null, primeiroNome='null', segundoNome='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(userDTOList7);
        org.junit.Assert.assertNotNull(userArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(userDTOList12);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(authoritySet45);
        org.junit.Assert.assertNotNull(userArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(userDTOList50);
        org.junit.Assert.assertNotNull(userDTOList51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(user55);
        org.junit.Assert.assertNotNull(user58);
        org.junit.Assert.assertNotNull(user62);
        org.junit.Assert.assertNull(instant65);
        org.junit.Assert.assertNotNull(instant66);
        org.junit.Assert.assertNotNull(userDTO68);
        org.junit.Assert.assertNotNull(userArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(userDTOList73);
        org.junit.Assert.assertNotNull(userDTOList74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(user77);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str79, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str82, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(userDTO83);
    }

    @Test
    public void test2012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2012");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 10L);
        java.lang.String str3 = user2.getPassword();
        java.lang.String str4 = user2.getActivationKey();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user7 = userMapper5.userFromId((java.lang.Long) 100L);
        user7.setLangKey("");
        java.time.Instant instant10 = user7.getResetDate();
        java.time.Instant instant11 = user7.getCreatedDate();
        user7.setCreatedBy("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.time.Instant instant14 = user7.getCreatedDate();
        user2.setCreatedDate(instant14);
        user2.setResetKey("LoggerVM{name='null', level='null'}");
        user2.setImageUrl("");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(user7);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(instant11);
        org.junit.Assert.assertNotNull(instant14);
    }

    @Test
    public void test2013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2013");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        java.lang.String str5 = user2.getResetKey();
        boolean boolean7 = user2.equals((java.lang.Object) 10.0f);
        java.lang.String str8 = user2.getLangKey();
        boolean boolean9 = user2.getActivated();
        user2.setCreatedBy("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str12 = user2.getPassword();
        java.lang.String str13 = user2.getLogin();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test2014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2014");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        persistentAuditEvent0.setId((java.lang.Long) 1L);
        java.lang.String str3 = persistentAuditEvent0.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = persistentAuditEvent0.getData();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent5 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        persistentAuditEvent5.setId((java.lang.Long) 1L);
        java.lang.String str8 = persistentAuditEvent5.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = persistentAuditEvent5.getData();
        persistentAuditEvent0.setData(strMap9);
        java.lang.String str11 = persistentAuditEvent0.getPrincipal();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test2015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2015");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setUsername("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str6 = loginVM0.toString();
        loginVM0.setUsername("SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=100}");
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.String str11 = loginVM0.getUsername();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}" + "'", str6, "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=100}" + "'", str11, "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=100}");
    }

    @Test
    public void test2016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2016");
        org.springframework.http.HttpHeaders httpHeaders3 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createFailureAlert("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:34.552Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:34.552Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}", "Aluno{id=1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "LoggerVM{name='LoggerVM{name='null', level='null'}', level='null'}");
        org.junit.Assert.assertNotNull(httpHeaders3);
    }

    @Test
    public void test2017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2017");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        user11.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM14 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet15 = managedUserVM14.getAuthorities();
        boolean boolean16 = user11.equals((java.lang.Object) strSet15);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper17 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray18 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList19 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList19, userArray18);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList21 = userMapper17.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList19);
        java.time.Instant instant32 = null;
        java.time.Instant instant34 = null;
        java.time.Instant instant44 = null;
        java.time.Instant instant46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet50 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet50, strArray49);
        com.unifacisa.tcc.service.dto.UserDTO userDTO52 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant44, "hi!", instant46, (java.util.Set<java.lang.String>) strSet50);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM53 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant32, "", instant34, (java.util.Set<java.lang.String>) strSet50);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet54 = userMapper17.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet50);
        user11.setAuthorities(authoritySet54);
        java.lang.String str56 = user11.getFirstName();
        user11.setId((java.lang.Long) 10L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO59 = userMapper0.userToUserDTO(user11);
        user11.setLastName("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=2021-03-26T03:34:08.443Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.443Z, authorities=[]}");
        java.time.Instant instant62 = user11.getLastModifiedDate();
        java.lang.String str63 = user11.getCreatedBy();
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(userArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(userDTOList21);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(authoritySet54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(userDTO59);
        org.junit.Assert.assertNotNull(instant62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str63, "LoginVM{username='null', rememberMe=false}");
    }

    @Test
    public void test2018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2018");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.social.connect.Connection<?>> wildcardConnectionList5 = customSocialConnectionRepository3.findConnections("Aluno{id=1, primeiroNome='', segundoNome='null', matricula='0', email='null', numeroContato='null', habilitadoTcc='false'}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2019");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 10L);
        java.lang.String str5 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("Authority{name='null'}");
        socialUserConnection0.setProviderId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=null}");
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        aluno12.setPrimeiroNome("");
        java.lang.Long long15 = aluno12.getMatricula();
        java.lang.Long long16 = aluno12.getMatricula();
        com.unifacisa.tcc.domain.Professor professor17 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor19 = professor17.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor22 = null;
        aluno21.setProfessor(professor22);
        aluno21.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor28 = null;
        aluno27.setProfessor(professor28);
        java.lang.Long long30 = aluno27.getMatricula();
        java.lang.String str31 = aluno27.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean34 = aluno32.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor36 = null;
        aluno35.setProfessor(professor36);
        aluno35.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean42 = aluno40.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        aluno43.setPrimeiroNome("");
        java.lang.Long long46 = aluno43.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        aluno47.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray50 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno26, aluno27, aluno32, aluno35, aluno40, aluno43, aluno47 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet51 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet51, alunoArray50);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet51);
        com.unifacisa.tcc.domain.Professor professor54 = professor19.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet51);
        com.unifacisa.tcc.domain.Professor professor56 = professor54.diponibilidade((java.lang.Boolean) true);
        professor54.setDiponibilidade((java.lang.Boolean) false);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet59 = professor54.getAlunos();
        com.unifacisa.tcc.domain.Aluno aluno60 = aluno12.professor(professor54);
        boolean boolean61 = socialUserConnection0.equals((java.lang.Object) professor54);
        socialUserConnection0.setSecret("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str5, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long15);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertNotNull(professor19);
        org.junit.Assert.assertNull(long30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(long46);
        org.junit.Assert.assertNotNull(alunoArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(professor54);
        org.junit.Assert.assertNotNull(professor56);
        org.junit.Assert.assertNotNull(alunoSet59);
        org.junit.Assert.assertNotNull(aluno60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test2020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2020");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoginVM{username='null', rememberMe=false}");
        java.lang.String str4 = fieldErrorVM3.getField();
        java.lang.String str5 = fieldErrorVM3.getField();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str4, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str5, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test2021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2021");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.toString();
        java.time.Instant instant2 = managedUserVM0.getLastModifiedDate();
        java.time.Instant instant3 = null;
        managedUserVM0.setLastModifiedDate(instant3);
        boolean boolean5 = managedUserVM0.isActivated();
        java.lang.String str6 = managedUserVM0.toString();
        java.lang.String str7 = managedUserVM0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str1, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(instant2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str6, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str7, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test2022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2022");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.toString();
        java.lang.String str2 = managedUserVM0.getLogin();
        java.lang.String str3 = managedUserVM0.getFirstName();
        java.time.Instant instant4 = managedUserVM0.getCreatedDate();
        java.lang.String str5 = managedUserVM0.getPassword();
        java.lang.String str6 = managedUserVM0.getLastModifiedBy();
        java.util.Set<java.lang.String> strSet7 = managedUserVM0.getAuthorities();
        java.lang.String str8 = managedUserVM0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str1, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(strSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str8, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test2023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2023");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = null;
        persistentAuditEvent0.setData(strMap1);
        java.time.Instant instant3 = null;
        persistentAuditEvent0.setAuditEventDate(instant3);
        persistentAuditEvent0.setAuditEventType("error.validation");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = persistentAuditEvent0.getData();
        java.lang.String str8 = persistentAuditEvent0.getPrincipal();
        java.time.Instant instant9 = persistentAuditEvent0.getAuditEventDate();
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(instant9);
    }

    @Test
    public void test2024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2024");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        java.lang.String str5 = user2.getResetKey();
        java.lang.String str6 = user2.getCreatedBy();
        java.lang.String str7 = user2.getFirstName();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test2025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2025");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        user3.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user3.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user10 = userMapper8.userFromId((java.lang.Long) 100L);
        user10.setLangKey("");
        java.time.Instant instant13 = user10.getResetDate();
        java.time.Instant instant14 = user10.getCreatedDate();
        user3.setResetDate(instant14);
        boolean boolean16 = user3.getActivated();
        user3.setLangKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant19 = user3.getCreatedDate();
        user2.setCreatedDate(instant19);
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM21 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM21.setName("LoginVM{username='null', rememberMe=false}");
        loggerVM21.setName("LoggerVM{name='null', level='null'}");
        boolean boolean26 = user2.equals((java.lang.Object) loggerVM21);
        java.lang.String str27 = loggerVM21.toString();
        java.lang.String str28 = loggerVM21.getLevel();
        loggerVM21.setLevel("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:34.552Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:34.552Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(user10);
        org.junit.Assert.assertNull(instant13);
        org.junit.Assert.assertNotNull(instant14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(instant19);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "LoggerVM{name='LoggerVM{name='null', level='null'}', level='null'}" + "'", str27, "LoggerVM{name='LoggerVM{name='null', level='null'}', level='null'}");
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test2026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2026");
        org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createEntityDeletionAlert("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "SocialUserConnection{id=null, userId=, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNotNull(httpHeaders2);
    }

    @Test
    public void test2027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2027");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 10L);
        java.lang.String str5 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("Authority{name='null'}");
        java.lang.String str8 = socialUserConnection0.getImageURL();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str5, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Authority{name='null'}" + "'", str8, "Authority{name='null'}");
    }

    @Test
    public void test2028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2028");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        java.lang.String str5 = user2.getResetKey();
        com.unifacisa.tcc.service.dto.UserDTO userDTO6 = new com.unifacisa.tcc.service.dto.UserDTO(user2);
        java.lang.String str7 = user2.getLastModifiedBy();
        user2.setLangKey("LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=null}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test2029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2029");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM4 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant5 = managedUserVM4.getCreatedDate();
        java.lang.Long long6 = managedUserVM4.getId();
        java.lang.Long long7 = managedUserVM4.getId();
        java.lang.String str8 = managedUserVM4.toString();
        managedUserVM4.setId((java.lang.Long) (-1L));
        java.util.Set<java.lang.String> strSet11 = managedUserVM4.getAuthorities();
        java.lang.String str12 = managedUserVM4.getImageUrl();
        org.springframework.http.ResponseEntity responseEntity13 = userResource3.createUser(managedUserVM4);
        java.time.Instant instant24 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant36 = null;
        java.time.Instant instant38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet42 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet42, strArray41);
        com.unifacisa.tcc.service.dto.UserDTO userDTO44 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant36, "hi!", instant38, (java.util.Set<java.lang.String>) strSet42);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM45 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", false, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoginVM{username='null', rememberMe=false}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", instant24, "hi!", instant26, (java.util.Set<java.lang.String>) strSet42);
        org.springframework.http.ResponseEntity responseEntity46 = userResource3.createUser(managedUserVM45);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM47 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str48 = managedUserVM47.toString();
        java.time.Instant instant49 = managedUserVM47.getLastModifiedDate();
        java.time.Instant instant50 = null;
        managedUserVM47.setLastModifiedDate(instant50);
        java.lang.String str52 = managedUserVM47.getLogin();
        java.lang.String str53 = managedUserVM47.getLangKey();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity responseEntity54 = userResource3.createUser(managedUserVM47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str8, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(strSet11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(responseEntity13);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(responseEntity46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str48, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(instant49);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str53);
    }

    @Test
    public void test2030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2030");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "LoginVM{username='LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}', rememberMe=true}", "", (java.lang.Long) 1L, "Aluno{id=null, primeiroNome='null', segundoNome='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:31.405Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:31.405Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}", "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', secret='null', refreshToken='null', expireTime=100}", "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=, createdDate=2021-03-26T03:34:26.101Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:26.101Z, authorities=[]}", "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}", (java.lang.Long) 0L);
    }

    @Test
    public void test2031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2031");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 10L);
        java.lang.String str5 = socialUserConnection0.getProviderId();
        java.lang.String str6 = socialUserConnection0.getAccessToken();
        java.lang.String str7 = socialUserConnection0.getSecret();
        java.lang.String str8 = socialUserConnection0.getRefreshToken();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str5, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test2032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2032");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = null;
        user2.setLastModifiedDate(instant5);
        user2.setId((java.lang.Long) 100L);
        org.junit.Assert.assertNotNull(user2);
    }

    @Test
    public void test2033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2033");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str1 = loggerVM0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "LoggerVM{name='null', level='null'}" + "'", str1, "LoggerVM{name='null', level='null'}");
    }

    @Test
    public void test2034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2034");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM0.setLevel("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str3 = loggerVM0.getName();
        loggerVM0.setName("LoginVM{username='null', rememberMe=false}");
        loggerVM0.setLevel("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test2035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2035");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet1 = managedUserVM0.getAuthorities();
        java.time.Instant instant2 = null;
        managedUserVM0.setLastModifiedDate(instant2);
        java.lang.String str4 = managedUserVM0.toString();
        java.time.Instant instant5 = null;
        managedUserVM0.setLastModifiedDate(instant5);
        java.lang.String str7 = managedUserVM0.getLastName();
        java.lang.String str8 = managedUserVM0.toString();
        org.junit.Assert.assertNull(strSet1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str4, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str8, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test2036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2036");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.toString();
        managedUserVM0.setLogin("User{login='null', firstName='error.validation', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str4 = managedUserVM0.getLastName();
        java.time.Instant instant5 = managedUserVM0.getCreatedDate();
        java.time.Instant instant15 = null;
        java.time.Instant instant17 = null;
        java.lang.String[] strArray20 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet21 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet21, strArray20);
        com.unifacisa.tcc.service.dto.UserDTO userDTO23 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant15, "hi!", instant17, (java.util.Set<java.lang.String>) strSet21);
        java.lang.String str24 = userDTO23.getLogin();
        java.lang.String str25 = userDTO23.getFirstName();
        java.lang.String str26 = userDTO23.getEmail();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent27 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = null;
        persistentAuditEvent27.setData(strMap28);
        persistentAuditEvent27.setAuditEventType("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.User user41 = new com.unifacisa.tcc.domain.User();
        user41.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user41.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant46 = user41.getLastModifiedDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper48 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user50 = userMapper48.userFromId((java.lang.Long) 100L);
        user50.setLangKey("");
        java.time.Instant instant53 = user50.getResetDate();
        java.time.Instant instant54 = user50.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        aluno55.setPrimeiroNome("");
        java.lang.String str58 = aluno55.getPrimeiroNome();
        java.lang.Long long59 = aluno55.getMatricula();
        boolean boolean60 = user50.equals((java.lang.Object) aluno55);
        user50.setFirstName("");
        com.unifacisa.tcc.domain.User user63 = new com.unifacisa.tcc.domain.User();
        user63.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user63.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper68 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user70 = userMapper68.userFromId((java.lang.Long) 100L);
        user70.setLangKey("");
        java.time.Instant instant73 = user70.getResetDate();
        java.time.Instant instant74 = user70.getCreatedDate();
        user63.setResetDate(instant74);
        user50.setCreatedDate(instant74);
        java.util.Set<java.lang.String> strSet77 = null;
        com.unifacisa.tcc.service.dto.UserDTO userDTO78 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "LoginVM{username='null', rememberMe=false}", "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}", "error.concurrencyFailure", "LoginVM{username='null', rememberMe=false}", true, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", instant46, "", instant74, strSet77);
        persistentAuditEvent27.setAuditEventDate(instant74);
        userDTO23.setLastModifiedDate(instant74);
        managedUserVM0.setLastModifiedDate(instant74);
        java.lang.String str82 = managedUserVM0.getLangKey();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str1, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(instant46);
        org.junit.Assert.assertNotNull(user50);
        org.junit.Assert.assertNull(instant53);
        org.junit.Assert.assertNotNull(instant54);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNull(long59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(user70);
        org.junit.Assert.assertNull(instant73);
        org.junit.Assert.assertNotNull(instant74);
        org.junit.Assert.assertNull(str82);
    }

    @Test
    public void test2037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2037");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.String str4 = loginVM0.toString();
        java.lang.String str5 = loginVM0.getPassword();
        java.lang.Boolean boolean6 = loginVM0.isRememberMe();
        java.lang.String str7 = loginVM0.getUsername();
        java.lang.String str8 = loginVM0.getUsername();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str4, "LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + false + "'", boolean6, false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test2038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2038");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        java.lang.String str8 = socialUserConnection0.getProviderId();
        java.lang.String str9 = socialUserConnection0.getSecret();
        socialUserConnection0.setUserId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str12 = socialUserConnection0.toString();
        java.lang.Long long13 = socialUserConnection0.getExpireTime();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str8, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "SocialUserConnection{id=null, userId=Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str12, "SocialUserConnection{id=null, userId=Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(long13);
    }

    @Test
    public void test2039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2039");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM1 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM1.setName("LoginVM{username='null', rememberMe=false}");
        logsResource0.changeLevel(loggerVM1);
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList5 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM6 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM6.setName("LoginVM{username='null', rememberMe=false}");
        loggerVM6.setName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        logsResource0.changeLevel(loggerVM6);
        com.unifacisa.tcc.web.rest.LogsResource logsResource12 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM13 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM13.setName("LoginVM{username='null', rememberMe=false}");
        logsResource12.changeLevel(loggerVM13);
        loggerVM13.setName("Authority{name='error.concurrencyFailure'}");
        logsResource0.changeLevel(loggerVM13);
        com.unifacisa.tcc.web.rest.LogsResource logsResource20 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM21 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM21.setName("LoginVM{username='null', rememberMe=false}");
        logsResource20.changeLevel(loggerVM21);
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList25 = logsResource20.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM26 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM26.setName("LoginVM{username='null', rememberMe=false}");
        loggerVM26.setName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        logsResource20.changeLevel(loggerVM26);
        com.unifacisa.tcc.web.rest.LogsResource logsResource32 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM33 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM33.setName("LoginVM{username='null', rememberMe=false}");
        logsResource32.changeLevel(loggerVM33);
        loggerVM33.setName("Authority{name='error.concurrencyFailure'}");
        logsResource20.changeLevel(loggerVM33);
        logsResource0.changeLevel(loggerVM33);
        java.lang.String str41 = loggerVM33.toString();
        loggerVM33.setLevel("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='error.validation', expireTime=null}");
        java.lang.String str44 = loggerVM33.getName();
        loggerVM33.setLevel("LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}");
        java.lang.String str47 = loggerVM33.getLevel();
        loggerVM33.setLevel("LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='SocialUserConnection{id=null, userId=, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=null}'}");
        org.junit.Assert.assertNotNull(loggerVMList5);
        org.junit.Assert.assertNotNull(loggerVMList25);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='null'}" + "'", str41, "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='null'}");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Authority{name='error.concurrencyFailure'}" + "'", str44, "Authority{name='error.concurrencyFailure'}");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}" + "'", str47, "LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}");
    }

    @Test
    public void test2040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2040");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant5 = user0.getLastModifiedDate();
        user0.setResetKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.time.Instant instant8 = user0.getResetDate();
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor10 = null;
        aluno9.setProfessor(professor10);
        aluno9.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa15 = aluno9.primeiroNome("hi!");
        java.lang.Long long16 = aluno9.getId();
        java.lang.String str17 = aluno9.getSegundoNome();
        boolean boolean18 = user0.equals((java.lang.Object) aluno9);
        org.junit.Assert.assertNotNull(instant5);
        org.junit.Assert.assertNull(instant8);
        org.junit.Assert.assertNotNull(pessoa15);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test2041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2041");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderUserId("error.concurrencyFailure");
        socialUserConnection0.setProviderUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str5 = socialUserConnection0.getAccessToken();
        socialUserConnection0.setProviderId("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str8 = socialUserConnection0.getProviderUserId();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str8, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
    }

    @Test
    public void test2042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2042");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        user2.setFirstName("error.validation");
        user2.setCreatedBy("Authority{name='error.concurrencyFailure'}");
        java.lang.String str9 = user2.toString();
        java.lang.String str10 = user2.getPassword();
        boolean boolean11 = user2.getActivated();
        user2.setId((java.lang.Long) 0L);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "User{login='null', firstName='error.validation', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str9, "User{login='null', firstName='error.validation', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test2043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2043");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.email("");
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        aluno5.setPrimeiroNome("");
        aluno5.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor10 = professor0.addAluno(aluno5);
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        user11.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user11.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper16 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user18 = userMapper16.userFromId((java.lang.Long) 100L);
        user18.setLangKey("");
        java.time.Instant instant21 = user18.getResetDate();
        java.time.Instant instant22 = user18.getCreatedDate();
        user11.setResetDate(instant22);
        java.time.Instant instant24 = null;
        user11.setCreatedDate(instant24);
        java.lang.String str26 = user11.getPassword();
        boolean boolean27 = user11.getActivated();
        boolean boolean28 = aluno5.equals((java.lang.Object) user11);
        java.lang.String str29 = user11.getLangKey();
        java.time.Instant instant30 = user11.getLastModifiedDate();
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNotNull(user18);
        org.junit.Assert.assertNull(instant21);
        org.junit.Assert.assertNotNull(instant22);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(instant30);
    }

    @Test
    public void test2044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2044");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.toString();
        java.lang.String str2 = managedUserVM0.getLogin();
        java.time.Instant instant3 = managedUserVM0.getLastModifiedDate();
        java.lang.String str4 = managedUserVM0.getEmail();
        java.lang.String str5 = managedUserVM0.toString();
        java.lang.String str6 = managedUserVM0.getPassword();
        java.lang.String str7 = managedUserVM0.getLastName();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str1, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(instant3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str5, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test2045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2045");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet1 = managedUserVM0.getAuthorities();
        java.time.Instant instant2 = null;
        managedUserVM0.setLastModifiedDate(instant2);
        java.lang.String str4 = managedUserVM0.toString();
        java.time.Instant instant5 = null;
        managedUserVM0.setLastModifiedDate(instant5);
        java.lang.String str7 = managedUserVM0.getLangKey();
        managedUserVM0.setId((java.lang.Long) 100L);
        java.lang.String str10 = managedUserVM0.toString();
        java.lang.String str11 = managedUserVM0.getCreatedBy();
        org.junit.Assert.assertNull(strSet1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str4, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str10, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test2046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2046");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user7 = userMapper5.userFromId((java.lang.Long) 100L);
        user7.setLangKey("");
        java.time.Instant instant10 = user7.getResetDate();
        java.time.Instant instant11 = user7.getCreatedDate();
        user0.setResetDate(instant11);
        java.time.Instant instant13 = null;
        user0.setCreatedDate(instant13);
        java.lang.String str15 = user0.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user16 = new com.unifacisa.tcc.domain.User();
        java.lang.String str17 = user16.toString();
        boolean boolean18 = user0.equals((java.lang.Object) user16);
        com.unifacisa.tcc.domain.User user19 = new com.unifacisa.tcc.domain.User();
        user19.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM22 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet23 = managedUserVM22.getAuthorities();
        boolean boolean24 = user19.equals((java.lang.Object) strSet23);
        java.time.Instant instant25 = user19.getLastModifiedDate();
        user16.setLastModifiedDate(instant25);
        user16.setLastName("");
        org.junit.Assert.assertNotNull(user7);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(instant11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str17, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(instant25);
    }

    @Test
    public void test2047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2047");
        com.unifacisa.tcc.config.LoggingAspectConfiguration loggingAspectConfiguration0 = new com.unifacisa.tcc.config.LoggingAspectConfiguration();
        org.springframework.core.env.Environment environment1 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect2 = loggingAspectConfiguration0.loggingAspect(environment1);
        org.springframework.core.env.Environment environment3 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect4 = loggingAspectConfiguration0.loggingAspect(environment3);
        loggingAspect4.applicationPackagePointcut();
        loggingAspect4.applicationPackagePointcut();
        org.aspectj.lang.JoinPoint joinPoint7 = null;
        java.lang.Throwable throwable8 = null;
        // The following exception was thrown during execution in test generation
        try {
            loggingAspect4.logAfterThrowing(joinPoint7, throwable8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(loggingAspect2);
        org.junit.Assert.assertNotNull(loggingAspect4);
    }

    @Test
    public void test2048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2048");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM0.setName("LoginVM{username='null', rememberMe=false}");
        loggerVM0.setName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        java.lang.String str5 = loggerVM0.getName();
        loggerVM0.setName("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:08.859Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.859Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str5, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
    }

    @Test
    public void test2049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2049");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet1 = managedUserVM0.getAuthorities();
        managedUserVM0.setId((java.lang.Long) 1L);
        java.util.Set<java.lang.String> strSet4 = managedUserVM0.getAuthorities();
        org.junit.Assert.assertNull(strSet1);
        org.junit.Assert.assertNull(strSet4);
    }

    @Test
    public void test2050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2050");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        java.time.Instant instant6 = user0.getLastModifiedDate();
        user0.setCreatedBy("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str9 = user0.toString();
        java.lang.Long long10 = user0.getId();
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str9, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(long10);
    }

    @Test
    public void test2051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2051");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.util.MultiValueMap<java.lang.String, org.springframework.social.connect.Connection<?>> strMap4 = customSocialConnectionRepository3.findAllConnections();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2052");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.Long long1 = aluno0.getId();
        aluno0.setHabilitadoTcc((java.lang.Boolean) true);
        java.lang.Long long4 = aluno0.getId();
        java.lang.Long long5 = aluno0.getNumeroContato();
        java.lang.String str6 = aluno0.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor7 = aluno0.getProfessor();
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(professor7);
    }

    @Test
    public void test2053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2053");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.primeiroNome("hi!");
        java.lang.String str7 = aluno0.getEmail();
        com.unifacisa.tcc.domain.Professor professor8 = aluno0.getProfessor();
        aluno0.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        aluno0.setMatricula((java.lang.Long) 10L);
        java.lang.String str13 = aluno0.toString();
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(professor8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Aluno{id=null, primeiroNome='hi!', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='10', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str13, "Aluno{id=null, primeiroNome='hi!', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='10', email='null', numeroContato='null', habilitadoTcc='null'}");
    }

    @Test
    public void test2054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2054");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        user2.setFirstName("error.validation");
        user2.setActivationKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Authority authority9 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str10 = authority9.getName();
        java.lang.String str11 = authority9.getName();
        authority9.setName("");
        com.unifacisa.tcc.domain.Authority authority14 = new com.unifacisa.tcc.domain.Authority();
        authority14.setName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        authority14.setName("error.concurrencyFailure");
        com.unifacisa.tcc.domain.Authority[] authorityArray19 = new com.unifacisa.tcc.domain.Authority[] { authority9, authority14 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Authority> authoritySet20 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Authority>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Authority>) authoritySet20, authorityArray19);
        user2.setAuthorities((java.util.Set<com.unifacisa.tcc.domain.Authority>) authoritySet20);
        java.time.Instant instant23 = user2.getResetDate();
        java.lang.String str24 = user2.getLogin();
        java.lang.String str25 = user2.getResetKey();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(authorityArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(instant23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
    }

    @Test
    public void test2055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2055");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<java.lang.Void> voidResponseEntity5 = userResource3.deleteUser("LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='null'}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2056");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:08.859Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.859Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}", "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}", "Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", (java.lang.Long) (-1L), "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", "", "Aluno{id=null, primeiroNome='null', segundoNome='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "hi!", "Authority{name='Authority{name='error.concurrencyFailure'}'}", "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}", (java.lang.Long) 1L);
        socialUserConnection11.setExpireTime((java.lang.Long) 10L);
        java.lang.String str14 = socialUserConnection11.getAccessToken();
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test2057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2057");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.email("");
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        aluno5.setPrimeiroNome("");
        aluno5.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor10 = professor0.addAluno(aluno5);
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.Long long12 = aluno11.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa14 = aluno11.matricula((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa16 = aluno11.numeroContato((java.lang.Long) 1L);
        aluno11.setSegundoNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        java.lang.Boolean boolean19 = aluno11.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor20 = professor0.removeAluno(aluno11);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet21 = professor0.getAlunos();
        java.lang.String str22 = professor0.getPrimeiroNome();
        professor0.setDiponibilidade((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNotNull(pessoa14);
        org.junit.Assert.assertNotNull(pessoa16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(professor20);
        org.junit.Assert.assertNotNull(alunoSet21);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test2058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2058");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        authority0.setName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        authority0.setName("error.concurrencyFailure");
        java.lang.String str5 = authority0.toString();
        authority0.setName("Authority{name='error.concurrencyFailure'}");
        authority0.setName("");
        java.lang.Object obj10 = null;
        boolean boolean11 = authority0.equals(obj10);
        java.lang.String str12 = authority0.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Authority{name='error.concurrencyFailure'}" + "'", str5, "Authority{name='error.concurrencyFailure'}");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Authority{name=''}" + "'", str12, "Authority{name=''}");
    }

    @Test
    public void test2059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2059");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("error.concurrencyFailure");
        java.lang.Long long12 = socialUserConnection0.getRank();
        socialUserConnection0.setUserId("");
        com.unifacisa.tcc.config.LoggingAspectConfiguration loggingAspectConfiguration15 = new com.unifacisa.tcc.config.LoggingAspectConfiguration();
        boolean boolean16 = socialUserConnection0.equals((java.lang.Object) loggingAspectConfiguration15);
        socialUserConnection0.setRefreshToken("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        socialUserConnection0.setDisplayName("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='0', email='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', numeroContato='null', habilitadoTcc='true'}");
        socialUserConnection0.setRefreshToken("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=2021-03-26T03:34:08.443Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.443Z, authorities=[]}");
        socialUserConnection0.setProviderId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        java.lang.String str25 = socialUserConnection0.getProfileURL();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str25, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test2060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2060");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        java.time.Instant instant6 = user0.getLastModifiedDate();
        user0.setFirstName("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM9 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str10 = managedUserVM9.getImageUrl();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper11 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user13 = userMapper11.userFromId((java.lang.Long) 100L);
        user13.setLangKey("");
        java.time.Instant instant16 = user13.getResetDate();
        java.time.Instant instant17 = user13.getCreatedDate();
        managedUserVM9.setLastModifiedDate(instant17);
        user0.setCreatedDate(instant17);
        java.lang.Long long20 = user0.getId();
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM21 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM21.setKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        keyAndPasswordVM21.setKey("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        java.lang.String str26 = keyAndPasswordVM21.getKey();
        java.lang.String str27 = keyAndPasswordVM21.getNewPassword();
        java.lang.String str28 = keyAndPasswordVM21.getNewPassword();
        java.lang.String str29 = keyAndPasswordVM21.getKey();
        java.lang.String str30 = keyAndPasswordVM21.getKey();
        boolean boolean31 = user0.equals((java.lang.Object) keyAndPasswordVM21);
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(user13);
        org.junit.Assert.assertNull(instant16);
        org.junit.Assert.assertNotNull(instant17);
        org.junit.Assert.assertNull(long20);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}" + "'", str26, "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}" + "'", str29, "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}" + "'", str30, "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test2061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2061");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor3 = professor0.diponibilidade((java.lang.Boolean) true);
        professor3.setMatricula((java.lang.Long) 10L);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str1, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor3);
    }

    @Test
    public void test2062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2062");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor5 = null;
        aluno4.setProfessor(professor5);
        aluno4.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor11 = null;
        aluno10.setProfessor(professor11);
        java.lang.Long long13 = aluno10.getMatricula();
        java.lang.String str14 = aluno10.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean17 = aluno15.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor19 = null;
        aluno18.setProfessor(professor19);
        aluno18.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean25 = aluno23.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        aluno26.setPrimeiroNome("");
        java.lang.Long long29 = aluno26.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        aluno30.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno9, aluno10, aluno15, aluno18, aluno23, aluno26, aluno30 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Professor professor37 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        java.lang.Long long38 = professor37.getId();
        java.lang.Long long39 = professor37.getId();
        professor37.setSegundoNome("Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Boolean boolean42 = professor37.isDiponibilidade();
        com.unifacisa.tcc.domain.User user43 = new com.unifacisa.tcc.domain.User();
        user43.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user43.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant48 = user43.getLastModifiedDate();
        user43.setResetKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.time.Instant instant51 = user43.getResetDate();
        user43.setLastModifiedBy("Authority{name='error.concurrencyFailure'}");
        java.time.Instant instant54 = user43.getResetDate();
        user43.setLastName("LoginVM{username='null', rememberMe=false}");
        java.time.Instant instant57 = user43.getLastModifiedDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO58 = new com.unifacisa.tcc.service.dto.UserDTO(user43);
        boolean boolean59 = professor37.equals((java.lang.Object) user43);
        com.unifacisa.tcc.domain.Aluno aluno60 = new com.unifacisa.tcc.domain.Aluno();
        aluno60.setPrimeiroNome("");
        aluno60.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor65 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor67 = professor65.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa69 = professor65.email("");
        com.unifacisa.tcc.domain.Professor professor71 = professor65.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno72 = aluno60.professor(professor65);
        com.unifacisa.tcc.domain.Aluno aluno73 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor74 = null;
        aluno73.setProfessor(professor74);
        java.lang.Long long76 = aluno73.getMatricula();
        java.lang.String str77 = aluno73.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor78 = professor65.removeAluno(aluno73);
        java.lang.String str79 = aluno73.getEmail();
        com.unifacisa.tcc.domain.Professor professor80 = professor37.removeAluno(aluno73);
        java.lang.Long long81 = aluno73.getNumeroContato();
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNull(long38);
        org.junit.Assert.assertNull(long39);
        org.junit.Assert.assertEquals("'" + boolean42 + "' != '" + true + "'", boolean42, true);
        org.junit.Assert.assertNotNull(instant48);
        org.junit.Assert.assertNull(instant51);
        org.junit.Assert.assertNull(instant54);
        org.junit.Assert.assertNotNull(instant57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(professor67);
        org.junit.Assert.assertNotNull(pessoa69);
        org.junit.Assert.assertNotNull(professor71);
        org.junit.Assert.assertNotNull(aluno72);
        org.junit.Assert.assertNull(long76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(professor78);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(professor80);
        org.junit.Assert.assertNull(long81);
    }

    @Test
    public void test2063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2063");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray7 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList8 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList8, userArray7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper6.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList8);
        java.time.Instant instant21 = null;
        java.time.Instant instant23 = null;
        java.time.Instant instant33 = null;
        java.time.Instant instant35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        com.unifacisa.tcc.service.dto.UserDTO userDTO41 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant33, "hi!", instant35, (java.util.Set<java.lang.String>) strSet39);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM42 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant21, "", instant23, (java.util.Set<java.lang.String>) strSet39);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet43 = userMapper6.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet39);
        user0.setAuthorities(authoritySet43);
        boolean boolean45 = user0.getActivated();
        java.lang.String str46 = user0.getImageUrl();
        user0.setLangKey("");
        java.lang.String str49 = user0.getFirstName();
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(userArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(authoritySet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str49);
    }

    @Test
    public void test2064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2064");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.time.Instant instant2 = null;
        persistentAuditEvent0.setAuditEventDate(instant2);
        java.time.Instant instant4 = persistentAuditEvent0.getAuditEventDate();
        java.lang.String str5 = persistentAuditEvent0.getAuditEventType();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user8 = userMapper6.userFromId((java.lang.Long) 100L);
        user8.setLangKey("");
        java.time.Instant instant11 = user8.getResetDate();
        java.time.Instant instant12 = user8.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        aluno13.setPrimeiroNome("");
        java.lang.String str16 = aluno13.getPrimeiroNome();
        java.lang.Long long17 = aluno13.getMatricula();
        boolean boolean18 = user8.equals((java.lang.Object) aluno13);
        user8.setFirstName("");
        com.unifacisa.tcc.domain.User user21 = new com.unifacisa.tcc.domain.User();
        user21.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user21.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper26 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user28 = userMapper26.userFromId((java.lang.Long) 100L);
        user28.setLangKey("");
        java.time.Instant instant31 = user28.getResetDate();
        java.time.Instant instant32 = user28.getCreatedDate();
        user21.setResetDate(instant32);
        user8.setCreatedDate(instant32);
        persistentAuditEvent0.setAuditEventDate(instant32);
        java.time.Instant instant36 = persistentAuditEvent0.getAuditEventDate();
        java.time.Instant instant37 = persistentAuditEvent0.getAuditEventDate();
        java.time.Instant instant38 = persistentAuditEvent0.getAuditEventDate();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(user8);
        org.junit.Assert.assertNull(instant11);
        org.junit.Assert.assertNotNull(instant12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(user28);
        org.junit.Assert.assertNull(instant31);
        org.junit.Assert.assertNotNull(instant32);
        org.junit.Assert.assertNotNull(instant36);
        org.junit.Assert.assertNotNull(instant37);
        org.junit.Assert.assertNotNull(instant38);
    }

    @Test
    public void test2065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2065");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        aluno5.setPrimeiroNome("");
        java.lang.Long long8 = aluno5.getMatricula();
        aluno5.setHabilitadoTcc((java.lang.Boolean) false);
        aluno5.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        aluno13.setPrimeiroNome("");
        java.lang.Long long16 = aluno13.getMatricula();
        java.lang.Long long17 = aluno13.getMatricula();
        aluno13.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        aluno20.setPrimeiroNome("");
        java.lang.Long long23 = aluno20.getMatricula();
        java.lang.Long long24 = aluno20.getMatricula();
        aluno20.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray28 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno13, aluno20, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet29 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet29, alunoArray28);
        com.unifacisa.tcc.domain.Professor professor31 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet29);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa33 = professor2.matricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        aluno34.setPrimeiroNome("");
        java.lang.Long long37 = aluno34.getMatricula();
        java.lang.Long long38 = aluno34.getMatricula();
        aluno34.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa42 = aluno34.email("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        com.unifacisa.tcc.domain.Aluno aluno44 = aluno34.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor45 = professor2.removeAluno(aluno34);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa47 = aluno34.primeiroNome("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=, createdDate=2021-03-26T03:34:26.101Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:26.101Z, authorities=[]}");
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertNull(long23);
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertNotNull(alunoArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNotNull(pessoa33);
        org.junit.Assert.assertNull(long37);
        org.junit.Assert.assertNull(long38);
        org.junit.Assert.assertNotNull(pessoa42);
        org.junit.Assert.assertNotNull(aluno44);
        org.junit.Assert.assertNotNull(professor45);
        org.junit.Assert.assertNotNull(pessoa47);
    }

    @Test
    public void test2066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2066");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("Authority{name=''}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.social.connect.Connection<?>> wildcardConnectionList5 = customSocialConnectionRepository3.findConnections("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2067");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        com.unifacisa.tcc.service.dto.UserDTO userDTO30 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant22, "hi!", instant24, (java.util.Set<java.lang.String>) strSet28);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM31 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 0L, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", "hi!", "hi!", "", true, "hi!", "", "", instant10, "", instant12, (java.util.Set<java.lang.String>) strSet28);
        java.lang.String str32 = managedUserVM31.getImageUrl();
        com.unifacisa.tcc.domain.User user42 = new com.unifacisa.tcc.domain.User();
        user42.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user42.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant47 = user42.getLastModifiedDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper49 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user51 = userMapper49.userFromId((java.lang.Long) 100L);
        user51.setLangKey("");
        java.time.Instant instant54 = user51.getResetDate();
        java.time.Instant instant55 = user51.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno56 = new com.unifacisa.tcc.domain.Aluno();
        aluno56.setPrimeiroNome("");
        java.lang.String str59 = aluno56.getPrimeiroNome();
        java.lang.Long long60 = aluno56.getMatricula();
        boolean boolean61 = user51.equals((java.lang.Object) aluno56);
        user51.setFirstName("");
        com.unifacisa.tcc.domain.User user64 = new com.unifacisa.tcc.domain.User();
        user64.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user64.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper69 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user71 = userMapper69.userFromId((java.lang.Long) 100L);
        user71.setLangKey("");
        java.time.Instant instant74 = user71.getResetDate();
        java.time.Instant instant75 = user71.getCreatedDate();
        user64.setResetDate(instant75);
        user51.setCreatedDate(instant75);
        java.util.Set<java.lang.String> strSet78 = null;
        com.unifacisa.tcc.service.dto.UserDTO userDTO79 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "LoginVM{username='null', rememberMe=false}", "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}", "error.concurrencyFailure", "LoginVM{username='null', rememberMe=false}", true, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", instant47, "", instant75, strSet78);
        managedUserVM31.setLastModifiedDate(instant75);
        java.util.Set<java.lang.String> strSet81 = managedUserVM31.getAuthorities();
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(instant47);
        org.junit.Assert.assertNotNull(user51);
        org.junit.Assert.assertNull(instant54);
        org.junit.Assert.assertNotNull(instant55);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNull(long60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(user71);
        org.junit.Assert.assertNull(instant74);
        org.junit.Assert.assertNotNull(instant75);
        org.junit.Assert.assertNotNull(strSet81);
    }

    @Test
    public void test2068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2068");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        java.lang.Long long3 = aluno0.getMatricula();
        java.lang.Long long4 = aluno0.getMatricula();
        aluno0.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = aluno0.email("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        com.unifacisa.tcc.domain.Aluno aluno10 = aluno0.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor12 = null;
        aluno11.setProfessor(professor12);
        aluno11.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa17 = aluno11.primeiroNome("hi!");
        java.lang.Long long18 = aluno11.getId();
        com.unifacisa.tcc.domain.Aluno aluno20 = aluno11.habilitadoTcc((java.lang.Boolean) false);
        aluno11.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor23 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str24 = professor23.toString();
        com.unifacisa.tcc.domain.Professor professor26 = professor23.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet27 = professor23.getAlunos();
        java.lang.Long long28 = professor23.getNumeroContato();
        professor23.setMatricula((java.lang.Long) (-1L));
        aluno11.setProfessor(professor23);
        com.unifacisa.tcc.domain.Aluno aluno32 = aluno10.professor(professor23);
        java.lang.String str33 = professor23.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor34 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str35 = professor34.toString();
        com.unifacisa.tcc.domain.Professor professor37 = professor34.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet38 = professor34.getAlunos();
        com.unifacisa.tcc.domain.Professor professor39 = professor23.alunos(alunoSet38);
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor41 = null;
        aluno40.setProfessor(professor41);
        aluno40.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Professor professor45 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor47 = professor45.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa49 = professor45.email("");
        com.unifacisa.tcc.domain.Professor professor51 = professor45.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno52 = aluno40.professor(professor51);
        com.unifacisa.tcc.domain.Professor professor53 = professor23.removeAluno(aluno40);
        java.lang.Boolean boolean54 = professor23.isDiponibilidade();
        java.lang.String str55 = professor23.getPrimeiroNome();
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(pessoa8);
        org.junit.Assert.assertNotNull(aluno10);
        org.junit.Assert.assertNotNull(pessoa17);
        org.junit.Assert.assertNull(long18);
        org.junit.Assert.assertNotNull(aluno20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str24, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor26);
        org.junit.Assert.assertNotNull(alunoSet27);
        org.junit.Assert.assertNull(long28);
        org.junit.Assert.assertNotNull(aluno32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str35, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNotNull(alunoSet38);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(professor47);
        org.junit.Assert.assertNotNull(pessoa49);
        org.junit.Assert.assertNotNull(professor51);
        org.junit.Assert.assertNotNull(aluno52);
        org.junit.Assert.assertNotNull(professor53);
        org.junit.Assert.assertEquals("'" + boolean54 + "' != '" + true + "'", boolean54, true);
        org.junit.Assert.assertNull(str55);
    }

    @Test
    public void test2069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2069");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        aluno7.setPrimeiroNome("");
        java.lang.String str10 = aluno7.getPrimeiroNome();
        java.lang.Long long11 = aluno7.getMatricula();
        boolean boolean12 = user2.equals((java.lang.Object) aluno7);
        java.lang.String str13 = user2.getPassword();
        user2.setResetKey("LoggerVM{name='LoggerVM{name='null', level='null'}', level='null'}");
        user2.setImageUrl("");
        java.lang.String str18 = user2.getImageUrl();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper19 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user21 = userMapper19.userFromId((java.lang.Long) 100L);
        user21.setLangKey("");
        java.time.Instant instant24 = user21.getResetDate();
        java.time.Instant instant25 = user21.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        aluno26.setPrimeiroNome("");
        java.lang.String str29 = aluno26.getPrimeiroNome();
        java.lang.Long long30 = aluno26.getMatricula();
        boolean boolean31 = user21.equals((java.lang.Object) aluno26);
        user21.setFirstName("");
        com.unifacisa.tcc.domain.User user34 = new com.unifacisa.tcc.domain.User();
        user34.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user34.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper39 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user41 = userMapper39.userFromId((java.lang.Long) 100L);
        user41.setLangKey("");
        java.time.Instant instant44 = user41.getResetDate();
        java.time.Instant instant45 = user41.getCreatedDate();
        user34.setResetDate(instant45);
        user21.setCreatedDate(instant45);
        java.lang.String str48 = user21.toString();
        java.time.Instant instant49 = user21.getCreatedDate();
        java.lang.String str50 = user21.getResetKey();
        java.time.Instant instant51 = user21.getResetDate();
        boolean boolean52 = user2.equals((java.lang.Object) user21);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(user21);
        org.junit.Assert.assertNull(instant24);
        org.junit.Assert.assertNotNull(instant25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(long30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(user41);
        org.junit.Assert.assertNull(instant44);
        org.junit.Assert.assertNotNull(instant45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}" + "'", str48, "User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(instant51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test2070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2070");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant5 = user0.getLastModifiedDate();
        java.lang.String str6 = user0.getLastName();
        com.unifacisa.tcc.domain.Professor professor7 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor9 = professor7.diponibilidade((java.lang.Boolean) true);
        professor9.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.Long long12 = professor9.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa14 = professor9.email("error.validation");
        professor9.setId((java.lang.Long) 0L);
        boolean boolean17 = user0.equals((java.lang.Object) professor9);
        org.junit.Assert.assertNotNull(instant5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str6, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNotNull(professor9);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNotNull(pessoa14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test2071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2071");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("error.validation");
        aluno0.setSegundoNome("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor7 = professor5.diponibilidade((java.lang.Boolean) true);
        professor7.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor7.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.Long long12 = professor7.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa14 = professor7.segundoNome("LoggerVM{name='null', level='null'}");
        aluno0.setProfessor(professor7);
        aluno0.setSegundoNome("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}");
        org.junit.Assert.assertNotNull(professor7);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNotNull(pessoa14);
    }

    @Test
    public void test2072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2072");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.getName();
        java.lang.String str2 = authority0.getName();
        java.lang.String str3 = authority0.toString();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean6 = aluno4.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor7 = aluno4.getProfessor();
        java.lang.String str8 = aluno4.toString();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa10 = aluno4.matricula((java.lang.Long) 1L);
        boolean boolean11 = authority0.equals((java.lang.Object) pessoa10);
        java.lang.String str12 = authority0.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Authority{name='null'}" + "'", str3, "Authority{name='null'}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(professor7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str8, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(pessoa10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test2073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2073");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository0 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator1 = null;
        com.unifacisa.tcc.repository.CustomSocialUsersConnectionRepository customSocialUsersConnectionRepository2 = new com.unifacisa.tcc.repository.CustomSocialUsersConnectionRepository(socialUserConnectionRepository0, connectionFactoryLocator1);
        org.springframework.social.connect.ConnectionRepository connectionRepository4 = customSocialUsersConnectionRepository2.createConnectionRepository("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.springframework.social.connect.ConnectionRepository connectionRepository6 = customSocialUsersConnectionRepository2.createConnectionRepository("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.springframework.social.connect.ConnectionRepository connectionRepository8 = customSocialUsersConnectionRepository2.createConnectionRepository("LoginVM{username='null', rememberMe=false}");
        org.springframework.social.connect.ConnectionRepository connectionRepository10 = customSocialUsersConnectionRepository2.createConnectionRepository("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.time.Instant instant34 = null;
        java.time.Instant instant36 = null;
        java.lang.String[] strArray39 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet40 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet40, strArray39);
        com.unifacisa.tcc.service.dto.UserDTO userDTO42 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant34, "hi!", instant36, (java.util.Set<java.lang.String>) strSet40);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM43 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 0L, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", "hi!", "hi!", "", true, "hi!", "", "", instant22, "", instant24, (java.util.Set<java.lang.String>) strSet40);
        java.time.Instant instant44 = managedUserVM43.getCreatedDate();
        java.lang.String str45 = managedUserVM43.getLangKey();
        java.lang.String str46 = managedUserVM43.toString();
        java.util.Set<java.lang.String> strSet47 = managedUserVM43.getAuthorities();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet48 = customSocialUsersConnectionRepository2.findUserIdsConnectedTo("LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=false}", strSet47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionRepository4);
        org.junit.Assert.assertNotNull(connectionRepository6);
        org.junit.Assert.assertNotNull(connectionRepository8);
        org.junit.Assert.assertNotNull(connectionRepository10);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(instant44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}" + "'", str46, "ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertNotNull(strSet47);
    }

    @Test
    public void test2074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2074");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.String str4 = loginVM0.toString();
        java.lang.String str5 = loginVM0.getUsername();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.Boolean boolean8 = loginVM0.isRememberMe();
        java.lang.Boolean boolean9 = loginVM0.isRememberMe();
        loginVM0.setRememberMe((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str4, "LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + false + "'", boolean8, false);
        org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + false + "'", boolean9, false);
    }

    @Test
    public void test2075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2075");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO5 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.Long long6 = userDTO5.getId();
        java.lang.String str7 = userDTO5.getFirstName();
        java.time.Instant instant8 = userDTO5.getLastModifiedDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper9 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user11 = userMapper9.userFromId((java.lang.Long) 100L);
        user11.setResetKey("hi!");
        java.lang.String str14 = user11.getResetKey();
        user11.setId((java.lang.Long) 0L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper17 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user19 = userMapper17.userFromId((java.lang.Long) 100L);
        user19.setResetKey("hi!");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper22 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user24 = userMapper22.userFromId((java.lang.Long) 100L);
        user24.setLangKey("");
        java.time.Instant instant27 = user24.getResetDate();
        java.time.Instant instant28 = user24.getCreatedDate();
        user19.setResetDate(instant28);
        user11.setResetDate(instant28);
        user11.setCreatedBy("Aluno{id=null, primeiroNome='null', segundoNome='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent33 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant34 = persistentAuditEvent33.getAuditEventDate();
        java.time.Instant instant35 = null;
        persistentAuditEvent33.setAuditEventDate(instant35);
        java.time.Instant instant37 = persistentAuditEvent33.getAuditEventDate();
        persistentAuditEvent33.setPrincipal("");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent40 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant41 = persistentAuditEvent40.getAuditEventDate();
        java.time.Instant instant42 = null;
        persistentAuditEvent40.setAuditEventDate(instant42);
        persistentAuditEvent40.setId((java.lang.Long) 1L);
        persistentAuditEvent40.setId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent48 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        persistentAuditEvent48.setData(strMap49);
        persistentAuditEvent48.setAuditEventType("hi!");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent53 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant54 = null;
        persistentAuditEvent53.setAuditEventDate(instant54);
        com.unifacisa.tcc.domain.User user56 = new com.unifacisa.tcc.domain.User();
        user56.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user56.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper61 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user63 = userMapper61.userFromId((java.lang.Long) 100L);
        user63.setLangKey("");
        java.time.Instant instant66 = user63.getResetDate();
        java.time.Instant instant67 = user63.getCreatedDate();
        user56.setResetDate(instant67);
        persistentAuditEvent53.setAuditEventDate(instant67);
        persistentAuditEvent48.setAuditEventDate(instant67);
        persistentAuditEvent40.setAuditEventDate(instant67);
        com.unifacisa.tcc.domain.User user72 = new com.unifacisa.tcc.domain.User();
        user72.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM75 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet76 = managedUserVM75.getAuthorities();
        boolean boolean77 = user72.equals((java.lang.Object) strSet76);
        java.time.Instant instant78 = user72.getLastModifiedDate();
        persistentAuditEvent40.setAuditEventDate(instant78);
        persistentAuditEvent33.setAuditEventDate(instant78);
        user11.setLastModifiedDate(instant78);
        userDTO5.setLastModifiedDate(instant78);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper83 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user85 = userMapper83.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.User user86 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper87 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user89 = userMapper87.userFromId((java.lang.Long) 100L);
        user89.setLangKey("");
        java.time.Instant instant92 = user89.getResetDate();
        java.time.Instant instant93 = user89.getCreatedDate();
        user86.setCreatedDate(instant93);
        com.unifacisa.tcc.service.dto.UserDTO userDTO95 = userMapper83.userToUserDTO(user86);
        boolean boolean96 = user86.getActivated();
        java.lang.String str97 = user86.getLastModifiedBy();
        java.time.Instant instant98 = user86.getCreatedDate();
        userDTO5.setLastModifiedDate(instant98);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(instant8);
        org.junit.Assert.assertNotNull(user11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(user19);
        org.junit.Assert.assertNotNull(user24);
        org.junit.Assert.assertNull(instant27);
        org.junit.Assert.assertNotNull(instant28);
        org.junit.Assert.assertNull(instant34);
        org.junit.Assert.assertNull(instant37);
        org.junit.Assert.assertNull(instant41);
        org.junit.Assert.assertNotNull(user63);
        org.junit.Assert.assertNull(instant66);
        org.junit.Assert.assertNotNull(instant67);
        org.junit.Assert.assertNull(strSet76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(instant78);
        org.junit.Assert.assertNotNull(user85);
        org.junit.Assert.assertNotNull(user89);
        org.junit.Assert.assertNull(instant92);
        org.junit.Assert.assertNotNull(instant93);
        org.junit.Assert.assertNotNull(userDTO95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNull(str97);
        org.junit.Assert.assertNotNull(instant98);
    }

    @Test
    public void test2076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2076");
        com.unifacisa.tcc.service.dto.UserDTO userDTO0 = new com.unifacisa.tcc.service.dto.UserDTO();
        java.lang.String str1 = userDTO0.getLangKey();
        java.lang.String str2 = userDTO0.getLastModifiedBy();
        java.time.Instant instant3 = userDTO0.getCreatedDate();
        java.lang.String str4 = userDTO0.getLangKey();
        java.time.Instant instant5 = userDTO0.getLastModifiedDate();
        userDTO0.setId((java.lang.Long) 10L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(instant3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(instant5);
    }

    @Test
    public void test2077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2077");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setUsername("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str6 = loginVM0.getPassword();
        loginVM0.setUsername("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=2021-03-26T03:34:08.443Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.443Z, authorities=[]}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test2078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2078");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        java.time.Instant instant14 = null;
        java.time.Instant instant16 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        com.unifacisa.tcc.service.dto.UserDTO userDTO34 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant26, "hi!", instant28, (java.util.Set<java.lang.String>) strSet32);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM35 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant14, "", instant16, (java.util.Set<java.lang.String>) strSet32);
        java.lang.String str36 = managedUserVM35.getLastModifiedBy();
        org.springframework.http.ResponseEntity responseEntity37 = userResource3.createUser(managedUserVM35);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM38 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet39 = managedUserVM38.getAuthorities();
        java.time.Instant instant40 = null;
        managedUserVM38.setLastModifiedDate(instant40);
        managedUserVM38.setId((java.lang.Long) 100L);
        org.springframework.http.ResponseEntity responseEntity44 = userResource3.createUser(managedUserVM38);
        java.time.Instant instant55 = null;
        java.time.Instant instant57 = null;
        java.time.Instant instant67 = null;
        java.time.Instant instant69 = null;
        java.lang.String[] strArray72 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet73 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet73, strArray72);
        com.unifacisa.tcc.service.dto.UserDTO userDTO75 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant67, "hi!", instant69, (java.util.Set<java.lang.String>) strSet73);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM76 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 0L, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", "hi!", "hi!", "", true, "hi!", "", "", instant55, "", instant57, (java.util.Set<java.lang.String>) strSet73);
        java.lang.String str77 = managedUserVM76.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.service.dto.UserDTO> userDTOResponseEntity78 = userResource3.updateUser(managedUserVM76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(responseEntity37);
        org.junit.Assert.assertNull(strSet39);
        org.junit.Assert.assertNotNull(responseEntity44);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}" + "'", str77, "ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
    }

    @Test
    public void test2079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2079");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setDisplayName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Long long8 = socialUserConnection0.getId();
        java.lang.String str9 = socialUserConnection0.getUserId();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test2080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2080");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor7 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = professor5.email("");
        com.unifacisa.tcc.domain.Professor professor11 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno12 = aluno0.professor(professor11);
        aluno0.setHabilitadoTcc((java.lang.Boolean) true);
        java.lang.String str15 = aluno0.getEmail();
        org.junit.Assert.assertNotNull(professor7);
        org.junit.Assert.assertNotNull(pessoa9);
        org.junit.Assert.assertNotNull(professor11);
        org.junit.Assert.assertNotNull(aluno12);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test2081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2081");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("error.validation");
        aluno0.setSegundoNome("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.primeiroNome("LoginVM{username='null', rememberMe=null}");
        org.junit.Assert.assertNotNull(pessoa6);
    }

    @Test
    public void test2082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2082");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        socialUserConnection0.setAccessToken("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        socialUserConnection0.setExpireTime((java.lang.Long) 100L);
        java.lang.Long long10 = socialUserConnection0.getId();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long10);
    }

    @Test
    public void test2083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2083");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getUserId();
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test2084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2084");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        user2.setFirstName("error.validation");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper7 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user9 = userMapper7.userFromId((java.lang.Long) 100L);
        user9.setLangKey("");
        java.time.Instant instant12 = user9.getResetDate();
        java.time.Instant instant13 = user9.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        aluno14.setPrimeiroNome("");
        java.lang.String str17 = aluno14.getPrimeiroNome();
        java.lang.Long long18 = aluno14.getMatricula();
        boolean boolean19 = user9.equals((java.lang.Object) aluno14);
        user9.setFirstName("");
        com.unifacisa.tcc.domain.User user22 = new com.unifacisa.tcc.domain.User();
        user22.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user22.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper27 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user29 = userMapper27.userFromId((java.lang.Long) 100L);
        user29.setLangKey("");
        java.time.Instant instant32 = user29.getResetDate();
        java.time.Instant instant33 = user29.getCreatedDate();
        user22.setResetDate(instant33);
        user9.setCreatedDate(instant33);
        user2.setResetDate(instant33);
        user2.setActivationKey("User{login='null', firstName='error.validation', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        user2.setImageUrl("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(user9);
        org.junit.Assert.assertNull(instant12);
        org.junit.Assert.assertNotNull(instant13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(long18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(user29);
        org.junit.Assert.assertNull(instant32);
        org.junit.Assert.assertNotNull(instant33);
    }

    @Test
    public void test2085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2085");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 10L);
        socialUserConnection0.setDisplayName("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setRefreshToken("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setProviderUserId("");
        java.lang.Long long11 = socialUserConnection0.getId();
        java.lang.String str12 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setAccessToken("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}");
        socialUserConnection0.setAccessToken("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='false'}");
        java.lang.String str17 = socialUserConnection0.toString();
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='false'}', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}" + "'", str17, "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='false'}', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}");
    }

    @Test
    public void test2086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2086");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper4 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user6 = userMapper4.userFromId((java.lang.Long) 100L);
        user6.setLangKey("");
        java.time.Instant instant9 = user6.getResetDate();
        java.time.Instant instant10 = user6.getCreatedDate();
        user3.setCreatedDate(instant10);
        com.unifacisa.tcc.service.dto.UserDTO userDTO12 = userMapper0.userToUserDTO(user3);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper13 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray14 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList15 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList15, userArray14);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList17 = userMapper13.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList15);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList18 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList15);
        com.unifacisa.tcc.domain.User user20 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean23 = aluno21.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor24 = aluno21.getProfessor();
        java.lang.String str25 = aluno21.toString();
        aluno21.setSegundoNome("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str28 = aluno21.toString();
        boolean boolean29 = user20.equals((java.lang.Object) str28);
        user20.setActivated(true);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(user6);
        org.junit.Assert.assertNull(instant9);
        org.junit.Assert.assertNotNull(instant10);
        org.junit.Assert.assertNotNull(userDTO12);
        org.junit.Assert.assertNotNull(userArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(userDTOList17);
        org.junit.Assert.assertNotNull(userDTOList18);
        org.junit.Assert.assertNotNull(user20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(professor24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str25, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str28, "Aluno{id=null, primeiroNome='null', segundoNome='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test2087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2087");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        loginVM0.setPassword("");
        loginVM0.setPassword("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        loginVM0.setRememberMe((java.lang.Boolean) true);
        loginVM0.setUsername("LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}");
        loginVM0.setUsername("SocialUserConnection{id=null, userId=Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test2088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2088");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user7 = userMapper5.userFromId((java.lang.Long) 100L);
        user7.setLangKey("");
        java.time.Instant instant10 = user7.getResetDate();
        java.time.Instant instant11 = user7.getCreatedDate();
        user0.setResetDate(instant11);
        java.time.Instant instant13 = null;
        user0.setCreatedDate(instant13);
        java.lang.String str15 = user0.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user16 = new com.unifacisa.tcc.domain.User();
        java.lang.String str17 = user16.toString();
        boolean boolean18 = user0.equals((java.lang.Object) user16);
        user0.setEmail("");
        user0.setEmail("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:34.552Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:34.552Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        java.lang.String str23 = user0.getLogin();
        org.junit.Assert.assertNotNull(user7);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(instant11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str17, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test2089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2089");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = null;
        persistentAuditEvent0.setAuditEventDate(instant1);
        persistentAuditEvent0.setAuditEventType("error.validation");
        persistentAuditEvent0.setAuditEventType("LoginVM{username='null', rememberMe=false}");
        persistentAuditEvent0.setId((java.lang.Long) (-1L));
        persistentAuditEvent0.setId((java.lang.Long) (-1L));
        persistentAuditEvent0.setPrincipal("User{login='null', firstName='error.validation', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test2090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2090");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        java.lang.String str2 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setPassword("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}");
        loginVM0.setRememberMe((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test2091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2091");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user7 = userMapper5.userFromId((java.lang.Long) 100L);
        user7.setLangKey("");
        java.time.Instant instant10 = user7.getResetDate();
        java.time.Instant instant11 = user7.getCreatedDate();
        user2.setResetDate(instant11);
        com.unifacisa.tcc.domain.Authority authority13 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str14 = authority13.getName();
        java.lang.String str15 = authority13.getName();
        com.unifacisa.tcc.domain.Authority authority16 = new com.unifacisa.tcc.domain.Authority();
        authority16.setName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str19 = authority16.toString();
        com.unifacisa.tcc.domain.Authority authority20 = new com.unifacisa.tcc.domain.Authority();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor22 = null;
        aluno21.setProfessor(professor22);
        aluno21.setSegundoNome("hi!");
        boolean boolean26 = authority20.equals((java.lang.Object) "hi!");
        authority20.setName("ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        com.unifacisa.tcc.domain.Authority authority29 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str30 = authority29.getName();
        java.lang.String str31 = authority29.getName();
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM32 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str33 = loginVM32.getPassword();
        loginVM32.setRememberMe((java.lang.Boolean) false);
        java.lang.Boolean boolean36 = loginVM32.isRememberMe();
        boolean boolean37 = authority29.equals((java.lang.Object) boolean36);
        com.unifacisa.tcc.domain.Authority authority38 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str39 = authority38.getName();
        java.lang.String str40 = authority38.getName();
        boolean boolean42 = authority38.equals((java.lang.Object) 0L);
        com.unifacisa.tcc.domain.Authority authority43 = new com.unifacisa.tcc.domain.Authority();
        authority43.setName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        boolean boolean46 = authority38.equals((java.lang.Object) authority43);
        com.unifacisa.tcc.domain.Authority authority47 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str48 = authority47.getName();
        java.lang.String str49 = authority47.getName();
        boolean boolean51 = authority47.equals((java.lang.Object) 0L);
        java.lang.String str52 = authority47.getName();
        java.lang.String str53 = authority47.toString();
        com.unifacisa.tcc.domain.Authority authority54 = new com.unifacisa.tcc.domain.Authority();
        authority54.setName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        authority54.setName("error.concurrencyFailure");
        java.lang.String str59 = authority54.toString();
        authority54.setName("Authority{name='error.concurrencyFailure'}");
        com.unifacisa.tcc.domain.Authority authority62 = new com.unifacisa.tcc.domain.Authority();
        com.unifacisa.tcc.domain.Authority authority63 = new com.unifacisa.tcc.domain.Authority();
        authority63.setName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        authority63.setName("error.concurrencyFailure");
        java.lang.String str68 = authority63.toString();
        authority63.setName("Authority{name='error.concurrencyFailure'}");
        com.unifacisa.tcc.domain.Authority authority71 = new com.unifacisa.tcc.domain.Authority();
        authority71.setName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        authority71.setName("error.concurrencyFailure");
        java.lang.String str76 = authority71.toString();
        authority71.setName("Authority{name='error.concurrencyFailure'}");
        java.lang.String str79 = authority71.toString();
        com.unifacisa.tcc.domain.Authority[] authorityArray80 = new com.unifacisa.tcc.domain.Authority[] { authority13, authority16, authority20, authority29, authority43, authority47, authority54, authority62, authority63, authority71 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Authority> authoritySet81 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Authority>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Authority>) authoritySet81, authorityArray80);
        user2.setAuthorities((java.util.Set<com.unifacisa.tcc.domain.Authority>) authoritySet81);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet84 = user2.getAuthorities();
        java.lang.String str85 = user2.getLangKey();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(user7);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(instant11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}" + "'", str19, "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + boolean36 + "' != '" + false + "'", boolean36, false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Authority{name='null'}" + "'", str53, "Authority{name='null'}");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Authority{name='error.concurrencyFailure'}" + "'", str59, "Authority{name='error.concurrencyFailure'}");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Authority{name='error.concurrencyFailure'}" + "'", str68, "Authority{name='error.concurrencyFailure'}");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Authority{name='error.concurrencyFailure'}" + "'", str76, "Authority{name='error.concurrencyFailure'}");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Authority{name='Authority{name='error.concurrencyFailure'}'}" + "'", str79, "Authority{name='Authority{name='error.concurrencyFailure'}'}");
        org.junit.Assert.assertNotNull(authorityArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(authoritySet84);
        org.junit.Assert.assertNull(str85);
    }

    @Test
    public void test2092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2092");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor2 = null;
        aluno1.setProfessor(professor2);
        aluno1.setSegundoNome("hi!");
        boolean boolean6 = authority0.equals((java.lang.Object) "hi!");
        java.lang.String str7 = authority0.toString();
        java.lang.String str8 = authority0.getName();
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection9 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection9.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str12 = socialUserConnection9.getProviderId();
        socialUserConnection9.setImageURL("error.validation");
        socialUserConnection9.setRank((java.lang.Long) (-1L));
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM20 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("hi!", "", "");
        java.lang.String str21 = fieldErrorVM20.getObjectName();
        boolean boolean22 = socialUserConnection9.equals((java.lang.Object) fieldErrorVM20);
        socialUserConnection9.setDisplayName("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}");
        boolean boolean25 = authority0.equals((java.lang.Object) "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}");
        java.lang.String str26 = authority0.getName();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Authority{name='null'}" + "'", str7, "Authority{name='null'}");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str12, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test2093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2093");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor2.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str7 = professor2.getSegundoNome();
        java.lang.Long long8 = professor2.getId();
        com.unifacisa.tcc.domain.Professor professor10 = professor2.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor12 = professor10.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        aluno13.setPrimeiroNome("");
        java.lang.Long long16 = aluno13.getMatricula();
        java.lang.Long long17 = aluno13.getMatricula();
        aluno13.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa21 = aluno13.email("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        com.unifacisa.tcc.domain.Aluno aluno23 = aluno13.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa25 = aluno13.segundoNome("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
        com.unifacisa.tcc.domain.Professor professor26 = aluno13.getProfessor();
        com.unifacisa.tcc.domain.Professor professor27 = professor12.removeAluno(aluno13);
        java.lang.String str28 = professor27.toString();
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str7, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNotNull(professor12);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertNotNull(pessoa21);
        org.junit.Assert.assertNotNull(aluno23);
        org.junit.Assert.assertNotNull(pessoa25);
        org.junit.Assert.assertNull(professor26);
        org.junit.Assert.assertNotNull(professor27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='false'}" + "'", str28, "Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='false'}");
    }

    @Test
    public void test2094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2094");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        socialUserConnection0.setExpireTime((java.lang.Long) (-1L));
        socialUserConnection0.setId((java.lang.Long) 100L);
        java.lang.String str12 = socialUserConnection0.toString();
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor14 = null;
        aluno13.setProfessor(professor14);
        aluno13.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = aluno13.primeiroNome("hi!");
        java.lang.Long long20 = aluno13.getId();
        com.unifacisa.tcc.domain.Aluno aluno22 = aluno13.habilitadoTcc((java.lang.Boolean) false);
        java.lang.Long long23 = aluno22.getMatricula();
        com.unifacisa.tcc.domain.Professor professor24 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor26 = professor24.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa28 = professor24.email("");
        com.unifacisa.tcc.domain.Professor professor30 = professor24.diponibilidade((java.lang.Boolean) true);
        professor30.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno33 = aluno22.professor(professor30);
        boolean boolean34 = socialUserConnection0.equals((java.lang.Object) aluno33);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "SocialUserConnection{id=100, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='error.validation', accessToken='null', secret='null', refreshToken='null', expireTime=-1}" + "'", str12, "SocialUserConnection{id=100, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='error.validation', accessToken='null', secret='null', refreshToken='null', expireTime=-1}");
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(long20);
        org.junit.Assert.assertNotNull(aluno22);
        org.junit.Assert.assertNull(long23);
        org.junit.Assert.assertNotNull(professor26);
        org.junit.Assert.assertNotNull(pessoa28);
        org.junit.Assert.assertNotNull(professor30);
        org.junit.Assert.assertNotNull(aluno33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test2095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2095");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO5 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        user0.setFirstName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        user0.setActivationKey("LoggerVM{name='null', level='null'}");
        user0.setResetKey("hi!");
    }

    @Test
    public void test2096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2096");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper11 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user13 = userMapper11.userFromId((java.lang.Long) 100L);
        user13.setLangKey("");
        java.time.Instant instant16 = user13.getResetDate();
        java.lang.String str17 = user13.getEmail();
        com.unifacisa.tcc.service.dto.UserDTO userDTO18 = userMapper0.userToUserDTO(user13);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper19 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user21 = userMapper19.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper22 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray23 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList24 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList24, userArray23);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList26 = userMapper22.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList24);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper27 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray28 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList29 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList29, userArray28);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList31 = userMapper27.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList29);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList32 = userMapper22.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList29);
        java.util.List<com.unifacisa.tcc.domain.User> userList33 = userMapper19.userDTOsToUsers(userDTOList32);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList34 = userMapper0.usersToUserDTOs(userList33);
        com.unifacisa.tcc.domain.User user36 = userMapper0.userFromId((java.lang.Long) 1L);
        boolean boolean37 = user36.getActivated();
        java.lang.String str38 = user36.getLastName();
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(user13);
        org.junit.Assert.assertNull(instant16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(userDTO18);
        org.junit.Assert.assertNotNull(user21);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(userDTOList26);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(userDTOList31);
        org.junit.Assert.assertNotNull(userDTOList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userDTOList34);
        org.junit.Assert.assertNotNull(user36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str38);
    }

    @Test
    public void test2097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2097");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM11 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("hi!", "", "");
        java.lang.String str12 = fieldErrorVM11.getObjectName();
        boolean boolean13 = socialUserConnection0.equals((java.lang.Object) fieldErrorVM11);
        socialUserConnection0.setRefreshToken("Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setProviderId("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.lang.String str18 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("Authority{name=''}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str18, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test2098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2098");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        com.unifacisa.tcc.service.dto.UserDTO userDTO30 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant22, "hi!", instant24, (java.util.Set<java.lang.String>) strSet28);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM31 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 0L, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", "hi!", "hi!", "", true, "hi!", "", "", instant10, "", instant12, (java.util.Set<java.lang.String>) strSet28);
        java.time.Instant instant32 = managedUserVM31.getCreatedDate();
        java.lang.String str33 = managedUserVM31.getLangKey();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper34 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user36 = userMapper34.userFromId((java.lang.Long) 100L);
        user36.setResetKey("hi!");
        java.lang.String str39 = user36.getResetKey();
        user36.setId((java.lang.Long) 0L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper42 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user44 = userMapper42.userFromId((java.lang.Long) 100L);
        user44.setResetKey("hi!");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper47 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user49 = userMapper47.userFromId((java.lang.Long) 100L);
        user49.setLangKey("");
        java.time.Instant instant52 = user49.getResetDate();
        java.time.Instant instant53 = user49.getCreatedDate();
        user44.setResetDate(instant53);
        user36.setResetDate(instant53);
        managedUserVM31.setLastModifiedDate(instant53);
        managedUserVM31.setId((java.lang.Long) 1L);
        java.time.Instant instant59 = managedUserVM31.getLastModifiedDate();
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(instant32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(user36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(user44);
        org.junit.Assert.assertNotNull(user49);
        org.junit.Assert.assertNull(instant52);
        org.junit.Assert.assertNotNull(instant53);
        org.junit.Assert.assertNotNull(instant59);
    }

    @Test
    public void test2099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2099");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor3 = professor0.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet4 = professor0.getAlunos();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = professor0.segundoNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str7 = professor0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str1, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor3);
        org.junit.Assert.assertNotNull(alunoSet4);
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}" + "'", str7, "Professor{id=null, primeiroNome='null', segundoNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
    }

    @Test
    public void test2100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2100");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user7 = userMapper5.userFromId((java.lang.Long) 100L);
        user7.setLangKey("");
        java.time.Instant instant10 = user7.getResetDate();
        java.time.Instant instant11 = user7.getCreatedDate();
        user0.setResetDate(instant11);
        user0.setLangKey("ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        java.time.Instant instant15 = user0.getLastModifiedDate();
        user0.setEmail("ManagedUserVM{} UserDTO{login='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNotNull(user7);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(instant11);
        org.junit.Assert.assertNotNull(instant15);
    }

    @Test
    public void test2101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2101");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper11 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user13 = userMapper11.userFromId((java.lang.Long) 100L);
        user13.setLangKey("");
        java.time.Instant instant16 = user13.getResetDate();
        java.lang.String str17 = user13.getEmail();
        com.unifacisa.tcc.service.dto.UserDTO userDTO18 = userMapper0.userToUserDTO(user13);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper19 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user21 = userMapper19.userFromId((java.lang.Long) 100L);
        user21.setLangKey("");
        java.time.Instant instant24 = user21.getResetDate();
        java.time.Instant instant25 = user21.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        aluno26.setPrimeiroNome("");
        java.lang.String str29 = aluno26.getPrimeiroNome();
        java.lang.Long long30 = aluno26.getMatricula();
        boolean boolean31 = user21.equals((java.lang.Object) aluno26);
        user21.setFirstName("");
        user21.setActivationKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str36 = user21.getEmail();
        com.unifacisa.tcc.service.dto.UserDTO userDTO37 = new com.unifacisa.tcc.service.dto.UserDTO(user21);
        java.util.Set<java.lang.String> strSet38 = userDTO37.getAuthorities();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet39 = userMapper0.authoritiesFromStrings(strSet38);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper40 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray41 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList42 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList42, userArray41);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList44 = userMapper40.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList42);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper45 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray46 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList47 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList47, userArray46);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList49 = userMapper45.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList47);
        java.time.Instant instant60 = null;
        java.time.Instant instant62 = null;
        java.time.Instant instant72 = null;
        java.time.Instant instant74 = null;
        java.lang.String[] strArray77 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet78 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet78, strArray77);
        com.unifacisa.tcc.service.dto.UserDTO userDTO80 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant72, "hi!", instant74, (java.util.Set<java.lang.String>) strSet78);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM81 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant60, "", instant62, (java.util.Set<java.lang.String>) strSet78);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet82 = userMapper45.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet78);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper83 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray84 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList85 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList85, userArray84);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList87 = userMapper83.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList85);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList88 = userMapper45.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList85);
        java.util.List<com.unifacisa.tcc.domain.User> userList89 = userMapper40.userDTOsToUsers(userDTOList88);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList90 = userMapper0.usersToUserDTOs(userList89);
        com.unifacisa.tcc.domain.User user92 = userMapper0.userFromId((java.lang.Long) 0L);
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(user13);
        org.junit.Assert.assertNull(instant16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(userDTO18);
        org.junit.Assert.assertNotNull(user21);
        org.junit.Assert.assertNull(instant24);
        org.junit.Assert.assertNotNull(instant25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(long30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNotNull(authoritySet39);
        org.junit.Assert.assertNotNull(userArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(userDTOList44);
        org.junit.Assert.assertNotNull(userArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(userDTOList49);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(authoritySet82);
        org.junit.Assert.assertNotNull(userArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(userDTOList87);
        org.junit.Assert.assertNotNull(userDTOList88);
        org.junit.Assert.assertNotNull(userList89);
        org.junit.Assert.assertNotNull(userDTOList90);
        org.junit.Assert.assertNotNull(user92);
    }

    @Test
    public void test2102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2102");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=false}", (java.lang.Long) 0L, "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "User{login='null', firstName='null', lastName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}", "Aluno{id=1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", (java.lang.Long) (-1L));
    }

    @Test
    public void test2103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2103");
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository0 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource1 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository0);
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository2 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource3 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository2);
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor6 = professor4.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = professor4.email("");
        com.unifacisa.tcc.domain.Professor professor10 = professor4.diponibilidade((java.lang.Boolean) true);
        professor10.setId((java.lang.Long) (-1L));
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity13 = professorResource3.createProfessor(professor10);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity14 = professorResource1.createProfessor(professor10);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor16 = null;
        aluno15.setProfessor(professor16);
        aluno15.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa21 = aluno15.primeiroNome("hi!");
        java.lang.Long long22 = aluno15.getId();
        com.unifacisa.tcc.domain.Aluno aluno24 = aluno15.habilitadoTcc((java.lang.Boolean) false);
        java.lang.Long long25 = aluno24.getMatricula();
        com.unifacisa.tcc.domain.Professor professor26 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor28 = professor26.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa30 = professor26.email("");
        com.unifacisa.tcc.domain.Professor professor32 = professor26.diponibilidade((java.lang.Boolean) true);
        professor32.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno35 = aluno24.professor(professor32);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity36 = professorResource1.createProfessor(professor32);
        com.unifacisa.tcc.domain.Professor professor37 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor39 = professor37.diponibilidade((java.lang.Boolean) true);
        professor39.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.Long long42 = professor39.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa44 = professor39.email("error.validation");
        professor39.setId((java.lang.Long) 0L);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity47 = professorResource1.createProfessor(professor39);
        com.unifacisa.tcc.domain.Professor professor48 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor50 = professor48.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa52 = professor48.email("");
        com.unifacisa.tcc.domain.Aluno aluno53 = new com.unifacisa.tcc.domain.Aluno();
        aluno53.setPrimeiroNome("error.validation");
        com.unifacisa.tcc.domain.Professor professor56 = professor48.addAluno(aluno53);
        com.unifacisa.tcc.domain.Professor professor58 = professor56.diponibilidade((java.lang.Boolean) true);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity59 = professorResource1.updateProfessor(professor58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor6);
        org.junit.Assert.assertNotNull(pessoa8);
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNotNull(professorResponseEntity13);
        org.junit.Assert.assertNotNull(professorResponseEntity14);
        org.junit.Assert.assertNotNull(pessoa21);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNotNull(aluno24);
        org.junit.Assert.assertNull(long25);
        org.junit.Assert.assertNotNull(professor28);
        org.junit.Assert.assertNotNull(pessoa30);
        org.junit.Assert.assertNotNull(professor32);
        org.junit.Assert.assertNotNull(aluno35);
        org.junit.Assert.assertNotNull(professorResponseEntity36);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNull(long42);
        org.junit.Assert.assertNotNull(pessoa44);
        org.junit.Assert.assertNotNull(professorResponseEntity47);
        org.junit.Assert.assertNotNull(professor50);
        org.junit.Assert.assertNotNull(pessoa52);
        org.junit.Assert.assertNotNull(professor56);
        org.junit.Assert.assertNotNull(professor58);
    }

    @Test
    public void test2104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2104");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.email("");
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        aluno5.setPrimeiroNome("error.validation");
        com.unifacisa.tcc.domain.Professor professor8 = professor0.addAluno(aluno5);
        com.unifacisa.tcc.domain.Professor professor10 = professor8.diponibilidade((java.lang.Boolean) true);
        professor8.setDiponibilidade((java.lang.Boolean) false);
        professor8.setPrimeiroNome("LoggerVM{name='LoggerVM{name='null', level='null'}', level='null'}");
        java.lang.String str15 = professor8.getEmail();
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNotNull(professor8);
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test2105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2105");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet5 = user0.getAuthorities();
        user0.setLangKey("Authority{name='error.concurrencyFailure'}");
        org.junit.Assert.assertNotNull(authoritySet5);
    }

    @Test
    public void test2106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2106");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        keyAndPasswordVM0.setNewPassword("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        keyAndPasswordVM0.setKey("LoggerVM{name='Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}', level='null'}");
    }

    @Test
    public void test2107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2107");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='LoggerVM{name='null', level='null'}', secret='null', refreshToken='null', expireTime=null}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.util.MultiValueMap<java.lang.String, org.springframework.social.connect.Connection<?>> strMap4 = customSocialConnectionRepository3.findAllConnections();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2108");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        user2.setFirstName("error.validation");
        user2.setActivationKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Authority authority9 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str10 = authority9.getName();
        java.lang.String str11 = authority9.getName();
        authority9.setName("");
        com.unifacisa.tcc.domain.Authority authority14 = new com.unifacisa.tcc.domain.Authority();
        authority14.setName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        authority14.setName("error.concurrencyFailure");
        com.unifacisa.tcc.domain.Authority[] authorityArray19 = new com.unifacisa.tcc.domain.Authority[] { authority9, authority14 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Authority> authoritySet20 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Authority>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Authority>) authoritySet20, authorityArray19);
        user2.setAuthorities((java.util.Set<com.unifacisa.tcc.domain.Authority>) authoritySet20);
        java.time.Instant instant23 = user2.getResetDate();
        java.lang.String str24 = user2.getLogin();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper25 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user27 = userMapper25.userFromId((java.lang.Long) 100L);
        user27.setResetKey("hi!");
        java.lang.String str30 = user27.getResetKey();
        user27.setId((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Professor professor33 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor35 = professor33.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa37 = professor33.email("");
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        aluno38.setPrimeiroNome("error.validation");
        com.unifacisa.tcc.domain.Professor professor41 = professor33.addAluno(aluno38);
        java.lang.Long long42 = aluno38.getNumeroContato();
        boolean boolean43 = user27.equals((java.lang.Object) long42);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet44 = user27.getAuthorities();
        user2.setAuthorities(authoritySet44);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(authorityArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(instant23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(user27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNotNull(pessoa37);
        org.junit.Assert.assertNotNull(professor41);
        org.junit.Assert.assertNull(long42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(authoritySet44);
    }

    @Test
    public void test2109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2109");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='LoggerVM{name='null', level='null'}', secret='null', refreshToken='null', expireTime=null}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.social.connect.Connection<?>> wildcardConnectionList5 = customSocialConnectionRepository3.findConnections("ManagedUserVM{} UserDTO{login='User{login='null', firstName='error.validation', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2110");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("error.concurrencyFailure");
        socialUserConnection0.setAccessToken("LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}");
        socialUserConnection0.setExpireTime((java.lang.Long) 10L);
        java.lang.String str16 = socialUserConnection0.getAccessToken();
        java.lang.String str17 = socialUserConnection0.getProviderUserId();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}" + "'", str16, "LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str17, "LoginVM{username='null', rememberMe=false}");
    }

    @Test
    public void test2111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2111");
        org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createAlert("UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='false'}");
        org.junit.Assert.assertNotNull(httpHeaders2);
    }

    @Test
    public void test2112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2112");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.toString();
        java.time.Instant instant2 = managedUserVM0.getLastModifiedDate();
        managedUserVM0.setId((java.lang.Long) (-1L));
        java.time.Instant instant5 = managedUserVM0.getLastModifiedDate();
        java.time.Instant instant6 = managedUserVM0.getCreatedDate();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str1, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(instant2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(instant6);
    }

    @Test
    public void test2113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2113");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper3 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray4 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList5 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList5, userArray4);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList7 = userMapper3.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList5);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray9 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList10 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList10, userArray9);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList12 = userMapper8.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList10);
        java.time.Instant instant23 = null;
        java.time.Instant instant25 = null;
        java.time.Instant instant35 = null;
        java.time.Instant instant37 = null;
        java.lang.String[] strArray40 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet41 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet41, strArray40);
        com.unifacisa.tcc.service.dto.UserDTO userDTO43 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant35, "hi!", instant37, (java.util.Set<java.lang.String>) strSet41);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM44 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant23, "", instant25, (java.util.Set<java.lang.String>) strSet41);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet45 = userMapper8.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet41);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper46 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray47 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList48 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList48, userArray47);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList50 = userMapper46.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList48);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList51 = userMapper8.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList48);
        java.util.List<com.unifacisa.tcc.domain.User> userList52 = userMapper3.userDTOsToUsers(userDTOList51);
        java.util.List<com.unifacisa.tcc.domain.User> userList53 = userMapper0.userDTOsToUsers(userDTOList51);
        com.unifacisa.tcc.domain.User user55 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM56 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.Long long57 = managedUserVM56.getId();
        boolean boolean58 = user55.equals((java.lang.Object) managedUserVM56);
        java.lang.String str59 = managedUserVM56.getFirstName();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(userDTOList7);
        org.junit.Assert.assertNotNull(userArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(userDTOList12);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(authoritySet45);
        org.junit.Assert.assertNotNull(userArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(userDTOList50);
        org.junit.Assert.assertNotNull(userDTOList51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(user55);
        org.junit.Assert.assertNull(long57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(str59);
    }

    @Test
    public void test2114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2114");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        java.lang.Long long3 = aluno0.getMatricula();
        java.lang.Long long4 = aluno0.getMatricula();
        aluno0.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor8 = null;
        aluno7.setProfessor(professor8);
        aluno7.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor12 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor14 = professor12.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor15 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno16 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor17 = null;
        aluno16.setProfessor(professor17);
        aluno16.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor23 = null;
        aluno22.setProfessor(professor23);
        java.lang.Long long25 = aluno22.getMatricula();
        java.lang.String str26 = aluno22.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean29 = aluno27.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor31 = null;
        aluno30.setProfessor(professor31);
        aluno30.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean37 = aluno35.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        aluno38.setPrimeiroNome("");
        java.lang.Long long41 = aluno38.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        aluno42.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray45 = new com.unifacisa.tcc.domain.Aluno[] { aluno16, aluno21, aluno22, aluno27, aluno30, aluno35, aluno38, aluno42 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet46 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet46, alunoArray45);
        professor15.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet46);
        com.unifacisa.tcc.domain.Professor professor49 = professor14.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet46);
        aluno7.setProfessor(professor49);
        aluno0.setProfessor(professor49);
        aluno0.setHabilitadoTcc((java.lang.Boolean) false);
        aluno0.setId((java.lang.Long) 1L);
        java.lang.String str56 = aluno0.getPrimeiroNome();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa58 = aluno0.primeiroNome("");
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(professor14);
        org.junit.Assert.assertNull(long25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(long41);
        org.junit.Assert.assertNotNull(alunoArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(professor49);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(pessoa58);
    }

    @Test
    public void test2115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2115");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        aluno0.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor7 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = professor5.email("");
        com.unifacisa.tcc.domain.Professor professor11 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno12 = aluno0.professor(professor5);
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor14 = null;
        aluno13.setProfessor(professor14);
        java.lang.Long long16 = aluno13.getMatricula();
        java.lang.String str17 = aluno13.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor18 = professor5.removeAluno(aluno13);
        java.lang.Long long19 = aluno13.getNumeroContato();
        org.junit.Assert.assertNotNull(professor7);
        org.junit.Assert.assertNotNull(pessoa9);
        org.junit.Assert.assertNotNull(professor11);
        org.junit.Assert.assertNotNull(aluno12);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNull(long19);
    }

    @Test
    public void test2116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2116");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.toString();
        java.lang.String str2 = managedUserVM0.getLogin();
        java.lang.String str3 = managedUserVM0.getFirstName();
        java.time.Instant instant4 = managedUserVM0.getCreatedDate();
        managedUserVM0.setId((java.lang.Long) 1L);
        managedUserVM0.setId((java.lang.Long) 100L);
        java.lang.String str9 = managedUserVM0.toString();
        java.time.Instant instant10 = managedUserVM0.getCreatedDate();
        java.lang.String str11 = managedUserVM0.getCreatedBy();
        java.lang.String str12 = managedUserVM0.getLastModifiedBy();
        managedUserVM0.setLogin("LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str1, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str9, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test2117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2117");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor2.setPrimeiroNome("LoginVM{username='null', rememberMe=false}");
        java.lang.Long long7 = professor2.getNumeroContato();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = professor2.primeiroNome("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor11 = null;
        aluno10.setProfessor(professor11);
        aluno10.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa16 = aluno10.primeiroNome("hi!");
        java.lang.Long long17 = aluno10.getId();
        com.unifacisa.tcc.domain.Aluno aluno19 = aluno10.habilitadoTcc((java.lang.Boolean) false);
        aluno10.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor22 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str23 = professor22.toString();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor25 = null;
        aluno24.setProfessor(professor25);
        java.lang.Long long27 = aluno24.getMatricula();
        java.lang.String str28 = aluno24.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean31 = aluno29.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor32 = aluno29.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean35 = aluno33.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno37 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor38 = null;
        aluno37.setProfessor(professor38);
        java.lang.Long long40 = aluno37.getMatricula();
        java.lang.String str41 = aluno37.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean44 = aluno42.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor45 = aluno42.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor47 = null;
        aluno46.setProfessor(professor47);
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        aluno49.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor53 = null;
        aluno52.setProfessor(professor53);
        aluno52.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor58 = null;
        aluno57.setProfessor(professor58);
        java.lang.Long long60 = aluno57.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno61 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean64 = aluno62.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno65 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor66 = null;
        aluno65.setProfessor(professor66);
        com.unifacisa.tcc.domain.Aluno[] alunoArray68 = new com.unifacisa.tcc.domain.Aluno[] { aluno24, aluno29, aluno33, aluno36, aluno37, aluno42, aluno46, aluno49, aluno52, aluno57, aluno61, aluno62, aluno65 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet69 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet69, alunoArray68);
        com.unifacisa.tcc.domain.Professor professor71 = professor22.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet69);
        com.unifacisa.tcc.domain.Aluno aluno72 = aluno10.professor(professor22);
        java.lang.Long long73 = aluno72.getId();
        com.unifacisa.tcc.domain.Aluno aluno75 = aluno72.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa77 = aluno75.primeiroNome("SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=100}");
        com.unifacisa.tcc.domain.Professor professor78 = professor2.removeAluno(aluno75);
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNotNull(pessoa9);
        org.junit.Assert.assertNotNull(pessoa16);
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertNotNull(aluno19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str23, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(professor32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(long40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(professor45);
        org.junit.Assert.assertNull(long60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(alunoArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(professor71);
        org.junit.Assert.assertNotNull(aluno72);
        org.junit.Assert.assertNull(long73);
        org.junit.Assert.assertNotNull(aluno75);
        org.junit.Assert.assertNotNull(pessoa77);
        org.junit.Assert.assertNotNull(professor78);
    }

    @Test
    public void test2118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2118");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor2.setPrimeiroNome("LoginVM{username='null', rememberMe=false}");
        java.lang.Long long7 = professor2.getNumeroContato();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = professor2.primeiroNome("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        java.lang.Long long10 = professor2.getNumeroContato();
        java.lang.String str11 = professor2.getEmail();
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.Long long13 = aluno12.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa15 = aluno12.matricula((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.Professor professor16 = professor2.addAluno(aluno12);
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNotNull(pessoa9);
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNotNull(pessoa15);
        org.junit.Assert.assertNotNull(professor16);
    }

    @Test
    public void test2119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2119");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.String str4 = loginVM0.toString();
        java.lang.String str5 = loginVM0.getUsername();
        java.lang.String str6 = loginVM0.getPassword();
        loginVM0.setUsername("ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        loginVM0.setUsername("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str4, "LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test2120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2120");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 10L);
        user2.setCreatedBy("LoggerVM{name='null', level='null'}");
        java.lang.String str5 = user2.getFirstName();
        user2.setPassword("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        user2.setLastModifiedBy("LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test2121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2121");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("LoggerVM{name='null', level='null'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.social.connect.Connection<?>> wildcardConnectionList5 = customSocialConnectionRepository3.findConnections("LoggerVM{name='Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', level='null'}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2122");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        java.time.Instant instant14 = null;
        java.time.Instant instant16 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        com.unifacisa.tcc.service.dto.UserDTO userDTO34 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant26, "hi!", instant28, (java.util.Set<java.lang.String>) strSet32);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM35 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant14, "", instant16, (java.util.Set<java.lang.String>) strSet32);
        java.lang.String str36 = managedUserVM35.getLastModifiedBy();
        org.springframework.http.ResponseEntity responseEntity37 = userResource3.createUser(managedUserVM35);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<java.lang.Void> voidResponseEntity39 = userResource3.deleteUser("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(responseEntity37);
    }

    @Test
    public void test2123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2123");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        java.lang.String str5 = user2.getResetKey();
        com.unifacisa.tcc.service.dto.UserDTO userDTO6 = new com.unifacisa.tcc.service.dto.UserDTO(user2);
        boolean boolean7 = user2.getActivated();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test2124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2124");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        java.lang.Long long3 = aluno0.getMatricula();
        java.lang.String str4 = aluno0.getSegundoNome();
        java.lang.String str5 = aluno0.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor6 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor8 = professor6.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor9 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor11 = null;
        aluno10.setProfessor(professor11);
        aluno10.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno16 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor17 = null;
        aluno16.setProfessor(professor17);
        java.lang.Long long19 = aluno16.getMatricula();
        java.lang.String str20 = aluno16.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean23 = aluno21.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor25 = null;
        aluno24.setProfessor(professor25);
        aluno24.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean31 = aluno29.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        aluno32.setPrimeiroNome("");
        java.lang.Long long35 = aluno32.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        aluno36.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray39 = new com.unifacisa.tcc.domain.Aluno[] { aluno10, aluno15, aluno16, aluno21, aluno24, aluno29, aluno32, aluno36 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet40 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet40, alunoArray39);
        professor9.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet40);
        com.unifacisa.tcc.domain.Professor professor43 = professor8.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet40);
        com.unifacisa.tcc.domain.Aluno aluno44 = aluno0.professor(professor43);
        com.unifacisa.tcc.domain.Professor professor46 = professor43.diponibilidade((java.lang.Boolean) false);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(professor8);
        org.junit.Assert.assertNull(long19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(long35);
        org.junit.Assert.assertNotNull(alunoArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(professor43);
        org.junit.Assert.assertNotNull(aluno44);
        org.junit.Assert.assertNotNull(professor46);
    }

    @Test
    public void test2125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2125");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        keyAndPasswordVM0.setNewPassword("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        keyAndPasswordVM0.setKey("");
        keyAndPasswordVM0.setNewPassword("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        java.lang.String str9 = keyAndPasswordVM0.getNewPassword();
        keyAndPasswordVM0.setNewPassword("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        java.lang.String str12 = keyAndPasswordVM0.getNewPassword();
        keyAndPasswordVM0.setKey("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}" + "'", str9, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}" + "'", str12, "User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
    }

    @Test
    public void test2126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2126");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.email("");
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        aluno5.setPrimeiroNome("");
        aluno5.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor10 = professor0.addAluno(aluno5);
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        user11.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user11.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper16 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user18 = userMapper16.userFromId((java.lang.Long) 100L);
        user18.setLangKey("");
        java.time.Instant instant21 = user18.getResetDate();
        java.time.Instant instant22 = user18.getCreatedDate();
        user11.setResetDate(instant22);
        java.time.Instant instant24 = null;
        user11.setCreatedDate(instant24);
        java.lang.String str26 = user11.getPassword();
        boolean boolean27 = user11.getActivated();
        boolean boolean28 = aluno5.equals((java.lang.Object) user11);
        java.lang.String str29 = aluno5.getEmail();
        java.lang.Boolean boolean30 = aluno5.isHabilitadoTcc();
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNotNull(user18);
        org.junit.Assert.assertNull(instant21);
        org.junit.Assert.assertNotNull(instant22);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(boolean30);
    }

    @Test
    public void test2127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2127");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        keyAndPasswordVM0.setKey("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        java.lang.String str5 = keyAndPasswordVM0.getKey();
        keyAndPasswordVM0.setNewPassword("Aluno{id=-1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}" + "'", str5, "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
    }

    @Test
    public void test2128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2128");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray7 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList8 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList8, userArray7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper6.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList8);
        java.time.Instant instant21 = null;
        java.time.Instant instant23 = null;
        java.time.Instant instant33 = null;
        java.time.Instant instant35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        com.unifacisa.tcc.service.dto.UserDTO userDTO41 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant33, "hi!", instant35, (java.util.Set<java.lang.String>) strSet39);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM42 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant21, "", instant23, (java.util.Set<java.lang.String>) strSet39);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet43 = userMapper6.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet39);
        user0.setAuthorities(authoritySet43);
        boolean boolean45 = user0.getActivated();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper46 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user48 = userMapper46.userFromId((java.lang.Long) 100L);
        user48.setLangKey("");
        java.time.Instant instant51 = user48.getResetDate();
        java.time.Instant instant52 = user48.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno53 = new com.unifacisa.tcc.domain.Aluno();
        aluno53.setPrimeiroNome("");
        java.lang.String str56 = aluno53.getPrimeiroNome();
        java.lang.Long long57 = aluno53.getMatricula();
        boolean boolean58 = user48.equals((java.lang.Object) aluno53);
        user48.setFirstName("");
        user48.setActivationKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet63 = user48.getAuthorities();
        user0.setAuthorities(authoritySet63);
        user0.setImageUrl("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='0', email='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', numeroContato='null', habilitadoTcc='true'}");
        java.lang.String str67 = user0.getCreatedBy();
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(userArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(authoritySet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(user48);
        org.junit.Assert.assertNull(instant51);
        org.junit.Assert.assertNotNull(instant52);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNull(long57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(authoritySet63);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str67, "LoginVM{username='null', rememberMe=false}");
    }

    @Test
    public void test2129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2129");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor2.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor2.setPrimeiroNome("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor10 = null;
        aluno9.setProfessor(professor10);
        aluno9.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa15 = aluno9.primeiroNome("hi!");
        java.lang.Long long16 = aluno9.getId();
        java.lang.String str17 = aluno9.getSegundoNome();
        aluno9.setSegundoNome("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        com.unifacisa.tcc.domain.Professor professor20 = professor2.removeAluno(aluno9);
        aluno9.setHabilitadoTcc((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNotNull(pessoa15);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(professor20);
    }

    @Test
    public void test2130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2130");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        java.lang.Long long3 = aluno0.getMatricula();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa5 = aluno0.numeroContato((java.lang.Long) 1L);
        java.lang.Boolean boolean6 = aluno0.isHabilitadoTcc();
        java.lang.String str7 = aluno0.getSegundoNome();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = aluno0.segundoNome("Authority{name='error.concurrencyFailure'}");
        com.unifacisa.tcc.domain.Aluno aluno11 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNotNull(pessoa5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(pessoa9);
        org.junit.Assert.assertNotNull(aluno11);
    }

    @Test
    public void test2131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2131");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("error.concurrencyFailure");
        socialUserConnection0.setAccessToken("LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}");
        java.lang.String str14 = socialUserConnection0.getAccessToken();
        socialUserConnection0.setExpireTime((java.lang.Long) (-1L));
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}" + "'", str14, "LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}");
    }

    @Test
    public void test2132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2132");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.String str4 = loginVM0.toString();
        java.lang.String str5 = loginVM0.getPassword();
        loginVM0.setUsername("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        loginVM0.setRememberMe((java.lang.Boolean) true);
        java.lang.String str10 = loginVM0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str4, "LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LoginVM{username='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', rememberMe=true}" + "'", str10, "LoginVM{username='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', rememberMe=true}");
    }

    @Test
    public void test2133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2133");
        org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createAlert("Authority{name='null'}", "");
        org.junit.Assert.assertNotNull(httpHeaders2);
    }

    @Test
    public void test2134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2134");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("error.concurrencyFailure");
        java.lang.Long long12 = socialUserConnection0.getRank();
        socialUserConnection0.setUserId("");
        com.unifacisa.tcc.config.LoggingAspectConfiguration loggingAspectConfiguration15 = new com.unifacisa.tcc.config.LoggingAspectConfiguration();
        boolean boolean16 = socialUserConnection0.equals((java.lang.Object) loggingAspectConfiguration15);
        org.springframework.core.env.Environment environment17 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect18 = loggingAspectConfiguration15.loggingAspect(environment17);
        org.springframework.core.env.Environment environment19 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect20 = loggingAspectConfiguration15.loggingAspect(environment19);
        org.aspectj.lang.ProceedingJoinPoint proceedingJoinPoint21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = loggingAspect20.logAround(proceedingJoinPoint21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(loggingAspect18);
        org.junit.Assert.assertNotNull(loggingAspect20);
    }

    @Test
    public void test2135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2135");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        user2.setCreatedBy("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        user2.setLastModifiedBy("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str11 = user2.toString();
        user2.setActivationKey("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='error.concurrencyFailure', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.lang.String str14 = user2.getImageUrl();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}" + "'", str11, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test2136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2136");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        user11.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM14 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet15 = managedUserVM14.getAuthorities();
        boolean boolean16 = user11.equals((java.lang.Object) strSet15);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper17 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray18 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList19 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList19, userArray18);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList21 = userMapper17.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList19);
        java.time.Instant instant32 = null;
        java.time.Instant instant34 = null;
        java.time.Instant instant44 = null;
        java.time.Instant instant46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet50 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet50, strArray49);
        com.unifacisa.tcc.service.dto.UserDTO userDTO52 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant44, "hi!", instant46, (java.util.Set<java.lang.String>) strSet50);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM53 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant32, "", instant34, (java.util.Set<java.lang.String>) strSet50);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet54 = userMapper17.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet50);
        user11.setAuthorities(authoritySet54);
        java.lang.String str56 = user11.getFirstName();
        user11.setId((java.lang.Long) 10L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO59 = userMapper0.userToUserDTO(user11);
        com.unifacisa.tcc.domain.User user60 = new com.unifacisa.tcc.domain.User();
        user60.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user60.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper65 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user67 = userMapper65.userFromId((java.lang.Long) 100L);
        user67.setLangKey("");
        java.time.Instant instant70 = user67.getResetDate();
        java.time.Instant instant71 = user67.getCreatedDate();
        user60.setResetDate(instant71);
        java.time.Instant instant73 = null;
        user60.setCreatedDate(instant73);
        java.lang.String str75 = user60.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user76 = new com.unifacisa.tcc.domain.User();
        java.lang.String str77 = user76.toString();
        boolean boolean78 = user60.equals((java.lang.Object) user76);
        java.lang.String str79 = user76.getCreatedBy();
        com.unifacisa.tcc.service.dto.UserDTO userDTO80 = userMapper0.userToUserDTO(user76);
        boolean boolean81 = userDTO80.isActivated();
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(userArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(userDTOList21);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(authoritySet54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(userDTO59);
        org.junit.Assert.assertNotNull(user67);
        org.junit.Assert.assertNull(instant70);
        org.junit.Assert.assertNotNull(instant71);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str77, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(userDTO80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test2137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2137");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.toString();
        java.time.Instant instant2 = managedUserVM0.getLastModifiedDate();
        java.time.Instant instant3 = null;
        managedUserVM0.setLastModifiedDate(instant3);
        java.lang.Long long5 = managedUserVM0.getId();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str1, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(instant2);
        org.junit.Assert.assertNull(long5);
    }

    @Test
    public void test2138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2138");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        java.time.Instant instant14 = null;
        java.time.Instant instant16 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "hi!", "", "LoginVM{username='null', rememberMe=false}" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM24 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "LoginVM{username='null', rememberMe=false}", "LoginVM{username='null', rememberMe=false}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.concurrencyFailure", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", false, "LoginVM{username='null', rememberMe=false}", "hi!", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", instant14, "error.concurrencyFailure", instant16, (java.util.Set<java.lang.String>) strSet22);
        java.lang.String str25 = managedUserVM24.toString();
        java.lang.String str26 = managedUserVM24.getPassword();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.service.dto.UserDTO> userDTOResponseEntity27 = userResource3.updateUser(managedUserVM24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ManagedUserVM{} UserDTO{login='LoginVM{username='null', rememberMe=false}', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', lastName='error.concurrencyFailure', email='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', imageUrl='LoginVM{username='null', rememberMe=false}', activated=false, langKey='hi!', createdBy=User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}, createdDate=null, lastModifiedBy='error.concurrencyFailure', lastModifiedDate=null, authorities=[hi!, , LoginVM{username='null', rememberMe=false}]}" + "'", str25, "ManagedUserVM{} UserDTO{login='LoginVM{username='null', rememberMe=false}', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', lastName='error.concurrencyFailure', email='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', imageUrl='LoginVM{username='null', rememberMe=false}', activated=false, langKey='hi!', createdBy=User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}, createdDate=null, lastModifiedBy='error.concurrencyFailure', lastModifiedDate=null, authorities=[hi!, , LoginVM{username='null', rememberMe=false}]}");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str26, "LoginVM{username='null', rememberMe=false}");
    }

    @Test
    public void test2139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2139");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.social.connect.Connection<?>> wildcardConnectionList5 = customSocialConnectionRepository3.findConnections("ManagedUserVM{} UserDTO{login='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2140");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant5 = user0.getLastModifiedDate();
        user0.setActivated(false);
        user0.setLastModifiedBy("Aluno{id=1, primeiroNome='', segundoNome='null', matricula='0', email='null', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertNotNull(instant5);
    }

    @Test
    public void test2141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2141");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("ManagedUserVM{} UserDTO{login='error.concurrencyFailure', firstName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', lastName='', email='hi!', imageUrl='hi!', activated=false, langKey='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', createdBy=error.validation, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}", "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', secret='null', refreshToken='null', expireTime=100}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str4 = fieldErrorVM3.getField();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', secret='null', refreshToken='null', expireTime=100}" + "'", str4, "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', secret='null', refreshToken='null', expireTime=100}");
    }

    @Test
    public void test2142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2142");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 10L);
        java.lang.String str5 = socialUserConnection0.getDisplayName();
        java.lang.String str6 = socialUserConnection0.getAccessToken();
        socialUserConnection0.setProviderId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        socialUserConnection0.setProviderId("ManagedUserVM{} UserDTO{login='User{login='null', firstName='error.validation', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test2143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2143");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        java.time.Instant instant15 = null;
        java.time.Instant instant17 = null;
        java.time.Instant instant27 = null;
        java.time.Instant instant29 = null;
        java.lang.String[] strArray32 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet33 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet33, strArray32);
        com.unifacisa.tcc.service.dto.UserDTO userDTO35 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant27, "hi!", instant29, (java.util.Set<java.lang.String>) strSet33);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM36 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant15, "", instant17, (java.util.Set<java.lang.String>) strSet33);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet37 = userMapper0.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet33);
        com.unifacisa.tcc.domain.User user39 = userMapper0.userFromId((java.lang.Long) (-1L));
        java.lang.String str40 = user39.getLangKey();
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(authoritySet37);
        org.junit.Assert.assertNotNull(user39);
        org.junit.Assert.assertNull(str40);
    }

    @Test
    public void test2144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2144");
        org.springframework.http.HttpHeaders httpHeaders3 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createFailureAlert("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "Authority{name='null'}");
        org.junit.Assert.assertNotNull(httpHeaders3);
    }

    @Test
    public void test2145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2145");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user7 = userMapper5.userFromId((java.lang.Long) 100L);
        user7.setLangKey("");
        java.time.Instant instant10 = user7.getResetDate();
        java.time.Instant instant11 = user7.getCreatedDate();
        user0.setResetDate(instant11);
        boolean boolean13 = user0.getActivated();
        user0.setLangKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str16 = user0.getPassword();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent17 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant18 = persistentAuditEvent17.getAuditEventDate();
        java.time.Instant instant19 = null;
        persistentAuditEvent17.setAuditEventDate(instant19);
        persistentAuditEvent17.setId((java.lang.Long) 1L);
        persistentAuditEvent17.setId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent25 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        persistentAuditEvent25.setData(strMap26);
        persistentAuditEvent25.setAuditEventType("hi!");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent30 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant31 = null;
        persistentAuditEvent30.setAuditEventDate(instant31);
        com.unifacisa.tcc.domain.User user33 = new com.unifacisa.tcc.domain.User();
        user33.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user33.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper38 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user40 = userMapper38.userFromId((java.lang.Long) 100L);
        user40.setLangKey("");
        java.time.Instant instant43 = user40.getResetDate();
        java.time.Instant instant44 = user40.getCreatedDate();
        user33.setResetDate(instant44);
        persistentAuditEvent30.setAuditEventDate(instant44);
        persistentAuditEvent25.setAuditEventDate(instant44);
        persistentAuditEvent17.setAuditEventDate(instant44);
        com.unifacisa.tcc.domain.User user49 = new com.unifacisa.tcc.domain.User();
        user49.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM52 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet53 = managedUserVM52.getAuthorities();
        boolean boolean54 = user49.equals((java.lang.Object) strSet53);
        java.time.Instant instant55 = user49.getLastModifiedDate();
        persistentAuditEvent17.setAuditEventDate(instant55);
        user0.setCreatedDate(instant55);
        java.lang.String str58 = user0.getFirstName();
        org.junit.Assert.assertNotNull(user7);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(instant11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(instant18);
        org.junit.Assert.assertNotNull(user40);
        org.junit.Assert.assertNull(instant43);
        org.junit.Assert.assertNotNull(instant44);
        org.junit.Assert.assertNull(strSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(instant55);
        org.junit.Assert.assertNull(str58);
    }

    @Test
    public void test2146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2146");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        aluno5.setPrimeiroNome("");
        java.lang.Long long8 = aluno5.getMatricula();
        aluno5.setHabilitadoTcc((java.lang.Boolean) false);
        aluno5.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        aluno13.setPrimeiroNome("");
        java.lang.Long long16 = aluno13.getMatricula();
        java.lang.Long long17 = aluno13.getMatricula();
        aluno13.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        aluno20.setPrimeiroNome("");
        java.lang.Long long23 = aluno20.getMatricula();
        java.lang.Long long24 = aluno20.getMatricula();
        aluno20.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray28 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno13, aluno20, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet29 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet29, alunoArray28);
        com.unifacisa.tcc.domain.Professor professor31 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet29);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa33 = professor2.matricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        aluno34.setPrimeiroNome("");
        java.lang.Long long37 = aluno34.getMatricula();
        java.lang.Long long38 = aluno34.getMatricula();
        aluno34.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa42 = aluno34.email("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        com.unifacisa.tcc.domain.Aluno aluno44 = aluno34.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor45 = professor2.removeAluno(aluno34);
        java.lang.String str46 = professor45.toString();
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertNull(long23);
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertNotNull(alunoArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNotNull(pessoa33);
        org.junit.Assert.assertNull(long37);
        org.junit.Assert.assertNull(long38);
        org.junit.Assert.assertNotNull(pessoa42);
        org.junit.Assert.assertNotNull(aluno44);
        org.junit.Assert.assertNotNull(professor45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='false'}" + "'", str46, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='false'}");
    }

    @Test
    public void test2147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2147");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        keyAndPasswordVM0.setNewPassword("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        keyAndPasswordVM0.setKey("");
        keyAndPasswordVM0.setNewPassword("");
        keyAndPasswordVM0.setKey("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='error.validation', expireTime=null}");
        keyAndPasswordVM0.setKey("LoginVM{username='null', rememberMe=null}");
        keyAndPasswordVM0.setKey("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:31.405Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:31.405Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        java.lang.String str15 = keyAndPasswordVM0.getNewPassword();
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test2148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2148");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        authority0.setName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        authority0.setName("error.concurrencyFailure");
        java.lang.String str5 = authority0.toString();
        authority0.setName("Authority{name='error.concurrencyFailure'}");
        java.lang.String str8 = authority0.getName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Authority{name='error.concurrencyFailure'}" + "'", str5, "Authority{name='error.concurrencyFailure'}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Authority{name='error.concurrencyFailure'}" + "'", str8, "Authority{name='error.concurrencyFailure'}");
    }

    @Test
    public void test2149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2149");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        user2.setLastName("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user10 = userMapper8.userFromId((java.lang.Long) 100L);
        user10.setResetKey("hi!");
        java.lang.String str13 = user10.getResetKey();
        user10.setId((java.lang.Long) 0L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper16 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user18 = userMapper16.userFromId((java.lang.Long) 100L);
        user18.setResetKey("hi!");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper21 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user23 = userMapper21.userFromId((java.lang.Long) 100L);
        user23.setLangKey("");
        java.time.Instant instant26 = user23.getResetDate();
        java.time.Instant instant27 = user23.getCreatedDate();
        user18.setResetDate(instant27);
        user10.setResetDate(instant27);
        com.unifacisa.tcc.service.dto.UserDTO userDTO30 = new com.unifacisa.tcc.service.dto.UserDTO(user10);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent31 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = null;
        persistentAuditEvent31.setData(strMap32);
        persistentAuditEvent31.setAuditEventType("hi!");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent36 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant37 = null;
        persistentAuditEvent36.setAuditEventDate(instant37);
        com.unifacisa.tcc.domain.User user39 = new com.unifacisa.tcc.domain.User();
        user39.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user39.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper44 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user46 = userMapper44.userFromId((java.lang.Long) 100L);
        user46.setLangKey("");
        java.time.Instant instant49 = user46.getResetDate();
        java.time.Instant instant50 = user46.getCreatedDate();
        user39.setResetDate(instant50);
        persistentAuditEvent36.setAuditEventDate(instant50);
        persistentAuditEvent31.setAuditEventDate(instant50);
        user10.setCreatedDate(instant50);
        user10.setFirstName("LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper57 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user59 = userMapper57.userFromId((java.lang.Long) 100L);
        user59.setResetKey("hi!");
        user59.setFirstName("error.validation");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper64 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user66 = userMapper64.userFromId((java.lang.Long) 100L);
        user66.setLangKey("");
        java.time.Instant instant69 = user66.getResetDate();
        java.time.Instant instant70 = user66.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno71 = new com.unifacisa.tcc.domain.Aluno();
        aluno71.setPrimeiroNome("");
        java.lang.String str74 = aluno71.getPrimeiroNome();
        java.lang.Long long75 = aluno71.getMatricula();
        boolean boolean76 = user66.equals((java.lang.Object) aluno71);
        user66.setFirstName("");
        com.unifacisa.tcc.domain.User user79 = new com.unifacisa.tcc.domain.User();
        user79.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user79.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper84 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user86 = userMapper84.userFromId((java.lang.Long) 100L);
        user86.setLangKey("");
        java.time.Instant instant89 = user86.getResetDate();
        java.time.Instant instant90 = user86.getCreatedDate();
        user79.setResetDate(instant90);
        user66.setCreatedDate(instant90);
        user59.setResetDate(instant90);
        user10.setLastModifiedDate(instant90);
        user2.setCreatedDate(instant90);
        user2.setId((java.lang.Long) 10L);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(user10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(user18);
        org.junit.Assert.assertNotNull(user23);
        org.junit.Assert.assertNull(instant26);
        org.junit.Assert.assertNotNull(instant27);
        org.junit.Assert.assertNotNull(user46);
        org.junit.Assert.assertNull(instant49);
        org.junit.Assert.assertNotNull(instant50);
        org.junit.Assert.assertNotNull(user59);
        org.junit.Assert.assertNotNull(user66);
        org.junit.Assert.assertNull(instant69);
        org.junit.Assert.assertNotNull(instant70);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNull(long75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(user86);
        org.junit.Assert.assertNull(instant89);
        org.junit.Assert.assertNotNull(instant90);
    }

    @Test
    public void test2150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2150");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = null;
        persistentAuditEvent0.setAuditEventDate(instant1);
        java.lang.Long long3 = persistentAuditEvent0.getId();
        java.time.Instant instant4 = persistentAuditEvent0.getAuditEventDate();
        java.time.Instant instant5 = persistentAuditEvent0.getAuditEventDate();
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertNull(instant5);
    }

    @Test
    public void test2151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2151");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("error.concurrencyFailure");
        java.lang.Long long12 = socialUserConnection0.getRank();
        socialUserConnection0.setRefreshToken("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str15 = socialUserConnection0.getProviderUserId();
        socialUserConnection0.setUserId("ManagedUserVM{} UserDTO{login='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        socialUserConnection0.setId((java.lang.Long) 0L);
        java.lang.String str20 = socialUserConnection0.getProfileURL();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str15, "LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str20, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test2152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2152");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        socialUserConnection0.setAccessToken("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str8 = socialUserConnection0.getRefreshToken();
        socialUserConnection0.setId((java.lang.Long) (-1L));
        java.lang.String str11 = socialUserConnection0.getDisplayName();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test2153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2153");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.toString();
        java.lang.String str2 = managedUserVM0.getLangKey();
        java.lang.String str3 = managedUserVM0.getCreatedBy();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str1, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test2154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2154");
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository0 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource1 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository0);
        com.unifacisa.tcc.domain.Professor professor2 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor4 = professor2.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = professor2.email("");
        com.unifacisa.tcc.domain.Professor professor8 = professor2.diponibilidade((java.lang.Boolean) true);
        professor8.setId((java.lang.Long) (-1L));
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity11 = professorResource1.createProfessor(professor8);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<java.lang.Void> voidResponseEntity13 = professorResource1.deleteProfessor((java.lang.Long) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor4);
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNotNull(professor8);
        org.junit.Assert.assertNotNull(professorResponseEntity11);
    }

    @Test
    public void test2155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2155");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.getName();
        java.lang.String str2 = authority0.getName();
        boolean boolean4 = authority0.equals((java.lang.Object) 0L);
        java.lang.String str5 = authority0.getName();
        java.lang.Object obj6 = null;
        boolean boolean7 = authority0.equals(obj6);
        com.unifacisa.tcc.domain.User user8 = new com.unifacisa.tcc.domain.User();
        user8.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM11 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet12 = managedUserVM11.getAuthorities();
        boolean boolean13 = user8.equals((java.lang.Object) strSet12);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper14 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray15 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList16 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList16, userArray15);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList18 = userMapper14.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList16);
        java.time.Instant instant29 = null;
        java.time.Instant instant31 = null;
        java.time.Instant instant41 = null;
        java.time.Instant instant43 = null;
        java.lang.String[] strArray46 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet47 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet47, strArray46);
        com.unifacisa.tcc.service.dto.UserDTO userDTO49 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant41, "hi!", instant43, (java.util.Set<java.lang.String>) strSet47);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM50 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant29, "", instant31, (java.util.Set<java.lang.String>) strSet47);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet51 = userMapper14.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet47);
        user8.setAuthorities(authoritySet51);
        java.lang.String str53 = user8.getFirstName();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper54 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user56 = userMapper54.userFromId((java.lang.Long) 100L);
        user56.setResetKey("hi!");
        user56.setFirstName("error.validation");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper61 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user63 = userMapper61.userFromId((java.lang.Long) 100L);
        user63.setLangKey("");
        java.time.Instant instant66 = user63.getResetDate();
        java.time.Instant instant67 = user63.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno68 = new com.unifacisa.tcc.domain.Aluno();
        aluno68.setPrimeiroNome("");
        java.lang.String str71 = aluno68.getPrimeiroNome();
        java.lang.Long long72 = aluno68.getMatricula();
        boolean boolean73 = user63.equals((java.lang.Object) aluno68);
        user63.setFirstName("");
        com.unifacisa.tcc.domain.User user76 = new com.unifacisa.tcc.domain.User();
        user76.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user76.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper81 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user83 = userMapper81.userFromId((java.lang.Long) 100L);
        user83.setLangKey("");
        java.time.Instant instant86 = user83.getResetDate();
        java.time.Instant instant87 = user83.getCreatedDate();
        user76.setResetDate(instant87);
        user63.setCreatedDate(instant87);
        user56.setResetDate(instant87);
        user8.setResetDate(instant87);
        user8.setResetKey("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}");
        java.lang.String str94 = user8.getLastName();
        user8.setId((java.lang.Long) (-1L));
        boolean boolean97 = authority0.equals((java.lang.Object) user8);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(userArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(userDTOList18);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(authoritySet51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(user56);
        org.junit.Assert.assertNotNull(user63);
        org.junit.Assert.assertNull(instant66);
        org.junit.Assert.assertNotNull(instant67);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNull(long72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(user83);
        org.junit.Assert.assertNull(instant86);
        org.junit.Assert.assertNotNull(instant87);
        org.junit.Assert.assertNull(str94);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test2156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2156");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        java.lang.String str8 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setProviderUserId("ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        java.lang.String str11 = socialUserConnection0.getRefreshToken();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test2157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2157");
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository0 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource1 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository0);
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository2 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource3 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository2);
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor6 = professor4.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = professor4.email("");
        com.unifacisa.tcc.domain.Professor professor10 = professor4.diponibilidade((java.lang.Boolean) true);
        professor10.setId((java.lang.Long) (-1L));
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity13 = professorResource3.createProfessor(professor10);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity14 = professorResource1.createProfessor(professor10);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa16 = professor10.segundoNome("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        com.unifacisa.tcc.domain.Professor professor17 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor19 = professor17.diponibilidade((java.lang.Boolean) true);
        professor19.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.Long long22 = professor19.getId();
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet23 = professor19.getAlunos();
        com.unifacisa.tcc.domain.Professor professor24 = professor10.alunos(alunoSet23);
        professor10.setDiponibilidade((java.lang.Boolean) true);
        professor10.setDiponibilidade((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(professor6);
        org.junit.Assert.assertNotNull(pessoa8);
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNotNull(professorResponseEntity13);
        org.junit.Assert.assertNotNull(professorResponseEntity14);
        org.junit.Assert.assertNotNull(pessoa16);
        org.junit.Assert.assertNotNull(professor19);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNotNull(alunoSet23);
        org.junit.Assert.assertNotNull(professor24);
    }

    @Test
    public void test2158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2158");
        com.unifacisa.tcc.repository.AlunoRepository alunoRepository0 = null;
        com.unifacisa.tcc.web.rest.AlunoResource alunoResource1 = new com.unifacisa.tcc.web.rest.AlunoResource(alunoRepository0);
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        aluno2.setPrimeiroNome("");
        java.lang.String str5 = aluno2.getPrimeiroNome();
        java.lang.Long long6 = aluno2.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno8 = aluno2.habilitadoTcc((java.lang.Boolean) false);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Aluno> alunoResponseEntity9 = alunoResource1.updateAluno(aluno8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNotNull(aluno8);
    }

    @Test
    public void test2159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2159");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("error.concurrencyFailure");
        socialUserConnection0.setAccessToken("LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}");
        socialUserConnection0.setExpireTime((java.lang.Long) 10L);
        socialUserConnection0.setDisplayName("error.concurrencyFailure");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper18 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user20 = userMapper18.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper21 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray22 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList23 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList23, userArray22);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList25 = userMapper21.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList23);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper26 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray27 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList28 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList28, userArray27);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList30 = userMapper26.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList28);
        java.time.Instant instant41 = null;
        java.time.Instant instant43 = null;
        java.time.Instant instant53 = null;
        java.time.Instant instant55 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet59 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet59, strArray58);
        com.unifacisa.tcc.service.dto.UserDTO userDTO61 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant53, "hi!", instant55, (java.util.Set<java.lang.String>) strSet59);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM62 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant41, "", instant43, (java.util.Set<java.lang.String>) strSet59);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet63 = userMapper26.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet59);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper64 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray65 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList66 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList66, userArray65);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList68 = userMapper64.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList66);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList69 = userMapper26.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList66);
        java.util.List<com.unifacisa.tcc.domain.User> userList70 = userMapper21.userDTOsToUsers(userDTOList69);
        java.util.List<com.unifacisa.tcc.domain.User> userList71 = userMapper18.userDTOsToUsers(userDTOList69);
        com.unifacisa.tcc.domain.User user73 = userMapper18.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM74 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.Long long75 = managedUserVM74.getId();
        boolean boolean76 = user73.equals((java.lang.Object) managedUserVM74);
        java.lang.String str77 = user73.getPassword();
        boolean boolean78 = socialUserConnection0.equals((java.lang.Object) str77);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(user20);
        org.junit.Assert.assertNotNull(userArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(userDTOList25);
        org.junit.Assert.assertNotNull(userArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(userDTOList30);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(authoritySet63);
        org.junit.Assert.assertNotNull(userArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(userDTOList68);
        org.junit.Assert.assertNotNull(userDTOList69);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(user73);
        org.junit.Assert.assertNull(long75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test2160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2160");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper9 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user11 = userMapper9.userFromId((java.lang.Long) 100L);
        user11.setResetKey("hi!");
        user11.setFirstName("error.validation");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper16 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user18 = userMapper16.userFromId((java.lang.Long) 100L);
        user18.setLangKey("");
        java.time.Instant instant21 = user18.getResetDate();
        java.time.Instant instant22 = user18.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        aluno23.setPrimeiroNome("");
        java.lang.String str26 = aluno23.getPrimeiroNome();
        java.lang.Long long27 = aluno23.getMatricula();
        boolean boolean28 = user18.equals((java.lang.Object) aluno23);
        user18.setFirstName("");
        com.unifacisa.tcc.domain.User user31 = new com.unifacisa.tcc.domain.User();
        user31.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user31.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper36 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user38 = userMapper36.userFromId((java.lang.Long) 100L);
        user38.setLangKey("");
        java.time.Instant instant41 = user38.getResetDate();
        java.time.Instant instant42 = user38.getCreatedDate();
        user31.setResetDate(instant42);
        user18.setCreatedDate(instant42);
        user11.setResetDate(instant42);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper47 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user49 = userMapper47.userFromId((java.lang.Long) 100L);
        user49.setLangKey("");
        java.time.Instant instant52 = user49.getResetDate();
        java.time.Instant instant53 = user49.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno54 = new com.unifacisa.tcc.domain.Aluno();
        aluno54.setPrimeiroNome("");
        java.lang.String str57 = aluno54.getPrimeiroNome();
        java.lang.Long long58 = aluno54.getMatricula();
        boolean boolean59 = user49.equals((java.lang.Object) aluno54);
        user49.setFirstName("");
        com.unifacisa.tcc.domain.User user62 = new com.unifacisa.tcc.domain.User();
        user62.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user62.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper67 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user69 = userMapper67.userFromId((java.lang.Long) 100L);
        user69.setLangKey("");
        java.time.Instant instant72 = user69.getResetDate();
        java.time.Instant instant73 = user69.getCreatedDate();
        user62.setResetDate(instant73);
        user49.setCreatedDate(instant73);
        java.time.Instant instant85 = null;
        java.time.Instant instant87 = null;
        java.lang.String[] strArray90 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet91 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet91, strArray90);
        com.unifacisa.tcc.service.dto.UserDTO userDTO93 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant85, "hi!", instant87, (java.util.Set<java.lang.String>) strSet91);
        com.unifacisa.tcc.service.dto.UserDTO userDTO94 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) (-1L), "", "error.concurrencyFailure", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", instant42, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}", instant73, (java.util.Set<java.lang.String>) strSet91);
        java.util.Set<java.lang.String> strSet95 = userDTO94.getAuthorities();
        org.junit.Assert.assertNotNull(user11);
        org.junit.Assert.assertNotNull(user18);
        org.junit.Assert.assertNull(instant21);
        org.junit.Assert.assertNotNull(instant22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(long27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(user38);
        org.junit.Assert.assertNull(instant41);
        org.junit.Assert.assertNotNull(instant42);
        org.junit.Assert.assertNotNull(user49);
        org.junit.Assert.assertNull(instant52);
        org.junit.Assert.assertNotNull(instant53);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNull(long58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(user69);
        org.junit.Assert.assertNull(instant72);
        org.junit.Assert.assertNotNull(instant73);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(strSet95);
    }

    @Test
    public void test2161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2161");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        java.lang.Long long3 = aluno0.getMatricula();
        aluno0.setHabilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa7 = aluno0.primeiroNome("");
        java.lang.String str8 = aluno0.toString();
        com.unifacisa.tcc.domain.Professor professor9 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str10 = professor9.toString();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor12 = null;
        aluno11.setProfessor(professor12);
        java.lang.Long long14 = aluno11.getMatricula();
        java.lang.String str15 = aluno11.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno16 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean18 = aluno16.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor19 = aluno16.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean22 = aluno20.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor25 = null;
        aluno24.setProfessor(professor25);
        java.lang.Long long27 = aluno24.getMatricula();
        java.lang.String str28 = aluno24.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean31 = aluno29.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor32 = aluno29.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor34 = null;
        aluno33.setProfessor(professor34);
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        aluno36.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor40 = null;
        aluno39.setProfessor(professor40);
        aluno39.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor45 = null;
        aluno44.setProfessor(professor45);
        java.lang.Long long47 = aluno44.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno48 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean51 = aluno49.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor53 = null;
        aluno52.setProfessor(professor53);
        com.unifacisa.tcc.domain.Aluno[] alunoArray55 = new com.unifacisa.tcc.domain.Aluno[] { aluno11, aluno16, aluno20, aluno23, aluno24, aluno29, aluno33, aluno36, aluno39, aluno44, aluno48, aluno49, aluno52 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet56 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet56, alunoArray55);
        com.unifacisa.tcc.domain.Professor professor58 = professor9.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet56);
        com.unifacisa.tcc.domain.Professor professor60 = professor9.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno61 = aluno0.professor(professor60);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNotNull(pessoa7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}" + "'", str8, "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str10, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(professor19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(long27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(professor32);
        org.junit.Assert.assertNull(long47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(alunoArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(professor58);
        org.junit.Assert.assertNotNull(professor60);
        org.junit.Assert.assertNotNull(aluno61);
    }

    @Test
    public void test2162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2162");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getDisplayName();
        socialUserConnection0.setSecret("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str6 = socialUserConnection0.getProviderUserId();
        java.lang.Long long7 = socialUserConnection0.getId();
        socialUserConnection0.setProviderId("LoginVM{username='', rememberMe=false}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(long7);
    }

    @Test
    public void test2163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2163");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant1 = managedUserVM0.getCreatedDate();
        java.lang.Long long2 = managedUserVM0.getId();
        java.lang.Long long3 = managedUserVM0.getId();
        java.lang.String str4 = managedUserVM0.toString();
        java.lang.String str5 = managedUserVM0.getLangKey();
        java.time.Instant instant6 = managedUserVM0.getLastModifiedDate();
        java.util.Set<java.lang.String> strSet7 = managedUserVM0.getAuthorities();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str4, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(instant6);
        org.junit.Assert.assertNull(strSet7);
    }

    @Test
    public void test2164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2164");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor2.setPrimeiroNome("LoginVM{username='null', rememberMe=null}");
        professor2.setPrimeiroNome("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='error.concurrencyFailure', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.lang.Long long9 = professor2.getNumeroContato();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa11 = professor2.segundoNome("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}");
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertNotNull(pessoa11);
    }

    @Test
    public void test2165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2165");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = null;
        user2.setLastModifiedDate(instant5);
        user2.setActivated(false);
        java.lang.String str9 = user2.getLogin();
        user2.setId((java.lang.Long) 0L);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test2166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2166");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant1 = managedUserVM0.getCreatedDate();
        java.lang.String str2 = managedUserVM0.getCreatedBy();
        java.lang.String str3 = managedUserVM0.getImageUrl();
        com.unifacisa.tcc.domain.User user4 = new com.unifacisa.tcc.domain.User();
        user4.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user4.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant9 = user4.getLastModifiedDate();
        user4.setResetKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.time.Instant instant12 = user4.getResetDate();
        user4.setLastModifiedBy("Authority{name='error.concurrencyFailure'}");
        java.time.Instant instant15 = user4.getResetDate();
        user4.setLastName("LoginVM{username='null', rememberMe=false}");
        java.time.Instant instant18 = user4.getLastModifiedDate();
        managedUserVM0.setLastModifiedDate(instant18);
        java.lang.Class<?> wildcardClass20 = managedUserVM0.getClass();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(instant9);
        org.junit.Assert.assertNull(instant12);
        org.junit.Assert.assertNull(instant15);
        org.junit.Assert.assertNotNull(instant18);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2167");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.matricula((java.lang.Long) 10L);
        java.lang.Long long7 = aluno0.getId();
        aluno0.setEmail("LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}");
        aluno0.setMatricula((java.lang.Long) 10L);
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNull(long7);
    }

    @Test
    public void test2168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2168");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        user2.setCreatedBy("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str9 = user2.getCreatedBy();
        user2.setEmail("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:41.180Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:41.180Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str9, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test2169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2169");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor2.setPrimeiroNome("LoginVM{username='null', rememberMe=false}");
        java.lang.Long long7 = professor2.getNumeroContato();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = professor2.primeiroNome("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        java.lang.Long long10 = professor2.getNumeroContato();
        java.lang.String str11 = professor2.getEmail();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa13 = professor2.email("Authority{name='Authority{name='error.concurrencyFailure'}'}");
        professor2.setEmail("Aluno{id=null, primeiroNome='hi!', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='10', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor17 = professor2.diponibilidade((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNotNull(pessoa9);
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(pessoa13);
        org.junit.Assert.assertNotNull(professor17);
    }

    @Test
    public void test2170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2170");
        org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createEntityCreationAlert("Aluno{id=null, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='LoggerVM{name='null', level='null'}', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNotNull(httpHeaders2);
    }

    @Test
    public void test2171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2171");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        loginVM0.setPassword("");
        loginVM0.setPassword("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        loginVM0.setPassword("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Boolean boolean7 = loginVM0.isRememberMe();
        java.lang.String str8 = loginVM0.getUsername();
        loginVM0.setPassword("LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}'}");
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test2172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2172");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "ManagedUserVM{} UserDTO{login='User{login='null', firstName='error.validation', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "SocialUserConnection{id=null, userId=, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.lang.String str4 = fieldErrorVM3.getField();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ManagedUserVM{} UserDTO{login='User{login='null', firstName='error.validation', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str4, "ManagedUserVM{} UserDTO{login='User{login='null', firstName='error.validation', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test2173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2173");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM4 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.Long long5 = managedUserVM4.getId();
        java.util.Set<java.lang.String> strSet6 = managedUserVM4.getAuthorities();
        java.lang.String str7 = managedUserVM4.getCreatedBy();
        java.lang.String str8 = managedUserVM4.getLastModifiedBy();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity responseEntity9 = userResource3.createUser(managedUserVM4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test2174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2174");
        org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createAlert("LoggerVM{name='SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='error.validation', expireTime=null}', level='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}', matricula='100', email='null', numeroContato='1', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(httpHeaders2);
    }

    @Test
    public void test2175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2175");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        persistentAuditEvent0.setId((java.lang.Long) 1L);
        java.lang.String str3 = persistentAuditEvent0.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = persistentAuditEvent0.getData();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent5 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        persistentAuditEvent5.setId((java.lang.Long) 1L);
        java.lang.String str8 = persistentAuditEvent5.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = persistentAuditEvent5.getData();
        persistentAuditEvent0.setData(strMap9);
        persistentAuditEvent0.setId((java.lang.Long) (-1L));
        persistentAuditEvent0.setId((java.lang.Long) (-1L));
        java.time.Instant instant15 = persistentAuditEvent0.getAuditEventDate();
        persistentAuditEvent0.setId((java.lang.Long) 1L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(instant15);
    }

    @Test
    public void test2176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2176");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        user2.setPassword("");
        user2.setFirstName("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:41.180Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:41.180Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        java.lang.String str11 = user2.getLastModifiedBy();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test2177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2177");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setProfileURL("error.concurrencyFailure");
        java.lang.String str5 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setUserId("LoggerVM{name='Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}', level='null'}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "error.concurrencyFailure" + "'", str5, "error.concurrencyFailure");
    }

    @Test
    public void test2178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2178");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.toString();
        professor0.setDiponibilidade((java.lang.Boolean) false);
        java.lang.Long long4 = professor0.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor6 = null;
        aluno5.setProfessor(professor6);
        aluno5.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa11 = aluno5.primeiroNome("hi!");
        java.lang.Long long12 = aluno5.getId();
        com.unifacisa.tcc.domain.Aluno aluno14 = aluno5.habilitadoTcc((java.lang.Boolean) false);
        aluno5.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor17 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str18 = professor17.toString();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor20 = null;
        aluno19.setProfessor(professor20);
        java.lang.Long long22 = aluno19.getMatricula();
        java.lang.String str23 = aluno19.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean26 = aluno24.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor27 = aluno24.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean30 = aluno28.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno31 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor33 = null;
        aluno32.setProfessor(professor33);
        java.lang.Long long35 = aluno32.getMatricula();
        java.lang.String str36 = aluno32.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno37 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean39 = aluno37.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor40 = aluno37.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor42 = null;
        aluno41.setProfessor(professor42);
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        aluno44.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor48 = null;
        aluno47.setProfessor(professor48);
        aluno47.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor53 = null;
        aluno52.setProfessor(professor53);
        java.lang.Long long55 = aluno52.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno56 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean59 = aluno57.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno60 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor61 = null;
        aluno60.setProfessor(professor61);
        com.unifacisa.tcc.domain.Aluno[] alunoArray63 = new com.unifacisa.tcc.domain.Aluno[] { aluno19, aluno24, aluno28, aluno31, aluno32, aluno37, aluno41, aluno44, aluno47, aluno52, aluno56, aluno57, aluno60 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet64 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet64, alunoArray63);
        com.unifacisa.tcc.domain.Professor professor66 = professor17.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet64);
        com.unifacisa.tcc.domain.Aluno aluno67 = aluno5.professor(professor17);
        com.unifacisa.tcc.domain.Aluno aluno69 = aluno67.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor70 = professor0.removeAluno(aluno67);
        aluno67.setPrimeiroNome("Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='false'}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str1, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(pessoa11);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNotNull(aluno14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str18, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(professor27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(long35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(professor40);
        org.junit.Assert.assertNull(long55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(alunoArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(professor66);
        org.junit.Assert.assertNotNull(aluno67);
        org.junit.Assert.assertNotNull(aluno69);
        org.junit.Assert.assertNotNull(professor70);
    }

    @Test
    public void test2179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2179");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        aluno7.setPrimeiroNome("");
        java.lang.String str10 = aluno7.getPrimeiroNome();
        java.lang.Long long11 = aluno7.getMatricula();
        boolean boolean12 = user2.equals((java.lang.Object) aluno7);
        java.lang.String str13 = user2.getPassword();
        user2.setResetKey("LoggerVM{name='LoggerVM{name='null', level='null'}', level='null'}");
        user2.setImageUrl("");
        user2.setActivationKey("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=, createdDate=2021-03-26T03:34:26.101Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:26.101Z, authorities=[]}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test2180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2180");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.social.connect.Connection<?>> wildcardConnectionList5 = customSocialConnectionRepository3.findConnections("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2181");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderUserId("error.concurrencyFailure");
        java.lang.Long long3 = socialUserConnection0.getExpireTime();
        java.lang.Long long4 = socialUserConnection0.getId();
        socialUserConnection0.setProviderId("LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=null}");
        socialUserConnection0.setProviderId("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test2182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2182");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user7 = userMapper5.userFromId((java.lang.Long) 100L);
        user7.setLangKey("");
        java.time.Instant instant10 = user7.getResetDate();
        java.time.Instant instant11 = user7.getCreatedDate();
        user0.setResetDate(instant11);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet13 = user0.getAuthorities();
        java.lang.String str14 = user0.getImageUrl();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper15 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user17 = userMapper15.userFromId((java.lang.Long) 100L);
        user17.setResetKey("hi!");
        user17.setFirstName("error.validation");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper22 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user24 = userMapper22.userFromId((java.lang.Long) 100L);
        user24.setLangKey("");
        java.time.Instant instant27 = user24.getResetDate();
        java.time.Instant instant28 = user24.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        aluno29.setPrimeiroNome("");
        java.lang.String str32 = aluno29.getPrimeiroNome();
        java.lang.Long long33 = aluno29.getMatricula();
        boolean boolean34 = user24.equals((java.lang.Object) aluno29);
        user24.setFirstName("");
        com.unifacisa.tcc.domain.User user37 = new com.unifacisa.tcc.domain.User();
        user37.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user37.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper42 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user44 = userMapper42.userFromId((java.lang.Long) 100L);
        user44.setLangKey("");
        java.time.Instant instant47 = user44.getResetDate();
        java.time.Instant instant48 = user44.getCreatedDate();
        user37.setResetDate(instant48);
        user24.setCreatedDate(instant48);
        user17.setResetDate(instant48);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent52 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant53 = null;
        persistentAuditEvent52.setAuditEventDate(instant53);
        com.unifacisa.tcc.domain.User user55 = new com.unifacisa.tcc.domain.User();
        user55.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user55.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper60 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user62 = userMapper60.userFromId((java.lang.Long) 100L);
        user62.setLangKey("");
        java.time.Instant instant65 = user62.getResetDate();
        java.time.Instant instant66 = user62.getCreatedDate();
        user55.setResetDate(instant66);
        persistentAuditEvent52.setAuditEventDate(instant66);
        user17.setCreatedDate(instant66);
        user0.setCreatedDate(instant66);
        java.lang.String str71 = user0.getLastName();
        org.junit.Assert.assertNotNull(user7);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(instant11);
        org.junit.Assert.assertNotNull(authoritySet13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(user17);
        org.junit.Assert.assertNotNull(user24);
        org.junit.Assert.assertNull(instant27);
        org.junit.Assert.assertNotNull(instant28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNull(long33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(user44);
        org.junit.Assert.assertNull(instant47);
        org.junit.Assert.assertNotNull(instant48);
        org.junit.Assert.assertNotNull(user62);
        org.junit.Assert.assertNull(instant65);
        org.junit.Assert.assertNotNull(instant66);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str71, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test2183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2183");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("error.concurrencyFailure");
        java.lang.Long long12 = socialUserConnection0.getRank();
        socialUserConnection0.setUserId("");
        com.unifacisa.tcc.config.LoggingAspectConfiguration loggingAspectConfiguration15 = new com.unifacisa.tcc.config.LoggingAspectConfiguration();
        boolean boolean16 = socialUserConnection0.equals((java.lang.Object) loggingAspectConfiguration15);
        java.lang.String str17 = socialUserConnection0.getRefreshToken();
        java.lang.String str18 = socialUserConnection0.getProviderId();
        java.lang.String str19 = socialUserConnection0.getAccessToken();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str18, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test2184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2184");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        user2.setLastName("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        java.lang.String str8 = user2.getResetKey();
        java.lang.String str9 = user2.getPassword();
        com.unifacisa.tcc.domain.User user19 = new com.unifacisa.tcc.domain.User();
        user19.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user19.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper24 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user26 = userMapper24.userFromId((java.lang.Long) 100L);
        user26.setLangKey("");
        java.time.Instant instant29 = user26.getResetDate();
        java.time.Instant instant30 = user26.getCreatedDate();
        user19.setResetDate(instant30);
        boolean boolean32 = user19.getActivated();
        user19.setLangKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant35 = user19.getCreatedDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper37 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user39 = userMapper37.userFromId((java.lang.Long) 100L);
        user39.setResetKey("hi!");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper42 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user44 = userMapper42.userFromId((java.lang.Long) 100L);
        user44.setLangKey("");
        java.time.Instant instant47 = user44.getResetDate();
        java.time.Instant instant48 = user44.getCreatedDate();
        user39.setResetDate(instant48);
        java.util.Set<java.lang.String> strSet50 = null;
        com.unifacisa.tcc.service.dto.UserDTO userDTO51 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 0L, "Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='false'}", "ManagedUserVM{} UserDTO{login='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', habilitadoTcc='null'}", true, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=, createdDate=2021-03-26T03:34:26.101Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:26.101Z, authorities=[]}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='false'}", instant35, "SocialUserConnection{id=null, userId=error.concurrencyFailure, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='error.concurrencyFailure', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}', secret='null', refreshToken='null', expireTime=10}", instant48, strSet50);
        user2.setResetDate(instant48);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(user26);
        org.junit.Assert.assertNull(instant29);
        org.junit.Assert.assertNotNull(instant30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(instant35);
        org.junit.Assert.assertNotNull(user39);
        org.junit.Assert.assertNotNull(user44);
        org.junit.Assert.assertNull(instant47);
        org.junit.Assert.assertNotNull(instant48);
    }

    @Test
    public void test2185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2185");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant1 = managedUserVM0.getCreatedDate();
        java.lang.String str2 = managedUserVM0.getCreatedBy();
        java.lang.String str3 = managedUserVM0.getLastModifiedBy();
        java.time.Instant instant4 = managedUserVM0.getLastModifiedDate();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(instant4);
    }

    @Test
    public void test2186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2186");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM1 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM1.setName("LoginVM{username='null', rememberMe=false}");
        logsResource0.changeLevel(loggerVM1);
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList5 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM6 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM6.setName("LoginVM{username='null', rememberMe=false}");
        loggerVM6.setName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        logsResource0.changeLevel(loggerVM6);
        com.unifacisa.tcc.web.rest.LogsResource logsResource12 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM13 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM13.setName("LoginVM{username='null', rememberMe=false}");
        logsResource12.changeLevel(loggerVM13);
        loggerVM13.setName("Authority{name='error.concurrencyFailure'}");
        logsResource0.changeLevel(loggerVM13);
        java.lang.String str20 = loggerVM13.toString();
        java.lang.String str21 = loggerVM13.getLevel();
        java.lang.String str22 = loggerVM13.toString();
        org.junit.Assert.assertNotNull(loggerVMList5);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='null'}" + "'", str20, "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='null'}");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='null'}" + "'", str22, "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='null'}");
    }

    @Test
    public void test2187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2187");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = null;
        persistentAuditEvent0.setAuditEventDate(instant1);
        java.lang.String str3 = persistentAuditEvent0.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = persistentAuditEvent0.getData();
        java.time.Instant instant5 = persistentAuditEvent0.getAuditEventDate();
        java.lang.String str6 = persistentAuditEvent0.getAuditEventType();
        java.time.Instant instant7 = persistentAuditEvent0.getAuditEventDate();
        persistentAuditEvent0.setAuditEventType("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(instant7);
    }

    @Test
    public void test2188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2188");
        com.unifacisa.tcc.repository.AlunoRepository alunoRepository0 = null;
        com.unifacisa.tcc.web.rest.AlunoResource alunoResource1 = new com.unifacisa.tcc.web.rest.AlunoResource(alunoRepository0);
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor3 = null;
        aluno2.setProfessor(professor3);
        aluno2.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = aluno2.primeiroNome("hi!");
        java.lang.Long long9 = aluno2.getId();
        com.unifacisa.tcc.domain.Aluno aluno11 = aluno2.habilitadoTcc((java.lang.Boolean) false);
        java.lang.Long long12 = aluno11.getId();
        java.lang.String str13 = aluno11.getEmail();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Aluno> alunoResponseEntity14 = alunoResource1.updateAluno(aluno11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(pessoa8);
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertNotNull(aluno11);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test2189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2189");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray7 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList8 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList8, userArray7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper6.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList8);
        java.time.Instant instant21 = null;
        java.time.Instant instant23 = null;
        java.time.Instant instant33 = null;
        java.time.Instant instant35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        com.unifacisa.tcc.service.dto.UserDTO userDTO41 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant33, "hi!", instant35, (java.util.Set<java.lang.String>) strSet39);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM42 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant21, "", instant23, (java.util.Set<java.lang.String>) strSet39);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet43 = userMapper6.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet39);
        user0.setAuthorities(authoritySet43);
        java.lang.Long long45 = user0.getId();
        java.lang.String str46 = user0.getResetKey();
        java.lang.String str47 = user0.getEmail();
        java.lang.String str48 = user0.getLogin();
        user0.setActivated(true);
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(userArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(authoritySet43);
        org.junit.Assert.assertNull(long45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
    }

    @Test
    public void test2190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2190");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        java.lang.String str8 = socialUserConnection0.getProfileURL();
        java.lang.String str9 = socialUserConnection0.getImageURL();
        socialUserConnection0.setDisplayName("");
        java.lang.String str12 = socialUserConnection0.getProviderUserId();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "error.validation" + "'", str9, "error.validation");
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test2191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2191");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        java.lang.String str2 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.String str5 = loginVM0.getPassword();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test2192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2192");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        java.time.Instant instant14 = null;
        java.time.Instant instant16 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        com.unifacisa.tcc.service.dto.UserDTO userDTO34 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant26, "hi!", instant28, (java.util.Set<java.lang.String>) strSet32);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM35 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant14, "", instant16, (java.util.Set<java.lang.String>) strSet32);
        java.lang.String str36 = managedUserVM35.getLastModifiedBy();
        org.springframework.http.ResponseEntity responseEntity37 = userResource3.createUser(managedUserVM35);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM38 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet39 = managedUserVM38.getAuthorities();
        java.time.Instant instant40 = null;
        managedUserVM38.setLastModifiedDate(instant40);
        managedUserVM38.setId((java.lang.Long) 100L);
        org.springframework.http.ResponseEntity responseEntity44 = userResource3.createUser(managedUserVM38);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<java.lang.Void> voidResponseEntity46 = userResource3.deleteUser("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(responseEntity37);
        org.junit.Assert.assertNull(strSet39);
        org.junit.Assert.assertNotNull(responseEntity44);
    }

    @Test
    public void test2193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2193");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        user2.setLastName("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        java.lang.String str8 = user2.getResetKey();
        java.lang.String str9 = user2.getPassword();
        user2.setEmail("Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test2194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2194");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList1 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM2 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM2.setName("LoginVM{username='null', rememberMe=false}");
        loggerVM2.setName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        logsResource0.changeLevel(loggerVM2);
        loggerVM2.setName("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}");
        java.lang.String str10 = loggerVM2.getName();
        java.lang.String str11 = loggerVM2.getName();
        org.junit.Assert.assertNotNull(loggerVMList1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}" + "'", str10, "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}" + "'", str11, "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}");
    }

    @Test
    public void test2195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2195");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.toString();
        java.lang.String str2 = managedUserVM0.getLogin();
        java.lang.String str3 = managedUserVM0.getFirstName();
        java.time.Instant instant4 = managedUserVM0.getCreatedDate();
        java.lang.String str5 = managedUserVM0.getLastName();
        java.lang.String str6 = managedUserVM0.getImageUrl();
        managedUserVM0.setLogin("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
        java.lang.String str9 = managedUserVM0.getFirstName();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str1, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test2196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2196");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        java.lang.Long long3 = aluno0.getMatricula();
        java.lang.Long long4 = aluno0.getMatricula();
        aluno0.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = aluno0.email("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        aluno0.setNumeroContato((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean13 = aluno11.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor14 = aluno11.getProfessor();
        java.lang.String str15 = aluno11.toString();
        com.unifacisa.tcc.domain.Professor professor16 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor18 = professor16.diponibilidade((java.lang.Boolean) true);
        professor18.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        aluno21.setPrimeiroNome("");
        java.lang.Long long24 = aluno21.getMatricula();
        aluno21.setHabilitadoTcc((java.lang.Boolean) false);
        aluno21.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        aluno29.setPrimeiroNome("");
        java.lang.Long long32 = aluno29.getMatricula();
        java.lang.Long long33 = aluno29.getMatricula();
        aluno29.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        aluno36.setPrimeiroNome("");
        java.lang.Long long39 = aluno36.getMatricula();
        java.lang.Long long40 = aluno36.getMatricula();
        aluno36.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray44 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno29, aluno36, aluno43 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet45 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet45, alunoArray44);
        com.unifacisa.tcc.domain.Professor professor47 = professor18.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet45);
        com.unifacisa.tcc.domain.Professor professor48 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor50 = professor48.diponibilidade((java.lang.Boolean) true);
        professor50.setDiponibilidade((java.lang.Boolean) false);
        java.lang.String str53 = professor50.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor54 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor56 = professor54.diponibilidade((java.lang.Boolean) true);
        professor56.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno59 = new com.unifacisa.tcc.domain.Aluno();
        aluno59.setPrimeiroNome("");
        java.lang.Long long62 = aluno59.getMatricula();
        aluno59.setHabilitadoTcc((java.lang.Boolean) false);
        aluno59.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno67 = new com.unifacisa.tcc.domain.Aluno();
        aluno67.setPrimeiroNome("");
        java.lang.Long long70 = aluno67.getMatricula();
        java.lang.Long long71 = aluno67.getMatricula();
        aluno67.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno74 = new com.unifacisa.tcc.domain.Aluno();
        aluno74.setPrimeiroNome("");
        java.lang.Long long77 = aluno74.getMatricula();
        java.lang.Long long78 = aluno74.getMatricula();
        aluno74.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno81 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray82 = new com.unifacisa.tcc.domain.Aluno[] { aluno59, aluno67, aluno74, aluno81 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet83 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet83, alunoArray82);
        com.unifacisa.tcc.domain.Professor professor85 = professor56.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet83);
        com.unifacisa.tcc.domain.Professor professor86 = professor50.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet83);
        com.unifacisa.tcc.domain.Professor professor87 = professor18.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet83);
        com.unifacisa.tcc.domain.Aluno aluno88 = aluno11.professor(professor18);
        com.unifacisa.tcc.domain.Aluno aluno89 = aluno0.professor(professor18);
        com.unifacisa.tcc.domain.Professor professor91 = professor18.diponibilidade((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass92 = professor18.getClass();
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(pessoa8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(professor14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str15, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertNull(long32);
        org.junit.Assert.assertNull(long33);
        org.junit.Assert.assertNull(long39);
        org.junit.Assert.assertNull(long40);
        org.junit.Assert.assertNotNull(alunoArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(professor47);
        org.junit.Assert.assertNotNull(professor50);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(professor56);
        org.junit.Assert.assertNull(long62);
        org.junit.Assert.assertNull(long70);
        org.junit.Assert.assertNull(long71);
        org.junit.Assert.assertNull(long77);
        org.junit.Assert.assertNull(long78);
        org.junit.Assert.assertNotNull(alunoArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(professor85);
        org.junit.Assert.assertNotNull(professor86);
        org.junit.Assert.assertNotNull(professor87);
        org.junit.Assert.assertNotNull(aluno88);
        org.junit.Assert.assertNotNull(aluno89);
        org.junit.Assert.assertNotNull(professor91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2197");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str3 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str4 = keyAndPasswordVM0.getKey();
        keyAndPasswordVM0.setKey("Aluno{id=null, primeiroNome='null', segundoNome='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        keyAndPasswordVM0.setKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str4, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test2198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2198");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setImageURL("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("");
        socialUserConnection0.setProfileURL("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        socialUserConnection0.setAccessToken("Authority{name='null'}");
        java.lang.String str14 = socialUserConnection0.getProfileURL();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}" + "'", str14, "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
    }

    @Test
    public void test2199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2199");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet15 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet15, strArray14);
        com.unifacisa.tcc.service.dto.UserDTO userDTO17 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant9, "hi!", instant11, (java.util.Set<java.lang.String>) strSet15);
        java.lang.String str18 = userDTO17.getLogin();
        java.lang.String str19 = userDTO17.getFirstName();
        java.lang.String str20 = userDTO17.getEmail();
        java.lang.String str21 = userDTO17.getLastName();
        java.lang.String str22 = userDTO17.toString();
        java.lang.String str23 = userDTO17.toString();
        java.lang.String str24 = userDTO17.getLastModifiedBy();
        java.lang.String str25 = userDTO17.getLastModifiedBy();
        java.lang.String str26 = userDTO17.toString();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM27 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant28 = managedUserVM27.getCreatedDate();
        java.lang.Long long29 = managedUserVM27.getId();
        java.lang.Long long30 = managedUserVM27.getId();
        java.lang.String str31 = managedUserVM27.getLogin();
        java.time.Instant instant32 = managedUserVM27.getLastModifiedDate();
        com.unifacisa.tcc.domain.User user33 = new com.unifacisa.tcc.domain.User();
        user33.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user33.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper38 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user40 = userMapper38.userFromId((java.lang.Long) 100L);
        user40.setLangKey("");
        java.time.Instant instant43 = user40.getResetDate();
        java.time.Instant instant44 = user40.getCreatedDate();
        user33.setResetDate(instant44);
        boolean boolean46 = user33.getActivated();
        user33.setLangKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str49 = user33.getPassword();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent50 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant51 = persistentAuditEvent50.getAuditEventDate();
        java.time.Instant instant52 = null;
        persistentAuditEvent50.setAuditEventDate(instant52);
        persistentAuditEvent50.setId((java.lang.Long) 1L);
        persistentAuditEvent50.setId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent58 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap59 = null;
        persistentAuditEvent58.setData(strMap59);
        persistentAuditEvent58.setAuditEventType("hi!");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent63 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant64 = null;
        persistentAuditEvent63.setAuditEventDate(instant64);
        com.unifacisa.tcc.domain.User user66 = new com.unifacisa.tcc.domain.User();
        user66.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user66.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper71 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user73 = userMapper71.userFromId((java.lang.Long) 100L);
        user73.setLangKey("");
        java.time.Instant instant76 = user73.getResetDate();
        java.time.Instant instant77 = user73.getCreatedDate();
        user66.setResetDate(instant77);
        persistentAuditEvent63.setAuditEventDate(instant77);
        persistentAuditEvent58.setAuditEventDate(instant77);
        persistentAuditEvent50.setAuditEventDate(instant77);
        com.unifacisa.tcc.domain.User user82 = new com.unifacisa.tcc.domain.User();
        user82.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM85 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet86 = managedUserVM85.getAuthorities();
        boolean boolean87 = user82.equals((java.lang.Object) strSet86);
        java.time.Instant instant88 = user82.getLastModifiedDate();
        persistentAuditEvent50.setAuditEventDate(instant88);
        user33.setCreatedDate(instant88);
        managedUserVM27.setLastModifiedDate(instant88);
        userDTO17.setLastModifiedDate(instant88);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}" + "'", str22, "UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}" + "'", str23, "UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}" + "'", str26, "UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertNull(instant28);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNull(long30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(instant32);
        org.junit.Assert.assertNotNull(user40);
        org.junit.Assert.assertNull(instant43);
        org.junit.Assert.assertNotNull(instant44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(instant51);
        org.junit.Assert.assertNotNull(user73);
        org.junit.Assert.assertNull(instant76);
        org.junit.Assert.assertNotNull(instant77);
        org.junit.Assert.assertNull(strSet86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(instant88);
    }

    @Test
    public void test2200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2200");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setNewPassword("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        keyAndPasswordVM0.setKey("Authority{name='null'}");
        keyAndPasswordVM0.setNewPassword("LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='null'}");
    }

    @Test
    public void test2201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2201");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.primeiroNome("hi!");
        aluno0.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Professor professor9 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor11 = professor9.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno12 = aluno0.professor(professor11);
        java.lang.Long long13 = aluno0.getMatricula();
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNotNull(professor11);
        org.junit.Assert.assertNotNull(aluno12);
        org.junit.Assert.assertNull(long13);
    }

    @Test
    public void test2202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2202");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant1 = managedUserVM0.getCreatedDate();
        java.lang.Long long2 = managedUserVM0.getId();
        java.time.Instant instant3 = managedUserVM0.getCreatedDate();
        java.lang.String str4 = managedUserVM0.getLastModifiedBy();
        java.lang.String str5 = managedUserVM0.getCreatedBy();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(instant3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test2203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2203");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = null;
        persistentAuditEvent0.setData(strMap1);
        java.time.Instant instant3 = null;
        persistentAuditEvent0.setAuditEventDate(instant3);
        persistentAuditEvent0.setAuditEventType("error.validation");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = persistentAuditEvent0.getData();
        persistentAuditEvent0.setAuditEventType("LoggerVM{name='SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='error.validation', expireTime=null}', level='null'}");
        org.junit.Assert.assertNull(strMap7);
    }

    @Test
    public void test2204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2204");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.toString();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor3 = null;
        aluno2.setProfessor(professor3);
        java.lang.Long long5 = aluno2.getMatricula();
        java.lang.String str6 = aluno2.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean9 = aluno7.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor10 = aluno7.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean13 = aluno11.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor16 = null;
        aluno15.setProfessor(professor16);
        java.lang.Long long18 = aluno15.getMatricula();
        java.lang.String str19 = aluno15.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean22 = aluno20.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor23 = aluno20.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor25 = null;
        aluno24.setProfessor(professor25);
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        aluno27.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor31 = null;
        aluno30.setProfessor(professor31);
        aluno30.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor36 = null;
        aluno35.setProfessor(professor36);
        java.lang.Long long38 = aluno35.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean42 = aluno40.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor44 = null;
        aluno43.setProfessor(professor44);
        com.unifacisa.tcc.domain.Aluno[] alunoArray46 = new com.unifacisa.tcc.domain.Aluno[] { aluno2, aluno7, aluno11, aluno14, aluno15, aluno20, aluno24, aluno27, aluno30, aluno35, aluno39, aluno40, aluno43 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet47 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet47, alunoArray46);
        com.unifacisa.tcc.domain.Professor professor49 = professor0.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet47);
        com.unifacisa.tcc.domain.Professor professor51 = professor0.diponibilidade((java.lang.Boolean) false);
        professor51.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa55 = professor51.numeroContato((java.lang.Long) 100L);
        professor51.setPrimeiroNome("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=, createdDate=2021-03-26T03:34:34.902Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:34.902Z, authorities=[]}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str1, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(professor10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(long18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(professor23);
        org.junit.Assert.assertNull(long38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(alunoArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(professor49);
        org.junit.Assert.assertNotNull(professor51);
        org.junit.Assert.assertNotNull(pessoa55);
    }

    @Test
    public void test2205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2205");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = loginVM0.isRememberMe();
        loginVM0.setPassword("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        java.lang.Boolean boolean7 = loginVM0.isRememberMe();
        loginVM0.setUsername("");
        loginVM0.setRememberMe((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + false + "'", boolean4, false);
        org.junit.Assert.assertEquals("'" + boolean7 + "' != '" + false + "'", boolean7, false);
    }

    @Test
    public void test2206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2206");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        com.unifacisa.tcc.service.dto.UserDTO userDTO30 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant22, "hi!", instant24, (java.util.Set<java.lang.String>) strSet28);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM31 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 0L, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", "hi!", "hi!", "", true, "hi!", "", "", instant10, "", instant12, (java.util.Set<java.lang.String>) strSet28);
        java.time.Instant instant32 = managedUserVM31.getCreatedDate();
        java.lang.String str33 = managedUserVM31.getLangKey();
        java.lang.String str34 = managedUserVM31.toString();
        java.lang.String str35 = managedUserVM31.getFirstName();
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(instant32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}" + "'", str34, "ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
    }

    @Test
    public void test2207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2207");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant1 = managedUserVM0.getCreatedDate();
        java.lang.Long long2 = managedUserVM0.getId();
        java.lang.Long long3 = managedUserVM0.getId();
        java.lang.String str4 = managedUserVM0.getLogin();
        java.lang.String str5 = managedUserVM0.toString();
        java.util.Set<java.lang.String> strSet6 = managedUserVM0.getAuthorities();
        java.lang.String str7 = managedUserVM0.getLastModifiedBy();
        managedUserVM0.setLogin("");
        java.lang.String str10 = managedUserVM0.getLangKey();
        managedUserVM0.setLogin("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:31.405Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:31.405Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str5, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test2208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2208");
        org.springframework.http.HttpHeaders httpHeaders3 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createFailureAlert("Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='false'}", "Authority{name='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(httpHeaders3);
    }

    @Test
    public void test2209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2209");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM4 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant5 = managedUserVM4.getCreatedDate();
        java.lang.Long long6 = managedUserVM4.getId();
        java.lang.Long long7 = managedUserVM4.getId();
        java.lang.String str8 = managedUserVM4.toString();
        managedUserVM4.setId((java.lang.Long) (-1L));
        java.util.Set<java.lang.String> strSet11 = managedUserVM4.getAuthorities();
        java.lang.String str12 = managedUserVM4.getImageUrl();
        org.springframework.http.ResponseEntity responseEntity13 = userResource3.createUser(managedUserVM4);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.service.dto.UserDTO> userDTOResponseEntity15 = userResource3.getUser("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', refreshToken='null', expireTime=null}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str8, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(strSet11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(responseEntity13);
    }

    @Test
    public void test2210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2210");
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository0 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource1 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository0);
        com.unifacisa.tcc.domain.Professor professor2 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor4 = professor2.diponibilidade((java.lang.Boolean) true);
        professor4.setDiponibilidade((java.lang.Boolean) false);
        professor4.setId((java.lang.Long) 100L);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity9 = professorResource1.createProfessor(professor4);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection10 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection10.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str13 = socialUserConnection10.getProviderId();
        socialUserConnection10.setImageURL("error.validation");
        socialUserConnection10.setRank((java.lang.Long) (-1L));
        socialUserConnection10.setExpireTime((java.lang.Long) (-1L));
        socialUserConnection10.setId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.Professor professor22 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor24 = professor22.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor25 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor27 = null;
        aluno26.setProfessor(professor27);
        aluno26.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno31 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor33 = null;
        aluno32.setProfessor(professor33);
        java.lang.Long long35 = aluno32.getMatricula();
        java.lang.String str36 = aluno32.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno37 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean39 = aluno37.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor41 = null;
        aluno40.setProfessor(professor41);
        aluno40.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean47 = aluno45.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno48 = new com.unifacisa.tcc.domain.Aluno();
        aluno48.setPrimeiroNome("");
        java.lang.Long long51 = aluno48.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        aluno52.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray55 = new com.unifacisa.tcc.domain.Aluno[] { aluno26, aluno31, aluno32, aluno37, aluno40, aluno45, aluno48, aluno52 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet56 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet56, alunoArray55);
        professor25.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet56);
        com.unifacisa.tcc.domain.Professor professor59 = professor24.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet56);
        com.unifacisa.tcc.domain.Professor professor61 = professor59.diponibilidade((java.lang.Boolean) true);
        professor59.setDiponibilidade((java.lang.Boolean) false);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet64 = professor59.getAlunos();
        java.lang.Long long65 = professor59.getNumeroContato();
        boolean boolean66 = socialUserConnection10.equals((java.lang.Object) professor59);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity67 = professorResource1.createProfessor(professor59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor4);
        org.junit.Assert.assertNotNull(professorResponseEntity9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str13, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor24);
        org.junit.Assert.assertNull(long35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(long51);
        org.junit.Assert.assertNotNull(alunoArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(professor59);
        org.junit.Assert.assertNotNull(professor61);
        org.junit.Assert.assertNotNull(alunoSet64);
        org.junit.Assert.assertNull(long65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test2211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2211");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        java.lang.Long long3 = aluno0.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor5 = null;
        aluno4.setProfessor(professor5);
        aluno4.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Professor professor9 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor11 = professor9.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa13 = professor9.email("");
        com.unifacisa.tcc.domain.Professor professor15 = professor9.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno16 = aluno4.professor(professor15);
        aluno0.setProfessor(professor15);
        com.unifacisa.tcc.domain.Professor professor18 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor20 = professor18.diponibilidade((java.lang.Boolean) true);
        professor20.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        aluno23.setPrimeiroNome("");
        java.lang.Long long26 = aluno23.getMatricula();
        aluno23.setHabilitadoTcc((java.lang.Boolean) false);
        aluno23.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno31 = new com.unifacisa.tcc.domain.Aluno();
        aluno31.setPrimeiroNome("");
        java.lang.Long long34 = aluno31.getMatricula();
        java.lang.Long long35 = aluno31.getMatricula();
        aluno31.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        aluno38.setPrimeiroNome("");
        java.lang.Long long41 = aluno38.getMatricula();
        java.lang.Long long42 = aluno38.getMatricula();
        aluno38.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray46 = new com.unifacisa.tcc.domain.Aluno[] { aluno23, aluno31, aluno38, aluno45 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet47 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet47, alunoArray46);
        com.unifacisa.tcc.domain.Professor professor49 = professor20.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet47);
        com.unifacisa.tcc.domain.Professor professor50 = professor15.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet47);
        com.unifacisa.tcc.domain.Professor professor52 = professor50.diponibilidade((java.lang.Boolean) true);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNotNull(professor11);
        org.junit.Assert.assertNotNull(pessoa13);
        org.junit.Assert.assertNotNull(professor15);
        org.junit.Assert.assertNotNull(aluno16);
        org.junit.Assert.assertNotNull(professor20);
        org.junit.Assert.assertNull(long26);
        org.junit.Assert.assertNull(long34);
        org.junit.Assert.assertNull(long35);
        org.junit.Assert.assertNull(long41);
        org.junit.Assert.assertNull(long42);
        org.junit.Assert.assertNotNull(alunoArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(professor49);
        org.junit.Assert.assertNotNull(professor50);
        org.junit.Assert.assertNotNull(professor52);
    }

    @Test
    public void test2212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2212");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        com.unifacisa.tcc.service.dto.UserDTO userDTO30 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant22, "hi!", instant24, (java.util.Set<java.lang.String>) strSet28);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM31 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 0L, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", "hi!", "hi!", "", true, "hi!", "", "", instant10, "", instant12, (java.util.Set<java.lang.String>) strSet28);
        java.time.Instant instant32 = managedUserVM31.getCreatedDate();
        java.lang.String str33 = managedUserVM31.getLangKey();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper34 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user36 = userMapper34.userFromId((java.lang.Long) 100L);
        user36.setResetKey("hi!");
        java.lang.String str39 = user36.getResetKey();
        user36.setId((java.lang.Long) 0L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper42 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user44 = userMapper42.userFromId((java.lang.Long) 100L);
        user44.setResetKey("hi!");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper47 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user49 = userMapper47.userFromId((java.lang.Long) 100L);
        user49.setLangKey("");
        java.time.Instant instant52 = user49.getResetDate();
        java.time.Instant instant53 = user49.getCreatedDate();
        user44.setResetDate(instant53);
        user36.setResetDate(instant53);
        managedUserVM31.setLastModifiedDate(instant53);
        managedUserVM31.setId((java.lang.Long) 1L);
        managedUserVM31.setId((java.lang.Long) 100L);
        java.lang.String str61 = managedUserVM31.getPassword();
        java.lang.String str62 = managedUserVM31.getEmail();
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(instant32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(user36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(user44);
        org.junit.Assert.assertNotNull(user49);
        org.junit.Assert.assertNull(instant52);
        org.junit.Assert.assertNotNull(instant53);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "error.validation" + "'", str61, "error.validation");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
    }

    @Test
    public void test2213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2213");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM4 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant5 = managedUserVM4.getCreatedDate();
        java.lang.Long long6 = managedUserVM4.getId();
        java.lang.Long long7 = managedUserVM4.getId();
        java.lang.String str8 = managedUserVM4.toString();
        managedUserVM4.setId((java.lang.Long) (-1L));
        java.util.Set<java.lang.String> strSet11 = managedUserVM4.getAuthorities();
        java.lang.String str12 = managedUserVM4.getImageUrl();
        org.springframework.http.ResponseEntity responseEntity13 = userResource3.createUser(managedUserVM4);
        java.time.Instant instant24 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant36 = null;
        java.time.Instant instant38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet42 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet42, strArray41);
        com.unifacisa.tcc.service.dto.UserDTO userDTO44 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant36, "hi!", instant38, (java.util.Set<java.lang.String>) strSet42);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM45 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", false, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoginVM{username='null', rememberMe=false}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", instant24, "hi!", instant26, (java.util.Set<java.lang.String>) strSet42);
        org.springframework.http.ResponseEntity responseEntity46 = userResource3.createUser(managedUserVM45);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<java.lang.Void> voidResponseEntity48 = userResource3.deleteUser("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:34.552Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:34.552Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str8, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(strSet11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(responseEntity13);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(responseEntity46);
    }

    @Test
    public void test2214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2214");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        aluno5.setPrimeiroNome("");
        java.lang.Long long8 = aluno5.getMatricula();
        aluno5.setHabilitadoTcc((java.lang.Boolean) false);
        aluno5.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        aluno13.setPrimeiroNome("");
        java.lang.Long long16 = aluno13.getMatricula();
        java.lang.Long long17 = aluno13.getMatricula();
        aluno13.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        aluno20.setPrimeiroNome("");
        java.lang.Long long23 = aluno20.getMatricula();
        java.lang.Long long24 = aluno20.getMatricula();
        aluno20.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray28 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno13, aluno20, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet29 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet29, alunoArray28);
        com.unifacisa.tcc.domain.Professor professor31 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet29);
        com.unifacisa.tcc.domain.Professor professor32 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor34 = professor32.diponibilidade((java.lang.Boolean) true);
        professor34.setDiponibilidade((java.lang.Boolean) false);
        java.lang.String str37 = professor34.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor38 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor40 = professor38.diponibilidade((java.lang.Boolean) true);
        professor40.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        aluno43.setPrimeiroNome("");
        java.lang.Long long46 = aluno43.getMatricula();
        aluno43.setHabilitadoTcc((java.lang.Boolean) false);
        aluno43.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno51 = new com.unifacisa.tcc.domain.Aluno();
        aluno51.setPrimeiroNome("");
        java.lang.Long long54 = aluno51.getMatricula();
        java.lang.Long long55 = aluno51.getMatricula();
        aluno51.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        aluno58.setPrimeiroNome("");
        java.lang.Long long61 = aluno58.getMatricula();
        java.lang.Long long62 = aluno58.getMatricula();
        aluno58.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno65 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray66 = new com.unifacisa.tcc.domain.Aluno[] { aluno43, aluno51, aluno58, aluno65 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet67 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet67, alunoArray66);
        com.unifacisa.tcc.domain.Professor professor69 = professor40.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet67);
        com.unifacisa.tcc.domain.Professor professor70 = professor34.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet67);
        com.unifacisa.tcc.domain.Professor professor71 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet67);
        professor2.setMatricula((java.lang.Long) 10L);
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertNull(long23);
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertNotNull(alunoArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(professor40);
        org.junit.Assert.assertNull(long46);
        org.junit.Assert.assertNull(long54);
        org.junit.Assert.assertNull(long55);
        org.junit.Assert.assertNull(long61);
        org.junit.Assert.assertNull(long62);
        org.junit.Assert.assertNotNull(alunoArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(professor69);
        org.junit.Assert.assertNotNull(professor70);
        org.junit.Assert.assertNotNull(professor71);
    }

    @Test
    public void test2215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2215");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper9 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user11 = userMapper9.userFromId((java.lang.Long) 100L);
        user11.setResetKey("hi!");
        user11.setFirstName("error.validation");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper16 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user18 = userMapper16.userFromId((java.lang.Long) 100L);
        user18.setLangKey("");
        java.time.Instant instant21 = user18.getResetDate();
        java.time.Instant instant22 = user18.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        aluno23.setPrimeiroNome("");
        java.lang.String str26 = aluno23.getPrimeiroNome();
        java.lang.Long long27 = aluno23.getMatricula();
        boolean boolean28 = user18.equals((java.lang.Object) aluno23);
        user18.setFirstName("");
        com.unifacisa.tcc.domain.User user31 = new com.unifacisa.tcc.domain.User();
        user31.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user31.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper36 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user38 = userMapper36.userFromId((java.lang.Long) 100L);
        user38.setLangKey("");
        java.time.Instant instant41 = user38.getResetDate();
        java.time.Instant instant42 = user38.getCreatedDate();
        user31.setResetDate(instant42);
        user18.setCreatedDate(instant42);
        user11.setResetDate(instant42);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper47 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user49 = userMapper47.userFromId((java.lang.Long) 100L);
        user49.setLangKey("");
        java.time.Instant instant52 = user49.getResetDate();
        java.time.Instant instant53 = user49.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno54 = new com.unifacisa.tcc.domain.Aluno();
        aluno54.setPrimeiroNome("");
        java.lang.String str57 = aluno54.getPrimeiroNome();
        java.lang.Long long58 = aluno54.getMatricula();
        boolean boolean59 = user49.equals((java.lang.Object) aluno54);
        user49.setFirstName("");
        com.unifacisa.tcc.domain.User user62 = new com.unifacisa.tcc.domain.User();
        user62.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user62.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper67 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user69 = userMapper67.userFromId((java.lang.Long) 100L);
        user69.setLangKey("");
        java.time.Instant instant72 = user69.getResetDate();
        java.time.Instant instant73 = user69.getCreatedDate();
        user62.setResetDate(instant73);
        user49.setCreatedDate(instant73);
        java.time.Instant instant85 = null;
        java.time.Instant instant87 = null;
        java.lang.String[] strArray90 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet91 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet91, strArray90);
        com.unifacisa.tcc.service.dto.UserDTO userDTO93 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant85, "hi!", instant87, (java.util.Set<java.lang.String>) strSet91);
        com.unifacisa.tcc.service.dto.UserDTO userDTO94 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) (-1L), "", "error.concurrencyFailure", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", instant42, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}", instant73, (java.util.Set<java.lang.String>) strSet91);
        boolean boolean95 = userDTO94.isActivated();
        java.time.Instant instant96 = userDTO94.getLastModifiedDate();
        org.junit.Assert.assertNotNull(user11);
        org.junit.Assert.assertNotNull(user18);
        org.junit.Assert.assertNull(instant21);
        org.junit.Assert.assertNotNull(instant22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(long27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(user38);
        org.junit.Assert.assertNull(instant41);
        org.junit.Assert.assertNotNull(instant42);
        org.junit.Assert.assertNotNull(user49);
        org.junit.Assert.assertNull(instant52);
        org.junit.Assert.assertNotNull(instant53);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNull(long58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(user69);
        org.junit.Assert.assertNull(instant72);
        org.junit.Assert.assertNotNull(instant73);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(instant96);
    }

    @Test
    public void test2216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2216");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!", "", "LoginVM{username='null', rememberMe=false}" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM20 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "LoginVM{username='null', rememberMe=false}", "LoginVM{username='null', rememberMe=false}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.concurrencyFailure", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", false, "LoginVM{username='null', rememberMe=false}", "hi!", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", instant10, "error.concurrencyFailure", instant12, (java.util.Set<java.lang.String>) strSet18);
        managedUserVM20.setLogin("");
        java.lang.String str23 = managedUserVM20.getLangKey();
        java.lang.String str24 = managedUserVM20.getLastName();
        boolean boolean25 = managedUserVM20.isActivated();
        java.lang.String str26 = managedUserVM20.getPassword();
        java.lang.String str27 = managedUserVM20.getFirstName();
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "error.concurrencyFailure" + "'", str24, "error.concurrencyFailure");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str26, "LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str27, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test2217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2217");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        user2.setActivated(true);
        com.unifacisa.tcc.domain.User user8 = new com.unifacisa.tcc.domain.User();
        user8.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM11 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet12 = managedUserVM11.getAuthorities();
        boolean boolean13 = user8.equals((java.lang.Object) strSet12);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper14 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray15 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList16 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList16, userArray15);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList18 = userMapper14.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList16);
        java.time.Instant instant29 = null;
        java.time.Instant instant31 = null;
        java.time.Instant instant41 = null;
        java.time.Instant instant43 = null;
        java.lang.String[] strArray46 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet47 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet47, strArray46);
        com.unifacisa.tcc.service.dto.UserDTO userDTO49 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant41, "hi!", instant43, (java.util.Set<java.lang.String>) strSet47);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM50 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant29, "", instant31, (java.util.Set<java.lang.String>) strSet47);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet51 = userMapper14.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet47);
        user8.setAuthorities(authoritySet51);
        java.lang.String str53 = user8.getFirstName();
        user8.setId((java.lang.Long) 10L);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet56 = user8.getAuthorities();
        user2.setAuthorities(authoritySet56);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(userArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(userDTOList18);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(authoritySet51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(authoritySet56);
    }

    @Test
    public void test2218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2218");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.time.Instant instant20 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant32 = null;
        java.time.Instant instant34 = null;
        java.lang.String[] strArray37 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet38 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet38, strArray37);
        com.unifacisa.tcc.service.dto.UserDTO userDTO40 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant32, "hi!", instant34, (java.util.Set<java.lang.String>) strSet38);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM41 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant20, "", instant22, (java.util.Set<java.lang.String>) strSet38);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet42 = userMapper5.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet38);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper43 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray44 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList45 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList45, userArray44);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList47 = userMapper43.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList45);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList48 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList45);
        java.util.List<com.unifacisa.tcc.domain.User> userList49 = userMapper0.userDTOsToUsers(userDTOList48);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper50 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray51 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList52 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList52, userArray51);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList54 = userMapper50.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList52);
        java.time.Instant instant65 = null;
        java.time.Instant instant67 = null;
        java.time.Instant instant77 = null;
        java.time.Instant instant79 = null;
        java.lang.String[] strArray82 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet83 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet83, strArray82);
        com.unifacisa.tcc.service.dto.UserDTO userDTO85 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant77, "hi!", instant79, (java.util.Set<java.lang.String>) strSet83);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM86 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant65, "", instant67, (java.util.Set<java.lang.String>) strSet83);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet87 = userMapper50.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet83);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper88 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray89 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList90 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList90, userArray89);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList92 = userMapper88.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList90);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList93 = userMapper50.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList90);
        java.util.List<com.unifacisa.tcc.domain.User> userList94 = userMapper0.userDTOsToUsers(userDTOList93);
        com.unifacisa.tcc.domain.User user96 = userMapper0.userFromId((java.lang.Long) 1L);
        user96.setPassword("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(authoritySet42);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(userDTOList47);
        org.junit.Assert.assertNotNull(userDTOList48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(userDTOList54);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(authoritySet87);
        org.junit.Assert.assertNotNull(userArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(userDTOList92);
        org.junit.Assert.assertNotNull(userDTOList93);
        org.junit.Assert.assertNotNull(userList94);
        org.junit.Assert.assertNotNull(user96);
    }

    @Test
    public void test2219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2219");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.toString();
        user0.setCreatedBy("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet4 = user0.getAuthorities();
        java.lang.String str5 = user0.getEmail();
        java.lang.String str6 = user0.getFirstName();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet7 = null;
        user0.setAuthorities(authoritySet7);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str1, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(authoritySet4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test2220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2220");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor5 = null;
        aluno4.setProfessor(professor5);
        aluno4.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor11 = null;
        aluno10.setProfessor(professor11);
        java.lang.Long long13 = aluno10.getMatricula();
        java.lang.String str14 = aluno10.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean17 = aluno15.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor19 = null;
        aluno18.setProfessor(professor19);
        aluno18.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean25 = aluno23.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        aluno26.setPrimeiroNome("");
        java.lang.Long long29 = aluno26.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        aluno30.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno9, aluno10, aluno15, aluno18, aluno23, aluno26, aluno30 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Professor professor37 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Professor professor39 = professor37.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor41 = professor37.diponibilidade((java.lang.Boolean) true);
        java.lang.String str42 = professor41.getPrimeiroNome();
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(professor41);
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test2221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2221");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        keyAndPasswordVM0.setNewPassword("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        keyAndPasswordVM0.setKey("");
        keyAndPasswordVM0.setNewPassword("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        java.lang.String str9 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str10 = keyAndPasswordVM0.getKey();
        java.lang.String str11 = keyAndPasswordVM0.getNewPassword();
        keyAndPasswordVM0.setNewPassword("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.lang.String str14 = keyAndPasswordVM0.getKey();
        keyAndPasswordVM0.setNewPassword("LoginVM{username='', rememberMe=false}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}" + "'", str9, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}" + "'", str11, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test2222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2222");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList1 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM2 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM2.setName("LoginVM{username='null', rememberMe=false}");
        java.lang.String str5 = loggerVM2.getLevel();
        logsResource0.changeLevel(loggerVM2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper7 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user9 = userMapper7.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.User user10 = new com.unifacisa.tcc.domain.User();
        user10.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user10.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper15 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user17 = userMapper15.userFromId((java.lang.Long) 100L);
        user17.setLangKey("");
        java.time.Instant instant20 = user17.getResetDate();
        java.time.Instant instant21 = user17.getCreatedDate();
        user10.setResetDate(instant21);
        boolean boolean23 = user10.getActivated();
        user10.setLangKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant26 = user10.getCreatedDate();
        user9.setCreatedDate(instant26);
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM28 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM28.setName("LoginVM{username='null', rememberMe=false}");
        loggerVM28.setName("LoggerVM{name='null', level='null'}");
        boolean boolean33 = user9.equals((java.lang.Object) loggerVM28);
        java.lang.String str34 = loggerVM28.toString();
        loggerVM28.setLevel("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}");
        logsResource0.changeLevel(loggerVM28);
        java.lang.String str38 = loggerVM28.getLevel();
        org.junit.Assert.assertNotNull(loggerVMList1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(user9);
        org.junit.Assert.assertNotNull(user17);
        org.junit.Assert.assertNull(instant20);
        org.junit.Assert.assertNotNull(instant21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(instant26);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "LoggerVM{name='LoggerVM{name='null', level='null'}', level='null'}" + "'", str34, "LoggerVM{name='LoggerVM{name='null', level='null'}', level='null'}");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}" + "'", str38, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}");
    }

    @Test
    public void test2223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2223");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        java.time.Instant instant15 = null;
        java.time.Instant instant17 = null;
        java.time.Instant instant27 = null;
        java.time.Instant instant29 = null;
        java.lang.String[] strArray32 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet33 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet33, strArray32);
        com.unifacisa.tcc.service.dto.UserDTO userDTO35 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant27, "hi!", instant29, (java.util.Set<java.lang.String>) strSet33);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM36 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant15, "", instant17, (java.util.Set<java.lang.String>) strSet33);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet37 = userMapper0.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet33);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper38 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray39 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList40 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList40, userArray39);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList42 = userMapper38.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList40);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList43 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList40);
        com.unifacisa.tcc.domain.User user45 = userMapper0.userFromId((java.lang.Long) 100L);
        java.lang.String str46 = user45.getLangKey();
        java.lang.String str47 = user45.getCreatedBy();
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(authoritySet37);
        org.junit.Assert.assertNotNull(userArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(userDTOList42);
        org.junit.Assert.assertNotNull(userDTOList43);
        org.junit.Assert.assertNotNull(user45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test2224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2224");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        java.lang.String str8 = socialUserConnection0.getImageURL();
        socialUserConnection0.setProviderUserId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "error.validation" + "'", str8, "error.validation");
    }

    @Test
    public void test2225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2225");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setImageURL("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("");
        socialUserConnection0.setProfileURL("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        socialUserConnection0.setAccessToken("Authority{name='null'}");
        socialUserConnection0.setId((java.lang.Long) 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test2226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2226");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        user11.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM14 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet15 = managedUserVM14.getAuthorities();
        boolean boolean16 = user11.equals((java.lang.Object) strSet15);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper17 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray18 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList19 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList19, userArray18);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList21 = userMapper17.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList19);
        java.time.Instant instant32 = null;
        java.time.Instant instant34 = null;
        java.time.Instant instant44 = null;
        java.time.Instant instant46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet50 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet50, strArray49);
        com.unifacisa.tcc.service.dto.UserDTO userDTO52 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant44, "hi!", instant46, (java.util.Set<java.lang.String>) strSet50);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM53 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant32, "", instant34, (java.util.Set<java.lang.String>) strSet50);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet54 = userMapper17.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet50);
        user11.setAuthorities(authoritySet54);
        java.lang.String str56 = user11.getFirstName();
        user11.setId((java.lang.Long) 10L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO59 = userMapper0.userToUserDTO(user11);
        com.unifacisa.tcc.domain.User user61 = userMapper0.userFromId((java.lang.Long) 0L);
        user61.setActivationKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.time.Instant instant64 = user61.getLastModifiedDate();
        user61.setImageUrl("");
        user61.setId((java.lang.Long) 100L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO69 = new com.unifacisa.tcc.service.dto.UserDTO(user61);
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(userArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(userDTOList21);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(authoritySet54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(userDTO59);
        org.junit.Assert.assertNotNull(user61);
        org.junit.Assert.assertNotNull(instant64);
    }

    @Test
    public void test2227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2227");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean2 = aluno0.equals((java.lang.Object) 100.0f);
        aluno0.setId((java.lang.Long) 0L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test2228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2228");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.toString();
        java.lang.String str2 = user0.getLastModifiedBy();
        user0.setActivationKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str1, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test2229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2229");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor2 = null;
        aluno1.setProfessor(professor2);
        aluno1.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor8 = null;
        aluno7.setProfessor(professor8);
        java.lang.Long long10 = aluno7.getMatricula();
        java.lang.String str11 = aluno7.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean14 = aluno12.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor16 = null;
        aluno15.setProfessor(professor16);
        aluno15.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean22 = aluno20.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        aluno23.setPrimeiroNome("");
        java.lang.Long long26 = aluno23.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        aluno27.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno6, aluno7, aluno12, aluno15, aluno20, aluno23, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        java.lang.Long long34 = professor0.getMatricula();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa36 = professor0.numeroContato((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa38 = professor0.email("LoginVM{username='LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}', rememberMe=true}");
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(long26);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(long34);
        org.junit.Assert.assertNotNull(pessoa36);
        org.junit.Assert.assertNotNull(pessoa38);
    }

    @Test
    public void test2230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2230");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 10L);
        socialUserConnection0.setDisplayName("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str7 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setDisplayName("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}");
        socialUserConnection0.setAccessToken("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.lang.String str12 = socialUserConnection0.getImageURL();
        java.lang.Long long13 = socialUserConnection0.getExpireTime();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(long13);
    }

    @Test
    public void test2231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2231");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        user11.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM14 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet15 = managedUserVM14.getAuthorities();
        boolean boolean16 = user11.equals((java.lang.Object) strSet15);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper17 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray18 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList19 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList19, userArray18);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList21 = userMapper17.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList19);
        java.time.Instant instant32 = null;
        java.time.Instant instant34 = null;
        java.time.Instant instant44 = null;
        java.time.Instant instant46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet50 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet50, strArray49);
        com.unifacisa.tcc.service.dto.UserDTO userDTO52 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant44, "hi!", instant46, (java.util.Set<java.lang.String>) strSet50);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM53 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant32, "", instant34, (java.util.Set<java.lang.String>) strSet50);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet54 = userMapper17.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet50);
        user11.setAuthorities(authoritySet54);
        java.lang.String str56 = user11.getFirstName();
        user11.setId((java.lang.Long) 10L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO59 = userMapper0.userToUserDTO(user11);
        com.unifacisa.tcc.domain.User user61 = userMapper0.userFromId((java.lang.Long) 0L);
        java.time.Instant instant62 = user61.getResetDate();
        java.lang.String str63 = user61.getLogin();
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(userArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(userDTOList21);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(authoritySet54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(userDTO59);
        org.junit.Assert.assertNotNull(user61);
        org.junit.Assert.assertNull(instant62);
        org.junit.Assert.assertNull(str63);
    }

    @Test
    public void test2232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2232");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant5 = user0.getLastModifiedDate();
        user0.setResetKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.time.Instant instant8 = user0.getResetDate();
        user0.setLastModifiedBy("Authority{name='error.concurrencyFailure'}");
        java.time.Instant instant11 = user0.getResetDate();
        user0.setLastName("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.domain.Professor professor14 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor16 = professor14.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa18 = professor14.email("");
        com.unifacisa.tcc.domain.Professor professor20 = professor14.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor21 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor23 = professor21.diponibilidade((java.lang.Boolean) true);
        professor23.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        aluno26.setPrimeiroNome("");
        java.lang.Long long29 = aluno26.getMatricula();
        aluno26.setHabilitadoTcc((java.lang.Boolean) false);
        aluno26.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        aluno34.setPrimeiroNome("");
        java.lang.Long long37 = aluno34.getMatricula();
        java.lang.Long long38 = aluno34.getMatricula();
        aluno34.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        aluno41.setPrimeiroNome("");
        java.lang.Long long44 = aluno41.getMatricula();
        java.lang.Long long45 = aluno41.getMatricula();
        aluno41.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno48 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray49 = new com.unifacisa.tcc.domain.Aluno[] { aluno26, aluno34, aluno41, aluno48 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet50 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet50, alunoArray49);
        com.unifacisa.tcc.domain.Professor professor52 = professor23.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet50);
        com.unifacisa.tcc.domain.Professor professor53 = professor20.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet50);
        boolean boolean54 = user0.equals((java.lang.Object) professor53);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa56 = professor53.email("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Long long57 = professor53.getMatricula();
        org.junit.Assert.assertNotNull(instant5);
        org.junit.Assert.assertNull(instant8);
        org.junit.Assert.assertNull(instant11);
        org.junit.Assert.assertNotNull(professor16);
        org.junit.Assert.assertNotNull(pessoa18);
        org.junit.Assert.assertNotNull(professor20);
        org.junit.Assert.assertNotNull(professor23);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNull(long37);
        org.junit.Assert.assertNull(long38);
        org.junit.Assert.assertNull(long44);
        org.junit.Assert.assertNull(long45);
        org.junit.Assert.assertNotNull(alunoArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(professor52);
        org.junit.Assert.assertNotNull(professor53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(pessoa56);
        org.junit.Assert.assertNull(long57);
    }

    @Test
    public void test2233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2233");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("Authority{name=''}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            customSocialConnectionRepository3.removeConnections("LoggerVM{name='Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', level='null'}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2234");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM0.setName("LoginVM{username='null', rememberMe=false}");
        loggerVM0.setName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        loggerVM0.setLevel("Aluno{id=null, primeiroNome='null', segundoNome='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str7 = loggerVM0.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LoggerVM{name='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}', level='Aluno{id=null, primeiroNome='null', segundoNome='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}'}" + "'", str7, "LoggerVM{name='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}', level='Aluno{id=null, primeiroNome='null', segundoNome='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}'}");
    }

    @Test
    public void test2235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2235");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM0.setName("LoginVM{username='null', rememberMe=false}");
        loggerVM0.setName("LoggerVM{name='null', level='null'}");
        loggerVM0.setLevel("ManagedUserVM{} UserDTO{login='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str7 = loggerVM0.getLevel();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ManagedUserVM{} UserDTO{login='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str7, "ManagedUserVM{} UserDTO{login='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test2236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2236");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.email("");
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        aluno5.setPrimeiroNome("");
        aluno5.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor10 = professor0.addAluno(aluno5);
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        user11.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user11.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper16 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user18 = userMapper16.userFromId((java.lang.Long) 100L);
        user18.setLangKey("");
        java.time.Instant instant21 = user18.getResetDate();
        java.time.Instant instant22 = user18.getCreatedDate();
        user11.setResetDate(instant22);
        java.time.Instant instant24 = null;
        user11.setCreatedDate(instant24);
        java.lang.String str26 = user11.getPassword();
        boolean boolean27 = user11.getActivated();
        boolean boolean28 = aluno5.equals((java.lang.Object) user11);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa30 = aluno5.numeroContato((java.lang.Long) 100L);
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNotNull(user18);
        org.junit.Assert.assertNull(instant21);
        org.junit.Assert.assertNotNull(instant22);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(pessoa30);
    }

    @Test
    public void test2237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2237");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 10L);
        java.lang.String str5 = socialUserConnection0.getDisplayName();
        java.lang.String str6 = socialUserConnection0.getAccessToken();
        socialUserConnection0.setProviderId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        socialUserConnection0.setRefreshToken("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:08.859Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.859Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        socialUserConnection0.setRank((java.lang.Long) 0L);
        socialUserConnection0.setRank((java.lang.Long) 10L);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test2238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2238");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("error.concurrencyFailure");
        java.lang.Long long12 = socialUserConnection0.getRank();
        socialUserConnection0.setUserId("");
        com.unifacisa.tcc.config.LoggingAspectConfiguration loggingAspectConfiguration15 = new com.unifacisa.tcc.config.LoggingAspectConfiguration();
        boolean boolean16 = socialUserConnection0.equals((java.lang.Object) loggingAspectConfiguration15);
        org.springframework.core.env.Environment environment17 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect18 = loggingAspectConfiguration15.loggingAspect(environment17);
        org.springframework.core.env.Environment environment19 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect20 = loggingAspectConfiguration15.loggingAspect(environment19);
        loggingAspect20.applicationPackagePointcut();
        loggingAspect20.applicationPackagePointcut();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(loggingAspect18);
        org.junit.Assert.assertNotNull(loggingAspect20);
    }

    @Test
    public void test2239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2239");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("error.concurrencyFailure");
        java.lang.Long long12 = socialUserConnection0.getRank();
        socialUserConnection0.setUserId("");
        com.unifacisa.tcc.config.LoggingAspectConfiguration loggingAspectConfiguration15 = new com.unifacisa.tcc.config.LoggingAspectConfiguration();
        boolean boolean16 = socialUserConnection0.equals((java.lang.Object) loggingAspectConfiguration15);
        org.springframework.core.env.Environment environment17 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect18 = loggingAspectConfiguration15.loggingAspect(environment17);
        loggingAspect18.springBeanPointcut();
        org.aspectj.lang.JoinPoint joinPoint20 = null;
        java.lang.Throwable throwable21 = null;
        // The following exception was thrown during execution in test generation
        try {
            loggingAspect18.logAfterThrowing(joinPoint20, throwable21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(loggingAspect18);
    }

    @Test
    public void test2240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2240");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setDisplayName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setRefreshToken("");
        socialUserConnection0.setId((java.lang.Long) 100L);
        socialUserConnection0.setDisplayName("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=2021-03-26T03:34:08.443Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.443Z, authorities=[]}");
        socialUserConnection0.setProviderUserId("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}");
        socialUserConnection0.setId((java.lang.Long) 100L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test2241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2241");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.toString();
        professor0.setDiponibilidade((java.lang.Boolean) false);
        java.lang.Long long4 = professor0.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor6 = null;
        aluno5.setProfessor(professor6);
        aluno5.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa11 = aluno5.primeiroNome("hi!");
        java.lang.Long long12 = aluno5.getId();
        com.unifacisa.tcc.domain.Aluno aluno14 = aluno5.habilitadoTcc((java.lang.Boolean) false);
        aluno5.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor17 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str18 = professor17.toString();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor20 = null;
        aluno19.setProfessor(professor20);
        java.lang.Long long22 = aluno19.getMatricula();
        java.lang.String str23 = aluno19.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean26 = aluno24.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor27 = aluno24.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean30 = aluno28.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno31 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor33 = null;
        aluno32.setProfessor(professor33);
        java.lang.Long long35 = aluno32.getMatricula();
        java.lang.String str36 = aluno32.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno37 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean39 = aluno37.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor40 = aluno37.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor42 = null;
        aluno41.setProfessor(professor42);
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        aluno44.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor48 = null;
        aluno47.setProfessor(professor48);
        aluno47.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor53 = null;
        aluno52.setProfessor(professor53);
        java.lang.Long long55 = aluno52.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno56 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean59 = aluno57.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno60 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor61 = null;
        aluno60.setProfessor(professor61);
        com.unifacisa.tcc.domain.Aluno[] alunoArray63 = new com.unifacisa.tcc.domain.Aluno[] { aluno19, aluno24, aluno28, aluno31, aluno32, aluno37, aluno41, aluno44, aluno47, aluno52, aluno56, aluno57, aluno60 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet64 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet64, alunoArray63);
        com.unifacisa.tcc.domain.Professor professor66 = professor17.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet64);
        com.unifacisa.tcc.domain.Aluno aluno67 = aluno5.professor(professor17);
        com.unifacisa.tcc.domain.Aluno aluno69 = aluno67.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor70 = professor0.removeAluno(aluno67);
        java.lang.Boolean boolean71 = professor0.isDiponibilidade();
        com.unifacisa.tcc.domain.Aluno aluno72 = new com.unifacisa.tcc.domain.Aluno();
        aluno72.setPrimeiroNome("");
        java.lang.Long long75 = aluno72.getMatricula();
        java.lang.Long long76 = aluno72.getMatricula();
        aluno72.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa80 = aluno72.email("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        aluno72.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor83 = professor0.addAluno(aluno72);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa85 = aluno72.email("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='false'}', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str1, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(pessoa11);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNotNull(aluno14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str18, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(professor27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(long35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(professor40);
        org.junit.Assert.assertNull(long55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(alunoArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(professor66);
        org.junit.Assert.assertNotNull(aluno67);
        org.junit.Assert.assertNotNull(aluno69);
        org.junit.Assert.assertNotNull(professor70);
        org.junit.Assert.assertEquals("'" + boolean71 + "' != '" + false + "'", boolean71, false);
        org.junit.Assert.assertNull(long75);
        org.junit.Assert.assertNull(long76);
        org.junit.Assert.assertNotNull(pessoa80);
        org.junit.Assert.assertNotNull(professor83);
        org.junit.Assert.assertNotNull(pessoa85);
    }

    @Test
    public void test2242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2242");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='LoggerVM{name='null', level='null'}', secret='null', refreshToken='null', expireTime=null}", socialUserConnectionRepository1, connectionFactoryLocator2);
        org.springframework.social.connect.ConnectionKey connectionKey4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.social.connect.Connection<?> wildcardConnection5 = customSocialConnectionRepository3.getConnection(connectionKey4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2243");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor5 = null;
        aluno4.setProfessor(professor5);
        aluno4.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor11 = null;
        aluno10.setProfessor(professor11);
        java.lang.Long long13 = aluno10.getMatricula();
        java.lang.String str14 = aluno10.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean17 = aluno15.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor19 = null;
        aluno18.setProfessor(professor19);
        aluno18.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean25 = aluno23.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        aluno26.setPrimeiroNome("");
        java.lang.Long long29 = aluno26.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        aluno30.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno9, aluno10, aluno15, aluno18, aluno23, aluno26, aluno30 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Professor professor37 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        java.lang.Long long38 = professor37.getMatricula();
        java.lang.Long long39 = professor37.getNumeroContato();
        java.lang.String str40 = professor37.toString();
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNull(long38);
        org.junit.Assert.assertNull(long39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}" + "'", str40, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
    }

    @Test
    public void test2244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2244");
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository0 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource1 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository0);
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository2 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource3 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository2);
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor6 = professor4.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = professor4.email("");
        com.unifacisa.tcc.domain.Professor professor10 = professor4.diponibilidade((java.lang.Boolean) true);
        professor10.setId((java.lang.Long) (-1L));
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity13 = professorResource3.createProfessor(professor10);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity14 = professorResource1.createProfessor(professor10);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor16 = null;
        aluno15.setProfessor(professor16);
        aluno15.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa21 = aluno15.primeiroNome("hi!");
        java.lang.Long long22 = aluno15.getId();
        com.unifacisa.tcc.domain.Aluno aluno24 = aluno15.habilitadoTcc((java.lang.Boolean) false);
        java.lang.Long long25 = aluno24.getMatricula();
        com.unifacisa.tcc.domain.Professor professor26 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor28 = professor26.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa30 = professor26.email("");
        com.unifacisa.tcc.domain.Professor professor32 = professor26.diponibilidade((java.lang.Boolean) true);
        professor32.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno35 = aluno24.professor(professor32);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity36 = professorResource1.createProfessor(professor32);
        com.unifacisa.tcc.domain.Professor professor37 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor39 = professor37.diponibilidade((java.lang.Boolean) true);
        professor39.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.Long long42 = professor39.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa44 = professor39.email("error.validation");
        professor39.setId((java.lang.Long) 0L);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity47 = professorResource1.createProfessor(professor39);
        com.unifacisa.tcc.domain.Professor professor48 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor50 = professor48.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa52 = professor48.email("");
        com.unifacisa.tcc.domain.Aluno aluno53 = new com.unifacisa.tcc.domain.Aluno();
        aluno53.setPrimeiroNome("");
        aluno53.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor58 = professor48.addAluno(aluno53);
        com.unifacisa.tcc.domain.Aluno aluno59 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.Long long60 = aluno59.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa62 = aluno59.matricula((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa64 = aluno59.numeroContato((java.lang.Long) 1L);
        aluno59.setSegundoNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        java.lang.Boolean boolean67 = aluno59.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor68 = professor48.removeAluno(aluno59);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet69 = professor48.getAlunos();
        java.lang.String str70 = professor48.getPrimeiroNome();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity71 = professorResource1.createProfessor(professor48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor6);
        org.junit.Assert.assertNotNull(pessoa8);
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNotNull(professorResponseEntity13);
        org.junit.Assert.assertNotNull(professorResponseEntity14);
        org.junit.Assert.assertNotNull(pessoa21);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNotNull(aluno24);
        org.junit.Assert.assertNull(long25);
        org.junit.Assert.assertNotNull(professor28);
        org.junit.Assert.assertNotNull(pessoa30);
        org.junit.Assert.assertNotNull(professor32);
        org.junit.Assert.assertNotNull(aluno35);
        org.junit.Assert.assertNotNull(professorResponseEntity36);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNull(long42);
        org.junit.Assert.assertNotNull(pessoa44);
        org.junit.Assert.assertNotNull(professorResponseEntity47);
        org.junit.Assert.assertNotNull(professor50);
        org.junit.Assert.assertNotNull(pessoa52);
        org.junit.Assert.assertNotNull(professor58);
        org.junit.Assert.assertNull(long60);
        org.junit.Assert.assertNotNull(pessoa62);
        org.junit.Assert.assertNotNull(pessoa64);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertNotNull(professor68);
        org.junit.Assert.assertNotNull(alunoSet69);
        org.junit.Assert.assertNull(str70);
    }

    @Test
    public void test2245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2245");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        java.lang.String str5 = user2.getResetKey();
        com.unifacisa.tcc.domain.Professor professor6 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor8 = professor6.diponibilidade((java.lang.Boolean) true);
        professor8.setDiponibilidade((java.lang.Boolean) false);
        java.lang.String str11 = professor8.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor12 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor14 = professor12.diponibilidade((java.lang.Boolean) true);
        professor14.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        aluno17.setPrimeiroNome("");
        java.lang.Long long20 = aluno17.getMatricula();
        aluno17.setHabilitadoTcc((java.lang.Boolean) false);
        aluno17.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        aluno25.setPrimeiroNome("");
        java.lang.Long long28 = aluno25.getMatricula();
        java.lang.Long long29 = aluno25.getMatricula();
        aluno25.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        aluno32.setPrimeiroNome("");
        java.lang.Long long35 = aluno32.getMatricula();
        java.lang.Long long36 = aluno32.getMatricula();
        aluno32.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray40 = new com.unifacisa.tcc.domain.Aluno[] { aluno17, aluno25, aluno32, aluno39 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet41 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet41, alunoArray40);
        com.unifacisa.tcc.domain.Professor professor43 = professor14.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet41);
        com.unifacisa.tcc.domain.Professor professor44 = professor8.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet41);
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor46 = null;
        aluno45.setProfessor(professor46);
        aluno45.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor50 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor52 = professor50.diponibilidade((java.lang.Boolean) true);
        professor52.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        aluno55.setPrimeiroNome("");
        java.lang.Long long58 = aluno55.getMatricula();
        aluno55.setHabilitadoTcc((java.lang.Boolean) false);
        aluno55.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        aluno63.setPrimeiroNome("");
        java.lang.Long long66 = aluno63.getMatricula();
        java.lang.Long long67 = aluno63.getMatricula();
        aluno63.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno70 = new com.unifacisa.tcc.domain.Aluno();
        aluno70.setPrimeiroNome("");
        java.lang.Long long73 = aluno70.getMatricula();
        java.lang.Long long74 = aluno70.getMatricula();
        aluno70.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno77 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray78 = new com.unifacisa.tcc.domain.Aluno[] { aluno55, aluno63, aluno70, aluno77 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet79 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet79, alunoArray78);
        com.unifacisa.tcc.domain.Professor professor81 = professor52.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet79);
        com.unifacisa.tcc.domain.Aluno aluno82 = aluno45.professor(professor81);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa84 = aluno82.segundoNome("");
        com.unifacisa.tcc.domain.Aluno aluno86 = aluno82.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor87 = professor44.removeAluno(aluno82);
        com.unifacisa.tcc.domain.Professor professor89 = professor87.diponibilidade((java.lang.Boolean) true);
        boolean boolean90 = user2.equals((java.lang.Object) professor87);
        user2.setPassword("ManagedUserVM{} UserDTO{login='User{login='null', firstName='error.validation', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        user2.setActivationKey("LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}");
        user2.setLastName("LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(professor8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(professor14);
        org.junit.Assert.assertNull(long20);
        org.junit.Assert.assertNull(long28);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNull(long35);
        org.junit.Assert.assertNull(long36);
        org.junit.Assert.assertNotNull(alunoArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(professor43);
        org.junit.Assert.assertNotNull(professor44);
        org.junit.Assert.assertNotNull(professor52);
        org.junit.Assert.assertNull(long58);
        org.junit.Assert.assertNull(long66);
        org.junit.Assert.assertNull(long67);
        org.junit.Assert.assertNull(long73);
        org.junit.Assert.assertNull(long74);
        org.junit.Assert.assertNotNull(alunoArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(professor81);
        org.junit.Assert.assertNotNull(aluno82);
        org.junit.Assert.assertNotNull(pessoa84);
        org.junit.Assert.assertNotNull(aluno86);
        org.junit.Assert.assertNotNull(professor87);
        org.junit.Assert.assertNotNull(professor89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test2246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2246");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("LoggerVM{name='null', level='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}", (java.lang.Long) 100L, "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}", "LoggerVM{name='null', level='null'}", "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}", "Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", (java.lang.Long) 10L);
        socialUserConnection11.setSecret("LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=false}");
        java.lang.String str14 = socialUserConnection11.getProviderUserId();
        socialUserConnection11.setDisplayName("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='Authority{name='null'}', accessToken='null', secret='null', refreshToken='LoginVM{username='null', rememberMe=null}', expireTime=null}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}" + "'", str14, "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
    }

    @Test
    public void test2247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2247");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor5 = null;
        aluno4.setProfessor(professor5);
        aluno4.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor11 = null;
        aluno10.setProfessor(professor11);
        java.lang.Long long13 = aluno10.getMatricula();
        java.lang.String str14 = aluno10.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean17 = aluno15.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor19 = null;
        aluno18.setProfessor(professor19);
        aluno18.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean25 = aluno23.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        aluno26.setPrimeiroNome("");
        java.lang.Long long29 = aluno26.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        aluno30.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno9, aluno10, aluno15, aluno18, aluno23, aluno26, aluno30 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Professor professor37 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Professor professor39 = professor37.diponibilidade((java.lang.Boolean) true);
        java.lang.String str40 = professor39.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor42 = professor39.diponibilidade((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(professor42);
    }

    @Test
    public void test2248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2248");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM1 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM1.setName("LoginVM{username='null', rememberMe=false}");
        logsResource0.changeLevel(loggerVM1);
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList5 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM6 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM6.setName("LoginVM{username='null', rememberMe=false}");
        loggerVM6.setName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        logsResource0.changeLevel(loggerVM6);
        com.unifacisa.tcc.web.rest.LogsResource logsResource12 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM13 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM13.setName("LoginVM{username='null', rememberMe=false}");
        logsResource12.changeLevel(loggerVM13);
        loggerVM13.setName("Authority{name='error.concurrencyFailure'}");
        logsResource0.changeLevel(loggerVM13);
        com.unifacisa.tcc.web.rest.LogsResource logsResource20 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM21 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM21.setName("LoginVM{username='null', rememberMe=false}");
        logsResource20.changeLevel(loggerVM21);
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList25 = logsResource20.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM26 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM26.setName("LoginVM{username='null', rememberMe=false}");
        loggerVM26.setName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        logsResource20.changeLevel(loggerVM26);
        com.unifacisa.tcc.web.rest.LogsResource logsResource32 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM33 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM33.setName("LoginVM{username='null', rememberMe=false}");
        logsResource32.changeLevel(loggerVM33);
        loggerVM33.setName("Authority{name='error.concurrencyFailure'}");
        logsResource20.changeLevel(loggerVM33);
        logsResource0.changeLevel(loggerVM33);
        java.lang.String str41 = loggerVM33.toString();
        loggerVM33.setLevel("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='error.validation', expireTime=null}");
        java.lang.String str44 = loggerVM33.getName();
        java.lang.String str45 = loggerVM33.getLevel();
        java.lang.String str46 = loggerVM33.toString();
        org.junit.Assert.assertNotNull(loggerVMList5);
        org.junit.Assert.assertNotNull(loggerVMList25);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='null'}" + "'", str41, "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='null'}");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Authority{name='error.concurrencyFailure'}" + "'", str44, "Authority{name='error.concurrencyFailure'}");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='error.validation', expireTime=null}" + "'", str45, "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='error.validation', expireTime=null}");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='error.validation', expireTime=null}'}" + "'", str46, "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='error.validation', expireTime=null}'}");
    }

    @Test
    public void test2249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2249");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant5 = user0.getLastModifiedDate();
        user0.setResetKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.time.Instant instant8 = user0.getResetDate();
        user0.setLastModifiedBy("Authority{name='error.concurrencyFailure'}");
        user0.setActivated(false);
        java.lang.String str13 = user0.getActivationKey();
        org.junit.Assert.assertNotNull(instant5);
        org.junit.Assert.assertNull(instant8);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test2250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2250");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        org.springframework.http.HttpHeaders httpHeaders6 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createAlert("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='false'}");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.util.MultiValueMap<java.lang.String, org.springframework.social.connect.Connection<?>> strMap7 = customSocialConnectionRepository3.findConnectionsToUsers((org.springframework.util.MultiValueMap<java.lang.String, java.lang.String>) httpHeaders6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(httpHeaders6);
    }

    @Test
    public void test2251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2251");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper1 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user3 = userMapper1.userFromId((java.lang.Long) 100L);
        user3.setLangKey("");
        java.time.Instant instant6 = user3.getResetDate();
        java.time.Instant instant7 = user3.getCreatedDate();
        user0.setCreatedDate(instant7);
        boolean boolean9 = user0.getActivated();
        user0.setEmail("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
        java.lang.String str12 = user0.toString();
        org.junit.Assert.assertNotNull(user3);
        org.junit.Assert.assertNull(instant6);
        org.junit.Assert.assertNotNull(instant7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "User{login='null', firstName='null', lastName='null', email='Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str12, "User{login='null', firstName='null', lastName='null', email='Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test2252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2252");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray7 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList8 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList8, userArray7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper6.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList8);
        java.time.Instant instant21 = null;
        java.time.Instant instant23 = null;
        java.time.Instant instant33 = null;
        java.time.Instant instant35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        com.unifacisa.tcc.service.dto.UserDTO userDTO41 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant33, "hi!", instant35, (java.util.Set<java.lang.String>) strSet39);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM42 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant21, "", instant23, (java.util.Set<java.lang.String>) strSet39);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet43 = userMapper6.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet39);
        user0.setAuthorities(authoritySet43);
        com.unifacisa.tcc.service.dto.UserDTO userDTO45 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str46 = user0.getFirstName();
        user0.setResetKey("LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=null}");
        user0.setLastModifiedBy("LoginVM{username='null', rememberMe=null}");
        user0.setCreatedBy("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(userArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(authoritySet43);
        org.junit.Assert.assertNull(str46);
    }

    @Test
    public void test2253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2253");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray7 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList8 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList8, userArray7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper6.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList8);
        java.time.Instant instant21 = null;
        java.time.Instant instant23 = null;
        java.time.Instant instant33 = null;
        java.time.Instant instant35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        com.unifacisa.tcc.service.dto.UserDTO userDTO41 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant33, "hi!", instant35, (java.util.Set<java.lang.String>) strSet39);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM42 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant21, "", instant23, (java.util.Set<java.lang.String>) strSet39);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet43 = userMapper6.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet39);
        user0.setAuthorities(authoritySet43);
        boolean boolean45 = user0.getActivated();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper46 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user48 = userMapper46.userFromId((java.lang.Long) 100L);
        user48.setLangKey("");
        java.time.Instant instant51 = user48.getResetDate();
        java.time.Instant instant52 = user48.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno53 = new com.unifacisa.tcc.domain.Aluno();
        aluno53.setPrimeiroNome("");
        java.lang.String str56 = aluno53.getPrimeiroNome();
        java.lang.Long long57 = aluno53.getMatricula();
        boolean boolean58 = user48.equals((java.lang.Object) aluno53);
        user48.setFirstName("");
        user48.setActivationKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet63 = user48.getAuthorities();
        user0.setAuthorities(authoritySet63);
        java.time.Instant instant65 = user0.getLastModifiedDate();
        java.time.Instant instant66 = user0.getResetDate();
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(userArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(authoritySet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(user48);
        org.junit.Assert.assertNull(instant51);
        org.junit.Assert.assertNotNull(instant52);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNull(long57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(authoritySet63);
        org.junit.Assert.assertNotNull(instant65);
        org.junit.Assert.assertNull(instant66);
    }

    @Test
    public void test2254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2254");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM4 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant5 = managedUserVM4.getCreatedDate();
        java.lang.Long long6 = managedUserVM4.getId();
        java.lang.Long long7 = managedUserVM4.getId();
        java.lang.String str8 = managedUserVM4.toString();
        managedUserVM4.setId((java.lang.Long) (-1L));
        java.util.Set<java.lang.String> strSet11 = managedUserVM4.getAuthorities();
        java.lang.String str12 = managedUserVM4.getImageUrl();
        org.springframework.http.ResponseEntity responseEntity13 = userResource3.createUser(managedUserVM4);
        java.time.Instant instant24 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant36 = null;
        java.time.Instant instant38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet42 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet42, strArray41);
        com.unifacisa.tcc.service.dto.UserDTO userDTO44 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant36, "hi!", instant38, (java.util.Set<java.lang.String>) strSet42);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM45 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", false, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoginVM{username='null', rememberMe=false}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", instant24, "hi!", instant26, (java.util.Set<java.lang.String>) strSet42);
        org.springframework.http.ResponseEntity responseEntity46 = userResource3.createUser(managedUserVM45);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList47 = userResource3.getAuthorities();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str8, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(strSet11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(responseEntity13);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(responseEntity46);
    }

    @Test
    public void test2255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2255");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setImageURL("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setExpireTime((java.lang.Long) 100L);
        socialUserConnection0.setProviderUserId("");
        socialUserConnection0.setUserId("LoginVM{username='null', rememberMe=false}");
        java.lang.String str14 = socialUserConnection0.getProviderId();
        java.lang.String str15 = socialUserConnection0.getRefreshToken();
        socialUserConnection0.setSecret("Authority{name='null'}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str14, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test2256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2256");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        authority0.setName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        authority0.setName("error.concurrencyFailure");
        java.lang.String str5 = authority0.toString();
        authority0.setName("LoggerVM{name='Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', level='null'}");
        java.lang.String str8 = authority0.getName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Authority{name='error.concurrencyFailure'}" + "'", str5, "Authority{name='error.concurrencyFailure'}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LoggerVM{name='Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', level='null'}" + "'", str8, "LoggerVM{name='Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', level='null'}");
    }

    @Test
    public void test2257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2257");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        user11.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM14 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet15 = managedUserVM14.getAuthorities();
        boolean boolean16 = user11.equals((java.lang.Object) strSet15);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper17 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray18 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList19 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList19, userArray18);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList21 = userMapper17.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList19);
        java.time.Instant instant32 = null;
        java.time.Instant instant34 = null;
        java.time.Instant instant44 = null;
        java.time.Instant instant46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet50 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet50, strArray49);
        com.unifacisa.tcc.service.dto.UserDTO userDTO52 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant44, "hi!", instant46, (java.util.Set<java.lang.String>) strSet50);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM53 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant32, "", instant34, (java.util.Set<java.lang.String>) strSet50);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet54 = userMapper17.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet50);
        user11.setAuthorities(authoritySet54);
        java.lang.String str56 = user11.getFirstName();
        user11.setId((java.lang.Long) 10L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO59 = userMapper0.userToUserDTO(user11);
        com.unifacisa.tcc.domain.User user61 = userMapper0.userFromId((java.lang.Long) 1L);
        java.lang.String str62 = user61.getCreatedBy();
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(userArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(userDTOList21);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(authoritySet54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(userDTO59);
        org.junit.Assert.assertNotNull(user61);
        org.junit.Assert.assertNull(str62);
    }

    @Test
    public void test2258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2258");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor3 = professor0.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet4 = professor0.getAlunos();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor6 = null;
        aluno5.setProfessor(professor6);
        java.lang.Long long8 = aluno5.getMatricula();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa10 = aluno5.numeroContato((java.lang.Long) 1L);
        java.lang.Boolean boolean11 = aluno5.isHabilitadoTcc();
        java.lang.String str12 = aluno5.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor13 = professor0.removeAluno(aluno5);
        com.unifacisa.tcc.domain.Professor professor14 = aluno5.getProfessor();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str1, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor3);
        org.junit.Assert.assertNotNull(alunoSet4);
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNotNull(pessoa10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(professor13);
        org.junit.Assert.assertNull(professor14);
    }

    @Test
    public void test2259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2259");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        java.lang.String str2 = loginVM0.getPassword();
        java.lang.String str3 = loginVM0.toString();
        java.lang.String str4 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) true);
        java.lang.String str7 = loginVM0.getUsername();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str3, "LoginVM{username='null', rememberMe=null}");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test2260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2260");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper1 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user3 = userMapper1.userFromId((java.lang.Long) 100L);
        user3.setLangKey("");
        java.time.Instant instant6 = user3.getResetDate();
        java.time.Instant instant7 = user3.getCreatedDate();
        user0.setCreatedDate(instant7);
        boolean boolean9 = user0.getActivated();
        java.lang.String str10 = user0.getPassword();
        com.unifacisa.tcc.domain.Authority authority11 = new com.unifacisa.tcc.domain.Authority();
        authority11.setName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        authority11.setName("error.concurrencyFailure");
        java.lang.String str16 = authority11.toString();
        authority11.setName("Authority{name='error.concurrencyFailure'}");
        authority11.setName("");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent21 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant22 = persistentAuditEvent21.getAuditEventDate();
        java.time.Instant instant23 = null;
        persistentAuditEvent21.setAuditEventDate(instant23);
        java.time.Instant instant25 = persistentAuditEvent21.getAuditEventDate();
        persistentAuditEvent21.setPrincipal("");
        com.unifacisa.tcc.domain.User user28 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper29 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user31 = userMapper29.userFromId((java.lang.Long) 100L);
        user31.setLangKey("");
        java.time.Instant instant34 = user31.getResetDate();
        java.time.Instant instant35 = user31.getCreatedDate();
        user28.setCreatedDate(instant35);
        boolean boolean37 = user28.getActivated();
        com.unifacisa.tcc.domain.User user47 = new com.unifacisa.tcc.domain.User();
        user47.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user47.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant52 = user47.getLastModifiedDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper54 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user56 = userMapper54.userFromId((java.lang.Long) 100L);
        user56.setLangKey("");
        java.time.Instant instant59 = user56.getResetDate();
        java.time.Instant instant60 = user56.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno61 = new com.unifacisa.tcc.domain.Aluno();
        aluno61.setPrimeiroNome("");
        java.lang.String str64 = aluno61.getPrimeiroNome();
        java.lang.Long long65 = aluno61.getMatricula();
        boolean boolean66 = user56.equals((java.lang.Object) aluno61);
        user56.setFirstName("");
        com.unifacisa.tcc.domain.User user69 = new com.unifacisa.tcc.domain.User();
        user69.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user69.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper74 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user76 = userMapper74.userFromId((java.lang.Long) 100L);
        user76.setLangKey("");
        java.time.Instant instant79 = user76.getResetDate();
        java.time.Instant instant80 = user76.getCreatedDate();
        user69.setResetDate(instant80);
        user56.setCreatedDate(instant80);
        java.util.Set<java.lang.String> strSet83 = null;
        com.unifacisa.tcc.service.dto.UserDTO userDTO84 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "LoginVM{username='null', rememberMe=false}", "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}", "error.concurrencyFailure", "LoginVM{username='null', rememberMe=false}", true, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", instant52, "", instant80, strSet83);
        user28.setLastModifiedDate(instant52);
        persistentAuditEvent21.setAuditEventDate(instant52);
        boolean boolean87 = authority11.equals((java.lang.Object) instant52);
        user0.setResetDate(instant52);
        user0.setId((java.lang.Long) 1L);
        org.junit.Assert.assertNotNull(user3);
        org.junit.Assert.assertNull(instant6);
        org.junit.Assert.assertNotNull(instant7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Authority{name='error.concurrencyFailure'}" + "'", str16, "Authority{name='error.concurrencyFailure'}");
        org.junit.Assert.assertNull(instant22);
        org.junit.Assert.assertNull(instant25);
        org.junit.Assert.assertNotNull(user31);
        org.junit.Assert.assertNull(instant34);
        org.junit.Assert.assertNotNull(instant35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(instant52);
        org.junit.Assert.assertNotNull(user56);
        org.junit.Assert.assertNull(instant59);
        org.junit.Assert.assertNotNull(instant60);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNull(long65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(user76);
        org.junit.Assert.assertNull(instant79);
        org.junit.Assert.assertNotNull(instant80);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test2261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2261");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant5 = user0.getLastModifiedDate();
        java.time.Instant instant6 = user0.getResetDate();
        user0.setFirstName("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        user0.setEmail("LoginVM{username='LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}', rememberMe=true}");
        java.lang.Long long11 = user0.getId();
        org.junit.Assert.assertNotNull(instant5);
        org.junit.Assert.assertNull(instant6);
        org.junit.Assert.assertNull(long11);
    }

    @Test
    public void test2262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2262");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper1 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray2 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList3 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList3, userArray2);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList5 = userMapper1.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList3);
        java.time.Instant instant16 = null;
        java.time.Instant instant18 = null;
        java.time.Instant instant28 = null;
        java.time.Instant instant30 = null;
        java.lang.String[] strArray33 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        com.unifacisa.tcc.service.dto.UserDTO userDTO36 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant28, "hi!", instant30, (java.util.Set<java.lang.String>) strSet34);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM37 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant16, "", instant18, (java.util.Set<java.lang.String>) strSet34);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet38 = userMapper1.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet34);
        com.unifacisa.tcc.domain.User user39 = new com.unifacisa.tcc.domain.User();
        user39.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user39.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper44 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user46 = userMapper44.userFromId((java.lang.Long) 100L);
        user46.setLangKey("");
        java.time.Instant instant49 = user46.getResetDate();
        java.time.Instant instant50 = user46.getCreatedDate();
        user39.setResetDate(instant50);
        java.time.Instant instant52 = null;
        user39.setCreatedDate(instant52);
        java.lang.String str54 = user39.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user55 = new com.unifacisa.tcc.domain.User();
        java.lang.String str56 = user55.toString();
        boolean boolean57 = user39.equals((java.lang.Object) user55);
        user39.setEmail("");
        com.unifacisa.tcc.service.dto.UserDTO userDTO60 = userMapper1.userToUserDTO(user39);
        com.unifacisa.tcc.service.dto.UserDTO userDTO61 = userMapper0.userToUserDTO(user39);
        user39.setLangKey("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:08.859Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.859Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        java.lang.String str64 = user39.getResetKey();
        java.lang.String str65 = user39.getCreatedBy();
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(userDTOList5);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(authoritySet38);
        org.junit.Assert.assertNotNull(user46);
        org.junit.Assert.assertNull(instant49);
        org.junit.Assert.assertNotNull(instant50);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str56, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(userDTO60);
        org.junit.Assert.assertNotNull(userDTO61);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str65, "LoginVM{username='null', rememberMe=false}");
    }

    @Test
    public void test2263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2263");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setUsername("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        loginVM0.setRememberMe((java.lang.Boolean) true);
        java.lang.String str8 = loginVM0.getUsername();
        java.lang.Boolean boolean9 = loginVM0.isRememberMe();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str8, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + true + "'", boolean9, true);
    }

    @Test
    public void test2264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2264");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.primeiroNome("hi!");
        java.lang.Long long7 = aluno0.getId();
        com.unifacisa.tcc.domain.Aluno aluno9 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        java.lang.Long long10 = aluno9.getId();
        aluno9.setNumeroContato((java.lang.Long) (-1L));
        com.unifacisa.tcc.service.mapper.UserMapper userMapper13 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user15 = userMapper13.userFromId((java.lang.Long) 100L);
        user15.setLangKey("");
        java.time.Instant instant18 = user15.getResetDate();
        java.time.Instant instant19 = user15.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        aluno20.setPrimeiroNome("");
        java.lang.String str23 = aluno20.getPrimeiroNome();
        java.lang.Long long24 = aluno20.getMatricula();
        boolean boolean25 = user15.equals((java.lang.Object) aluno20);
        java.lang.String str26 = user15.getPassword();
        boolean boolean27 = aluno9.equals((java.lang.Object) str26);
        java.lang.String str28 = aluno9.toString();
        com.unifacisa.tcc.domain.Aluno aluno30 = aluno9.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor31 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor33 = professor31.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa35 = professor31.email("");
        com.unifacisa.tcc.domain.Professor professor37 = professor31.diponibilidade((java.lang.Boolean) true);
        professor37.setId((java.lang.Long) (-1L));
        aluno9.setProfessor(professor37);
        com.unifacisa.tcc.domain.Professor professor41 = aluno9.getProfessor();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa43 = aluno9.email("User{login='null', firstName='LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNotNull(aluno9);
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertNotNull(user15);
        org.junit.Assert.assertNull(instant18);
        org.junit.Assert.assertNotNull(instant19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}" + "'", str28, "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        org.junit.Assert.assertNotNull(aluno30);
        org.junit.Assert.assertNotNull(professor33);
        org.junit.Assert.assertNotNull(pessoa35);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNotNull(professor41);
        org.junit.Assert.assertNotNull(pessoa43);
    }

    @Test
    public void test2265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2265");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        user2.setPassword("");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent9 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant10 = persistentAuditEvent9.getAuditEventDate();
        java.time.Instant instant11 = null;
        persistentAuditEvent9.setAuditEventDate(instant11);
        java.time.Instant instant13 = persistentAuditEvent9.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        persistentAuditEvent9.setData(strMap14);
        java.lang.String str16 = persistentAuditEvent9.getPrincipal();
        boolean boolean17 = user2.equals((java.lang.Object) persistentAuditEvent9);
        persistentAuditEvent9.setAuditEventType("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='error.validation', expireTime=null}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNull(instant13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test2266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2266");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setDiponibilidade((java.lang.Boolean) false);
        java.lang.String str5 = professor2.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor6 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor8 = professor6.diponibilidade((java.lang.Boolean) true);
        professor8.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        aluno11.setPrimeiroNome("");
        java.lang.Long long14 = aluno11.getMatricula();
        aluno11.setHabilitadoTcc((java.lang.Boolean) false);
        aluno11.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        aluno19.setPrimeiroNome("");
        java.lang.Long long22 = aluno19.getMatricula();
        java.lang.Long long23 = aluno19.getMatricula();
        aluno19.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        aluno26.setPrimeiroNome("");
        java.lang.Long long29 = aluno26.getMatricula();
        java.lang.Long long30 = aluno26.getMatricula();
        aluno26.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray34 = new com.unifacisa.tcc.domain.Aluno[] { aluno11, aluno19, aluno26, aluno33 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet35 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet35, alunoArray34);
        com.unifacisa.tcc.domain.Professor professor37 = professor8.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet35);
        com.unifacisa.tcc.domain.Professor professor38 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet35);
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor40 = null;
        aluno39.setProfessor(professor40);
        aluno39.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor44 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor46 = professor44.diponibilidade((java.lang.Boolean) true);
        professor46.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        aluno49.setPrimeiroNome("");
        java.lang.Long long52 = aluno49.getMatricula();
        aluno49.setHabilitadoTcc((java.lang.Boolean) false);
        aluno49.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        aluno57.setPrimeiroNome("");
        java.lang.Long long60 = aluno57.getMatricula();
        java.lang.Long long61 = aluno57.getMatricula();
        aluno57.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno64 = new com.unifacisa.tcc.domain.Aluno();
        aluno64.setPrimeiroNome("");
        java.lang.Long long67 = aluno64.getMatricula();
        java.lang.Long long68 = aluno64.getMatricula();
        aluno64.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno71 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray72 = new com.unifacisa.tcc.domain.Aluno[] { aluno49, aluno57, aluno64, aluno71 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet73 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet73, alunoArray72);
        com.unifacisa.tcc.domain.Professor professor75 = professor46.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet73);
        com.unifacisa.tcc.domain.Aluno aluno76 = aluno39.professor(professor75);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa78 = aluno76.segundoNome("");
        com.unifacisa.tcc.domain.Aluno aluno80 = aluno76.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor81 = professor38.removeAluno(aluno76);
        java.lang.Long long82 = professor81.getMatricula();
        java.lang.Long long83 = professor81.getMatricula();
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(professor8);
        org.junit.Assert.assertNull(long14);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNull(long23);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNull(long30);
        org.junit.Assert.assertNotNull(alunoArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNotNull(professor38);
        org.junit.Assert.assertNotNull(professor46);
        org.junit.Assert.assertNull(long52);
        org.junit.Assert.assertNull(long60);
        org.junit.Assert.assertNull(long61);
        org.junit.Assert.assertNull(long67);
        org.junit.Assert.assertNull(long68);
        org.junit.Assert.assertNotNull(alunoArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(professor75);
        org.junit.Assert.assertNotNull(aluno76);
        org.junit.Assert.assertNotNull(pessoa78);
        org.junit.Assert.assertNotNull(aluno80);
        org.junit.Assert.assertNotNull(professor81);
        org.junit.Assert.assertNull(long82);
        org.junit.Assert.assertNull(long83);
    }

    @Test
    public void test2267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2267");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper3 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray4 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList5 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList5, userArray4);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList7 = userMapper3.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList5);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray9 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList10 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList10, userArray9);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList12 = userMapper8.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList10);
        java.time.Instant instant23 = null;
        java.time.Instant instant25 = null;
        java.time.Instant instant35 = null;
        java.time.Instant instant37 = null;
        java.lang.String[] strArray40 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet41 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet41, strArray40);
        com.unifacisa.tcc.service.dto.UserDTO userDTO43 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant35, "hi!", instant37, (java.util.Set<java.lang.String>) strSet41);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM44 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant23, "", instant25, (java.util.Set<java.lang.String>) strSet41);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet45 = userMapper8.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet41);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper46 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray47 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList48 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList48, userArray47);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList50 = userMapper46.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList48);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList51 = userMapper8.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList48);
        java.util.List<com.unifacisa.tcc.domain.User> userList52 = userMapper3.userDTOsToUsers(userDTOList51);
        java.util.List<com.unifacisa.tcc.domain.User> userList53 = userMapper0.userDTOsToUsers(userDTOList51);
        com.unifacisa.tcc.domain.User user54 = new com.unifacisa.tcc.domain.User();
        user54.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user54.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet59 = user54.getAuthorities();
        com.unifacisa.tcc.service.dto.UserDTO userDTO60 = userMapper0.userToUserDTO(user54);
        java.lang.String str61 = user54.getLogin();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(userDTOList7);
        org.junit.Assert.assertNotNull(userArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(userDTOList12);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(authoritySet45);
        org.junit.Assert.assertNotNull(userArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(userDTOList50);
        org.junit.Assert.assertNotNull(userDTOList51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(authoritySet59);
        org.junit.Assert.assertNotNull(userDTO60);
        org.junit.Assert.assertNull(str61);
    }

    @Test
    public void test2268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2268");
        org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createEntityDeletionAlert("hi!", "SocialUserConnection{id=null, userId=, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNotNull(httpHeaders2);
    }

    @Test
    public void test2269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2269");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        aluno7.setPrimeiroNome("");
        java.lang.String str10 = aluno7.getPrimeiroNome();
        java.lang.Long long11 = aluno7.getMatricula();
        boolean boolean12 = user2.equals((java.lang.Object) aluno7);
        user2.setFirstName("");
        com.unifacisa.tcc.domain.User user15 = new com.unifacisa.tcc.domain.User();
        user15.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user15.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper20 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user22 = userMapper20.userFromId((java.lang.Long) 100L);
        user22.setLangKey("");
        java.time.Instant instant25 = user22.getResetDate();
        java.time.Instant instant26 = user22.getCreatedDate();
        user15.setResetDate(instant26);
        user2.setCreatedDate(instant26);
        java.lang.String str29 = user2.toString();
        java.time.Instant instant30 = user2.getCreatedDate();
        java.lang.String str31 = user2.getResetKey();
        java.lang.String str32 = user2.getEmail();
        com.unifacisa.tcc.domain.User user42 = new com.unifacisa.tcc.domain.User();
        user42.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user42.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant47 = user42.getLastModifiedDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper49 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user51 = userMapper49.userFromId((java.lang.Long) 100L);
        user51.setLangKey("");
        java.time.Instant instant54 = user51.getResetDate();
        java.time.Instant instant55 = user51.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno56 = new com.unifacisa.tcc.domain.Aluno();
        aluno56.setPrimeiroNome("");
        java.lang.String str59 = aluno56.getPrimeiroNome();
        java.lang.Long long60 = aluno56.getMatricula();
        boolean boolean61 = user51.equals((java.lang.Object) aluno56);
        user51.setFirstName("");
        com.unifacisa.tcc.domain.User user64 = new com.unifacisa.tcc.domain.User();
        user64.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user64.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper69 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user71 = userMapper69.userFromId((java.lang.Long) 100L);
        user71.setLangKey("");
        java.time.Instant instant74 = user71.getResetDate();
        java.time.Instant instant75 = user71.getCreatedDate();
        user64.setResetDate(instant75);
        user51.setCreatedDate(instant75);
        java.util.Set<java.lang.String> strSet78 = null;
        com.unifacisa.tcc.service.dto.UserDTO userDTO79 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "LoginVM{username='null', rememberMe=false}", "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}", "error.concurrencyFailure", "LoginVM{username='null', rememberMe=false}", true, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", instant47, "", instant75, strSet78);
        user2.setLastModifiedDate(instant47);
        java.lang.String str81 = user2.getFirstName();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(user22);
        org.junit.Assert.assertNull(instant25);
        org.junit.Assert.assertNotNull(instant26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}" + "'", str29, "User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(instant47);
        org.junit.Assert.assertNotNull(user51);
        org.junit.Assert.assertNull(instant54);
        org.junit.Assert.assertNotNull(instant55);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNull(long60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(user71);
        org.junit.Assert.assertNull(instant74);
        org.junit.Assert.assertNotNull(instant75);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
    }

    @Test
    public void test2270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2270");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        java.lang.String str6 = socialUserConnection0.getProviderUserId();
        socialUserConnection0.setAccessToken("hi!");
        java.lang.Long long9 = socialUserConnection0.getExpireTime();
        java.lang.String str10 = socialUserConnection0.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='hi!', secret='null', refreshToken='null', expireTime=null}" + "'", str10, "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='hi!', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test2271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2271");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant1 = managedUserVM0.getCreatedDate();
        java.lang.Long long2 = managedUserVM0.getId();
        java.lang.Long long3 = managedUserVM0.getId();
        java.lang.String str4 = managedUserVM0.toString();
        java.lang.String str5 = managedUserVM0.getLangKey();
        java.time.Instant instant6 = managedUserVM0.getLastModifiedDate();
        java.lang.Long long7 = managedUserVM0.getId();
        java.lang.String str8 = managedUserVM0.getCreatedBy();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str4, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(instant6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test2272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2272");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        aluno7.setPrimeiroNome("");
        java.lang.String str10 = aluno7.getPrimeiroNome();
        java.lang.Long long11 = aluno7.getMatricula();
        boolean boolean12 = user2.equals((java.lang.Object) aluno7);
        com.unifacisa.tcc.domain.User user13 = new com.unifacisa.tcc.domain.User();
        user13.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user13.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant18 = user13.getLastModifiedDate();
        user2.setCreatedDate(instant18);
        java.lang.String str20 = user2.getResetKey();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(instant18);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test2273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2273");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getDisplayName();
        java.lang.String str4 = socialUserConnection0.getImageURL();
        socialUserConnection0.setImageURL("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.lang.String str7 = socialUserConnection0.getSecret();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test2274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2274");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.primeiroNome("hi!");
        java.lang.Long long7 = aluno0.getId();
        com.unifacisa.tcc.domain.Aluno aluno9 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        java.lang.Long long10 = aluno9.getId();
        aluno9.setNumeroContato((java.lang.Long) (-1L));
        com.unifacisa.tcc.service.mapper.UserMapper userMapper13 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user15 = userMapper13.userFromId((java.lang.Long) 100L);
        user15.setLangKey("");
        java.time.Instant instant18 = user15.getResetDate();
        java.time.Instant instant19 = user15.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        aluno20.setPrimeiroNome("");
        java.lang.String str23 = aluno20.getPrimeiroNome();
        java.lang.Long long24 = aluno20.getMatricula();
        boolean boolean25 = user15.equals((java.lang.Object) aluno20);
        java.lang.String str26 = user15.getPassword();
        boolean boolean27 = aluno9.equals((java.lang.Object) str26);
        java.lang.String str28 = aluno9.toString();
        com.unifacisa.tcc.domain.Aluno aluno30 = aluno9.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor31 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor33 = professor31.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa35 = professor31.email("");
        com.unifacisa.tcc.domain.Professor professor37 = professor31.diponibilidade((java.lang.Boolean) true);
        professor37.setId((java.lang.Long) (-1L));
        aluno9.setProfessor(professor37);
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor42 = null;
        aluno41.setProfessor(professor42);
        aluno41.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Professor professor46 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor48 = professor46.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa50 = professor46.email("");
        com.unifacisa.tcc.domain.Professor professor52 = professor46.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno53 = aluno41.professor(professor52);
        com.unifacisa.tcc.domain.Professor professor54 = aluno41.getProfessor();
        com.unifacisa.tcc.domain.Professor professor55 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor57 = professor55.diponibilidade((java.lang.Boolean) true);
        professor57.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.Long long60 = professor57.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa62 = professor57.email("error.validation");
        professor57.setId((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa66 = professor57.primeiroNome("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}");
        java.lang.String str67 = professor57.getEmail();
        com.unifacisa.tcc.domain.Professor professor69 = professor57.diponibilidade((java.lang.Boolean) false);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet70 = professor57.getAlunos();
        professor54.setAlunos(alunoSet70);
        professor37.setAlunos(alunoSet70);
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNotNull(aluno9);
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertNotNull(user15);
        org.junit.Assert.assertNull(instant18);
        org.junit.Assert.assertNotNull(instant19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}" + "'", str28, "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        org.junit.Assert.assertNotNull(aluno30);
        org.junit.Assert.assertNotNull(professor33);
        org.junit.Assert.assertNotNull(pessoa35);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNotNull(professor48);
        org.junit.Assert.assertNotNull(pessoa50);
        org.junit.Assert.assertNotNull(professor52);
        org.junit.Assert.assertNotNull(aluno53);
        org.junit.Assert.assertNotNull(professor54);
        org.junit.Assert.assertNotNull(professor57);
        org.junit.Assert.assertNull(long60);
        org.junit.Assert.assertNotNull(pessoa62);
        org.junit.Assert.assertNotNull(pessoa66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "error.validation" + "'", str67, "error.validation");
        org.junit.Assert.assertNotNull(professor69);
        org.junit.Assert.assertNotNull(alunoSet70);
    }

    @Test
    public void test2275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2275");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.matricula((java.lang.Long) 10L);
        java.lang.String str7 = aluno0.getEmail();
        java.lang.Boolean boolean8 = aluno0.isHabilitadoTcc();
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(boolean8);
    }

    @Test
    public void test2276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2276");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        authority0.setName("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper3 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user5 = userMapper3.userFromId((java.lang.Long) 100L);
        user5.setLangKey("");
        java.time.Instant instant8 = user5.getResetDate();
        java.time.Instant instant9 = user5.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        aluno10.setPrimeiroNome("");
        java.lang.String str13 = aluno10.getPrimeiroNome();
        java.lang.Long long14 = aluno10.getMatricula();
        boolean boolean15 = user5.equals((java.lang.Object) aluno10);
        com.unifacisa.tcc.domain.User user16 = new com.unifacisa.tcc.domain.User();
        user16.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user16.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant21 = user16.getLastModifiedDate();
        user5.setCreatedDate(instant21);
        boolean boolean23 = authority0.equals((java.lang.Object) user5);
        java.lang.String str24 = user5.getResetKey();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent25 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant26 = persistentAuditEvent25.getAuditEventDate();
        java.time.Instant instant27 = null;
        persistentAuditEvent25.setAuditEventDate(instant27);
        persistentAuditEvent25.setId((java.lang.Long) 1L);
        persistentAuditEvent25.setId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent33 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        persistentAuditEvent33.setData(strMap34);
        persistentAuditEvent33.setAuditEventType("hi!");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent38 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant39 = null;
        persistentAuditEvent38.setAuditEventDate(instant39);
        com.unifacisa.tcc.domain.User user41 = new com.unifacisa.tcc.domain.User();
        user41.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user41.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper46 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user48 = userMapper46.userFromId((java.lang.Long) 100L);
        user48.setLangKey("");
        java.time.Instant instant51 = user48.getResetDate();
        java.time.Instant instant52 = user48.getCreatedDate();
        user41.setResetDate(instant52);
        persistentAuditEvent38.setAuditEventDate(instant52);
        persistentAuditEvent33.setAuditEventDate(instant52);
        persistentAuditEvent25.setAuditEventDate(instant52);
        user5.setCreatedDate(instant52);
        java.time.Instant instant58 = user5.getResetDate();
        org.junit.Assert.assertNotNull(user5);
        org.junit.Assert.assertNull(instant8);
        org.junit.Assert.assertNotNull(instant9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(long14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(instant21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(instant26);
        org.junit.Assert.assertNotNull(user48);
        org.junit.Assert.assertNull(instant51);
        org.junit.Assert.assertNotNull(instant52);
        org.junit.Assert.assertNull(instant58);
    }

    @Test
    public void test2277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2277");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = loginVM0.isRememberMe();
        loginVM0.setPassword("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        loginVM0.setRememberMe((java.lang.Boolean) true);
        loginVM0.setRememberMe((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + false + "'", boolean4, false);
    }

    @Test
    public void test2278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2278");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 10L);
        socialUserConnection0.setDisplayName("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str7 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setImageURL("");
        org.springframework.http.HttpHeaders httpHeaders12 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createEntityDeletionAlert("LoginVM{username='null', rememberMe=false}", "hi!");
        boolean boolean13 = socialUserConnection0.equals((java.lang.Object) "LoginVM{username='null', rememberMe=false}");
        java.lang.Long long14 = socialUserConnection0.getExpireTime();
        java.lang.Object obj15 = null;
        boolean boolean16 = socialUserConnection0.equals(obj15);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(httpHeaders12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(long14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test2279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2279");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 10L);
        socialUserConnection0.setDisplayName("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setRefreshToken("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setProviderUserId("");
        java.lang.Long long11 = socialUserConnection0.getId();
        java.lang.String str12 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setAccessToken("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}");
        socialUserConnection0.setAccessToken("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='false'}");
        java.lang.String str17 = socialUserConnection0.getProviderId();
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str17, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test2280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2280");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        java.lang.String str5 = user2.getResetKey();
        java.time.Instant instant6 = user2.getResetDate();
        java.lang.String str7 = user2.getCreatedBy();
        user2.setLangKey("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNull(instant6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test2281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2281");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        user2.setActivated(true);
        user2.setLastName("Authority{name='Authority{name='error.concurrencyFailure'}'}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper10 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user12 = userMapper10.userFromId((java.lang.Long) 100L);
        user12.setResetKey("hi!");
        java.time.Instant instant15 = user12.getLastModifiedDate();
        user2.setLastModifiedDate(instant15);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper17 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray18 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList19 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList19, userArray18);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList21 = userMapper17.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList19);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper22 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user24 = userMapper22.userFromId((java.lang.Long) 100L);
        user24.setLangKey("");
        java.time.Instant instant27 = user24.getResetDate();
        java.time.Instant instant28 = user24.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        aluno29.setPrimeiroNome("");
        java.lang.String str32 = aluno29.getPrimeiroNome();
        java.lang.Long long33 = aluno29.getMatricula();
        boolean boolean34 = user24.equals((java.lang.Object) aluno29);
        user24.setFirstName("");
        user24.setActivationKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str39 = user24.getEmail();
        com.unifacisa.tcc.service.dto.UserDTO userDTO40 = new com.unifacisa.tcc.service.dto.UserDTO(user24);
        java.util.Set<java.lang.String> strSet41 = userDTO40.getAuthorities();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet42 = userMapper17.authoritiesFromStrings(strSet41);
        user2.setAuthorities(authoritySet42);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(user12);
        org.junit.Assert.assertNotNull(instant15);
        org.junit.Assert.assertNotNull(userArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(userDTOList21);
        org.junit.Assert.assertNotNull(user24);
        org.junit.Assert.assertNull(instant27);
        org.junit.Assert.assertNotNull(instant28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNull(long33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(authoritySet42);
    }

    @Test
    public void test2282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2282");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        org.springframework.http.HttpHeaders httpHeaders6 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createEntityCreationAlert("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoginVM{username='LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}', rememberMe=true}");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.util.MultiValueMap<java.lang.String, org.springframework.social.connect.Connection<?>> strMap7 = customSocialConnectionRepository3.findConnectionsToUsers((org.springframework.util.MultiValueMap<java.lang.String, java.lang.String>) httpHeaders6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(httpHeaders6);
    }

    @Test
    public void test2283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2283");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        com.unifacisa.tcc.service.dto.UserDTO userDTO30 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant22, "hi!", instant24, (java.util.Set<java.lang.String>) strSet28);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM31 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 0L, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", "hi!", "hi!", "", true, "hi!", "", "", instant10, "", instant12, (java.util.Set<java.lang.String>) strSet28);
        java.lang.String str32 = managedUserVM31.getImageUrl();
        java.lang.String str33 = managedUserVM31.getLogin();
        java.lang.String str34 = managedUserVM31.getPassword();
        java.lang.String str35 = managedUserVM31.getLogin();
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str33, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "error.validation" + "'", str34, "error.validation");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str35, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test2284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2284");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        java.lang.String str5 = user2.getResetKey();
        boolean boolean7 = user2.equals((java.lang.Object) 10.0f);
        java.lang.String str8 = user2.getCreatedBy();
        java.lang.String str9 = user2.getCreatedBy();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test2285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2285");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setDiponibilidade((java.lang.Boolean) false);
        java.lang.String str5 = professor2.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor6 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor8 = professor6.diponibilidade((java.lang.Boolean) true);
        professor8.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        aluno11.setPrimeiroNome("");
        java.lang.Long long14 = aluno11.getMatricula();
        aluno11.setHabilitadoTcc((java.lang.Boolean) false);
        aluno11.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        aluno19.setPrimeiroNome("");
        java.lang.Long long22 = aluno19.getMatricula();
        java.lang.Long long23 = aluno19.getMatricula();
        aluno19.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        aluno26.setPrimeiroNome("");
        java.lang.Long long29 = aluno26.getMatricula();
        java.lang.Long long30 = aluno26.getMatricula();
        aluno26.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray34 = new com.unifacisa.tcc.domain.Aluno[] { aluno11, aluno19, aluno26, aluno33 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet35 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet35, alunoArray34);
        com.unifacisa.tcc.domain.Professor professor37 = professor8.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet35);
        com.unifacisa.tcc.domain.Professor professor38 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet35);
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor40 = null;
        aluno39.setProfessor(professor40);
        aluno39.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor44 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor46 = professor44.diponibilidade((java.lang.Boolean) true);
        professor46.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        aluno49.setPrimeiroNome("");
        java.lang.Long long52 = aluno49.getMatricula();
        aluno49.setHabilitadoTcc((java.lang.Boolean) false);
        aluno49.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        aluno57.setPrimeiroNome("");
        java.lang.Long long60 = aluno57.getMatricula();
        java.lang.Long long61 = aluno57.getMatricula();
        aluno57.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno64 = new com.unifacisa.tcc.domain.Aluno();
        aluno64.setPrimeiroNome("");
        java.lang.Long long67 = aluno64.getMatricula();
        java.lang.Long long68 = aluno64.getMatricula();
        aluno64.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno71 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray72 = new com.unifacisa.tcc.domain.Aluno[] { aluno49, aluno57, aluno64, aluno71 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet73 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet73, alunoArray72);
        com.unifacisa.tcc.domain.Professor professor75 = professor46.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet73);
        com.unifacisa.tcc.domain.Aluno aluno76 = aluno39.professor(professor75);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa78 = aluno76.segundoNome("");
        com.unifacisa.tcc.domain.Aluno aluno80 = aluno76.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor81 = professor38.removeAluno(aluno76);
        java.lang.Boolean boolean82 = aluno76.isHabilitadoTcc();
        aluno76.setNumeroContato((java.lang.Long) (-1L));
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(professor8);
        org.junit.Assert.assertNull(long14);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNull(long23);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNull(long30);
        org.junit.Assert.assertNotNull(alunoArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNotNull(professor38);
        org.junit.Assert.assertNotNull(professor46);
        org.junit.Assert.assertNull(long52);
        org.junit.Assert.assertNull(long60);
        org.junit.Assert.assertNull(long61);
        org.junit.Assert.assertNull(long67);
        org.junit.Assert.assertNull(long68);
        org.junit.Assert.assertNotNull(alunoArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(professor75);
        org.junit.Assert.assertNotNull(aluno76);
        org.junit.Assert.assertNotNull(pessoa78);
        org.junit.Assert.assertNotNull(aluno80);
        org.junit.Assert.assertNotNull(professor81);
        org.junit.Assert.assertEquals("'" + boolean82 + "' != '" + false + "'", boolean82, false);
    }

    @Test
    public void test2286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2286");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        user2.setFirstName("error.validation");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper7 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user9 = userMapper7.userFromId((java.lang.Long) 100L);
        user9.setLangKey("");
        java.time.Instant instant12 = user9.getResetDate();
        java.time.Instant instant13 = user9.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        aluno14.setPrimeiroNome("");
        java.lang.String str17 = aluno14.getPrimeiroNome();
        java.lang.Long long18 = aluno14.getMatricula();
        boolean boolean19 = user9.equals((java.lang.Object) aluno14);
        user9.setFirstName("");
        com.unifacisa.tcc.domain.User user22 = new com.unifacisa.tcc.domain.User();
        user22.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user22.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper27 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user29 = userMapper27.userFromId((java.lang.Long) 100L);
        user29.setLangKey("");
        java.time.Instant instant32 = user29.getResetDate();
        java.time.Instant instant33 = user29.getCreatedDate();
        user22.setResetDate(instant33);
        user9.setCreatedDate(instant33);
        user2.setResetDate(instant33);
        com.unifacisa.tcc.service.dto.UserDTO userDTO37 = new com.unifacisa.tcc.service.dto.UserDTO(user2);
        java.lang.String str38 = user2.getCreatedBy();
        java.lang.String str39 = user2.getResetKey();
        java.time.Instant instant40 = user2.getLastModifiedDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper41 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user43 = userMapper41.userFromId((java.lang.Long) 100L);
        user43.setLangKey("");
        java.time.Instant instant46 = user43.getResetDate();
        java.time.Instant instant47 = user43.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno48 = new com.unifacisa.tcc.domain.Aluno();
        aluno48.setPrimeiroNome("");
        java.lang.String str51 = aluno48.getPrimeiroNome();
        java.lang.Long long52 = aluno48.getMatricula();
        boolean boolean53 = user43.equals((java.lang.Object) aluno48);
        user43.setFirstName("");
        com.unifacisa.tcc.domain.User user56 = new com.unifacisa.tcc.domain.User();
        user56.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user56.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper61 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user63 = userMapper61.userFromId((java.lang.Long) 100L);
        user63.setLangKey("");
        java.time.Instant instant66 = user63.getResetDate();
        java.time.Instant instant67 = user63.getCreatedDate();
        user56.setResetDate(instant67);
        user43.setCreatedDate(instant67);
        user2.setLastModifiedDate(instant67);
        user2.setActivationKey("ManagedUserVM{} UserDTO{login='', firstName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', lastName='', email='hi!', imageUrl='hi!', activated=false, langKey='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', createdBy=error.validation, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        user2.setFirstName("LoggerVM{name='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}', level='null'}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(user9);
        org.junit.Assert.assertNull(instant12);
        org.junit.Assert.assertNotNull(instant13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(long18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(user29);
        org.junit.Assert.assertNull(instant32);
        org.junit.Assert.assertNotNull(instant33);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(instant40);
        org.junit.Assert.assertNotNull(user43);
        org.junit.Assert.assertNull(instant46);
        org.junit.Assert.assertNotNull(instant47);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNull(long52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(user63);
        org.junit.Assert.assertNull(instant66);
        org.junit.Assert.assertNotNull(instant67);
    }

    @Test
    public void test2287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2287");
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository0 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource1 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository0);
        com.unifacisa.tcc.domain.Professor professor2 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor4 = professor2.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = professor2.email("");
        com.unifacisa.tcc.domain.Professor professor8 = professor2.diponibilidade((java.lang.Boolean) true);
        professor8.setId((java.lang.Long) (-1L));
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity11 = professorResource1.createProfessor(professor8);
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository12 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource13 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository12);
        com.unifacisa.tcc.domain.Professor professor14 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor16 = professor14.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa18 = professor14.email("");
        com.unifacisa.tcc.domain.Professor professor20 = professor14.diponibilidade((java.lang.Boolean) true);
        professor20.setId((java.lang.Long) (-1L));
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity23 = professorResource13.createProfessor(professor20);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity24 = professorResource1.updateProfessor(professor20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor4);
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNotNull(professor8);
        org.junit.Assert.assertNotNull(professorResponseEntity11);
        org.junit.Assert.assertNotNull(professor16);
        org.junit.Assert.assertNotNull(pessoa18);
        org.junit.Assert.assertNotNull(professor20);
        org.junit.Assert.assertNotNull(professorResponseEntity23);
    }

    @Test
    public void test2288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2288");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM4 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant5 = managedUserVM4.getCreatedDate();
        java.lang.Long long6 = managedUserVM4.getId();
        java.lang.Long long7 = managedUserVM4.getId();
        java.lang.String str8 = managedUserVM4.toString();
        managedUserVM4.setId((java.lang.Long) (-1L));
        java.util.Set<java.lang.String> strSet11 = managedUserVM4.getAuthorities();
        java.lang.String str12 = managedUserVM4.getImageUrl();
        org.springframework.http.ResponseEntity responseEntity13 = userResource3.createUser(managedUserVM4);
        java.time.Instant instant24 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant36 = null;
        java.time.Instant instant38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet42 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet42, strArray41);
        com.unifacisa.tcc.service.dto.UserDTO userDTO44 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant36, "hi!", instant38, (java.util.Set<java.lang.String>) strSet42);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM45 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", false, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoginVM{username='null', rememberMe=false}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", instant24, "hi!", instant26, (java.util.Set<java.lang.String>) strSet42);
        org.springframework.http.ResponseEntity responseEntity46 = userResource3.createUser(managedUserVM45);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM47 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet48 = managedUserVM47.getAuthorities();
        java.time.Instant instant49 = null;
        managedUserVM47.setLastModifiedDate(instant49);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity responseEntity51 = userResource3.createUser(managedUserVM47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str8, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(strSet11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(responseEntity13);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(responseEntity46);
        org.junit.Assert.assertNull(strSet48);
    }

    @Test
    public void test2289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2289");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setId((java.lang.Long) (-1L));
        socialUserConnection0.setImageURL("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        socialUserConnection0.setDisplayName("Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str7 = socialUserConnection0.getSecret();
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test2290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2290");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        java.time.Instant instant14 = null;
        java.time.Instant instant16 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        com.unifacisa.tcc.service.dto.UserDTO userDTO34 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant26, "hi!", instant28, (java.util.Set<java.lang.String>) strSet32);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM35 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant14, "", instant16, (java.util.Set<java.lang.String>) strSet32);
        java.lang.String str36 = managedUserVM35.getLastModifiedBy();
        org.springframework.http.ResponseEntity responseEntity37 = userResource3.createUser(managedUserVM35);
        java.lang.String str38 = managedUserVM35.toString();
        managedUserVM35.setLogin("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}");
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(responseEntity37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ManagedUserVM{} UserDTO{login='', firstName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', lastName='', email='hi!', imageUrl='hi!', activated=false, langKey='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', createdBy=error.validation, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}" + "'", str38, "ManagedUserVM{} UserDTO{login='', firstName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', lastName='', email='hi!', imageUrl='hi!', activated=false, langKey='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', createdBy=error.validation, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
    }

    @Test
    public void test2291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2291");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        keyAndPasswordVM0.setNewPassword("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        keyAndPasswordVM0.setKey("");
        keyAndPasswordVM0.setNewPassword("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        keyAndPasswordVM0.setNewPassword("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.lang.String str11 = keyAndPasswordVM0.getKey();
        keyAndPasswordVM0.setNewPassword("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test2292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2292");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.domain.User user6 = userMapper0.userFromId((java.lang.Long) 0L);
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(user6);
    }

    @Test
    public void test2293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2293");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        keyAndPasswordVM0.setNewPassword("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        keyAndPasswordVM0.setKey("");
        keyAndPasswordVM0.setNewPassword("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        keyAndPasswordVM0.setNewPassword("SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=100}");
        keyAndPasswordVM0.setNewPassword("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.lang.String str13 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str14 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str15 = keyAndPasswordVM0.getNewPassword();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str13, "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str14, "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str15, "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test2294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2294");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setUsername("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        loginVM0.setRememberMe((java.lang.Boolean) true);
        loginVM0.setUsername("Authority{name='error.concurrencyFailure'}");
        loginVM0.setUsername("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.String str14 = loginVM0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LoginVM{username='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', rememberMe=false}" + "'", str14, "LoginVM{username='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', rememberMe=false}");
    }

    @Test
    public void test2295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2295");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.getName();
        java.lang.String str2 = authority0.toString();
        authority0.setName("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:41.180Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:41.180Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        authority0.setName("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:08.859Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.859Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        authority0.setName("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Authority{name='null'}" + "'", str2, "Authority{name='null'}");
    }

    @Test
    public void test2296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2296");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        aluno0.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor7 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = professor5.email("");
        com.unifacisa.tcc.domain.Professor professor11 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno12 = aluno0.professor(professor5);
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor14 = null;
        aluno13.setProfessor(professor14);
        java.lang.Long long16 = aluno13.getMatricula();
        java.lang.String str17 = aluno13.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor18 = professor5.removeAluno(aluno13);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa20 = professor5.matricula((java.lang.Long) 0L);
        pessoa20.setEmail("SocialUserConnection{id=null, userId=Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.lang.Long long23 = pessoa20.getId();
        org.junit.Assert.assertNotNull(professor7);
        org.junit.Assert.assertNotNull(pessoa9);
        org.junit.Assert.assertNotNull(professor11);
        org.junit.Assert.assertNotNull(aluno12);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNotNull(pessoa20);
        org.junit.Assert.assertNull(long23);
    }

    @Test
    public void test2297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2297");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor3 = professor0.diponibilidade((java.lang.Boolean) true);
        professor3.setPrimeiroNome("");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str1, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor3);
    }

    @Test
    public void test2298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2298");
        org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createAlert("LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNotNull(httpHeaders2);
    }

    @Test
    public void test2299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2299");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean2 = aluno0.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        java.lang.String str4 = aluno0.toString();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.matricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = aluno0.segundoNome("LoginVM{username='null', rememberMe=null}");
        java.lang.String str9 = aluno0.getSegundoNome();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str4, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNotNull(pessoa8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str9, "LoginVM{username='null', rememberMe=null}");
    }

    @Test
    public void test2300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2300");
        org.springframework.http.HttpHeaders httpHeaders3 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createFailureAlert("Authority{name='error.concurrencyFailure'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", "Authority{name='Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}'}");
        org.junit.Assert.assertNotNull(httpHeaders3);
    }

    @Test
    public void test2301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2301");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        java.lang.Long long3 = aluno0.getMatricula();
        java.lang.Long long4 = aluno0.getMatricula();
        aluno0.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor8 = null;
        aluno7.setProfessor(professor8);
        aluno7.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor12 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor14 = professor12.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor15 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno16 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor17 = null;
        aluno16.setProfessor(professor17);
        aluno16.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor23 = null;
        aluno22.setProfessor(professor23);
        java.lang.Long long25 = aluno22.getMatricula();
        java.lang.String str26 = aluno22.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean29 = aluno27.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor31 = null;
        aluno30.setProfessor(professor31);
        aluno30.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean37 = aluno35.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        aluno38.setPrimeiroNome("");
        java.lang.Long long41 = aluno38.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        aluno42.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray45 = new com.unifacisa.tcc.domain.Aluno[] { aluno16, aluno21, aluno22, aluno27, aluno30, aluno35, aluno38, aluno42 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet46 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet46, alunoArray45);
        professor15.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet46);
        com.unifacisa.tcc.domain.Professor professor49 = professor14.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet46);
        aluno7.setProfessor(professor49);
        aluno0.setProfessor(professor49);
        aluno0.setHabilitadoTcc((java.lang.Boolean) false);
        aluno0.setId((java.lang.Long) 1L);
        aluno0.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa59 = aluno0.email("ManagedUserVM{} UserDTO{login='LoginVM{username='null', rememberMe=false}', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', lastName='error.concurrencyFailure', email='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', imageUrl='LoginVM{username='null', rememberMe=false}', activated=false, langKey='hi!', createdBy=User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}, createdDate=null, lastModifiedBy='error.concurrencyFailure', lastModifiedDate=null, authorities=[hi!, , LoginVM{username='null', rememberMe=false}]}");
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(professor14);
        org.junit.Assert.assertNull(long25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(long41);
        org.junit.Assert.assertNotNull(alunoArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(professor49);
        org.junit.Assert.assertNotNull(pessoa59);
    }

    @Test
    public void test2302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2302");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        com.unifacisa.tcc.service.dto.UserDTO userDTO30 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant22, "hi!", instant24, (java.util.Set<java.lang.String>) strSet28);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM31 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 0L, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", "hi!", "hi!", "", true, "hi!", "", "", instant10, "", instant12, (java.util.Set<java.lang.String>) strSet28);
        java.time.Instant instant32 = managedUserVM31.getCreatedDate();
        java.lang.String str33 = managedUserVM31.getLangKey();
        java.lang.String str34 = managedUserVM31.getLogin();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper35 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user37 = userMapper35.userFromId((java.lang.Long) 100L);
        user37.setLangKey("");
        java.time.Instant instant40 = user37.getResetDate();
        java.time.Instant instant41 = user37.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        aluno42.setPrimeiroNome("");
        java.lang.String str45 = aluno42.getPrimeiroNome();
        java.lang.Long long46 = aluno42.getMatricula();
        boolean boolean47 = user37.equals((java.lang.Object) aluno42);
        user37.setFirstName("");
        com.unifacisa.tcc.domain.User user50 = new com.unifacisa.tcc.domain.User();
        user50.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user50.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper55 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user57 = userMapper55.userFromId((java.lang.Long) 100L);
        user57.setLangKey("");
        java.time.Instant instant60 = user57.getResetDate();
        java.time.Instant instant61 = user57.getCreatedDate();
        user50.setResetDate(instant61);
        user37.setCreatedDate(instant61);
        managedUserVM31.setLastModifiedDate(instant61);
        java.lang.String str65 = managedUserVM31.getPassword();
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(instant32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str34, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(user37);
        org.junit.Assert.assertNull(instant40);
        org.junit.Assert.assertNotNull(instant41);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNull(long46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(user57);
        org.junit.Assert.assertNull(instant60);
        org.junit.Assert.assertNotNull(instant61);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "error.validation" + "'", str65, "error.validation");
    }

    @Test
    public void test2303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2303");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO5 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.Long long6 = userDTO5.getId();
        java.lang.String str7 = userDTO5.getFirstName();
        java.lang.String str8 = userDTO5.toString();
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(str7);
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UserDTO{login='null', firstName='null', lastName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:35:01.295Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:35:01.295Z, authorities=[]}" + "'", str8, "UserDTO{login='null', firstName='null', lastName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:35:01.295Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:35:01.295Z, authorities=[]}");
    }

    @Test
    public void test2304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2304");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        persistentAuditEvent0.setId((java.lang.Long) 1L);
        java.lang.String str3 = persistentAuditEvent0.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = persistentAuditEvent0.getData();
        persistentAuditEvent0.setId((java.lang.Long) 100L);
        java.util.Map<java.lang.String, java.lang.String> strMap7 = persistentAuditEvent0.getData();
        persistentAuditEvent0.setId((java.lang.Long) 10L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap7);
    }

    @Test
    public void test2305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2305");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        user2.setCreatedBy("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        user2.setLastModifiedBy("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        user2.setLastModifiedBy("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str13 = user2.getLastName();
        user2.setActivationKey("SocialUserConnection{id=null, userId=Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test2306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2306");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray7 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList8 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList8, userArray7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper6.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList8);
        java.time.Instant instant21 = null;
        java.time.Instant instant23 = null;
        java.time.Instant instant33 = null;
        java.time.Instant instant35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        com.unifacisa.tcc.service.dto.UserDTO userDTO41 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant33, "hi!", instant35, (java.util.Set<java.lang.String>) strSet39);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM42 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant21, "", instant23, (java.util.Set<java.lang.String>) strSet39);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet43 = userMapper6.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet39);
        user0.setAuthorities(authoritySet43);
        boolean boolean45 = user0.getActivated();
        java.time.Instant instant46 = user0.getResetDate();
        java.lang.String str47 = user0.getLogin();
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(userArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(authoritySet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(instant46);
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test2307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2307");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.toString();
        java.lang.String str2 = managedUserVM0.getLogin();
        java.lang.String str3 = managedUserVM0.getFirstName();
        java.time.Instant instant4 = managedUserVM0.getCreatedDate();
        managedUserVM0.setId((java.lang.Long) 1L);
        managedUserVM0.setId((java.lang.Long) 100L);
        java.lang.String str9 = managedUserVM0.toString();
        java.lang.String str10 = managedUserVM0.getLangKey();
        java.lang.String str11 = managedUserVM0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str1, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str9, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str11, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test2308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2308");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper11 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user13 = userMapper11.userFromId((java.lang.Long) 100L);
        user13.setLangKey("");
        java.time.Instant instant16 = user13.getResetDate();
        java.lang.String str17 = user13.getEmail();
        com.unifacisa.tcc.service.dto.UserDTO userDTO18 = userMapper0.userToUserDTO(user13);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper19 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user21 = userMapper19.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper22 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray23 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList24 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList24, userArray23);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList26 = userMapper22.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList24);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper27 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray28 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList29 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList29, userArray28);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList31 = userMapper27.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList29);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList32 = userMapper22.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList29);
        java.util.List<com.unifacisa.tcc.domain.User> userList33 = userMapper19.userDTOsToUsers(userDTOList32);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList34 = userMapper0.usersToUserDTOs(userList33);
        com.unifacisa.tcc.domain.User user36 = userMapper0.userFromId((java.lang.Long) 10L);
        java.util.List<com.unifacisa.tcc.domain.User> userList37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList38 = userMapper0.usersToUserDTOs(userList37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(user13);
        org.junit.Assert.assertNull(instant16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(userDTO18);
        org.junit.Assert.assertNotNull(user21);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(userDTOList26);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(userDTOList31);
        org.junit.Assert.assertNotNull(userDTOList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userDTOList34);
        org.junit.Assert.assertNotNull(user36);
    }

    @Test
    public void test2309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2309");
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository0 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource1 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository0);
        com.unifacisa.tcc.domain.Professor professor2 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor4 = professor2.diponibilidade((java.lang.Boolean) true);
        professor4.setDiponibilidade((java.lang.Boolean) false);
        professor4.setId((java.lang.Long) 100L);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity9 = professorResource1.createProfessor(professor4);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity11 = professorResource1.getProfessor((java.lang.Long) 1L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor4);
        org.junit.Assert.assertNotNull(professorResponseEntity9);
    }

    @Test
    public void test2310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2310");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor2.setPrimeiroNome("LoginVM{username='null', rememberMe=false}");
        java.lang.Long long7 = professor2.getNumeroContato();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = professor2.primeiroNome("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        java.lang.Long long10 = professor2.getNumeroContato();
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper12 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user14 = userMapper12.userFromId((java.lang.Long) 100L);
        user14.setLangKey("");
        java.time.Instant instant17 = user14.getResetDate();
        java.time.Instant instant18 = user14.getCreatedDate();
        user11.setCreatedDate(instant18);
        boolean boolean20 = user11.getActivated();
        com.unifacisa.tcc.domain.User user30 = new com.unifacisa.tcc.domain.User();
        user30.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user30.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant35 = user30.getLastModifiedDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper37 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user39 = userMapper37.userFromId((java.lang.Long) 100L);
        user39.setLangKey("");
        java.time.Instant instant42 = user39.getResetDate();
        java.time.Instant instant43 = user39.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        aluno44.setPrimeiroNome("");
        java.lang.String str47 = aluno44.getPrimeiroNome();
        java.lang.Long long48 = aluno44.getMatricula();
        boolean boolean49 = user39.equals((java.lang.Object) aluno44);
        user39.setFirstName("");
        com.unifacisa.tcc.domain.User user52 = new com.unifacisa.tcc.domain.User();
        user52.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user52.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper57 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user59 = userMapper57.userFromId((java.lang.Long) 100L);
        user59.setLangKey("");
        java.time.Instant instant62 = user59.getResetDate();
        java.time.Instant instant63 = user59.getCreatedDate();
        user52.setResetDate(instant63);
        user39.setCreatedDate(instant63);
        java.util.Set<java.lang.String> strSet66 = null;
        com.unifacisa.tcc.service.dto.UserDTO userDTO67 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "LoginVM{username='null', rememberMe=false}", "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}", "error.concurrencyFailure", "LoginVM{username='null', rememberMe=false}", true, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", instant35, "", instant63, strSet66);
        user11.setLastModifiedDate(instant35);
        boolean boolean69 = professor2.equals((java.lang.Object) user11);
        professor2.setMatricula((java.lang.Long) 10L);
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNotNull(pessoa9);
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertNotNull(user14);
        org.junit.Assert.assertNull(instant17);
        org.junit.Assert.assertNotNull(instant18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(instant35);
        org.junit.Assert.assertNotNull(user39);
        org.junit.Assert.assertNull(instant42);
        org.junit.Assert.assertNotNull(instant43);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNull(long48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(user59);
        org.junit.Assert.assertNull(instant62);
        org.junit.Assert.assertNotNull(instant63);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test2311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2311");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.time.Instant instant2 = null;
        persistentAuditEvent0.setAuditEventDate(instant2);
        java.time.Instant instant4 = persistentAuditEvent0.getAuditEventDate();
        persistentAuditEvent0.setPrincipal("");
        com.unifacisa.tcc.domain.User user7 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user10 = userMapper8.userFromId((java.lang.Long) 100L);
        user10.setLangKey("");
        java.time.Instant instant13 = user10.getResetDate();
        java.time.Instant instant14 = user10.getCreatedDate();
        user7.setCreatedDate(instant14);
        boolean boolean16 = user7.getActivated();
        com.unifacisa.tcc.domain.User user26 = new com.unifacisa.tcc.domain.User();
        user26.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user26.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant31 = user26.getLastModifiedDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper33 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user35 = userMapper33.userFromId((java.lang.Long) 100L);
        user35.setLangKey("");
        java.time.Instant instant38 = user35.getResetDate();
        java.time.Instant instant39 = user35.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        aluno40.setPrimeiroNome("");
        java.lang.String str43 = aluno40.getPrimeiroNome();
        java.lang.Long long44 = aluno40.getMatricula();
        boolean boolean45 = user35.equals((java.lang.Object) aluno40);
        user35.setFirstName("");
        com.unifacisa.tcc.domain.User user48 = new com.unifacisa.tcc.domain.User();
        user48.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user48.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper53 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user55 = userMapper53.userFromId((java.lang.Long) 100L);
        user55.setLangKey("");
        java.time.Instant instant58 = user55.getResetDate();
        java.time.Instant instant59 = user55.getCreatedDate();
        user48.setResetDate(instant59);
        user35.setCreatedDate(instant59);
        java.util.Set<java.lang.String> strSet62 = null;
        com.unifacisa.tcc.service.dto.UserDTO userDTO63 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "LoginVM{username='null', rememberMe=false}", "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}", "error.concurrencyFailure", "LoginVM{username='null', rememberMe=false}", true, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", instant31, "", instant59, strSet62);
        user7.setLastModifiedDate(instant31);
        persistentAuditEvent0.setAuditEventDate(instant31);
        persistentAuditEvent0.setAuditEventType("Aluno{id=null, primeiroNome='null', segundoNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}', matricula='100', email='null', numeroContato='1', habilitadoTcc='null'}");
        persistentAuditEvent0.setAuditEventType("LoggerVM{name='Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}', level='null'}");
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertNotNull(user10);
        org.junit.Assert.assertNull(instant13);
        org.junit.Assert.assertNotNull(instant14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(instant31);
        org.junit.Assert.assertNotNull(user35);
        org.junit.Assert.assertNull(instant38);
        org.junit.Assert.assertNotNull(instant39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNull(long44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(user55);
        org.junit.Assert.assertNull(instant58);
        org.junit.Assert.assertNotNull(instant59);
    }

    @Test
    public void test2312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2312");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.toString();
        java.lang.String str2 = managedUserVM0.getLogin();
        java.time.Instant instant3 = managedUserVM0.getLastModifiedDate();
        java.lang.String str4 = managedUserVM0.getEmail();
        java.lang.String str5 = managedUserVM0.toString();
        java.lang.String str6 = managedUserVM0.getPassword();
        managedUserVM0.setLogin("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=, createdDate=2021-03-26T03:34:26.101Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:26.101Z, authorities=[]}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str1, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(instant3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str5, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test2313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2313");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        java.lang.String str5 = user2.getResetKey();
        com.unifacisa.tcc.service.dto.UserDTO userDTO6 = new com.unifacisa.tcc.service.dto.UserDTO(user2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper7 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user9 = userMapper7.userFromId((java.lang.Long) 100L);
        user9.setResetKey("hi!");
        java.lang.String str12 = user9.getResetKey();
        boolean boolean14 = user9.equals((java.lang.Object) 10.0f);
        java.lang.String str15 = user9.getCreatedBy();
        com.unifacisa.tcc.domain.User user16 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper17 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user19 = userMapper17.userFromId((java.lang.Long) 100L);
        user19.setLangKey("");
        java.time.Instant instant22 = user19.getResetDate();
        java.time.Instant instant23 = user19.getCreatedDate();
        user16.setCreatedDate(instant23);
        boolean boolean25 = user16.getActivated();
        com.unifacisa.tcc.domain.User user35 = new com.unifacisa.tcc.domain.User();
        user35.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user35.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant40 = user35.getLastModifiedDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper42 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user44 = userMapper42.userFromId((java.lang.Long) 100L);
        user44.setLangKey("");
        java.time.Instant instant47 = user44.getResetDate();
        java.time.Instant instant48 = user44.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        aluno49.setPrimeiroNome("");
        java.lang.String str52 = aluno49.getPrimeiroNome();
        java.lang.Long long53 = aluno49.getMatricula();
        boolean boolean54 = user44.equals((java.lang.Object) aluno49);
        user44.setFirstName("");
        com.unifacisa.tcc.domain.User user57 = new com.unifacisa.tcc.domain.User();
        user57.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user57.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper62 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user64 = userMapper62.userFromId((java.lang.Long) 100L);
        user64.setLangKey("");
        java.time.Instant instant67 = user64.getResetDate();
        java.time.Instant instant68 = user64.getCreatedDate();
        user57.setResetDate(instant68);
        user44.setCreatedDate(instant68);
        java.util.Set<java.lang.String> strSet71 = null;
        com.unifacisa.tcc.service.dto.UserDTO userDTO72 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "LoginVM{username='null', rememberMe=false}", "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}", "error.concurrencyFailure", "LoginVM{username='null', rememberMe=false}", true, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", instant40, "", instant68, strSet71);
        user16.setLastModifiedDate(instant40);
        user9.setResetDate(instant40);
        user2.setLastModifiedDate(instant40);
        java.lang.String str76 = user2.getLogin();
        user2.setLastModifiedBy("");
        java.lang.String str79 = user2.getLogin();
        java.time.Instant instant80 = user2.getResetDate();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(user9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(user19);
        org.junit.Assert.assertNull(instant22);
        org.junit.Assert.assertNotNull(instant23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(instant40);
        org.junit.Assert.assertNotNull(user44);
        org.junit.Assert.assertNull(instant47);
        org.junit.Assert.assertNotNull(instant48);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNull(long53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(user64);
        org.junit.Assert.assertNull(instant67);
        org.junit.Assert.assertNotNull(instant68);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNull(instant80);
    }

    @Test
    public void test2314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2314");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("error.concurrencyFailure");
        java.lang.Long long12 = socialUserConnection0.getRank();
        socialUserConnection0.setUserId("");
        com.unifacisa.tcc.config.LoggingAspectConfiguration loggingAspectConfiguration15 = new com.unifacisa.tcc.config.LoggingAspectConfiguration();
        boolean boolean16 = socialUserConnection0.equals((java.lang.Object) loggingAspectConfiguration15);
        org.springframework.core.env.Environment environment17 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect18 = loggingAspectConfiguration15.loggingAspect(environment17);
        loggingAspect18.springBeanPointcut();
        loggingAspect18.applicationPackagePointcut();
        org.aspectj.lang.JoinPoint joinPoint21 = null;
        java.lang.Throwable throwable22 = null;
        // The following exception was thrown during execution in test generation
        try {
            loggingAspect18.logAfterThrowing(joinPoint21, throwable22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(loggingAspect18);
    }

    @Test
    public void test2315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2315");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.toString();
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getCreatedBy();
        user0.setActivationKey("LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=false}");
        user0.setPassword("LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='null'}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str1, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test2316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2316");
        org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createEntityCreationAlert("SocialUserConnection{id=null, userId=, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNotNull(httpHeaders2);
    }

    @Test
    public void test2317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2317");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.getName();
        java.lang.String str2 = authority0.toString();
        authority0.setName("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}");
        authority0.setName("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Authority{name='null'}" + "'", str2, "Authority{name='null'}");
    }

    @Test
    public void test2318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2318");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        user2.setCreatedBy("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str9 = user2.toString();
        java.lang.String str10 = user2.getCreatedBy();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet11 = user2.getAuthorities();
        user2.setPassword("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='hi!', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}" + "'", str9, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str10, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(authoritySet11);
    }

    @Test
    public void test2319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2319");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("Authority{name='Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            customSocialConnectionRepository3.removeConnections("LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='null'}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2320");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        java.lang.String str3 = aluno0.getPrimeiroNome();
        java.lang.Long long4 = aluno0.getMatricula();
        java.lang.Boolean boolean5 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Aluno aluno7 = aluno0.habilitadoTcc((java.lang.Boolean) true);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(aluno7);
    }

    @Test
    public void test2321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2321");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.time.Instant instant2 = null;
        persistentAuditEvent0.setAuditEventDate(instant2);
        java.time.Instant instant4 = persistentAuditEvent0.getAuditEventDate();
        java.lang.String str5 = persistentAuditEvent0.getAuditEventType();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user8 = userMapper6.userFromId((java.lang.Long) 100L);
        user8.setLangKey("");
        java.time.Instant instant11 = user8.getResetDate();
        java.time.Instant instant12 = user8.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        aluno13.setPrimeiroNome("");
        java.lang.String str16 = aluno13.getPrimeiroNome();
        java.lang.Long long17 = aluno13.getMatricula();
        boolean boolean18 = user8.equals((java.lang.Object) aluno13);
        user8.setFirstName("");
        com.unifacisa.tcc.domain.User user21 = new com.unifacisa.tcc.domain.User();
        user21.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user21.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper26 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user28 = userMapper26.userFromId((java.lang.Long) 100L);
        user28.setLangKey("");
        java.time.Instant instant31 = user28.getResetDate();
        java.time.Instant instant32 = user28.getCreatedDate();
        user21.setResetDate(instant32);
        user8.setCreatedDate(instant32);
        persistentAuditEvent0.setAuditEventDate(instant32);
        persistentAuditEvent0.setId((java.lang.Long) 100L);
        java.util.Map<java.lang.String, java.lang.String> strMap38 = persistentAuditEvent0.getData();
        persistentAuditEvent0.setAuditEventType("Aluno{id=null, primeiroNome='null', segundoNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}', matricula='100', email='null', numeroContato='1', habilitadoTcc='null'}");
        persistentAuditEvent0.setPrincipal("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        persistentAuditEvent0.setPrincipal("ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        java.time.Instant instant45 = persistentAuditEvent0.getAuditEventDate();
        java.lang.String str46 = persistentAuditEvent0.getPrincipal();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(user8);
        org.junit.Assert.assertNull(instant11);
        org.junit.Assert.assertNotNull(instant12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(user28);
        org.junit.Assert.assertNull(instant31);
        org.junit.Assert.assertNotNull(instant32);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(instant45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}" + "'", str46, "ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
    }

    @Test
    public void test2322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2322");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        java.lang.String str8 = socialUserConnection0.getImageURL();
        java.lang.String str9 = socialUserConnection0.getProviderUserId();
        java.lang.String str10 = socialUserConnection0.toString();
        socialUserConnection0.setProviderId("LoggerVM{name='LoggerVM{name='null', level='null'}', level='null'}");
        socialUserConnection0.setImageURL("Aluno{id=-1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "error.validation" + "'", str8, "error.validation");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='error.validation', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str10, "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='error.validation', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test2323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2323");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getDisplayName();
        socialUserConnection0.setSecret("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        socialUserConnection0.setProviderId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setProfileURL("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
        socialUserConnection0.setRank((java.lang.Long) 1L);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test2324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2324");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getDisplayName();
        socialUserConnection0.setSecret("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str6 = socialUserConnection0.getImageURL();
        java.lang.String str7 = socialUserConnection0.getProfileURL();
        java.lang.String str8 = socialUserConnection0.toString();
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        java.lang.String str11 = socialUserConnection0.getProfileURL();
        java.lang.Long long12 = socialUserConnection0.getId();
        java.lang.String str13 = socialUserConnection0.getProviderId();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', refreshToken='null', expireTime=null}" + "'", str8, "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str13, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test2325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2325");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor7 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = professor5.email("");
        com.unifacisa.tcc.domain.Professor professor11 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno12 = aluno0.professor(professor11);
        com.unifacisa.tcc.domain.Professor professor13 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor15 = professor13.diponibilidade((java.lang.Boolean) true);
        professor15.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor15.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.Long long20 = professor15.getId();
        professor15.setNumeroContato((java.lang.Long) 100L);
        java.lang.String str23 = professor15.getEmail();
        com.unifacisa.tcc.domain.Aluno aluno24 = aluno0.professor(professor15);
        aluno0.setHabilitadoTcc((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(professor7);
        org.junit.Assert.assertNotNull(pessoa9);
        org.junit.Assert.assertNotNull(professor11);
        org.junit.Assert.assertNotNull(aluno12);
        org.junit.Assert.assertNotNull(professor15);
        org.junit.Assert.assertNull(long20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(aluno24);
    }

    @Test
    public void test2326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2326");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        user11.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM14 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet15 = managedUserVM14.getAuthorities();
        boolean boolean16 = user11.equals((java.lang.Object) strSet15);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper17 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray18 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList19 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList19, userArray18);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList21 = userMapper17.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList19);
        java.time.Instant instant32 = null;
        java.time.Instant instant34 = null;
        java.time.Instant instant44 = null;
        java.time.Instant instant46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet50 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet50, strArray49);
        com.unifacisa.tcc.service.dto.UserDTO userDTO52 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant44, "hi!", instant46, (java.util.Set<java.lang.String>) strSet50);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM53 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant32, "", instant34, (java.util.Set<java.lang.String>) strSet50);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet54 = userMapper17.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet50);
        user11.setAuthorities(authoritySet54);
        java.lang.String str56 = user11.getFirstName();
        user11.setId((java.lang.Long) 10L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO59 = userMapper0.userToUserDTO(user11);
        com.unifacisa.tcc.domain.User user61 = userMapper0.userFromId((java.lang.Long) 0L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper62 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user64 = userMapper62.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper65 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray66 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList67 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList67, userArray66);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList69 = userMapper65.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList67);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper70 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray71 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList72 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList72, userArray71);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList74 = userMapper70.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList72);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList75 = userMapper65.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList72);
        java.util.List<com.unifacisa.tcc.domain.User> userList76 = userMapper62.userDTOsToUsers(userDTOList75);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList77 = userMapper0.usersToUserDTOs(userList76);
        com.unifacisa.tcc.domain.User user79 = userMapper0.userFromId((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.User user81 = userMapper0.userFromId((java.lang.Long) (-1L));
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(userArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(userDTOList21);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(authoritySet54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(userDTO59);
        org.junit.Assert.assertNotNull(user61);
        org.junit.Assert.assertNotNull(user64);
        org.junit.Assert.assertNotNull(userArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(userDTOList69);
        org.junit.Assert.assertNotNull(userArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(userDTOList74);
        org.junit.Assert.assertNotNull(userDTOList75);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(userDTOList77);
        org.junit.Assert.assertNotNull(user79);
        org.junit.Assert.assertNotNull(user81);
    }

    @Test
    public void test2327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2327");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper3 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray4 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList5 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList5, userArray4);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList7 = userMapper3.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList5);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray9 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList10 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList10, userArray9);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList12 = userMapper8.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList10);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList13 = userMapper3.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList10);
        java.util.List<com.unifacisa.tcc.domain.User> userList14 = userMapper0.userDTOsToUsers(userDTOList13);
        com.unifacisa.tcc.domain.User user15 = new com.unifacisa.tcc.domain.User();
        user15.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user15.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper20 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user22 = userMapper20.userFromId((java.lang.Long) 100L);
        user22.setLangKey("");
        java.time.Instant instant25 = user22.getResetDate();
        java.time.Instant instant26 = user22.getCreatedDate();
        user15.setResetDate(instant26);
        boolean boolean28 = user15.getActivated();
        user15.setLangKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str31 = user15.getPassword();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent32 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant33 = persistentAuditEvent32.getAuditEventDate();
        java.time.Instant instant34 = null;
        persistentAuditEvent32.setAuditEventDate(instant34);
        persistentAuditEvent32.setId((java.lang.Long) 1L);
        persistentAuditEvent32.setId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent40 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        persistentAuditEvent40.setData(strMap41);
        persistentAuditEvent40.setAuditEventType("hi!");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent45 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant46 = null;
        persistentAuditEvent45.setAuditEventDate(instant46);
        com.unifacisa.tcc.domain.User user48 = new com.unifacisa.tcc.domain.User();
        user48.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user48.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper53 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user55 = userMapper53.userFromId((java.lang.Long) 100L);
        user55.setLangKey("");
        java.time.Instant instant58 = user55.getResetDate();
        java.time.Instant instant59 = user55.getCreatedDate();
        user48.setResetDate(instant59);
        persistentAuditEvent45.setAuditEventDate(instant59);
        persistentAuditEvent40.setAuditEventDate(instant59);
        persistentAuditEvent32.setAuditEventDate(instant59);
        com.unifacisa.tcc.domain.User user64 = new com.unifacisa.tcc.domain.User();
        user64.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM67 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet68 = managedUserVM67.getAuthorities();
        boolean boolean69 = user64.equals((java.lang.Object) strSet68);
        java.time.Instant instant70 = user64.getLastModifiedDate();
        persistentAuditEvent32.setAuditEventDate(instant70);
        user15.setCreatedDate(instant70);
        java.lang.String str73 = user15.getPassword();
        java.lang.String str74 = user15.getResetKey();
        com.unifacisa.tcc.service.dto.UserDTO userDTO75 = userMapper0.userToUserDTO(user15);
        java.lang.String str76 = userDTO75.getFirstName();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(userDTOList7);
        org.junit.Assert.assertNotNull(userArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(userDTOList12);
        org.junit.Assert.assertNotNull(userDTOList13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(user22);
        org.junit.Assert.assertNull(instant25);
        org.junit.Assert.assertNotNull(instant26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(instant33);
        org.junit.Assert.assertNotNull(user55);
        org.junit.Assert.assertNull(instant58);
        org.junit.Assert.assertNotNull(instant59);
        org.junit.Assert.assertNull(strSet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(instant70);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(userDTO75);
        org.junit.Assert.assertNull(str76);
    }

    @Test
    public void test2328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2328");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str1 = loggerVM0.getName();
        java.lang.String str2 = loggerVM0.getLevel();
        java.lang.String str3 = loggerVM0.toString();
        loggerVM0.setName("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=, createdDate=2021-03-26T03:34:26.101Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:26.101Z, authorities=[]}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "LoggerVM{name='null', level='null'}" + "'", str3, "LoggerVM{name='null', level='null'}");
    }

    @Test
    public void test2329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2329");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user7 = userMapper5.userFromId((java.lang.Long) 100L);
        user7.setLangKey("");
        java.time.Instant instant10 = user7.getResetDate();
        java.time.Instant instant11 = user7.getCreatedDate();
        user2.setResetDate(instant11);
        user2.setId((java.lang.Long) 100L);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(user7);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(instant11);
    }

    @Test
    public void test2330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2330");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.toString();
        user0.setPassword("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        user0.setLastName("User{login='null', firstName='error.validation', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str6 = user0.getLastModifiedBy();
        user0.setResetKey("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.Long long9 = user0.getId();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str1, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(long9);
    }

    @Test
    public void test2331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2331");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.toString();
        boolean boolean2 = managedUserVM0.isActivated();
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        user3.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user3.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user10 = userMapper8.userFromId((java.lang.Long) 100L);
        user10.setLangKey("");
        java.time.Instant instant13 = user10.getResetDate();
        java.time.Instant instant14 = user10.getCreatedDate();
        user3.setResetDate(instant14);
        java.time.Instant instant16 = null;
        user3.setCreatedDate(instant16);
        java.lang.String str18 = user3.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user19 = new com.unifacisa.tcc.domain.User();
        java.lang.String str20 = user19.toString();
        boolean boolean21 = user3.equals((java.lang.Object) user19);
        com.unifacisa.tcc.domain.User user31 = new com.unifacisa.tcc.domain.User();
        user31.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user31.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant36 = user31.getLastModifiedDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper38 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user40 = userMapper38.userFromId((java.lang.Long) 100L);
        user40.setLangKey("");
        java.time.Instant instant43 = user40.getResetDate();
        java.time.Instant instant44 = user40.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        aluno45.setPrimeiroNome("");
        java.lang.String str48 = aluno45.getPrimeiroNome();
        java.lang.Long long49 = aluno45.getMatricula();
        boolean boolean50 = user40.equals((java.lang.Object) aluno45);
        user40.setFirstName("");
        com.unifacisa.tcc.domain.User user53 = new com.unifacisa.tcc.domain.User();
        user53.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user53.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper58 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user60 = userMapper58.userFromId((java.lang.Long) 100L);
        user60.setLangKey("");
        java.time.Instant instant63 = user60.getResetDate();
        java.time.Instant instant64 = user60.getCreatedDate();
        user53.setResetDate(instant64);
        user40.setCreatedDate(instant64);
        java.util.Set<java.lang.String> strSet67 = null;
        com.unifacisa.tcc.service.dto.UserDTO userDTO68 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "LoginVM{username='null', rememberMe=false}", "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}", "error.concurrencyFailure", "LoginVM{username='null', rememberMe=false}", true, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", instant36, "", instant64, strSet67);
        user19.setResetDate(instant64);
        managedUserVM0.setLastModifiedDate(instant64);
        java.lang.String str71 = managedUserVM0.getFirstName();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str1, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(user10);
        org.junit.Assert.assertNull(instant13);
        org.junit.Assert.assertNotNull(instant14);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str20, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(instant36);
        org.junit.Assert.assertNotNull(user40);
        org.junit.Assert.assertNull(instant43);
        org.junit.Assert.assertNotNull(instant44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNull(long49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(user60);
        org.junit.Assert.assertNull(instant63);
        org.junit.Assert.assertNotNull(instant64);
        org.junit.Assert.assertNull(str71);
    }

    @Test
    public void test2332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2332");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.primeiroNome("hi!");
        java.lang.Long long7 = aluno0.getId();
        com.unifacisa.tcc.domain.Aluno aluno9 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        aluno0.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor12 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str13 = professor12.toString();
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor15 = null;
        aluno14.setProfessor(professor15);
        java.lang.Long long17 = aluno14.getMatricula();
        java.lang.String str18 = aluno14.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean21 = aluno19.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor22 = aluno19.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean25 = aluno23.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor28 = null;
        aluno27.setProfessor(professor28);
        java.lang.Long long30 = aluno27.getMatricula();
        java.lang.String str31 = aluno27.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean34 = aluno32.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor35 = aluno32.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor37 = null;
        aluno36.setProfessor(professor37);
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        aluno39.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor43 = null;
        aluno42.setProfessor(professor43);
        aluno42.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor48 = null;
        aluno47.setProfessor(professor48);
        java.lang.Long long50 = aluno47.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno51 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean54 = aluno52.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor56 = null;
        aluno55.setProfessor(professor56);
        com.unifacisa.tcc.domain.Aluno[] alunoArray58 = new com.unifacisa.tcc.domain.Aluno[] { aluno14, aluno19, aluno23, aluno26, aluno27, aluno32, aluno36, aluno39, aluno42, aluno47, aluno51, aluno52, aluno55 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet59 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet59, alunoArray58);
        com.unifacisa.tcc.domain.Professor professor61 = professor12.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet59);
        com.unifacisa.tcc.domain.Aluno aluno62 = aluno0.professor(professor12);
        java.lang.Long long63 = aluno62.getId();
        com.unifacisa.tcc.domain.Aluno aluno65 = aluno62.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa67 = aluno65.primeiroNome("SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=100}");
        aluno65.setMatricula((java.lang.Long) 0L);
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNotNull(aluno9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str13, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(professor22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(long30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(professor35);
        org.junit.Assert.assertNull(long50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(alunoArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(professor61);
        org.junit.Assert.assertNotNull(aluno62);
        org.junit.Assert.assertNull(long63);
        org.junit.Assert.assertNotNull(aluno65);
        org.junit.Assert.assertNotNull(pessoa67);
    }

    @Test
    public void test2333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2333");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        aluno0.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor7 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = professor5.email("");
        com.unifacisa.tcc.domain.Professor professor11 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno12 = aluno0.professor(professor5);
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor14 = null;
        aluno13.setProfessor(professor14);
        java.lang.Long long16 = aluno13.getMatricula();
        java.lang.String str17 = aluno13.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor18 = professor5.removeAluno(aluno13);
        com.unifacisa.tcc.domain.Professor professor19 = aluno13.getProfessor();
        aluno13.setHabilitadoTcc((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(professor7);
        org.junit.Assert.assertNotNull(pessoa9);
        org.junit.Assert.assertNotNull(professor11);
        org.junit.Assert.assertNotNull(aluno12);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNull(professor19);
    }

    @Test
    public void test2334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2334");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.time.Instant instant2 = null;
        persistentAuditEvent0.setAuditEventDate(instant2);
        persistentAuditEvent0.setAuditEventType("LoginVM{username='null', rememberMe=false}");
        java.lang.Long long6 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setPrincipal("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='error.validation', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        persistentAuditEvent0.setId((java.lang.Long) 100L);
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long6);
    }

    @Test
    public void test2335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2335");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}", socialUserConnectionRepository1, connectionFactoryLocator2);
        org.springframework.http.HttpHeaders httpHeaders6 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createEntityCreationAlert("Authority{name=''}", "Authority{name=''}");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.util.MultiValueMap<java.lang.String, org.springframework.social.connect.Connection<?>> strMap7 = customSocialConnectionRepository3.findConnectionsToUsers((org.springframework.util.MultiValueMap<java.lang.String, java.lang.String>) httpHeaders6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(httpHeaders6);
    }

    @Test
    public void test2336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2336");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setDiponibilidade((java.lang.Boolean) false);
        java.lang.String str5 = professor2.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        aluno6.setPrimeiroNome("");
        java.lang.Long long9 = aluno6.getMatricula();
        java.lang.Long long10 = aluno6.getMatricula();
        aluno6.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa14 = aluno6.email("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        com.unifacisa.tcc.domain.Aluno aluno16 = aluno6.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor18 = null;
        aluno17.setProfessor(professor18);
        aluno17.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa23 = aluno17.primeiroNome("hi!");
        java.lang.Long long24 = aluno17.getId();
        com.unifacisa.tcc.domain.Aluno aluno26 = aluno17.habilitadoTcc((java.lang.Boolean) false);
        aluno17.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor29 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str30 = professor29.toString();
        com.unifacisa.tcc.domain.Professor professor32 = professor29.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet33 = professor29.getAlunos();
        java.lang.Long long34 = professor29.getNumeroContato();
        professor29.setMatricula((java.lang.Long) (-1L));
        aluno17.setProfessor(professor29);
        com.unifacisa.tcc.domain.Aluno aluno38 = aluno16.professor(professor29);
        com.unifacisa.tcc.domain.Professor professor39 = professor2.removeAluno(aluno16);
        com.unifacisa.tcc.domain.Professor professor41 = professor2.diponibilidade((java.lang.Boolean) false);
        professor41.setMatricula((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Professor professor45 = professor41.diponibilidade((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertNotNull(pessoa14);
        org.junit.Assert.assertNotNull(aluno16);
        org.junit.Assert.assertNotNull(pessoa23);
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertNotNull(aluno26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str30, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor32);
        org.junit.Assert.assertNotNull(alunoSet33);
        org.junit.Assert.assertNull(long34);
        org.junit.Assert.assertNotNull(aluno38);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(professor41);
        org.junit.Assert.assertNotNull(professor45);
    }

    @Test
    public void test2337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2337");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        aluno7.setPrimeiroNome("");
        java.lang.String str10 = aluno7.getPrimeiroNome();
        java.lang.Long long11 = aluno7.getMatricula();
        boolean boolean12 = user2.equals((java.lang.Object) aluno7);
        java.lang.String str13 = user2.getActivationKey();
        java.lang.String str14 = user2.getFirstName();
        java.lang.String str15 = user2.getImageUrl();
        user2.setCreatedBy("LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='null'}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test2338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2338");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM4 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant5 = managedUserVM4.getCreatedDate();
        java.lang.Long long6 = managedUserVM4.getId();
        java.lang.Long long7 = managedUserVM4.getId();
        java.lang.String str8 = managedUserVM4.toString();
        managedUserVM4.setId((java.lang.Long) (-1L));
        java.util.Set<java.lang.String> strSet11 = managedUserVM4.getAuthorities();
        java.lang.String str12 = managedUserVM4.getImageUrl();
        org.springframework.http.ResponseEntity responseEntity13 = userResource3.createUser(managedUserVM4);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<java.lang.Void> voidResponseEntity15 = userResource3.deleteUser("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str8, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(strSet11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(responseEntity13);
    }

    @Test
    public void test2339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2339");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("error.concurrencyFailure");
        java.lang.Long long12 = socialUserConnection0.getRank();
        socialUserConnection0.setUserId("");
        java.lang.String str15 = socialUserConnection0.getProviderUserId();
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str18 = socialUserConnection0.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str15, "LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "SocialUserConnection{id=null, userId=Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str18, "SocialUserConnection{id=null, userId=Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test2340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2340");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.toString();
        java.time.Instant instant2 = managedUserVM0.getLastModifiedDate();
        managedUserVM0.setId((java.lang.Long) (-1L));
        java.lang.String str5 = managedUserVM0.getImageUrl();
        java.lang.String str6 = managedUserVM0.getPassword();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str1, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(instant2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test2341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2341");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 10L);
        java.lang.String str3 = user2.getPassword();
        java.lang.String str4 = user2.getLastName();
        java.lang.String str5 = user2.getEmail();
        com.unifacisa.tcc.service.dto.UserDTO userDTO6 = new com.unifacisa.tcc.service.dto.UserDTO(user2);
        java.lang.String str7 = userDTO6.getLastName();
        java.util.Set<java.lang.String> strSet8 = userDTO6.getAuthorities();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strSet8);
    }

    @Test
    public void test2342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2342");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.primeiroNome("hi!");
        java.lang.String str7 = aluno0.getEmail();
        com.unifacisa.tcc.domain.Professor professor8 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor9 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor11 = professor9.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa13 = professor9.email("");
        com.unifacisa.tcc.domain.Professor professor15 = professor9.diponibilidade((java.lang.Boolean) true);
        java.lang.String str16 = professor15.toString();
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        aluno17.setPrimeiroNome("");
        java.lang.Long long20 = aluno17.getMatricula();
        java.lang.Long long21 = aluno17.getMatricula();
        aluno17.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor25 = null;
        aluno24.setProfessor(professor25);
        aluno24.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor29 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor31 = professor29.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor32 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor34 = null;
        aluno33.setProfessor(professor34);
        aluno33.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor40 = null;
        aluno39.setProfessor(professor40);
        java.lang.Long long42 = aluno39.getMatricula();
        java.lang.String str43 = aluno39.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean46 = aluno44.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor48 = null;
        aluno47.setProfessor(professor48);
        aluno47.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean54 = aluno52.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        aluno55.setPrimeiroNome("");
        java.lang.Long long58 = aluno55.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno59 = new com.unifacisa.tcc.domain.Aluno();
        aluno59.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray62 = new com.unifacisa.tcc.domain.Aluno[] { aluno33, aluno38, aluno39, aluno44, aluno47, aluno52, aluno55, aluno59 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet63 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet63, alunoArray62);
        professor32.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet63);
        com.unifacisa.tcc.domain.Professor professor66 = professor31.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet63);
        aluno24.setProfessor(professor66);
        aluno17.setProfessor(professor66);
        aluno17.setHabilitadoTcc((java.lang.Boolean) false);
        aluno17.setId((java.lang.Long) 1L);
        java.lang.String str73 = aluno17.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor74 = professor15.addAluno(aluno17);
        com.unifacisa.tcc.domain.Aluno aluno75 = aluno0.professor(professor74);
        aluno0.setSegundoNome("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:50.246Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:50.246Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(professor8);
        org.junit.Assert.assertNotNull(professor11);
        org.junit.Assert.assertNotNull(pessoa13);
        org.junit.Assert.assertNotNull(professor15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}" + "'", str16, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNull(long20);
        org.junit.Assert.assertNull(long21);
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNull(long42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(long58);
        org.junit.Assert.assertNotNull(alunoArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(professor66);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNotNull(professor74);
        org.junit.Assert.assertNotNull(aluno75);
    }

    @Test
    public void test2343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2343");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository0 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator1 = null;
        com.unifacisa.tcc.repository.CustomSocialUsersConnectionRepository customSocialUsersConnectionRepository2 = new com.unifacisa.tcc.repository.CustomSocialUsersConnectionRepository(socialUserConnectionRepository0, connectionFactoryLocator1);
        org.springframework.social.connect.ConnectionRepository connectionRepository4 = customSocialUsersConnectionRepository2.createConnectionRepository("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.springframework.social.connect.ConnectionRepository connectionRepository6 = customSocialUsersConnectionRepository2.createConnectionRepository("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}");
        org.springframework.social.connect.ConnectionRepository connectionRepository8 = customSocialUsersConnectionRepository2.createConnectionRepository("Aluno{id=-1, primeiroNome='', segundoNome='null', matricula='null', email='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', numeroContato='null', habilitadoTcc='false'}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper10 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray11 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList12 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList12, userArray11);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList14 = userMapper10.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList12);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper15 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user17 = userMapper15.userFromId((java.lang.Long) 100L);
        user17.setLangKey("");
        java.time.Instant instant20 = user17.getResetDate();
        java.time.Instant instant21 = user17.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        aluno22.setPrimeiroNome("");
        java.lang.String str25 = aluno22.getPrimeiroNome();
        java.lang.Long long26 = aluno22.getMatricula();
        boolean boolean27 = user17.equals((java.lang.Object) aluno22);
        user17.setFirstName("");
        user17.setActivationKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str32 = user17.getEmail();
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO(user17);
        java.util.Set<java.lang.String> strSet34 = userDTO33.getAuthorities();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet35 = userMapper10.authoritiesFromStrings(strSet34);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet36 = customSocialUsersConnectionRepository2.findUserIdsConnectedTo("ManagedUserVM{} UserDTO{login='User{login='null', firstName='error.validation', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", strSet34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionRepository4);
        org.junit.Assert.assertNotNull(connectionRepository6);
        org.junit.Assert.assertNotNull(connectionRepository8);
        org.junit.Assert.assertNotNull(userArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(userDTOList14);
        org.junit.Assert.assertNotNull(user17);
        org.junit.Assert.assertNull(instant20);
        org.junit.Assert.assertNotNull(instant21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(long26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(authoritySet35);
    }

    @Test
    public void test2344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2344");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("Authority{name='Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}'}", "SocialUserConnection{id=null, userId=, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", (java.lang.Long) 1L, "Aluno{id=null, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='Authority{name='null'}', accessToken='null', secret='null', refreshToken='LoginVM{username='null', rememberMe=null}', expireTime=null}", "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='0', email='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', numeroContato='null', habilitadoTcc='null'}", "", "UserDTO{login='null', firstName='null', lastName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:35:01.295Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:35:01.295Z, authorities=[]}", (java.lang.Long) (-1L));
    }

    @Test
    public void test2345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2345");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            customSocialConnectionRepository3.removeConnections("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2346");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.toString();
        authority0.setName("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Authority{name='null'}" + "'", str1, "Authority{name='null'}");
    }

    @Test
    public void test2347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2347");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor7 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = professor5.email("");
        com.unifacisa.tcc.domain.Professor professor11 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno12 = aluno0.professor(professor11);
        com.unifacisa.tcc.domain.Aluno aluno14 = aluno12.habilitadoTcc((java.lang.Boolean) true);
        java.lang.String str15 = aluno12.getSegundoNome();
        org.junit.Assert.assertNotNull(professor7);
        org.junit.Assert.assertNotNull(pessoa9);
        org.junit.Assert.assertNotNull(professor11);
        org.junit.Assert.assertNotNull(aluno12);
        org.junit.Assert.assertNotNull(aluno14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test2348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2348");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        aluno7.setPrimeiroNome("");
        java.lang.String str10 = aluno7.getPrimeiroNome();
        java.lang.Long long11 = aluno7.getMatricula();
        boolean boolean12 = user2.equals((java.lang.Object) aluno7);
        java.lang.String str13 = user2.getPassword();
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        aluno14.setPrimeiroNome("");
        java.lang.Long long17 = aluno14.getMatricula();
        java.lang.Long long18 = aluno14.getMatricula();
        boolean boolean19 = user2.equals((java.lang.Object) long18);
        user2.setPassword("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertNull(long18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test2349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2349");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = null;
        user2.setLastModifiedDate(instant5);
        user2.setActivated(false);
        user2.setCreatedBy("LoginVM{username='LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}', rememberMe=true}");
        org.junit.Assert.assertNotNull(user2);
    }

    @Test
    public void test2350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2350");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet1 = managedUserVM0.getAuthorities();
        java.time.Instant instant2 = null;
        managedUserVM0.setLastModifiedDate(instant2);
        managedUserVM0.setId((java.lang.Long) 1L);
        java.util.Set<java.lang.String> strSet6 = managedUserVM0.getAuthorities();
        java.lang.String str7 = managedUserVM0.getImageUrl();
        java.lang.String str8 = managedUserVM0.getImageUrl();
        java.util.Set<java.lang.String> strSet9 = managedUserVM0.getAuthorities();
        org.junit.Assert.assertNull(strSet1);
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strSet9);
    }

    @Test
    public void test2351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2351");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        user2.setActivated(true);
        user2.setLastName("Authority{name='Authority{name='error.concurrencyFailure'}'}");
        user2.setLastModifiedBy("LoggerVM{name='Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', level='null'}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
    }

    @Test
    public void test2352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2352");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.primeiroNome("hi!");
        java.lang.Long long7 = aluno0.getId();
        com.unifacisa.tcc.domain.Aluno aluno9 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        aluno0.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor12 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str13 = professor12.toString();
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor15 = null;
        aluno14.setProfessor(professor15);
        java.lang.Long long17 = aluno14.getMatricula();
        java.lang.String str18 = aluno14.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean21 = aluno19.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor22 = aluno19.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean25 = aluno23.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor28 = null;
        aluno27.setProfessor(professor28);
        java.lang.Long long30 = aluno27.getMatricula();
        java.lang.String str31 = aluno27.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean34 = aluno32.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor35 = aluno32.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor37 = null;
        aluno36.setProfessor(professor37);
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        aluno39.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor43 = null;
        aluno42.setProfessor(professor43);
        aluno42.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor48 = null;
        aluno47.setProfessor(professor48);
        java.lang.Long long50 = aluno47.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno51 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean54 = aluno52.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor56 = null;
        aluno55.setProfessor(professor56);
        com.unifacisa.tcc.domain.Aluno[] alunoArray58 = new com.unifacisa.tcc.domain.Aluno[] { aluno14, aluno19, aluno23, aluno26, aluno27, aluno32, aluno36, aluno39, aluno42, aluno47, aluno51, aluno52, aluno55 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet59 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet59, alunoArray58);
        com.unifacisa.tcc.domain.Professor professor61 = professor12.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet59);
        com.unifacisa.tcc.domain.Aluno aluno62 = aluno0.professor(professor12);
        com.unifacisa.tcc.domain.Aluno aluno64 = aluno62.habilitadoTcc((java.lang.Boolean) false);
        java.lang.Boolean boolean65 = aluno62.isHabilitadoTcc();
        aluno62.setNumeroContato((java.lang.Long) (-1L));
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNotNull(aluno9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str13, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(professor22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(long30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(professor35);
        org.junit.Assert.assertNull(long50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(alunoArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(professor61);
        org.junit.Assert.assertNotNull(aluno62);
        org.junit.Assert.assertNotNull(aluno64);
        org.junit.Assert.assertEquals("'" + boolean65 + "' != '" + false + "'", boolean65, false);
    }

    @Test
    public void test2353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2353");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        java.lang.String str5 = user2.getResetKey();
        java.lang.String str6 = user2.getCreatedBy();
        user2.setEmail("error.concurrencyFailure");
        com.unifacisa.tcc.service.dto.UserDTO userDTO9 = new com.unifacisa.tcc.service.dto.UserDTO(user2);
        java.lang.String str10 = userDTO9.getLogin();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test2354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2354");
        com.unifacisa.tcc.service.dto.UserDTO userDTO0 = new com.unifacisa.tcc.service.dto.UserDTO();
        userDTO0.setId((java.lang.Long) (-1L));
        java.lang.String str3 = userDTO0.getEmail();
        userDTO0.setLogin("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:41.180Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:41.180Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test2355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2355");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        java.time.Instant instant14 = null;
        java.time.Instant instant16 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        com.unifacisa.tcc.service.dto.UserDTO userDTO34 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant26, "hi!", instant28, (java.util.Set<java.lang.String>) strSet32);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM35 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant14, "", instant16, (java.util.Set<java.lang.String>) strSet32);
        java.lang.String str36 = managedUserVM35.getLastModifiedBy();
        org.springframework.http.ResponseEntity responseEntity37 = userResource3.createUser(managedUserVM35);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM38 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet39 = managedUserVM38.getAuthorities();
        java.time.Instant instant40 = null;
        managedUserVM38.setLastModifiedDate(instant40);
        managedUserVM38.setId((java.lang.Long) 100L);
        org.springframework.http.ResponseEntity responseEntity44 = userResource3.createUser(managedUserVM38);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM45 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant46 = managedUserVM45.getCreatedDate();
        java.lang.Long long47 = managedUserVM45.getId();
        java.lang.Long long48 = managedUserVM45.getId();
        java.lang.String str49 = managedUserVM45.toString();
        java.lang.String str50 = managedUserVM45.getLangKey();
        java.time.Instant instant51 = managedUserVM45.getLastModifiedDate();
        java.lang.Long long52 = managedUserVM45.getId();
        java.time.Instant instant53 = managedUserVM45.getLastModifiedDate();
        managedUserVM45.setLogin("Aluno{id=1, primeiroNome='', segundoNome='null', matricula='0', email='null', numeroContato='null', habilitadoTcc='false'}");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity responseEntity56 = userResource3.createUser(managedUserVM45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(responseEntity37);
        org.junit.Assert.assertNull(strSet39);
        org.junit.Assert.assertNotNull(responseEntity44);
        org.junit.Assert.assertNull(instant46);
        org.junit.Assert.assertNull(long47);
        org.junit.Assert.assertNull(long48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str49, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(instant51);
        org.junit.Assert.assertNull(long52);
        org.junit.Assert.assertNull(instant53);
    }

    @Test
    public void test2356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2356");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user7 = userMapper5.userFromId((java.lang.Long) 100L);
        user7.setLangKey("");
        java.time.Instant instant10 = user7.getResetDate();
        java.time.Instant instant11 = user7.getCreatedDate();
        user0.setResetDate(instant11);
        java.time.Instant instant13 = null;
        user0.setCreatedDate(instant13);
        java.lang.String str15 = user0.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user16 = new com.unifacisa.tcc.domain.User();
        java.lang.String str17 = user16.toString();
        boolean boolean18 = user0.equals((java.lang.Object) user16);
        com.unifacisa.tcc.domain.User user19 = new com.unifacisa.tcc.domain.User();
        user19.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM22 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet23 = managedUserVM22.getAuthorities();
        boolean boolean24 = user19.equals((java.lang.Object) strSet23);
        java.time.Instant instant25 = user19.getLastModifiedDate();
        user16.setLastModifiedDate(instant25);
        com.unifacisa.tcc.service.dto.UserDTO userDTO27 = new com.unifacisa.tcc.service.dto.UserDTO(user16);
        user16.setImageUrl("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}");
        java.lang.String str30 = user16.getActivationKey();
        java.lang.String str31 = user16.getLastName();
        java.lang.String str32 = user16.getCreatedBy();
        org.junit.Assert.assertNotNull(user7);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(instant11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str17, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(instant25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test2357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2357");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user7 = userMapper5.userFromId((java.lang.Long) 100L);
        user7.setLangKey("");
        java.time.Instant instant10 = user7.getResetDate();
        java.time.Instant instant11 = user7.getCreatedDate();
        user0.setResetDate(instant11);
        java.time.Instant instant13 = null;
        user0.setCreatedDate(instant13);
        java.lang.String str15 = user0.getCreatedBy();
        user0.setEmail("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', secret='null', refreshToken='null', expireTime=100}");
        org.junit.Assert.assertNotNull(user7);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(instant11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str15, "LoginVM{username='null', rememberMe=false}");
    }

    @Test
    public void test2358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2358");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.toString();
        java.time.Instant instant2 = managedUserVM0.getLastModifiedDate();
        java.time.Instant instant3 = null;
        managedUserVM0.setLastModifiedDate(instant3);
        java.lang.String str5 = managedUserVM0.toString();
        managedUserVM0.setId((java.lang.Long) 10L);
        managedUserVM0.setLogin("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str1, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(instant2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str5, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test2359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2359");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant1 = managedUserVM0.getCreatedDate();
        java.lang.Long long2 = managedUserVM0.getId();
        java.lang.Long long3 = managedUserVM0.getId();
        java.lang.String str4 = managedUserVM0.toString();
        managedUserVM0.setId((java.lang.Long) (-1L));
        java.util.Set<java.lang.String> strSet7 = managedUserVM0.getAuthorities();
        java.lang.String str8 = managedUserVM0.getFirstName();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str4, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(strSet7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test2360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2360");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.email("");
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        aluno5.setPrimeiroNome("error.validation");
        com.unifacisa.tcc.domain.Professor professor8 = professor0.addAluno(aluno5);
        com.unifacisa.tcc.domain.Professor professor10 = professor8.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository11 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource12 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository11);
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository13 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource14 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository13);
        com.unifacisa.tcc.domain.Professor professor15 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor17 = professor15.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor15.email("");
        com.unifacisa.tcc.domain.Professor professor21 = professor15.diponibilidade((java.lang.Boolean) true);
        professor21.setId((java.lang.Long) (-1L));
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity24 = professorResource14.createProfessor(professor21);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity25 = professorResource12.createProfessor(professor21);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet26 = professor21.getAlunos();
        com.unifacisa.tcc.domain.Professor professor27 = professor8.alunos(alunoSet26);
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNotNull(professor8);
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNotNull(professor21);
        org.junit.Assert.assertNotNull(professorResponseEntity24);
        org.junit.Assert.assertNotNull(professorResponseEntity25);
        org.junit.Assert.assertNotNull(alunoSet26);
        org.junit.Assert.assertNotNull(professor27);
    }

    @Test
    public void test2361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2361");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant1 = managedUserVM0.getCreatedDate();
        java.lang.String str2 = managedUserVM0.getCreatedBy();
        java.lang.String str3 = managedUserVM0.getImageUrl();
        java.util.Set<java.lang.String> strSet4 = managedUserVM0.getAuthorities();
        java.lang.String str5 = managedUserVM0.getLastModifiedBy();
        java.lang.String str6 = managedUserVM0.getImageUrl();
        java.util.Set<java.lang.String> strSet7 = managedUserVM0.getAuthorities();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(strSet7);
    }

    @Test
    public void test2362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2362");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        java.time.Instant instant14 = null;
        java.time.Instant instant16 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        com.unifacisa.tcc.service.dto.UserDTO userDTO34 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant26, "hi!", instant28, (java.util.Set<java.lang.String>) strSet32);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM35 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 0L, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", "hi!", "hi!", "", true, "hi!", "", "", instant14, "", instant16, (java.util.Set<java.lang.String>) strSet32);
        java.time.Instant instant36 = managedUserVM35.getCreatedDate();
        java.util.Set<java.lang.String> strSet37 = managedUserVM35.getAuthorities();
        org.springframework.http.ResponseEntity responseEntity38 = userResource3.createUser(managedUserVM35);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM39 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet40 = managedUserVM39.getAuthorities();
        java.time.Instant instant41 = null;
        managedUserVM39.setLastModifiedDate(instant41);
        java.lang.String str43 = managedUserVM39.toString();
        java.time.Instant instant44 = null;
        managedUserVM39.setLastModifiedDate(instant44);
        java.lang.String str46 = managedUserVM39.getLangKey();
        java.lang.String str47 = managedUserVM39.getImageUrl();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.service.dto.UserDTO> userDTOResponseEntity48 = userResource3.updateUser(managedUserVM39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(instant36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNotNull(responseEntity38);
        org.junit.Assert.assertNull(strSet40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str43, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test2363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2363");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray7 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList8 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList8, userArray7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper6.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList8);
        java.time.Instant instant21 = null;
        java.time.Instant instant23 = null;
        java.time.Instant instant33 = null;
        java.time.Instant instant35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        com.unifacisa.tcc.service.dto.UserDTO userDTO41 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant33, "hi!", instant35, (java.util.Set<java.lang.String>) strSet39);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM42 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant21, "", instant23, (java.util.Set<java.lang.String>) strSet39);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet43 = userMapper6.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet39);
        user0.setAuthorities(authoritySet43);
        java.lang.Long long45 = user0.getId();
        user0.setActivated(true);
        java.time.Instant instant48 = user0.getCreatedDate();
        user0.setEmail("");
        user0.setId((java.lang.Long) 0L);
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(userArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(authoritySet43);
        org.junit.Assert.assertNull(long45);
        org.junit.Assert.assertNotNull(instant48);
    }

    @Test
    public void test2364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2364");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setNewPassword("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        keyAndPasswordVM0.setNewPassword("LoginVM{username='null', rememberMe=null}");
        java.lang.String str5 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str6 = keyAndPasswordVM0.getNewPassword();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str5, "LoginVM{username='null', rememberMe=null}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str6, "LoginVM{username='null', rememberMe=null}");
    }

    @Test
    public void test2365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2365");
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository0 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource1 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository0);
        com.unifacisa.tcc.domain.Professor professor2 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor4 = professor2.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = professor2.email("");
        com.unifacisa.tcc.domain.Professor professor8 = professor2.diponibilidade((java.lang.Boolean) true);
        professor8.setId((java.lang.Long) (-1L));
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity11 = professorResource1.createProfessor(professor8);
        professor8.setDiponibilidade((java.lang.Boolean) true);
        professor8.setMatricula((java.lang.Long) 0L);
        org.junit.Assert.assertNotNull(professor4);
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNotNull(professor8);
        org.junit.Assert.assertNotNull(professorResponseEntity11);
    }

    @Test
    public void test2366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2366");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor5 = null;
        aluno4.setProfessor(professor5);
        aluno4.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor11 = null;
        aluno10.setProfessor(professor11);
        java.lang.Long long13 = aluno10.getMatricula();
        java.lang.String str14 = aluno10.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean17 = aluno15.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor19 = null;
        aluno18.setProfessor(professor19);
        aluno18.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean25 = aluno23.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        aluno26.setPrimeiroNome("");
        java.lang.Long long29 = aluno26.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        aluno30.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno9, aluno10, aluno15, aluno18, aluno23, aluno26, aluno30 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Professor professor37 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        java.lang.Long long38 = professor37.getMatricula();
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet39 = professor37.getAlunos();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa41 = professor37.email("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa43 = professor37.numeroContato((java.lang.Long) (-1L));
        com.unifacisa.tcc.service.mapper.UserMapper userMapper53 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user55 = userMapper53.userFromId((java.lang.Long) 100L);
        user55.setLangKey("");
        java.time.Instant instant58 = user55.getResetDate();
        java.time.Instant instant59 = user55.getCreatedDate();
        user55.setCreatedBy("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.time.Instant instant62 = user55.getCreatedDate();
        com.unifacisa.tcc.domain.User user64 = new com.unifacisa.tcc.domain.User();
        user64.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user64.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant69 = user64.getLastModifiedDate();
        java.lang.String[] strArray85 = new java.lang.String[] { "LoginVM{username='null', rememberMe=false}", "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=100}", "", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}", "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}", "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='null'}", "LoggerVM{name='null', level='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet86 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet86, strArray85);
        com.unifacisa.tcc.service.dto.UserDTO userDTO88 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}", false, "hi!", "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=2021-03-26T03:34:08.443Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.443Z, authorities=[]}", instant62, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", instant69, (java.util.Set<java.lang.String>) strSet86);
        boolean boolean89 = professor37.equals((java.lang.Object) false);
        professor37.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa93 = professor37.email("LoggerVM{name='null', level='null'}");
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet94 = professor37.getAlunos();
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNull(long38);
        org.junit.Assert.assertNotNull(alunoSet39);
        org.junit.Assert.assertNotNull(pessoa41);
        org.junit.Assert.assertNotNull(pessoa43);
        org.junit.Assert.assertNotNull(user55);
        org.junit.Assert.assertNull(instant58);
        org.junit.Assert.assertNotNull(instant59);
        org.junit.Assert.assertNotNull(instant62);
        org.junit.Assert.assertNotNull(instant69);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(pessoa93);
        org.junit.Assert.assertNotNull(alunoSet94);
    }

    @Test
    public void test2367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2367");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user7 = userMapper5.userFromId((java.lang.Long) 100L);
        user7.setLangKey("");
        java.time.Instant instant10 = user7.getResetDate();
        java.time.Instant instant11 = user7.getCreatedDate();
        user0.setResetDate(instant11);
        boolean boolean13 = user0.getActivated();
        user0.setLangKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str16 = user0.getPassword();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent17 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant18 = persistentAuditEvent17.getAuditEventDate();
        java.time.Instant instant19 = null;
        persistentAuditEvent17.setAuditEventDate(instant19);
        persistentAuditEvent17.setId((java.lang.Long) 1L);
        persistentAuditEvent17.setId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent25 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        persistentAuditEvent25.setData(strMap26);
        persistentAuditEvent25.setAuditEventType("hi!");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent30 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant31 = null;
        persistentAuditEvent30.setAuditEventDate(instant31);
        com.unifacisa.tcc.domain.User user33 = new com.unifacisa.tcc.domain.User();
        user33.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user33.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper38 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user40 = userMapper38.userFromId((java.lang.Long) 100L);
        user40.setLangKey("");
        java.time.Instant instant43 = user40.getResetDate();
        java.time.Instant instant44 = user40.getCreatedDate();
        user33.setResetDate(instant44);
        persistentAuditEvent30.setAuditEventDate(instant44);
        persistentAuditEvent25.setAuditEventDate(instant44);
        persistentAuditEvent17.setAuditEventDate(instant44);
        com.unifacisa.tcc.domain.User user49 = new com.unifacisa.tcc.domain.User();
        user49.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM52 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet53 = managedUserVM52.getAuthorities();
        boolean boolean54 = user49.equals((java.lang.Object) strSet53);
        java.time.Instant instant55 = user49.getLastModifiedDate();
        persistentAuditEvent17.setAuditEventDate(instant55);
        user0.setCreatedDate(instant55);
        java.time.Instant instant58 = user0.getCreatedDate();
        org.junit.Assert.assertNotNull(user7);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(instant11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(instant18);
        org.junit.Assert.assertNotNull(user40);
        org.junit.Assert.assertNull(instant43);
        org.junit.Assert.assertNotNull(instant44);
        org.junit.Assert.assertNull(strSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(instant55);
        org.junit.Assert.assertNotNull(instant58);
    }

    @Test
    public void test2368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2368");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.Long long5 = professor2.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa7 = professor2.email("error.validation");
        professor2.setId((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa11 = professor2.primeiroNome("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa13 = professor2.matricula((java.lang.Long) 0L);
        java.lang.String str14 = pessoa13.getPrimeiroNome();
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNotNull(pessoa7);
        org.junit.Assert.assertNotNull(pessoa11);
        org.junit.Assert.assertNotNull(pessoa13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}" + "'", str14, "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}");
    }

    @Test
    public void test2369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2369");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderUserId("error.concurrencyFailure");
        java.lang.String str3 = socialUserConnection0.getDisplayName();
        socialUserConnection0.setSecret("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        socialUserConnection0.setProfileURL("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test2370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2370");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        java.time.Instant instant6 = user0.getLastModifiedDate();
        user0.setFirstName("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM9 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str10 = managedUserVM9.getImageUrl();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper11 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user13 = userMapper11.userFromId((java.lang.Long) 100L);
        user13.setLangKey("");
        java.time.Instant instant16 = user13.getResetDate();
        java.time.Instant instant17 = user13.getCreatedDate();
        managedUserVM9.setLastModifiedDate(instant17);
        user0.setCreatedDate(instant17);
        user0.setPassword("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        user0.setId((java.lang.Long) 10L);
        boolean boolean24 = user0.getActivated();
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(user13);
        org.junit.Assert.assertNull(instant16);
        org.junit.Assert.assertNotNull(instant17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test2371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2371");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        persistentAuditEvent0.setId((java.lang.Long) 1L);
        java.lang.String str3 = persistentAuditEvent0.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = persistentAuditEvent0.getData();
        java.time.Instant instant5 = persistentAuditEvent0.getAuditEventDate();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent6 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        persistentAuditEvent6.setId((java.lang.Long) 1L);
        java.lang.String str9 = persistentAuditEvent6.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = persistentAuditEvent6.getData();
        java.time.Instant instant11 = persistentAuditEvent6.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = persistentAuditEvent6.getData();
        persistentAuditEvent0.setData(strMap12);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = persistentAuditEvent0.getData();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(instant11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
    }

    @Test
    public void test2372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2372");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.matricula((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.Aluno aluno8 = aluno0.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno10 = aluno0.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno12 = aluno10.habilitadoTcc((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNotNull(aluno8);
        org.junit.Assert.assertNotNull(aluno10);
        org.junit.Assert.assertNotNull(aluno12);
    }

    @Test
    public void test2373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2373");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray7 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList8 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList8, userArray7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper6.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList8);
        java.time.Instant instant21 = null;
        java.time.Instant instant23 = null;
        java.time.Instant instant33 = null;
        java.time.Instant instant35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        com.unifacisa.tcc.service.dto.UserDTO userDTO41 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant33, "hi!", instant35, (java.util.Set<java.lang.String>) strSet39);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM42 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant21, "", instant23, (java.util.Set<java.lang.String>) strSet39);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet43 = userMapper6.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet39);
        user0.setAuthorities(authoritySet43);
        boolean boolean45 = user0.getActivated();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper46 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user48 = userMapper46.userFromId((java.lang.Long) 100L);
        user48.setLangKey("");
        java.time.Instant instant51 = user48.getResetDate();
        java.time.Instant instant52 = user48.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno53 = new com.unifacisa.tcc.domain.Aluno();
        aluno53.setPrimeiroNome("");
        java.lang.String str56 = aluno53.getPrimeiroNome();
        java.lang.Long long57 = aluno53.getMatricula();
        boolean boolean58 = user48.equals((java.lang.Object) aluno53);
        user48.setFirstName("");
        user48.setActivationKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet63 = user48.getAuthorities();
        user0.setAuthorities(authoritySet63);
        com.unifacisa.tcc.service.dto.UserDTO userDTO65 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str66 = userDTO65.getEmail();
        java.lang.String str67 = userDTO65.getLastName();
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(userArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(authoritySet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(user48);
        org.junit.Assert.assertNull(instant51);
        org.junit.Assert.assertNotNull(instant52);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNull(long57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(authoritySet63);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(str67);
    }

    @Test
    public void test2374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2374");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("error.concurrencyFailure");
        socialUserConnection0.setAccessToken("LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}");
        java.lang.String str14 = socialUserConnection0.getAccessToken();
        java.lang.Long long15 = socialUserConnection0.getExpireTime();
        socialUserConnection0.setProviderUserId("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setExpireTime((java.lang.Long) 10L);
        socialUserConnection0.setProviderId("UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}" + "'", str14, "LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}");
        org.junit.Assert.assertNull(long15);
    }

    @Test
    public void test2375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2375");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.time.Instant instant2 = null;
        persistentAuditEvent0.setAuditEventDate(instant2);
        java.time.Instant instant4 = persistentAuditEvent0.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = null;
        persistentAuditEvent0.setData(strMap5);
        java.lang.String str7 = persistentAuditEvent0.getPrincipal();
        java.lang.String str8 = persistentAuditEvent0.getAuditEventType();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper9 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user11 = userMapper9.userFromId((java.lang.Long) 100L);
        user11.setLangKey("");
        java.time.Instant instant14 = user11.getResetDate();
        java.time.Instant instant15 = user11.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno16 = new com.unifacisa.tcc.domain.Aluno();
        aluno16.setPrimeiroNome("");
        java.lang.String str19 = aluno16.getPrimeiroNome();
        java.lang.Long long20 = aluno16.getMatricula();
        boolean boolean21 = user11.equals((java.lang.Object) aluno16);
        com.unifacisa.tcc.domain.User user22 = new com.unifacisa.tcc.domain.User();
        user22.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user22.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant27 = user22.getLastModifiedDate();
        user11.setCreatedDate(instant27);
        persistentAuditEvent0.setAuditEventDate(instant27);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent30 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        persistentAuditEvent30.setId((java.lang.Long) 1L);
        java.lang.String str33 = persistentAuditEvent30.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = persistentAuditEvent30.getData();
        java.time.Instant instant35 = persistentAuditEvent30.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = persistentAuditEvent30.getData();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = persistentAuditEvent30.getData();
        persistentAuditEvent0.setData(strMap37);
        java.lang.String str39 = persistentAuditEvent0.getAuditEventType();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(user11);
        org.junit.Assert.assertNull(instant14);
        org.junit.Assert.assertNotNull(instant15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNull(long20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(instant27);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(instant35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(str39);
    }

    @Test
    public void test2376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2376");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user7 = userMapper5.userFromId((java.lang.Long) 100L);
        user7.setLangKey("");
        java.time.Instant instant10 = user7.getResetDate();
        java.time.Instant instant11 = user7.getCreatedDate();
        user0.setResetDate(instant11);
        java.time.Instant instant13 = null;
        user0.setCreatedDate(instant13);
        java.lang.String str15 = user0.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user16 = new com.unifacisa.tcc.domain.User();
        java.lang.String str17 = user16.toString();
        boolean boolean18 = user0.equals((java.lang.Object) user16);
        com.unifacisa.tcc.domain.User user19 = new com.unifacisa.tcc.domain.User();
        user19.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM22 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet23 = managedUserVM22.getAuthorities();
        boolean boolean24 = user19.equals((java.lang.Object) strSet23);
        java.time.Instant instant25 = user19.getLastModifiedDate();
        user16.setLastModifiedDate(instant25);
        com.unifacisa.tcc.service.dto.UserDTO userDTO27 = new com.unifacisa.tcc.service.dto.UserDTO(user16);
        java.lang.String str28 = userDTO27.getLastName();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent29 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant30 = persistentAuditEvent29.getAuditEventDate();
        java.time.Instant instant31 = null;
        persistentAuditEvent29.setAuditEventDate(instant31);
        java.time.Instant instant33 = persistentAuditEvent29.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        persistentAuditEvent29.setData(strMap34);
        java.time.Instant instant36 = persistentAuditEvent29.getAuditEventDate();
        java.lang.String str37 = persistentAuditEvent29.getAuditEventType();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent38 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant39 = persistentAuditEvent38.getAuditEventDate();
        java.time.Instant instant40 = null;
        persistentAuditEvent38.setAuditEventDate(instant40);
        persistentAuditEvent38.setId((java.lang.Long) 1L);
        persistentAuditEvent38.setId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent46 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        persistentAuditEvent46.setData(strMap47);
        persistentAuditEvent46.setAuditEventType("hi!");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent51 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant52 = null;
        persistentAuditEvent51.setAuditEventDate(instant52);
        com.unifacisa.tcc.domain.User user54 = new com.unifacisa.tcc.domain.User();
        user54.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user54.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper59 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user61 = userMapper59.userFromId((java.lang.Long) 100L);
        user61.setLangKey("");
        java.time.Instant instant64 = user61.getResetDate();
        java.time.Instant instant65 = user61.getCreatedDate();
        user54.setResetDate(instant65);
        persistentAuditEvent51.setAuditEventDate(instant65);
        persistentAuditEvent46.setAuditEventDate(instant65);
        persistentAuditEvent38.setAuditEventDate(instant65);
        com.unifacisa.tcc.domain.User user70 = new com.unifacisa.tcc.domain.User();
        user70.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM73 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet74 = managedUserVM73.getAuthorities();
        boolean boolean75 = user70.equals((java.lang.Object) strSet74);
        java.time.Instant instant76 = user70.getLastModifiedDate();
        persistentAuditEvent38.setAuditEventDate(instant76);
        persistentAuditEvent29.setAuditEventDate(instant76);
        userDTO27.setLastModifiedDate(instant76);
        java.lang.Long long80 = userDTO27.getId();
        org.junit.Assert.assertNotNull(user7);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(instant11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str17, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(instant25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(instant30);
        org.junit.Assert.assertNull(instant33);
        org.junit.Assert.assertNull(instant36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(instant39);
        org.junit.Assert.assertNotNull(user61);
        org.junit.Assert.assertNull(instant64);
        org.junit.Assert.assertNotNull(instant65);
        org.junit.Assert.assertNull(strSet74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(instant76);
        org.junit.Assert.assertNull(long80);
    }

    @Test
    public void test2377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2377");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        aluno7.setPrimeiroNome("");
        java.lang.String str10 = aluno7.getPrimeiroNome();
        java.lang.Long long11 = aluno7.getMatricula();
        boolean boolean12 = user2.equals((java.lang.Object) aluno7);
        user2.setFirstName("");
        user2.setActivationKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet17 = user2.getAuthorities();
        user2.setLastName("error.validation");
        user2.setLastName("Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='false'}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(authoritySet17);
    }

    @Test
    public void test2378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2378");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        java.lang.String str8 = socialUserConnection0.getUserId();
        java.lang.String str9 = socialUserConnection0.getDisplayName();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test2379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2379");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setExpireTime((java.lang.Long) 1L);
        socialUserConnection0.setRank((java.lang.Long) 1L);
        socialUserConnection0.setProviderUserId("SocialUserConnection{id=null, userId=, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        socialUserConnection0.setRank((java.lang.Long) 100L);
    }

    @Test
    public void test2380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2380");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        persistentAuditEvent0.setId((java.lang.Long) 1L);
        java.lang.String str3 = persistentAuditEvent0.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = persistentAuditEvent0.getData();
        java.time.Instant instant5 = persistentAuditEvent0.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = persistentAuditEvent0.getData();
        persistentAuditEvent0.setAuditEventType("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='0', email='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', numeroContato='null', habilitadoTcc='true'}");
        persistentAuditEvent0.setPrincipal("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(strMap6);
    }

    @Test
    public void test2381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2381");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderUserId("error.concurrencyFailure");
        java.lang.Long long3 = socialUserConnection0.getExpireTime();
        java.lang.Long long4 = socialUserConnection0.getId();
        java.lang.String str5 = socialUserConnection0.getRefreshToken();
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test2382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2382");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList1 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM2 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM2.setName("LoginVM{username='null', rememberMe=false}");
        java.lang.String str5 = loggerVM2.getLevel();
        logsResource0.changeLevel(loggerVM2);
        com.unifacisa.tcc.web.rest.LogsResource logsResource7 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM8 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM8.setName("LoginVM{username='null', rememberMe=false}");
        logsResource7.changeLevel(loggerVM8);
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList12 = logsResource7.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM13 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM13.setName("LoginVM{username='null', rememberMe=false}");
        loggerVM13.setName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        logsResource7.changeLevel(loggerVM13);
        com.unifacisa.tcc.web.rest.LogsResource logsResource19 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM20 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM20.setName("LoginVM{username='null', rememberMe=false}");
        logsResource19.changeLevel(loggerVM20);
        loggerVM20.setName("Authority{name='error.concurrencyFailure'}");
        logsResource7.changeLevel(loggerVM20);
        com.unifacisa.tcc.web.rest.LogsResource logsResource27 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM28 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM28.setName("LoginVM{username='null', rememberMe=false}");
        logsResource27.changeLevel(loggerVM28);
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList32 = logsResource27.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM33 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM33.setName("LoginVM{username='null', rememberMe=false}");
        loggerVM33.setName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        logsResource27.changeLevel(loggerVM33);
        com.unifacisa.tcc.web.rest.LogsResource logsResource39 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM40 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM40.setName("LoginVM{username='null', rememberMe=false}");
        logsResource39.changeLevel(loggerVM40);
        loggerVM40.setName("Authority{name='error.concurrencyFailure'}");
        logsResource27.changeLevel(loggerVM40);
        logsResource7.changeLevel(loggerVM40);
        loggerVM40.setLevel("SocialUserConnection{id=null, userId=, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        logsResource0.changeLevel(loggerVM40);
        loggerVM40.setName("SocialUserConnection{id=-1, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='LoggerVM{name='null', level='null'}', secret='null', refreshToken='LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}', expireTime=null}");
        java.lang.String str53 = loggerVM40.getLevel();
        org.junit.Assert.assertNotNull(loggerVMList1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(loggerVMList12);
        org.junit.Assert.assertNotNull(loggerVMList32);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "SocialUserConnection{id=null, userId=, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str53, "SocialUserConnection{id=null, userId=, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test2383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2383");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        java.lang.String str8 = socialUserConnection0.getImageURL();
        socialUserConnection0.setId((java.lang.Long) 10L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper11 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user13 = userMapper11.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper14 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray15 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList16 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList16, userArray15);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList18 = userMapper14.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList16);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper19 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray20 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList21 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList21, userArray20);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList23 = userMapper19.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList21);
        java.time.Instant instant34 = null;
        java.time.Instant instant36 = null;
        java.time.Instant instant46 = null;
        java.time.Instant instant48 = null;
        java.lang.String[] strArray51 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet52 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet52, strArray51);
        com.unifacisa.tcc.service.dto.UserDTO userDTO54 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant46, "hi!", instant48, (java.util.Set<java.lang.String>) strSet52);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM55 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant34, "", instant36, (java.util.Set<java.lang.String>) strSet52);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet56 = userMapper19.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet52);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper57 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray58 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList59 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList59, userArray58);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList61 = userMapper57.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList59);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList62 = userMapper19.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList59);
        java.util.List<com.unifacisa.tcc.domain.User> userList63 = userMapper14.userDTOsToUsers(userDTOList62);
        java.util.List<com.unifacisa.tcc.domain.User> userList64 = userMapper11.userDTOsToUsers(userDTOList62);
        boolean boolean65 = socialUserConnection0.equals((java.lang.Object) userDTOList62);
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='false'}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "error.validation" + "'", str8, "error.validation");
        org.junit.Assert.assertNotNull(user13);
        org.junit.Assert.assertNotNull(userArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(userDTOList18);
        org.junit.Assert.assertNotNull(userArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(userDTOList23);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(authoritySet56);
        org.junit.Assert.assertNotNull(userArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(userDTOList61);
        org.junit.Assert.assertNotNull(userDTOList62);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test2384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2384");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.toString();
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLogin();
        java.lang.String str4 = user0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str1, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str4, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test2385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2385");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        java.time.Instant instant6 = user0.getLastModifiedDate();
        user0.setFirstName("LoginVM{username='null', rememberMe=false}");
        java.lang.String str9 = user0.getLogin();
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test2386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2386");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        java.lang.String str5 = user2.getResetKey();
        com.unifacisa.tcc.domain.Professor professor6 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor8 = professor6.diponibilidade((java.lang.Boolean) true);
        professor8.setDiponibilidade((java.lang.Boolean) false);
        java.lang.String str11 = professor8.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor12 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor14 = professor12.diponibilidade((java.lang.Boolean) true);
        professor14.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        aluno17.setPrimeiroNome("");
        java.lang.Long long20 = aluno17.getMatricula();
        aluno17.setHabilitadoTcc((java.lang.Boolean) false);
        aluno17.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        aluno25.setPrimeiroNome("");
        java.lang.Long long28 = aluno25.getMatricula();
        java.lang.Long long29 = aluno25.getMatricula();
        aluno25.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        aluno32.setPrimeiroNome("");
        java.lang.Long long35 = aluno32.getMatricula();
        java.lang.Long long36 = aluno32.getMatricula();
        aluno32.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray40 = new com.unifacisa.tcc.domain.Aluno[] { aluno17, aluno25, aluno32, aluno39 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet41 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet41, alunoArray40);
        com.unifacisa.tcc.domain.Professor professor43 = professor14.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet41);
        com.unifacisa.tcc.domain.Professor professor44 = professor8.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet41);
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor46 = null;
        aluno45.setProfessor(professor46);
        aluno45.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor50 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor52 = professor50.diponibilidade((java.lang.Boolean) true);
        professor52.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        aluno55.setPrimeiroNome("");
        java.lang.Long long58 = aluno55.getMatricula();
        aluno55.setHabilitadoTcc((java.lang.Boolean) false);
        aluno55.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        aluno63.setPrimeiroNome("");
        java.lang.Long long66 = aluno63.getMatricula();
        java.lang.Long long67 = aluno63.getMatricula();
        aluno63.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno70 = new com.unifacisa.tcc.domain.Aluno();
        aluno70.setPrimeiroNome("");
        java.lang.Long long73 = aluno70.getMatricula();
        java.lang.Long long74 = aluno70.getMatricula();
        aluno70.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno77 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray78 = new com.unifacisa.tcc.domain.Aluno[] { aluno55, aluno63, aluno70, aluno77 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet79 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet79, alunoArray78);
        com.unifacisa.tcc.domain.Professor professor81 = professor52.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet79);
        com.unifacisa.tcc.domain.Aluno aluno82 = aluno45.professor(professor81);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa84 = aluno82.segundoNome("");
        com.unifacisa.tcc.domain.Aluno aluno86 = aluno82.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor87 = professor44.removeAluno(aluno82);
        com.unifacisa.tcc.domain.Professor professor89 = professor87.diponibilidade((java.lang.Boolean) true);
        boolean boolean90 = user2.equals((java.lang.Object) professor87);
        user2.setPassword("ManagedUserVM{} UserDTO{login='User{login='null', firstName='error.validation', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        user2.setActivationKey("LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}");
        java.lang.String str95 = user2.toString();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(professor8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(professor14);
        org.junit.Assert.assertNull(long20);
        org.junit.Assert.assertNull(long28);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNull(long35);
        org.junit.Assert.assertNull(long36);
        org.junit.Assert.assertNotNull(alunoArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(professor43);
        org.junit.Assert.assertNotNull(professor44);
        org.junit.Assert.assertNotNull(professor52);
        org.junit.Assert.assertNull(long58);
        org.junit.Assert.assertNull(long66);
        org.junit.Assert.assertNull(long67);
        org.junit.Assert.assertNull(long73);
        org.junit.Assert.assertNull(long74);
        org.junit.Assert.assertNotNull(alunoArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(professor81);
        org.junit.Assert.assertNotNull(aluno82);
        org.junit.Assert.assertNotNull(pessoa84);
        org.junit.Assert.assertNotNull(aluno86);
        org.junit.Assert.assertNotNull(professor87);
        org.junit.Assert.assertNotNull(professor89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}'}" + "'", str95, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}'}");
    }

    @Test
    public void test2387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2387");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='false'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        org.springframework.social.connect.ConnectionKey connectionKey4 = null;
        // The following exception was thrown during execution in test generation
        try {
            customSocialConnectionRepository3.removeConnection(connectionKey4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2388");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO5 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        user0.setFirstName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str8 = user0.getLangKey();
        user0.setLastModifiedBy("Authority{name='Authority{name='error.concurrencyFailure'}'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO11 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        com.unifacisa.tcc.domain.User user12 = new com.unifacisa.tcc.domain.User();
        user12.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user12.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet17 = user12.getAuthorities();
        java.time.Instant instant18 = user12.getCreatedDate();
        userDTO11.setLastModifiedDate(instant18);
        userDTO11.setId((java.lang.Long) 10L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(authoritySet17);
        org.junit.Assert.assertNotNull(instant18);
    }

    @Test
    public void test2389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2389");
        org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createAlert("Aluno{id=1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}", "LoginVM{username='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', rememberMe=false}");
        org.junit.Assert.assertNotNull(httpHeaders2);
    }

    @Test
    public void test2390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2390");
        org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createAlert("ManagedUserVM{} UserDTO{login='User{login='null', firstName='error.validation', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNotNull(httpHeaders2);
    }

    @Test
    public void test2391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2391");
        org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createEntityUpdateAlert("Aluno{id=null, primeiroNome='hi!', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='10', email='null', numeroContato='null', habilitadoTcc='null'}", "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:50.246Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:50.246Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertNotNull(httpHeaders2);
    }

    @Test
    public void test2392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2392");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor7 = professor5.diponibilidade((java.lang.Boolean) true);
        professor7.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        aluno10.setPrimeiroNome("");
        java.lang.Long long13 = aluno10.getMatricula();
        aluno10.setHabilitadoTcc((java.lang.Boolean) false);
        aluno10.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        aluno18.setPrimeiroNome("");
        java.lang.Long long21 = aluno18.getMatricula();
        java.lang.Long long22 = aluno18.getMatricula();
        aluno18.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        aluno25.setPrimeiroNome("");
        java.lang.Long long28 = aluno25.getMatricula();
        java.lang.Long long29 = aluno25.getMatricula();
        aluno25.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno10, aluno18, aluno25, aluno32 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        com.unifacisa.tcc.domain.Professor professor36 = professor7.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Aluno aluno37 = aluno0.professor(professor36);
        com.unifacisa.tcc.domain.Professor professor38 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor40 = professor38.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor41 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor43 = null;
        aluno42.setProfessor(professor43);
        aluno42.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno48 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor49 = null;
        aluno48.setProfessor(professor49);
        java.lang.Long long51 = aluno48.getMatricula();
        java.lang.String str52 = aluno48.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno53 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean55 = aluno53.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno56 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor57 = null;
        aluno56.setProfessor(professor57);
        aluno56.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno61 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean63 = aluno61.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno64 = new com.unifacisa.tcc.domain.Aluno();
        aluno64.setPrimeiroNome("");
        java.lang.Long long67 = aluno64.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno68 = new com.unifacisa.tcc.domain.Aluno();
        aluno68.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray71 = new com.unifacisa.tcc.domain.Aluno[] { aluno42, aluno47, aluno48, aluno53, aluno56, aluno61, aluno64, aluno68 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet72 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet72, alunoArray71);
        professor41.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet72);
        com.unifacisa.tcc.domain.Professor professor75 = professor40.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet72);
        java.lang.Long long76 = professor75.getMatricula();
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet77 = professor75.getAlunos();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa79 = professor75.segundoNome("hi!");
        aluno37.setProfessor(professor75);
        org.junit.Assert.assertNotNull(professor7);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNull(long21);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNull(long28);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(professor36);
        org.junit.Assert.assertNotNull(aluno37);
        org.junit.Assert.assertNotNull(professor40);
        org.junit.Assert.assertNull(long51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(long67);
        org.junit.Assert.assertNotNull(alunoArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(professor75);
        org.junit.Assert.assertNull(long76);
        org.junit.Assert.assertNotNull(alunoSet77);
        org.junit.Assert.assertNotNull(pessoa79);
    }

    @Test
    public void test2393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2393");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant1 = managedUserVM0.getCreatedDate();
        java.lang.Long long2 = managedUserVM0.getId();
        java.lang.Long long3 = managedUserVM0.getId();
        java.lang.String str4 = managedUserVM0.toString();
        java.lang.String str5 = managedUserVM0.getLangKey();
        java.time.Instant instant6 = managedUserVM0.getLastModifiedDate();
        java.lang.Long long7 = managedUserVM0.getId();
        java.time.Instant instant8 = managedUserVM0.getLastModifiedDate();
        managedUserVM0.setLogin("Aluno{id=1, primeiroNome='', segundoNome='null', matricula='0', email='null', numeroContato='null', habilitadoTcc='false'}");
        managedUserVM0.setLogin("SocialUserConnection{id=-1, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='LoggerVM{name='null', level='null'}', secret='null', refreshToken='LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}', expireTime=null}");
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str4, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(instant6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNull(instant8);
    }

    @Test
    public void test2394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2394");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("hi!", "", "");
        java.lang.String str4 = fieldErrorVM3.getObjectName();
        java.lang.String str5 = fieldErrorVM3.getObjectName();
        java.lang.String str6 = fieldErrorVM3.getField();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test2395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2395");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("Authority{name='Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            customSocialConnectionRepository3.removeConnections("LoginVM{username='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', rememberMe=false}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2396");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        java.lang.Long long3 = aluno0.getMatricula();
        java.lang.Long long4 = aluno0.getMatricula();
        aluno0.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor8 = null;
        aluno7.setProfessor(professor8);
        aluno7.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor12 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor14 = professor12.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor15 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno16 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor17 = null;
        aluno16.setProfessor(professor17);
        aluno16.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor23 = null;
        aluno22.setProfessor(professor23);
        java.lang.Long long25 = aluno22.getMatricula();
        java.lang.String str26 = aluno22.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean29 = aluno27.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor31 = null;
        aluno30.setProfessor(professor31);
        aluno30.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean37 = aluno35.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        aluno38.setPrimeiroNome("");
        java.lang.Long long41 = aluno38.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        aluno42.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray45 = new com.unifacisa.tcc.domain.Aluno[] { aluno16, aluno21, aluno22, aluno27, aluno30, aluno35, aluno38, aluno42 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet46 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet46, alunoArray45);
        professor15.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet46);
        com.unifacisa.tcc.domain.Professor professor49 = professor14.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet46);
        aluno7.setProfessor(professor49);
        aluno0.setProfessor(professor49);
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM55 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("hi!", "", "");
        boolean boolean56 = professor49.equals((java.lang.Object) "");
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(professor14);
        org.junit.Assert.assertNull(long25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(long41);
        org.junit.Assert.assertNotNull(alunoArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(professor49);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test2397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2397");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        authority0.setName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        authority0.setName("error.concurrencyFailure");
        java.lang.String str5 = authority0.toString();
        authority0.setName("LoggerVM{name='Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', level='null'}");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM8 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM8.setKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        keyAndPasswordVM8.setNewPassword("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        keyAndPasswordVM8.setKey("");
        keyAndPasswordVM8.setNewPassword("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        java.lang.String str17 = keyAndPasswordVM8.getNewPassword();
        java.lang.String str18 = keyAndPasswordVM8.getNewPassword();
        boolean boolean19 = authority0.equals((java.lang.Object) keyAndPasswordVM8);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Authority{name='error.concurrencyFailure'}" + "'", str5, "Authority{name='error.concurrencyFailure'}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}" + "'", str17, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}" + "'", str18, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test2398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2398");
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository0 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource1 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository0);
        com.unifacisa.tcc.domain.Professor professor2 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor4 = professor2.diponibilidade((java.lang.Boolean) true);
        professor4.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.Long long7 = professor4.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = professor4.email("error.validation");
        professor4.setId((java.lang.Long) 0L);
        professor4.setDiponibilidade((java.lang.Boolean) true);
        java.lang.Long long14 = professor4.getNumeroContato();
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity15 = professorResource1.createProfessor(professor4);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<java.lang.Void> voidResponseEntity17 = professorResource1.deleteProfessor((java.lang.Long) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor4);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNotNull(pessoa9);
        org.junit.Assert.assertNull(long14);
        org.junit.Assert.assertNotNull(professorResponseEntity15);
    }

    @Test
    public void test2399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2399");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean2 = aluno0.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = aluno0.primeiroNome("Authority{name='error.concurrencyFailure'}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user7 = userMapper5.userFromId((java.lang.Long) 100L);
        user7.setResetKey("hi!");
        user7.setCreatedBy("ManagedUserVM{} UserDTO{login='', firstName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', lastName='', email='hi!', imageUrl='hi!', activated=false, langKey='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', createdBy=error.validation, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        boolean boolean12 = pessoa4.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='', firstName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', lastName='', email='hi!', imageUrl='hi!', activated=false, langKey='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', createdBy=error.validation, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNotNull(user7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test2400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2400");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = null;
        persistentAuditEvent0.setData(strMap1);
        persistentAuditEvent0.setAuditEventType("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.util.Map<java.lang.String, java.lang.String> strMap5 = persistentAuditEvent0.getData();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent6 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant7 = persistentAuditEvent6.getAuditEventDate();
        java.time.Instant instant8 = null;
        persistentAuditEvent6.setAuditEventDate(instant8);
        persistentAuditEvent6.setAuditEventType("LoginVM{username='null', rememberMe=false}");
        java.lang.Long long12 = persistentAuditEvent6.getId();
        persistentAuditEvent6.setPrincipal("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='error.validation', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.util.Map<java.lang.String, java.lang.String> strMap15 = persistentAuditEvent6.getData();
        persistentAuditEvent0.setData(strMap15);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(instant7);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test2401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2401");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getDisplayName();
        socialUserConnection0.setSecret("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        socialUserConnection0.setProviderId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setDisplayName("Authority{name='error.concurrencyFailure'}");
        java.lang.Long long10 = socialUserConnection0.getRank();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(long10);
    }

    @Test
    public void test2402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2402");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        java.lang.String str8 = socialUserConnection0.getProfileURL();
        java.lang.String str9 = socialUserConnection0.getImageURL();
        socialUserConnection0.setProviderUserId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setProviderUserId("error.validation");
        java.lang.Long long14 = socialUserConnection0.getExpireTime();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "error.validation" + "'", str9, "error.validation");
        org.junit.Assert.assertNull(long14);
    }

    @Test
    public void test2403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2403");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.time.Instant instant2 = null;
        persistentAuditEvent0.setAuditEventDate(instant2);
        java.time.Instant instant4 = persistentAuditEvent0.getAuditEventDate();
        java.lang.String str5 = persistentAuditEvent0.getAuditEventType();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user8 = userMapper6.userFromId((java.lang.Long) 100L);
        user8.setLangKey("");
        java.time.Instant instant11 = user8.getResetDate();
        java.time.Instant instant12 = user8.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        aluno13.setPrimeiroNome("");
        java.lang.String str16 = aluno13.getPrimeiroNome();
        java.lang.Long long17 = aluno13.getMatricula();
        boolean boolean18 = user8.equals((java.lang.Object) aluno13);
        user8.setFirstName("");
        com.unifacisa.tcc.domain.User user21 = new com.unifacisa.tcc.domain.User();
        user21.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user21.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper26 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user28 = userMapper26.userFromId((java.lang.Long) 100L);
        user28.setLangKey("");
        java.time.Instant instant31 = user28.getResetDate();
        java.time.Instant instant32 = user28.getCreatedDate();
        user21.setResetDate(instant32);
        user8.setCreatedDate(instant32);
        persistentAuditEvent0.setAuditEventDate(instant32);
        java.time.Instant instant36 = persistentAuditEvent0.getAuditEventDate();
        java.time.Instant instant37 = persistentAuditEvent0.getAuditEventDate();
        java.lang.String str38 = persistentAuditEvent0.getPrincipal();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(user8);
        org.junit.Assert.assertNull(instant11);
        org.junit.Assert.assertNotNull(instant12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(user28);
        org.junit.Assert.assertNull(instant31);
        org.junit.Assert.assertNotNull(instant32);
        org.junit.Assert.assertNotNull(instant36);
        org.junit.Assert.assertNotNull(instant37);
        org.junit.Assert.assertNull(str38);
    }

    @Test
    public void test2404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2404");
        org.springframework.data.domain.Page page0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.PaginationUtil.generatePaginationHttpHeaders(page0, "Professor{id=null, primeiroNome='null', segundoNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2405");
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository0 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource1 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository0);
        com.unifacisa.tcc.domain.Professor professor2 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str3 = professor2.toString();
        com.unifacisa.tcc.domain.Professor professor5 = professor2.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet6 = professor2.getAlunos();
        java.lang.Long long7 = professor2.getNumeroContato();
        professor2.setMatricula((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        aluno10.setPrimeiroNome("");
        java.lang.String str13 = aluno10.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor14 = professor2.addAluno(aluno10);
        com.unifacisa.tcc.domain.Professor professor15 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor17 = professor15.diponibilidade((java.lang.Boolean) true);
        professor17.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor17.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        aluno22.setPrimeiroNome("");
        java.lang.String str25 = aluno22.getPrimeiroNome();
        java.lang.Long long26 = aluno22.getMatricula();
        java.lang.Boolean boolean27 = aluno22.isHabilitadoTcc();
        java.lang.String str28 = aluno22.toString();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.Long long30 = aluno29.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa32 = aluno29.matricula((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        aluno33.setPrimeiroNome("");
        java.lang.Long long36 = aluno33.getMatricula();
        java.lang.Long long37 = aluno33.getMatricula();
        aluno33.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa41 = aluno33.email("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        com.unifacisa.tcc.domain.Aluno aluno43 = aluno33.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean46 = aluno44.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.Long long48 = aluno47.getId();
        aluno47.setHabilitadoTcc((java.lang.Boolean) true);
        java.lang.String str51 = aluno47.toString();
        com.unifacisa.tcc.domain.Aluno[] alunoArray52 = new com.unifacisa.tcc.domain.Aluno[] { aluno22, aluno29, aluno33, aluno44, aluno47 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet53 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet53, alunoArray52);
        com.unifacisa.tcc.domain.Professor professor55 = professor17.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet53);
        java.lang.String str56 = professor17.toString();
        professor17.setMatricula((java.lang.Long) 100L);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet59 = professor17.getAlunos();
        com.unifacisa.tcc.domain.Professor professor60 = professor14.alunos(alunoSet59);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity61 = professorResource1.updateProfessor(professor14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor5);
        org.junit.Assert.assertNotNull(alunoSet6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(professor14);
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(long26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str28, "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(long30);
        org.junit.Assert.assertNotNull(pessoa32);
        org.junit.Assert.assertNull(long36);
        org.junit.Assert.assertNull(long37);
        org.junit.Assert.assertNotNull(pessoa41);
        org.junit.Assert.assertNotNull(aluno43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(long48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str51, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertNotNull(alunoArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}" + "'", str56, "Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNotNull(alunoSet59);
        org.junit.Assert.assertNotNull(professor60);
    }

    @Test
    public void test2406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2406");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        org.springframework.http.HttpHeaders httpHeaders6 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createAlert("Aluno{id=null, primeiroNome='null', segundoNome='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "ManagedUserVM{} UserDTO{login='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.util.MultiValueMap<java.lang.String, org.springframework.social.connect.Connection<?>> strMap7 = customSocialConnectionRepository3.findConnectionsToUsers((org.springframework.util.MultiValueMap<java.lang.String, java.lang.String>) httpHeaders6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(httpHeaders6);
    }

    @Test
    public void test2407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2407");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 10L);
        java.lang.String str5 = socialUserConnection0.getDisplayName();
        java.lang.String str6 = socialUserConnection0.getAccessToken();
        socialUserConnection0.setUserId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}");
        java.lang.String str9 = socialUserConnection0.getProfileURL();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test2408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2408");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper1 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray2 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList3 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList3, userArray2);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList5 = userMapper1.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList3);
        java.time.Instant instant16 = null;
        java.time.Instant instant18 = null;
        java.time.Instant instant28 = null;
        java.time.Instant instant30 = null;
        java.lang.String[] strArray33 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        com.unifacisa.tcc.service.dto.UserDTO userDTO36 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant28, "hi!", instant30, (java.util.Set<java.lang.String>) strSet34);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM37 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant16, "", instant18, (java.util.Set<java.lang.String>) strSet34);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet38 = userMapper1.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet34);
        com.unifacisa.tcc.domain.User user39 = new com.unifacisa.tcc.domain.User();
        user39.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user39.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper44 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user46 = userMapper44.userFromId((java.lang.Long) 100L);
        user46.setLangKey("");
        java.time.Instant instant49 = user46.getResetDate();
        java.time.Instant instant50 = user46.getCreatedDate();
        user39.setResetDate(instant50);
        java.time.Instant instant52 = null;
        user39.setCreatedDate(instant52);
        java.lang.String str54 = user39.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user55 = new com.unifacisa.tcc.domain.User();
        java.lang.String str56 = user55.toString();
        boolean boolean57 = user39.equals((java.lang.Object) user55);
        user39.setEmail("");
        com.unifacisa.tcc.service.dto.UserDTO userDTO60 = userMapper1.userToUserDTO(user39);
        com.unifacisa.tcc.service.dto.UserDTO userDTO61 = userMapper0.userToUserDTO(user39);
        user39.setLangKey("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:08.859Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.859Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        java.lang.String str64 = user39.getLangKey();
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(userDTOList5);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(authoritySet38);
        org.junit.Assert.assertNotNull(user46);
        org.junit.Assert.assertNull(instant49);
        org.junit.Assert.assertNotNull(instant50);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str56, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(userDTO60);
        org.junit.Assert.assertNotNull(userDTO61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:08.859Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.859Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}" + "'", str64, "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:08.859Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.859Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
    }

    @Test
    public void test2409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2409");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 10L);
        java.time.Instant instant3 = user2.getResetDate();
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository4 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator5 = null;
        com.unifacisa.tcc.repository.CustomSocialUsersConnectionRepository customSocialUsersConnectionRepository6 = new com.unifacisa.tcc.repository.CustomSocialUsersConnectionRepository(socialUserConnectionRepository4, connectionFactoryLocator5);
        org.springframework.social.connect.ConnectionRepository connectionRepository8 = customSocialUsersConnectionRepository6.createConnectionRepository("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.springframework.social.connect.ConnectionRepository connectionRepository10 = customSocialUsersConnectionRepository6.createConnectionRepository("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}");
        boolean boolean11 = user2.equals((java.lang.Object) customSocialUsersConnectionRepository6);
        java.lang.String str12 = user2.toString();
        java.time.Instant instant13 = user2.getResetDate();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant3);
        org.junit.Assert.assertNotNull(connectionRepository8);
        org.junit.Assert.assertNotNull(connectionRepository10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str12, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(instant13);
    }

    @Test
    public void test2410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2410");
        org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createEntityDeletionAlert("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='LoggerVM{name='null', level='null'}', secret='null', refreshToken='null', expireTime=null}", "User{login='null', firstName='null', lastName='null', email='Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(httpHeaders2);
    }

    @Test
    public void test2411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2411");
        org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createAlert("Aluno{id=null, primeiroNome='hi!', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='10', email='null', numeroContato='null', habilitadoTcc='null'}", "ManagedUserVM{} UserDTO{login='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNotNull(httpHeaders2);
    }

    @Test
    public void test2412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2412");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setDisplayName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setRefreshToken("");
        socialUserConnection0.setImageURL("");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test2413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2413");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.toString();
        java.lang.String str2 = managedUserVM0.getLogin();
        java.lang.String str3 = managedUserVM0.getFirstName();
        java.time.Instant instant4 = managedUserVM0.getCreatedDate();
        java.lang.String str5 = managedUserVM0.getPassword();
        java.lang.String str6 = managedUserVM0.getLastModifiedBy();
        java.util.Set<java.lang.String> strSet7 = managedUserVM0.getAuthorities();
        java.lang.String str8 = managedUserVM0.getLastName();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str1, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(strSet7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test2414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2414");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        user2.setPassword("");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent9 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant10 = persistentAuditEvent9.getAuditEventDate();
        java.time.Instant instant11 = null;
        persistentAuditEvent9.setAuditEventDate(instant11);
        java.time.Instant instant13 = persistentAuditEvent9.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        persistentAuditEvent9.setData(strMap14);
        java.lang.String str16 = persistentAuditEvent9.getPrincipal();
        boolean boolean17 = user2.equals((java.lang.Object) persistentAuditEvent9);
        user2.setLangKey("SocialUserConnection{id=100, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='error.validation', accessToken='null', secret='null', refreshToken='null', expireTime=-1}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNull(instant13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test2415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2415");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getCreatedDate();
        com.unifacisa.tcc.domain.User user6 = new com.unifacisa.tcc.domain.User();
        java.lang.String str7 = user6.toString();
        user6.setResetKey("error.concurrencyFailure");
        boolean boolean10 = user2.equals((java.lang.Object) user6);
        com.unifacisa.tcc.service.dto.UserDTO userDTO11 = new com.unifacisa.tcc.service.dto.UserDTO(user2);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(instant5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str7, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test2416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2416");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        authority0.setName("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
        java.lang.String str3 = authority0.getName();
        authority0.setName("Aluno{id=1, primeiroNome='', segundoNome='null', matricula='0', email='null', numeroContato='null', habilitadoTcc='false'}");
        authority0.setName("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}" + "'", str3, "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
    }

    @Test
    public void test2417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2417");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = null;
        persistentAuditEvent0.setAuditEventDate(instant1);
        persistentAuditEvent0.setAuditEventType("error.validation");
        persistentAuditEvent0.setAuditEventType("LoginVM{username='null', rememberMe=false}");
        java.lang.Long long7 = persistentAuditEvent0.getId();
        java.lang.String str8 = persistentAuditEvent0.getPrincipal();
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test2418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2418");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        java.lang.String str8 = socialUserConnection0.getImageURL();
        java.lang.String str9 = socialUserConnection0.getProviderUserId();
        socialUserConnection0.setDisplayName("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        java.lang.Class<?> wildcardClass12 = socialUserConnection0.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "error.validation" + "'", str8, "error.validation");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test2419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2419");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderUserId("error.concurrencyFailure");
        socialUserConnection0.setProviderUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str5 = socialUserConnection0.getAccessToken();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user8 = userMapper6.userFromId((java.lang.Long) 100L);
        user8.setResetKey("hi!");
        java.lang.String str11 = user8.getResetKey();
        user8.setId((java.lang.Long) 0L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper14 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user16 = userMapper14.userFromId((java.lang.Long) 100L);
        user16.setResetKey("hi!");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper19 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user21 = userMapper19.userFromId((java.lang.Long) 100L);
        user21.setLangKey("");
        java.time.Instant instant24 = user21.getResetDate();
        java.time.Instant instant25 = user21.getCreatedDate();
        user16.setResetDate(instant25);
        user8.setResetDate(instant25);
        com.unifacisa.tcc.service.dto.UserDTO userDTO28 = new com.unifacisa.tcc.service.dto.UserDTO(user8);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent29 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        persistentAuditEvent29.setData(strMap30);
        persistentAuditEvent29.setAuditEventType("hi!");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent34 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant35 = null;
        persistentAuditEvent34.setAuditEventDate(instant35);
        com.unifacisa.tcc.domain.User user37 = new com.unifacisa.tcc.domain.User();
        user37.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user37.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper42 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user44 = userMapper42.userFromId((java.lang.Long) 100L);
        user44.setLangKey("");
        java.time.Instant instant47 = user44.getResetDate();
        java.time.Instant instant48 = user44.getCreatedDate();
        user37.setResetDate(instant48);
        persistentAuditEvent34.setAuditEventDate(instant48);
        persistentAuditEvent29.setAuditEventDate(instant48);
        user8.setCreatedDate(instant48);
        boolean boolean53 = socialUserConnection0.equals((java.lang.Object) instant48);
        java.lang.String str54 = socialUserConnection0.getProviderUserId();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(user8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(user16);
        org.junit.Assert.assertNotNull(user21);
        org.junit.Assert.assertNull(instant24);
        org.junit.Assert.assertNotNull(instant25);
        org.junit.Assert.assertNotNull(user44);
        org.junit.Assert.assertNull(instant47);
        org.junit.Assert.assertNotNull(instant48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str54, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
    }

    @Test
    public void test2420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2420");
        org.springframework.http.HttpHeaders httpHeaders3 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createFailureAlert("", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}', activated='false', langKey='null', activationKey='null'}", "User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}");
        org.junit.Assert.assertNotNull(httpHeaders3);
    }

    @Test
    public void test2421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2421");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.primeiroNome("hi!");
        java.lang.Long long7 = aluno0.getId();
        com.unifacisa.tcc.domain.Aluno aluno9 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor10 = aluno0.getProfessor();
        java.lang.Boolean boolean11 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor12 = aluno0.getProfessor();
        // The following exception was thrown during execution in test generation
        try {
            professor12.setId((java.lang.Long) 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNotNull(aluno9);
        org.junit.Assert.assertNull(professor10);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNull(professor12);
    }

    @Test
    public void test2422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2422");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray7 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList8 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList8, userArray7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper6.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList8);
        java.time.Instant instant21 = null;
        java.time.Instant instant23 = null;
        java.time.Instant instant33 = null;
        java.time.Instant instant35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        com.unifacisa.tcc.service.dto.UserDTO userDTO41 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant33, "hi!", instant35, (java.util.Set<java.lang.String>) strSet39);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM42 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant21, "", instant23, (java.util.Set<java.lang.String>) strSet39);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet43 = userMapper6.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet39);
        user0.setAuthorities(authoritySet43);
        java.lang.String str45 = user0.getFirstName();
        user0.setFirstName("LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}");
        user0.setActivated(true);
        user0.setActivationKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str52 = user0.getEmail();
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(userArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(authoritySet43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str52);
    }

    @Test
    public void test2423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2423");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.primeiroNome("hi!");
        java.lang.Long long7 = aluno0.getId();
        com.unifacisa.tcc.domain.Aluno aluno9 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        java.lang.Long long10 = aluno9.getId();
        aluno9.setNumeroContato((java.lang.Long) (-1L));
        com.unifacisa.tcc.service.mapper.UserMapper userMapper13 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user15 = userMapper13.userFromId((java.lang.Long) 100L);
        user15.setLangKey("");
        java.time.Instant instant18 = user15.getResetDate();
        java.time.Instant instant19 = user15.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        aluno20.setPrimeiroNome("");
        java.lang.String str23 = aluno20.getPrimeiroNome();
        java.lang.Long long24 = aluno20.getMatricula();
        boolean boolean25 = user15.equals((java.lang.Object) aluno20);
        java.lang.String str26 = user15.getPassword();
        boolean boolean27 = aluno9.equals((java.lang.Object) str26);
        java.lang.String str28 = aluno9.toString();
        com.unifacisa.tcc.domain.Aluno aluno30 = aluno9.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor31 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor33 = professor31.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa35 = professor31.email("");
        com.unifacisa.tcc.domain.Professor professor37 = professor31.diponibilidade((java.lang.Boolean) true);
        professor37.setId((java.lang.Long) (-1L));
        aluno9.setProfessor(professor37);
        com.unifacisa.tcc.domain.Professor professor41 = aluno9.getProfessor();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa43 = aluno9.segundoNome("LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=false}");
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNotNull(aluno9);
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertNotNull(user15);
        org.junit.Assert.assertNull(instant18);
        org.junit.Assert.assertNotNull(instant19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}" + "'", str28, "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        org.junit.Assert.assertNotNull(aluno30);
        org.junit.Assert.assertNotNull(professor33);
        org.junit.Assert.assertNotNull(pessoa35);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNotNull(professor41);
        org.junit.Assert.assertNotNull(pessoa43);
    }

    @Test
    public void test2424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2424");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.email("");
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        aluno5.setPrimeiroNome("");
        aluno5.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor10 = professor0.addAluno(aluno5);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa12 = aluno5.matricula((java.lang.Long) 100L);
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNotNull(pessoa12);
    }

    @Test
    public void test2425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2425");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor2.setPrimeiroNome("LoginVM{username='null', rememberMe=false}");
        java.lang.Long long7 = professor2.getNumeroContato();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = professor2.primeiroNome("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        java.lang.Long long10 = professor2.getNumeroContato();
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper12 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user14 = userMapper12.userFromId((java.lang.Long) 100L);
        user14.setLangKey("");
        java.time.Instant instant17 = user14.getResetDate();
        java.time.Instant instant18 = user14.getCreatedDate();
        user11.setCreatedDate(instant18);
        boolean boolean20 = user11.getActivated();
        com.unifacisa.tcc.domain.User user30 = new com.unifacisa.tcc.domain.User();
        user30.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user30.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant35 = user30.getLastModifiedDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper37 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user39 = userMapper37.userFromId((java.lang.Long) 100L);
        user39.setLangKey("");
        java.time.Instant instant42 = user39.getResetDate();
        java.time.Instant instant43 = user39.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        aluno44.setPrimeiroNome("");
        java.lang.String str47 = aluno44.getPrimeiroNome();
        java.lang.Long long48 = aluno44.getMatricula();
        boolean boolean49 = user39.equals((java.lang.Object) aluno44);
        user39.setFirstName("");
        com.unifacisa.tcc.domain.User user52 = new com.unifacisa.tcc.domain.User();
        user52.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user52.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper57 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user59 = userMapper57.userFromId((java.lang.Long) 100L);
        user59.setLangKey("");
        java.time.Instant instant62 = user59.getResetDate();
        java.time.Instant instant63 = user59.getCreatedDate();
        user52.setResetDate(instant63);
        user39.setCreatedDate(instant63);
        java.util.Set<java.lang.String> strSet66 = null;
        com.unifacisa.tcc.service.dto.UserDTO userDTO67 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "LoginVM{username='null', rememberMe=false}", "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}", "error.concurrencyFailure", "LoginVM{username='null', rememberMe=false}", true, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", instant35, "", instant63, strSet66);
        user11.setLastModifiedDate(instant35);
        boolean boolean69 = professor2.equals((java.lang.Object) user11);
        com.unifacisa.tcc.domain.Aluno aluno70 = new com.unifacisa.tcc.domain.Aluno();
        aluno70.setPrimeiroNome("");
        aluno70.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor75 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor77 = professor75.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa79 = professor75.email("");
        com.unifacisa.tcc.domain.Professor professor81 = professor75.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno82 = aluno70.professor(professor75);
        com.unifacisa.tcc.domain.Aluno aluno83 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor84 = null;
        aluno83.setProfessor(professor84);
        java.lang.Long long86 = aluno83.getMatricula();
        java.lang.String str87 = aluno83.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor88 = professor75.removeAluno(aluno83);
        java.lang.String str89 = aluno83.getEmail();
        java.lang.Boolean boolean90 = aluno83.isHabilitadoTcc();
        boolean boolean91 = user11.equals((java.lang.Object) boolean90);
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNotNull(pessoa9);
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertNotNull(user14);
        org.junit.Assert.assertNull(instant17);
        org.junit.Assert.assertNotNull(instant18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(instant35);
        org.junit.Assert.assertNotNull(user39);
        org.junit.Assert.assertNull(instant42);
        org.junit.Assert.assertNotNull(instant43);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNull(long48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(user59);
        org.junit.Assert.assertNull(instant62);
        org.junit.Assert.assertNotNull(instant63);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(professor77);
        org.junit.Assert.assertNotNull(pessoa79);
        org.junit.Assert.assertNotNull(professor81);
        org.junit.Assert.assertNotNull(aluno82);
        org.junit.Assert.assertNull(long86);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNotNull(professor88);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNull(boolean90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test2426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2426");
        com.unifacisa.tcc.repository.AlunoRepository alunoRepository0 = null;
        com.unifacisa.tcc.web.rest.AlunoResource alunoResource1 = new com.unifacisa.tcc.web.rest.AlunoResource(alunoRepository0);
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor3 = null;
        aluno2.setProfessor(professor3);
        aluno2.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = aluno2.primeiroNome("hi!");
        java.lang.Long long9 = aluno2.getId();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Aluno> alunoResponseEntity10 = alunoResource1.createAluno(aluno2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(pessoa8);
        org.junit.Assert.assertNull(long9);
    }

    @Test
    public void test2427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2427");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.email("");
        com.unifacisa.tcc.domain.Professor professor6 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor7 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor9 = professor7.diponibilidade((java.lang.Boolean) true);
        professor9.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        aluno12.setPrimeiroNome("");
        java.lang.Long long15 = aluno12.getMatricula();
        aluno12.setHabilitadoTcc((java.lang.Boolean) false);
        aluno12.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        aluno20.setPrimeiroNome("");
        java.lang.Long long23 = aluno20.getMatricula();
        java.lang.Long long24 = aluno20.getMatricula();
        aluno20.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        aluno27.setPrimeiroNome("");
        java.lang.Long long30 = aluno27.getMatricula();
        java.lang.Long long31 = aluno27.getMatricula();
        aluno27.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray35 = new com.unifacisa.tcc.domain.Aluno[] { aluno12, aluno20, aluno27, aluno34 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet36 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet36, alunoArray35);
        com.unifacisa.tcc.domain.Professor professor38 = professor9.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet36);
        com.unifacisa.tcc.domain.Professor professor39 = professor6.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet36);
        java.lang.String str40 = professor6.toString();
        com.unifacisa.tcc.domain.Professor professor41 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor43 = professor41.diponibilidade((java.lang.Boolean) true);
        professor43.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.Long long46 = professor43.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa48 = professor43.email("error.validation");
        professor43.setId((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa52 = professor43.primeiroNome("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}");
        java.lang.String str53 = professor43.getEmail();
        com.unifacisa.tcc.domain.Professor professor55 = professor43.diponibilidade((java.lang.Boolean) false);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet56 = professor43.getAlunos();
        professor6.setAlunos(alunoSet56);
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNotNull(professor6);
        org.junit.Assert.assertNotNull(professor9);
        org.junit.Assert.assertNull(long15);
        org.junit.Assert.assertNull(long23);
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertNull(long30);
        org.junit.Assert.assertNull(long31);
        org.junit.Assert.assertNotNull(alunoArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(professor38);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}" + "'", str40, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNotNull(professor43);
        org.junit.Assert.assertNull(long46);
        org.junit.Assert.assertNotNull(pessoa48);
        org.junit.Assert.assertNotNull(pessoa52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "error.validation" + "'", str53, "error.validation");
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNotNull(alunoSet56);
    }

    @Test
    public void test2428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2428");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderUserId("error.concurrencyFailure");
        java.lang.String str3 = socialUserConnection0.getProviderUserId();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "error.concurrencyFailure" + "'", str3, "error.concurrencyFailure");
    }

    @Test
    public void test2429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2429");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        java.lang.Long long3 = aluno0.getMatricula();
        java.lang.Long long4 = aluno0.getMatricula();
        aluno0.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = aluno0.email("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        aluno0.setNumeroContato((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean13 = aluno11.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor14 = aluno11.getProfessor();
        java.lang.String str15 = aluno11.toString();
        com.unifacisa.tcc.domain.Professor professor16 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor18 = professor16.diponibilidade((java.lang.Boolean) true);
        professor18.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        aluno21.setPrimeiroNome("");
        java.lang.Long long24 = aluno21.getMatricula();
        aluno21.setHabilitadoTcc((java.lang.Boolean) false);
        aluno21.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        aluno29.setPrimeiroNome("");
        java.lang.Long long32 = aluno29.getMatricula();
        java.lang.Long long33 = aluno29.getMatricula();
        aluno29.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        aluno36.setPrimeiroNome("");
        java.lang.Long long39 = aluno36.getMatricula();
        java.lang.Long long40 = aluno36.getMatricula();
        aluno36.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray44 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno29, aluno36, aluno43 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet45 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet45, alunoArray44);
        com.unifacisa.tcc.domain.Professor professor47 = professor18.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet45);
        com.unifacisa.tcc.domain.Professor professor48 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor50 = professor48.diponibilidade((java.lang.Boolean) true);
        professor50.setDiponibilidade((java.lang.Boolean) false);
        java.lang.String str53 = professor50.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor54 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor56 = professor54.diponibilidade((java.lang.Boolean) true);
        professor56.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno59 = new com.unifacisa.tcc.domain.Aluno();
        aluno59.setPrimeiroNome("");
        java.lang.Long long62 = aluno59.getMatricula();
        aluno59.setHabilitadoTcc((java.lang.Boolean) false);
        aluno59.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno67 = new com.unifacisa.tcc.domain.Aluno();
        aluno67.setPrimeiroNome("");
        java.lang.Long long70 = aluno67.getMatricula();
        java.lang.Long long71 = aluno67.getMatricula();
        aluno67.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno74 = new com.unifacisa.tcc.domain.Aluno();
        aluno74.setPrimeiroNome("");
        java.lang.Long long77 = aluno74.getMatricula();
        java.lang.Long long78 = aluno74.getMatricula();
        aluno74.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno81 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray82 = new com.unifacisa.tcc.domain.Aluno[] { aluno59, aluno67, aluno74, aluno81 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet83 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet83, alunoArray82);
        com.unifacisa.tcc.domain.Professor professor85 = professor56.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet83);
        com.unifacisa.tcc.domain.Professor professor86 = professor50.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet83);
        com.unifacisa.tcc.domain.Professor professor87 = professor18.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet83);
        com.unifacisa.tcc.domain.Aluno aluno88 = aluno11.professor(professor18);
        com.unifacisa.tcc.domain.Aluno aluno89 = aluno0.professor(professor18);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa91 = aluno0.numeroContato((java.lang.Long) 1L);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(pessoa8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(professor14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str15, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertNull(long32);
        org.junit.Assert.assertNull(long33);
        org.junit.Assert.assertNull(long39);
        org.junit.Assert.assertNull(long40);
        org.junit.Assert.assertNotNull(alunoArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(professor47);
        org.junit.Assert.assertNotNull(professor50);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(professor56);
        org.junit.Assert.assertNull(long62);
        org.junit.Assert.assertNull(long70);
        org.junit.Assert.assertNull(long71);
        org.junit.Assert.assertNull(long77);
        org.junit.Assert.assertNull(long78);
        org.junit.Assert.assertNotNull(alunoArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(professor85);
        org.junit.Assert.assertNotNull(professor86);
        org.junit.Assert.assertNotNull(professor87);
        org.junit.Assert.assertNotNull(aluno88);
        org.junit.Assert.assertNotNull(aluno89);
        org.junit.Assert.assertNotNull(pessoa91);
    }

    @Test
    public void test2430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2430");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 10L);
        socialUserConnection0.setDisplayName("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setRefreshToken("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str9 = socialUserConnection0.getImageURL();
        socialUserConnection0.setImageURL("LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=false}");
        socialUserConnection0.setId((java.lang.Long) 10L);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test2431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2431");
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository0 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource1 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository0);
        com.unifacisa.tcc.domain.Professor professor2 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor4 = professor2.diponibilidade((java.lang.Boolean) true);
        professor4.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.Long long7 = professor4.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = professor4.email("error.validation");
        professor4.setId((java.lang.Long) 0L);
        professor4.setDiponibilidade((java.lang.Boolean) true);
        java.lang.Long long14 = professor4.getNumeroContato();
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity15 = professorResource1.createProfessor(professor4);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<java.lang.Void> voidResponseEntity17 = professorResource1.deleteProfessor((java.lang.Long) 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor4);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNotNull(pessoa9);
        org.junit.Assert.assertNull(long14);
        org.junit.Assert.assertNotNull(professorResponseEntity15);
    }

    @Test
    public void test2432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2432");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = null;
        persistentAuditEvent0.setData(strMap1);
        persistentAuditEvent0.setPrincipal("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        persistentAuditEvent0.setId((java.lang.Long) 0L);
        java.lang.String str7 = persistentAuditEvent0.getPrincipal();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent8 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant9 = null;
        persistentAuditEvent8.setAuditEventDate(instant9);
        persistentAuditEvent8.setAuditEventType("error.validation");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent13 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        persistentAuditEvent13.setId((java.lang.Long) 1L);
        java.lang.String str16 = persistentAuditEvent13.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = persistentAuditEvent13.getData();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent18 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        persistentAuditEvent18.setId((java.lang.Long) 1L);
        java.lang.String str21 = persistentAuditEvent18.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = persistentAuditEvent18.getData();
        persistentAuditEvent13.setData(strMap22);
        persistentAuditEvent8.setData(strMap22);
        persistentAuditEvent0.setData(strMap22);
        java.lang.String str26 = persistentAuditEvent0.getPrincipal();
        java.time.Instant instant27 = persistentAuditEvent0.getAuditEventDate();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str7, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str26, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertNull(instant27);
    }

    @Test
    public void test2433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2433");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor2.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str7 = professor2.getSegundoNome();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = professor2.email("LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}");
        pessoa9.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa13 = pessoa9.numeroContato((java.lang.Long) (-1L));
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str7, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(pessoa9);
        org.junit.Assert.assertNotNull(pessoa13);
    }

    @Test
    public void test2434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2434");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.time.Instant instant2 = null;
        persistentAuditEvent0.setAuditEventDate(instant2);
        java.util.Map<java.lang.String, java.lang.String> strMap4 = persistentAuditEvent0.getData();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNotNull(strMap4);
    }

    @Test
    public void test2435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2435");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        persistentAuditEvent0.setId((java.lang.Long) 1L);
        java.lang.String str3 = persistentAuditEvent0.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = persistentAuditEvent0.getData();
        persistentAuditEvent0.setPrincipal("UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        java.lang.String str7 = persistentAuditEvent0.getAuditEventType();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test2436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2436");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getLastName();
        java.lang.String str2 = managedUserVM0.getLangKey();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test2437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2437");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}", "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}'}", "Authority{name='Authority{name='error.concurrencyFailure'}'}");
        java.lang.String str4 = fieldErrorVM3.getField();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}'}" + "'", str4, "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}'}");
    }

    @Test
    public void test2438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2438");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setImageURL("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setExpireTime((java.lang.Long) 100L);
        java.lang.Long long10 = socialUserConnection0.getId();
        java.lang.Long long11 = socialUserConnection0.getId();
        java.lang.Long long12 = socialUserConnection0.getRank();
        socialUserConnection0.setAccessToken("LoggerVM{name='LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}', level='LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}'}");
        java.lang.Long long15 = socialUserConnection0.getId();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNull(long15);
    }

    @Test
    public void test2439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2439");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        keyAndPasswordVM0.setNewPassword("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        keyAndPasswordVM0.setKey("");
        keyAndPasswordVM0.setNewPassword("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        java.lang.String str9 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str10 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str11 = keyAndPasswordVM0.getKey();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}" + "'", str9, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}" + "'", str10, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test2440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2440");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM1 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM1.setName("LoginVM{username='null', rememberMe=false}");
        logsResource0.changeLevel(loggerVM1);
        loggerVM1.setName("Authority{name='error.concurrencyFailure'}");
        loggerVM1.setName("Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        java.lang.String str9 = loggerVM1.getLevel();
        java.lang.String str10 = loggerVM1.getLevel();
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test2441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2441");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        authority0.setName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = authority0.getName();
        authority0.setName("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='error.concurrencyFailure', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test2442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2442");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        com.unifacisa.tcc.service.dto.UserDTO userDTO30 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant22, "hi!", instant24, (java.util.Set<java.lang.String>) strSet28);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM31 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 0L, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", "hi!", "hi!", "", true, "hi!", "", "", instant10, "", instant12, (java.util.Set<java.lang.String>) strSet28);
        java.lang.String str32 = managedUserVM31.getImageUrl();
        java.lang.String str33 = managedUserVM31.getImageUrl();
        java.lang.String str34 = managedUserVM31.getPassword();
        boolean boolean35 = managedUserVM31.isActivated();
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "error.validation" + "'", str34, "error.validation");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test2443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2443");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList1 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM2 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM2.setName("LoginVM{username='null', rememberMe=false}");
        java.lang.String str5 = loggerVM2.getLevel();
        logsResource0.changeLevel(loggerVM2);
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM7 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str8 = loggerVM7.getName();
        java.lang.String str9 = loggerVM7.getLevel();
        loggerVM7.setName("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        java.lang.String str12 = loggerVM7.toString();
        logsResource0.changeLevel(loggerVM7);
        com.unifacisa.tcc.web.rest.LogsResource logsResource14 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM15 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM15.setName("LoginVM{username='null', rememberMe=false}");
        logsResource14.changeLevel(loggerVM15);
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList19 = logsResource14.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM20 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM20.setName("LoginVM{username='null', rememberMe=false}");
        loggerVM20.setName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        logsResource14.changeLevel(loggerVM20);
        com.unifacisa.tcc.web.rest.LogsResource logsResource26 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM27 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM27.setName("LoginVM{username='null', rememberMe=false}");
        logsResource26.changeLevel(loggerVM27);
        loggerVM27.setName("Authority{name='error.concurrencyFailure'}");
        logsResource14.changeLevel(loggerVM27);
        java.lang.String str34 = loggerVM27.toString();
        logsResource0.changeLevel(loggerVM27);
        loggerVM27.setLevel("Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        java.lang.String str38 = loggerVM27.toString();
        java.lang.String str39 = loggerVM27.getLevel();
        org.junit.Assert.assertNotNull(loggerVMList1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}" + "'", str12, "LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}");
        org.junit.Assert.assertNotNull(loggerVMList19);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='null'}" + "'", str34, "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='null'}");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}'}" + "'", str38, "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}'}");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}" + "'", str39, "Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
    }

    @Test
    public void test2444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2444");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM1 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM1.setName("LoginVM{username='null', rememberMe=false}");
        logsResource0.changeLevel(loggerVM1);
        loggerVM1.setName("Authority{name='error.concurrencyFailure'}");
        loggerVM1.setName("Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        java.lang.String str9 = loggerVM1.getName();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}" + "'", str9, "Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
    }

    @Test
    public void test2445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2445");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        aluno5.setPrimeiroNome("");
        java.lang.Long long8 = aluno5.getMatricula();
        aluno5.setHabilitadoTcc((java.lang.Boolean) false);
        aluno5.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        aluno13.setPrimeiroNome("");
        java.lang.Long long16 = aluno13.getMatricula();
        java.lang.Long long17 = aluno13.getMatricula();
        aluno13.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        aluno20.setPrimeiroNome("");
        java.lang.Long long23 = aluno20.getMatricula();
        java.lang.Long long24 = aluno20.getMatricula();
        aluno20.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray28 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno13, aluno20, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet29 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet29, alunoArray28);
        com.unifacisa.tcc.domain.Professor professor31 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet29);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa33 = professor2.matricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor34 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor36 = professor34.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor37 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor39 = null;
        aluno38.setProfessor(professor39);
        aluno38.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor45 = null;
        aluno44.setProfessor(professor45);
        java.lang.Long long47 = aluno44.getMatricula();
        java.lang.String str48 = aluno44.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean51 = aluno49.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor53 = null;
        aluno52.setProfessor(professor53);
        aluno52.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean59 = aluno57.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno60 = new com.unifacisa.tcc.domain.Aluno();
        aluno60.setPrimeiroNome("");
        java.lang.Long long63 = aluno60.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno64 = new com.unifacisa.tcc.domain.Aluno();
        aluno64.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray67 = new com.unifacisa.tcc.domain.Aluno[] { aluno38, aluno43, aluno44, aluno49, aluno52, aluno57, aluno60, aluno64 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet68 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet68, alunoArray67);
        professor37.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet68);
        com.unifacisa.tcc.domain.Professor professor71 = professor36.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet68);
        com.unifacisa.tcc.domain.Professor professor72 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet68);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa74 = professor2.email("error.validation");
        com.unifacisa.tcc.domain.Aluno aluno75 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.Long long76 = aluno75.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa78 = aluno75.matricula((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa80 = aluno75.numeroContato((java.lang.Long) 1L);
        aluno75.setSegundoNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        java.lang.Boolean boolean83 = aluno75.isHabilitadoTcc();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa85 = aluno75.email("Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor86 = professor2.addAluno(aluno75);
        java.lang.String str87 = aluno75.toString();
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertNull(long23);
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertNotNull(alunoArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNotNull(pessoa33);
        org.junit.Assert.assertNotNull(professor36);
        org.junit.Assert.assertNull(long47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(long63);
        org.junit.Assert.assertNotNull(alunoArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(professor71);
        org.junit.Assert.assertNotNull(professor72);
        org.junit.Assert.assertNotNull(pessoa74);
        org.junit.Assert.assertNull(long76);
        org.junit.Assert.assertNotNull(pessoa78);
        org.junit.Assert.assertNotNull(pessoa80);
        org.junit.Assert.assertNull(boolean83);
        org.junit.Assert.assertNotNull(pessoa85);
        org.junit.Assert.assertNotNull(professor86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}', matricula='100', email='Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', numeroContato='1', habilitadoTcc='null'}" + "'", str87, "Aluno{id=null, primeiroNome='null', segundoNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}', matricula='100', email='Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', numeroContato='1', habilitadoTcc='null'}");
    }

    @Test
    public void test2446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2446");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        java.time.Instant instant14 = null;
        java.time.Instant instant16 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        com.unifacisa.tcc.service.dto.UserDTO userDTO34 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant26, "hi!", instant28, (java.util.Set<java.lang.String>) strSet32);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM35 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 0L, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", "hi!", "hi!", "", true, "hi!", "", "", instant14, "", instant16, (java.util.Set<java.lang.String>) strSet32);
        java.time.Instant instant36 = managedUserVM35.getCreatedDate();
        java.util.Set<java.lang.String> strSet37 = managedUserVM35.getAuthorities();
        org.springframework.http.ResponseEntity responseEntity38 = userResource3.createUser(managedUserVM35);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM39 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str40 = managedUserVM39.getImageUrl();
        java.time.Instant instant41 = managedUserVM39.getLastModifiedDate();
        java.time.Instant instant42 = managedUserVM39.getLastModifiedDate();
        java.lang.String str43 = managedUserVM39.getPassword();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity responseEntity44 = userResource3.createUser(managedUserVM39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(instant36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNotNull(responseEntity38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(instant41);
        org.junit.Assert.assertNull(instant42);
        org.junit.Assert.assertNull(str43);
    }

    @Test
    public void test2447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2447");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        keyAndPasswordVM0.setKey("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        keyAndPasswordVM0.setKey("Aluno{id=null, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        keyAndPasswordVM0.setKey("");
    }

    @Test
    public void test2448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2448");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.primeiroNome("hi!");
        java.lang.Long long7 = aluno0.getId();
        com.unifacisa.tcc.domain.Aluno aluno9 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        java.lang.Long long10 = aluno9.getMatricula();
        com.unifacisa.tcc.domain.Professor professor11 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor13 = professor11.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa15 = professor11.email("");
        com.unifacisa.tcc.domain.Professor professor17 = professor11.diponibilidade((java.lang.Boolean) true);
        professor17.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno20 = aluno9.professor(professor17);
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.Long long22 = aluno21.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa24 = aluno21.matricula((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.Professor professor25 = professor17.addAluno(aluno21);
        professor25.setDiponibilidade((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNotNull(aluno9);
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertNotNull(professor13);
        org.junit.Assert.assertNotNull(pessoa15);
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(aluno20);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNotNull(pessoa24);
        org.junit.Assert.assertNotNull(professor25);
    }

    @Test
    public void test2449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2449");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        user3.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user3.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user10 = userMapper8.userFromId((java.lang.Long) 100L);
        user10.setLangKey("");
        java.time.Instant instant13 = user10.getResetDate();
        java.time.Instant instant14 = user10.getCreatedDate();
        user3.setResetDate(instant14);
        boolean boolean16 = user3.getActivated();
        user3.setLangKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant19 = user3.getCreatedDate();
        user2.setCreatedDate(instant19);
        user2.setId((java.lang.Long) 10L);
        user2.setLangKey("LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}");
        user2.setLangKey("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}");
        user2.setId((java.lang.Long) 100L);
        user2.setPassword("SocialUserConnection{id=100, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='error.validation', accessToken='null', secret='null', refreshToken='null', expireTime=-1}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(user10);
        org.junit.Assert.assertNull(instant13);
        org.junit.Assert.assertNotNull(instant14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(instant19);
    }

    @Test
    public void test2450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2450");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.toString();
        user0.setResetKey("error.concurrencyFailure");
        user0.setResetKey("");
        java.time.Instant instant6 = user0.getCreatedDate();
        user0.setLangKey("LoginVM{username='LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}', rememberMe=true}");
        java.lang.String str9 = user0.getLangKey();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str1, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LoginVM{username='LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}', rememberMe=true}" + "'", str9, "LoginVM{username='LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}', rememberMe=true}");
    }

    @Test
    public void test2451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2451");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper1 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user3 = userMapper1.userFromId((java.lang.Long) 100L);
        user3.setLangKey("");
        java.time.Instant instant6 = user3.getResetDate();
        java.time.Instant instant7 = user3.getCreatedDate();
        user0.setCreatedDate(instant7);
        boolean boolean9 = user0.getActivated();
        java.lang.String str10 = user0.getPassword();
        java.lang.Long long11 = user0.getId();
        java.lang.String str12 = user0.getLastName();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet13 = null;
        user0.setAuthorities(authoritySet13);
        user0.setCreatedBy("SocialUserConnection{id=null, userId=, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        user0.setActivated(false);
        org.junit.Assert.assertNotNull(user3);
        org.junit.Assert.assertNull(instant6);
        org.junit.Assert.assertNotNull(instant7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test2452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2452");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        java.lang.Long long3 = aluno0.getMatricula();
        java.lang.Long long4 = aluno0.getMatricula();
        aluno0.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor8 = null;
        aluno7.setProfessor(professor8);
        aluno7.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor12 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor14 = professor12.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor15 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno16 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor17 = null;
        aluno16.setProfessor(professor17);
        aluno16.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor23 = null;
        aluno22.setProfessor(professor23);
        java.lang.Long long25 = aluno22.getMatricula();
        java.lang.String str26 = aluno22.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean29 = aluno27.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor31 = null;
        aluno30.setProfessor(professor31);
        aluno30.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean37 = aluno35.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        aluno38.setPrimeiroNome("");
        java.lang.Long long41 = aluno38.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        aluno42.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray45 = new com.unifacisa.tcc.domain.Aluno[] { aluno16, aluno21, aluno22, aluno27, aluno30, aluno35, aluno38, aluno42 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet46 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet46, alunoArray45);
        professor15.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet46);
        com.unifacisa.tcc.domain.Professor professor49 = professor14.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet46);
        aluno7.setProfessor(professor49);
        aluno0.setProfessor(professor49);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa53 = aluno0.email("");
        aluno0.setHabilitadoTcc((java.lang.Boolean) true);
        java.lang.Boolean boolean56 = aluno0.isHabilitadoTcc();
        java.lang.String str57 = aluno0.toString();
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(professor14);
        org.junit.Assert.assertNull(long25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(long41);
        org.junit.Assert.assertNotNull(alunoArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(professor49);
        org.junit.Assert.assertNotNull(pessoa53);
        org.junit.Assert.assertEquals("'" + boolean56 + "' != '" + true + "'", boolean56, true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='0', email='', numeroContato='null', habilitadoTcc='true'}" + "'", str57, "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='0', email='', numeroContato='null', habilitadoTcc='true'}");
    }

    @Test
    public void test2453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2453");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        authority0.setName("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper3 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user5 = userMapper3.userFromId((java.lang.Long) 100L);
        user5.setLangKey("");
        java.time.Instant instant8 = user5.getResetDate();
        java.time.Instant instant9 = user5.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        aluno10.setPrimeiroNome("");
        java.lang.String str13 = aluno10.getPrimeiroNome();
        java.lang.Long long14 = aluno10.getMatricula();
        boolean boolean15 = user5.equals((java.lang.Object) aluno10);
        com.unifacisa.tcc.domain.User user16 = new com.unifacisa.tcc.domain.User();
        user16.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user16.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant21 = user16.getLastModifiedDate();
        user5.setCreatedDate(instant21);
        boolean boolean23 = authority0.equals((java.lang.Object) user5);
        java.lang.Object obj24 = null;
        boolean boolean25 = authority0.equals(obj24);
        authority0.setName("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='0', email='', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertNotNull(user5);
        org.junit.Assert.assertNull(instant8);
        org.junit.Assert.assertNotNull(instant9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(long14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(instant21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test2454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2454");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("LoggerVM{name='null', level='null'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            customSocialConnectionRepository3.removeConnections("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', secret='null', refreshToken='null', expireTime=100}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2455");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        java.lang.Long long3 = aluno0.getId();
        java.lang.Long long4 = aluno0.getMatricula();
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor7 = professor5.diponibilidade((java.lang.Boolean) true);
        professor7.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor7.setPrimeiroNome("LoginVM{username='null', rememberMe=false}");
        java.lang.Long long12 = professor7.getNumeroContato();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa14 = professor7.primeiroNome("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        java.lang.Long long15 = professor7.getNumeroContato();
        java.lang.String str16 = professor7.getEmail();
        aluno0.setProfessor(professor7);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(professor7);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNotNull(pessoa14);
        org.junit.Assert.assertNull(long15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test2456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2456");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.primeiroNome("hi!");
        java.lang.Long long7 = aluno0.getId();
        com.unifacisa.tcc.domain.Aluno aluno9 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        aluno0.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor12 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str13 = professor12.toString();
        com.unifacisa.tcc.domain.Professor professor15 = professor12.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet16 = professor12.getAlunos();
        java.lang.Long long17 = professor12.getNumeroContato();
        professor12.setMatricula((java.lang.Long) (-1L));
        aluno0.setProfessor(professor12);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa22 = aluno0.segundoNome("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:34.552Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:34.552Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa24 = pessoa22.primeiroNome("ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str25 = pessoa24.getSegundoNome();
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNotNull(aluno9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str13, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor15);
        org.junit.Assert.assertNotNull(alunoSet16);
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertNotNull(pessoa22);
        org.junit.Assert.assertNotNull(pessoa24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:34.552Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:34.552Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}" + "'", str25, "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:34.552Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:34.552Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
    }

    @Test
    public void test2457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2457");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        java.lang.Long long3 = aluno0.getMatricula();
        aluno0.setHabilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa7 = aluno0.primeiroNome("");
        java.lang.Boolean boolean8 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor9 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor11 = professor9.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor12 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor14 = null;
        aluno13.setProfessor(professor14);
        aluno13.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor20 = null;
        aluno19.setProfessor(professor20);
        java.lang.Long long22 = aluno19.getMatricula();
        java.lang.String str23 = aluno19.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean26 = aluno24.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor28 = null;
        aluno27.setProfessor(professor28);
        aluno27.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean34 = aluno32.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        aluno35.setPrimeiroNome("");
        java.lang.Long long38 = aluno35.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        aluno39.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray42 = new com.unifacisa.tcc.domain.Aluno[] { aluno13, aluno18, aluno19, aluno24, aluno27, aluno32, aluno35, aluno39 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet43 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet43, alunoArray42);
        professor12.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet43);
        com.unifacisa.tcc.domain.Professor professor46 = professor11.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet43);
        java.lang.Long long47 = professor46.getMatricula();
        java.lang.Long long48 = professor46.getMatricula();
        professor46.setEmail("Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str51 = professor46.getPrimeiroNome();
        com.unifacisa.tcc.domain.Aluno aluno52 = aluno0.professor(professor46);
        aluno0.setPrimeiroNome("Aluno{id=null, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa56 = aluno0.email("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', secret='null', refreshToken='null', expireTime=100}");
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNotNull(pessoa7);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + false + "'", boolean8, false);
        org.junit.Assert.assertNotNull(professor11);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(long38);
        org.junit.Assert.assertNotNull(alunoArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(professor46);
        org.junit.Assert.assertNull(long47);
        org.junit.Assert.assertNull(long48);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(aluno52);
        org.junit.Assert.assertNotNull(pessoa56);
    }

    @Test
    public void test2458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2458");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.primeiroNome("hi!");
        java.lang.String str7 = aluno0.getEmail();
        com.unifacisa.tcc.domain.Professor professor8 = aluno0.getProfessor();
        java.lang.Boolean boolean9 = aluno0.isHabilitadoTcc();
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(professor8);
        org.junit.Assert.assertNull(boolean9);
    }

    @Test
    public void test2459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2459");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        aluno7.setPrimeiroNome("");
        java.lang.String str10 = aluno7.getPrimeiroNome();
        java.lang.Long long11 = aluno7.getMatricula();
        boolean boolean12 = user2.equals((java.lang.Object) aluno7);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper13 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user15 = userMapper13.userFromId((java.lang.Long) 100L);
        user15.setResetKey("hi!");
        java.lang.String str18 = user15.getResetKey();
        user15.setId((java.lang.Long) 0L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper21 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user23 = userMapper21.userFromId((java.lang.Long) 100L);
        user23.setResetKey("hi!");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper26 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user28 = userMapper26.userFromId((java.lang.Long) 100L);
        user28.setLangKey("");
        java.time.Instant instant31 = user28.getResetDate();
        java.time.Instant instant32 = user28.getCreatedDate();
        user23.setResetDate(instant32);
        user15.setResetDate(instant32);
        user2.setCreatedDate(instant32);
        com.unifacisa.tcc.service.dto.UserDTO userDTO36 = new com.unifacisa.tcc.service.dto.UserDTO(user2);
        java.lang.String str37 = userDTO36.getCreatedBy();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(user15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(user23);
        org.junit.Assert.assertNotNull(user28);
        org.junit.Assert.assertNull(instant31);
        org.junit.Assert.assertNotNull(instant32);
        org.junit.Assert.assertNull(str37);
    }

    @Test
    public void test2460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2460");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.social.connect.Connection<?>> wildcardConnectionList5 = customSocialConnectionRepository3.findConnections("Aluno{id=-1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2461");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        keyAndPasswordVM0.setKey("");
        java.lang.String str5 = keyAndPasswordVM0.getNewPassword();
        keyAndPasswordVM0.setKey("LoginVM{username='null', rememberMe=false}");
        keyAndPasswordVM0.setNewPassword("LoggerVM{name='Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}', level='null'}");
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test2462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2462");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        org.springframework.social.connect.ConnectionKey connectionKey4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.social.connect.Connection<?> wildcardConnection5 = customSocialConnectionRepository3.getConnection(connectionKey4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2463");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO5 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        user0.setFirstName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str8 = user0.getLangKey();
        user0.setLastModifiedBy("Authority{name='Authority{name='error.concurrencyFailure'}'}");
        user0.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        user0.setEmail("ManagedUserVM{} UserDTO{login='User{login='null', firstName='error.validation', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        user0.setActivated(true);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test2464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2464");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.Long long1 = managedUserVM0.getId();
        java.util.Set<java.lang.String> strSet2 = managedUserVM0.getAuthorities();
        java.lang.String str3 = managedUserVM0.getLangKey();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper4 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user6 = userMapper4.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.User user7 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user10 = userMapper8.userFromId((java.lang.Long) 100L);
        user10.setLangKey("");
        java.time.Instant instant13 = user10.getResetDate();
        java.time.Instant instant14 = user10.getCreatedDate();
        user7.setCreatedDate(instant14);
        com.unifacisa.tcc.service.dto.UserDTO userDTO16 = userMapper4.userToUserDTO(user7);
        java.lang.String str17 = userDTO16.getCreatedBy();
        java.time.Instant instant18 = userDTO16.getCreatedDate();
        managedUserVM0.setLastModifiedDate(instant18);
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(strSet2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(user6);
        org.junit.Assert.assertNotNull(user10);
        org.junit.Assert.assertNull(instant13);
        org.junit.Assert.assertNotNull(instant14);
        org.junit.Assert.assertNotNull(userDTO16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(instant18);
    }

    @Test
    public void test2465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2465");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.toString();
        java.lang.String str2 = managedUserVM0.getLogin();
        java.lang.String str3 = managedUserVM0.getFirstName();
        java.lang.Long long4 = managedUserVM0.getId();
        java.lang.String str5 = managedUserVM0.getEmail();
        java.lang.String str6 = managedUserVM0.getEmail();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str1, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test2466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2466");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        java.lang.String str3 = aluno0.getPrimeiroNome();
        java.lang.Long long4 = aluno0.getMatricula();
        java.lang.Boolean boolean5 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor6 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor8 = professor6.diponibilidade((java.lang.Boolean) true);
        professor8.setDiponibilidade((java.lang.Boolean) false);
        java.lang.String str11 = professor8.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor12 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor14 = professor12.diponibilidade((java.lang.Boolean) true);
        professor14.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        aluno17.setPrimeiroNome("");
        java.lang.Long long20 = aluno17.getMatricula();
        aluno17.setHabilitadoTcc((java.lang.Boolean) false);
        aluno17.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        aluno25.setPrimeiroNome("");
        java.lang.Long long28 = aluno25.getMatricula();
        java.lang.Long long29 = aluno25.getMatricula();
        aluno25.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        aluno32.setPrimeiroNome("");
        java.lang.Long long35 = aluno32.getMatricula();
        java.lang.Long long36 = aluno32.getMatricula();
        aluno32.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray40 = new com.unifacisa.tcc.domain.Aluno[] { aluno17, aluno25, aluno32, aluno39 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet41 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet41, alunoArray40);
        com.unifacisa.tcc.domain.Professor professor43 = professor14.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet41);
        com.unifacisa.tcc.domain.Professor professor44 = professor8.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet41);
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor46 = null;
        aluno45.setProfessor(professor46);
        aluno45.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor50 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor52 = professor50.diponibilidade((java.lang.Boolean) true);
        professor52.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        aluno55.setPrimeiroNome("");
        java.lang.Long long58 = aluno55.getMatricula();
        aluno55.setHabilitadoTcc((java.lang.Boolean) false);
        aluno55.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        aluno63.setPrimeiroNome("");
        java.lang.Long long66 = aluno63.getMatricula();
        java.lang.Long long67 = aluno63.getMatricula();
        aluno63.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno70 = new com.unifacisa.tcc.domain.Aluno();
        aluno70.setPrimeiroNome("");
        java.lang.Long long73 = aluno70.getMatricula();
        java.lang.Long long74 = aluno70.getMatricula();
        aluno70.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno77 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray78 = new com.unifacisa.tcc.domain.Aluno[] { aluno55, aluno63, aluno70, aluno77 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet79 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet79, alunoArray78);
        com.unifacisa.tcc.domain.Professor professor81 = professor52.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet79);
        com.unifacisa.tcc.domain.Aluno aluno82 = aluno45.professor(professor81);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa84 = aluno82.segundoNome("");
        com.unifacisa.tcc.domain.Aluno aluno86 = aluno82.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor87 = professor44.removeAluno(aluno82);
        com.unifacisa.tcc.domain.Professor professor89 = professor87.diponibilidade((java.lang.Boolean) true);
        java.lang.String str90 = professor87.toString();
        boolean boolean91 = aluno0.equals((java.lang.Object) str90);
        com.unifacisa.tcc.domain.Aluno aluno93 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(professor8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(professor14);
        org.junit.Assert.assertNull(long20);
        org.junit.Assert.assertNull(long28);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNull(long35);
        org.junit.Assert.assertNull(long36);
        org.junit.Assert.assertNotNull(alunoArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(professor43);
        org.junit.Assert.assertNotNull(professor44);
        org.junit.Assert.assertNotNull(professor52);
        org.junit.Assert.assertNull(long58);
        org.junit.Assert.assertNull(long66);
        org.junit.Assert.assertNull(long67);
        org.junit.Assert.assertNull(long73);
        org.junit.Assert.assertNull(long74);
        org.junit.Assert.assertNotNull(alunoArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(professor81);
        org.junit.Assert.assertNotNull(aluno82);
        org.junit.Assert.assertNotNull(pessoa84);
        org.junit.Assert.assertNotNull(aluno86);
        org.junit.Assert.assertNotNull(professor87);
        org.junit.Assert.assertNotNull(professor89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}" + "'", str90, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(aluno93);
    }

    @Test
    public void test2467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2467");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        java.lang.Long long3 = aluno0.getMatricula();
        java.lang.Long long4 = aluno0.getMatricula();
        aluno0.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = aluno0.email("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        com.unifacisa.tcc.domain.Professor professor9 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor11 = professor9.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa13 = professor9.email("");
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        aluno14.setPrimeiroNome("error.validation");
        com.unifacisa.tcc.domain.Professor professor17 = professor9.addAluno(aluno14);
        professor9.setEmail("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}");
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor21 = null;
        aluno20.setProfessor(professor21);
        aluno20.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Professor professor25 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor27 = professor25.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa29 = professor25.email("");
        com.unifacisa.tcc.domain.Professor professor31 = professor25.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno32 = aluno20.professor(professor31);
        com.unifacisa.tcc.domain.Aluno aluno34 = aluno32.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean37 = aluno35.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa39 = aluno35.primeiroNome("Authority{name='error.concurrencyFailure'}");
        com.unifacisa.tcc.domain.Professor professor40 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str41 = professor40.toString();
        professor40.setDiponibilidade((java.lang.Boolean) false);
        java.lang.Long long44 = professor40.getMatricula();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa46 = professor40.matricula((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno47 = aluno35.professor(professor40);
        com.unifacisa.tcc.domain.Aluno aluno48 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor49 = null;
        aluno48.setProfessor(professor49);
        aluno48.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa54 = aluno48.primeiroNome("hi!");
        java.lang.Long long55 = aluno48.getId();
        com.unifacisa.tcc.domain.Aluno aluno57 = aluno48.habilitadoTcc((java.lang.Boolean) false);
        java.lang.Long long58 = aluno57.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno59 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean61 = aluno59.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor62 = aluno59.getProfessor();
        java.lang.String str63 = aluno59.toString();
        com.unifacisa.tcc.domain.Aluno aluno64 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor65 = null;
        aluno64.setProfessor(professor65);
        java.lang.Long long67 = aluno64.getMatricula();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa69 = aluno64.numeroContato((java.lang.Long) 1L);
        java.lang.Boolean boolean70 = aluno64.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor71 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor73 = professor71.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa75 = professor71.email("");
        com.unifacisa.tcc.domain.Aluno aluno76 = new com.unifacisa.tcc.domain.Aluno();
        aluno76.setPrimeiroNome("error.validation");
        com.unifacisa.tcc.domain.Professor professor79 = professor71.addAluno(aluno76);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa81 = aluno76.email("ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        com.unifacisa.tcc.domain.Aluno[] alunoArray82 = new com.unifacisa.tcc.domain.Aluno[] { aluno32, aluno35, aluno57, aluno59, aluno64, aluno76 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet83 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet83, alunoArray82);
        com.unifacisa.tcc.domain.Professor professor85 = professor9.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet83);
        aluno0.setProfessor(professor85);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa88 = aluno0.segundoNome("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}");
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(pessoa8);
        org.junit.Assert.assertNotNull(professor11);
        org.junit.Assert.assertNotNull(pessoa13);
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(professor27);
        org.junit.Assert.assertNotNull(pessoa29);
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNotNull(aluno32);
        org.junit.Assert.assertNotNull(aluno34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(pessoa39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str41, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long44);
        org.junit.Assert.assertNotNull(pessoa46);
        org.junit.Assert.assertNotNull(aluno47);
        org.junit.Assert.assertNotNull(pessoa54);
        org.junit.Assert.assertNull(long55);
        org.junit.Assert.assertNotNull(aluno57);
        org.junit.Assert.assertNull(long58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(professor62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str63, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(long67);
        org.junit.Assert.assertNotNull(pessoa69);
        org.junit.Assert.assertNull(boolean70);
        org.junit.Assert.assertNotNull(professor73);
        org.junit.Assert.assertNotNull(pessoa75);
        org.junit.Assert.assertNotNull(professor79);
        org.junit.Assert.assertNotNull(pessoa81);
        org.junit.Assert.assertNotNull(alunoArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(professor85);
        org.junit.Assert.assertNotNull(pessoa88);
    }

    @Test
    public void test2468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2468");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray7 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList8 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList8, userArray7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper6.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList8);
        java.time.Instant instant21 = null;
        java.time.Instant instant23 = null;
        java.time.Instant instant33 = null;
        java.time.Instant instant35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        com.unifacisa.tcc.service.dto.UserDTO userDTO41 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant33, "hi!", instant35, (java.util.Set<java.lang.String>) strSet39);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM42 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant21, "", instant23, (java.util.Set<java.lang.String>) strSet39);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet43 = userMapper6.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet39);
        user0.setAuthorities(authoritySet43);
        com.unifacisa.tcc.service.dto.UserDTO userDTO45 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str46 = user0.getFirstName();
        user0.setResetKey("LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=null}");
        user0.setId((java.lang.Long) 10L);
        java.time.Instant instant51 = user0.getLastModifiedDate();
        java.lang.String str52 = user0.getResetKey();
        java.lang.String str53 = user0.getEmail();
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(userArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(authoritySet43);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(instant51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=null}" + "'", str52, "LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=null}");
        org.junit.Assert.assertNull(str53);
    }

    @Test
    public void test2469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2469");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.email("");
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        aluno5.setPrimeiroNome("error.validation");
        com.unifacisa.tcc.domain.Professor professor8 = professor0.addAluno(aluno5);
        com.unifacisa.tcc.domain.Professor professor10 = professor8.diponibilidade((java.lang.Boolean) true);
        professor8.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        aluno13.setPrimeiroNome("");
        java.lang.Long long16 = aluno13.getMatricula();
        java.lang.Long long17 = aluno13.getMatricula();
        aluno13.setMatricula((java.lang.Long) 0L);
        aluno13.setId((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.Professor professor22 = professor8.removeAluno(aluno13);
        java.lang.String str23 = professor8.getPrimeiroNome();
        java.lang.Long long24 = professor8.getId();
        java.lang.String str25 = professor8.toString();
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNotNull(professor8);
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertNotNull(professor22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='false'}" + "'", str25, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='false'}");
    }

    @Test
    public void test2470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2470");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor6 = null;
        aluno5.setProfessor(professor6);
        aluno5.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa11 = aluno5.primeiroNome("hi!");
        java.lang.Long long12 = aluno5.getId();
        com.unifacisa.tcc.domain.Aluno aluno14 = aluno5.habilitadoTcc((java.lang.Boolean) false);
        aluno5.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor17 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str18 = professor17.toString();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor20 = null;
        aluno19.setProfessor(professor20);
        java.lang.Long long22 = aluno19.getMatricula();
        java.lang.String str23 = aluno19.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean26 = aluno24.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor27 = aluno24.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean30 = aluno28.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno31 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor33 = null;
        aluno32.setProfessor(professor33);
        java.lang.Long long35 = aluno32.getMatricula();
        java.lang.String str36 = aluno32.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno37 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean39 = aluno37.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor40 = aluno37.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor42 = null;
        aluno41.setProfessor(professor42);
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        aluno44.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor48 = null;
        aluno47.setProfessor(professor48);
        aluno47.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor53 = null;
        aluno52.setProfessor(professor53);
        java.lang.Long long55 = aluno52.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno56 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean59 = aluno57.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno60 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor61 = null;
        aluno60.setProfessor(professor61);
        com.unifacisa.tcc.domain.Aluno[] alunoArray63 = new com.unifacisa.tcc.domain.Aluno[] { aluno19, aluno24, aluno28, aluno31, aluno32, aluno37, aluno41, aluno44, aluno47, aluno52, aluno56, aluno57, aluno60 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet64 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet64, alunoArray63);
        com.unifacisa.tcc.domain.Professor professor66 = professor17.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet64);
        com.unifacisa.tcc.domain.Aluno aluno67 = aluno5.professor(professor17);
        com.unifacisa.tcc.domain.Aluno aluno69 = aluno67.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor70 = aluno69.getProfessor();
        com.unifacisa.tcc.domain.Professor professor71 = professor2.removeAluno(aluno69);
        com.unifacisa.tcc.domain.Professor professor72 = null;
        com.unifacisa.tcc.domain.Aluno aluno73 = aluno69.professor(professor72);
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNotNull(pessoa11);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNotNull(aluno14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str18, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(professor27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(long35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(professor40);
        org.junit.Assert.assertNull(long55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(alunoArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(professor66);
        org.junit.Assert.assertNotNull(aluno67);
        org.junit.Assert.assertNotNull(aluno69);
        org.junit.Assert.assertNotNull(professor70);
        org.junit.Assert.assertNotNull(professor71);
        org.junit.Assert.assertNotNull(aluno73);
    }

    @Test
    public void test2471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2471");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("error.concurrencyFailure");
        java.lang.Long long12 = socialUserConnection0.getRank();
        socialUserConnection0.setUserId("");
        com.unifacisa.tcc.config.LoggingAspectConfiguration loggingAspectConfiguration15 = new com.unifacisa.tcc.config.LoggingAspectConfiguration();
        boolean boolean16 = socialUserConnection0.equals((java.lang.Object) loggingAspectConfiguration15);
        org.springframework.core.env.Environment environment17 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect18 = loggingAspectConfiguration15.loggingAspect(environment17);
        loggingAspect18.applicationPackagePointcut();
        org.aspectj.lang.ProceedingJoinPoint proceedingJoinPoint20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj21 = loggingAspect18.logAround(proceedingJoinPoint20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(loggingAspect18);
    }

    @Test
    public void test2472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2472");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        java.lang.Long long3 = aluno0.getMatricula();
        java.lang.Long long4 = aluno0.getMatricula();
        aluno0.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = aluno0.email("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        com.unifacisa.tcc.domain.Aluno aluno10 = aluno0.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor12 = null;
        aluno11.setProfessor(professor12);
        aluno11.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa17 = aluno11.primeiroNome("hi!");
        java.lang.Long long18 = aluno11.getId();
        com.unifacisa.tcc.domain.Aluno aluno20 = aluno11.habilitadoTcc((java.lang.Boolean) false);
        aluno11.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor23 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str24 = professor23.toString();
        com.unifacisa.tcc.domain.Professor professor26 = professor23.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet27 = professor23.getAlunos();
        java.lang.Long long28 = professor23.getNumeroContato();
        professor23.setMatricula((java.lang.Long) (-1L));
        aluno11.setProfessor(professor23);
        com.unifacisa.tcc.domain.Aluno aluno32 = aluno10.professor(professor23);
        java.lang.String str33 = professor23.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor34 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str35 = professor34.toString();
        com.unifacisa.tcc.domain.Professor professor37 = professor34.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet38 = professor34.getAlunos();
        com.unifacisa.tcc.domain.Professor professor39 = professor23.alunos(alunoSet38);
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor41 = null;
        aluno40.setProfessor(professor41);
        aluno40.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Professor professor45 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor47 = professor45.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa49 = professor45.email("");
        com.unifacisa.tcc.domain.Professor professor51 = professor45.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno52 = aluno40.professor(professor51);
        com.unifacisa.tcc.domain.Professor professor53 = professor23.removeAluno(aluno40);
        com.unifacisa.tcc.domain.Aluno aluno54 = new com.unifacisa.tcc.domain.Aluno();
        aluno54.setPrimeiroNome("error.validation");
        com.unifacisa.tcc.domain.Aluno aluno58 = aluno54.habilitadoTcc((java.lang.Boolean) false);
        boolean boolean59 = professor53.equals((java.lang.Object) aluno54);
        professor53.setSegundoNome("");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper62 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user64 = userMapper62.userFromId((java.lang.Long) 100L);
        user64.setLangKey("");
        java.time.Instant instant67 = user64.getResetDate();
        java.time.Instant instant68 = user64.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno69 = new com.unifacisa.tcc.domain.Aluno();
        aluno69.setPrimeiroNome("");
        java.lang.String str72 = aluno69.getPrimeiroNome();
        java.lang.Long long73 = aluno69.getMatricula();
        boolean boolean74 = user64.equals((java.lang.Object) aluno69);
        com.unifacisa.tcc.domain.Aluno aluno75 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor76 = null;
        aluno75.setProfessor(professor76);
        aluno75.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa81 = aluno75.primeiroNome("hi!");
        java.lang.Long long82 = aluno75.getId();
        com.unifacisa.tcc.domain.Aluno aluno84 = aluno75.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor85 = aluno75.getProfessor();
        java.lang.Boolean boolean86 = aluno75.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor87 = aluno75.getProfessor();
        boolean boolean88 = aluno69.equals((java.lang.Object) aluno75);
        com.unifacisa.tcc.domain.Professor professor89 = professor53.addAluno(aluno69);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(pessoa8);
        org.junit.Assert.assertNotNull(aluno10);
        org.junit.Assert.assertNotNull(pessoa17);
        org.junit.Assert.assertNull(long18);
        org.junit.Assert.assertNotNull(aluno20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str24, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor26);
        org.junit.Assert.assertNotNull(alunoSet27);
        org.junit.Assert.assertNull(long28);
        org.junit.Assert.assertNotNull(aluno32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str35, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNotNull(alunoSet38);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(professor47);
        org.junit.Assert.assertNotNull(pessoa49);
        org.junit.Assert.assertNotNull(professor51);
        org.junit.Assert.assertNotNull(aluno52);
        org.junit.Assert.assertNotNull(professor53);
        org.junit.Assert.assertNotNull(aluno58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(user64);
        org.junit.Assert.assertNull(instant67);
        org.junit.Assert.assertNotNull(instant68);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNull(long73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(pessoa81);
        org.junit.Assert.assertNull(long82);
        org.junit.Assert.assertNotNull(aluno84);
        org.junit.Assert.assertNull(professor85);
        org.junit.Assert.assertEquals("'" + boolean86 + "' != '" + false + "'", boolean86, false);
        org.junit.Assert.assertNull(professor87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(professor89);
    }

    @Test
    public void test2473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2473");
        org.springframework.data.domain.Page page0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.PaginationUtil.generatePaginationHttpHeaders(page0, "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2474");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor7 = professor5.diponibilidade((java.lang.Boolean) true);
        professor7.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        aluno10.setPrimeiroNome("");
        java.lang.Long long13 = aluno10.getMatricula();
        aluno10.setHabilitadoTcc((java.lang.Boolean) false);
        aluno10.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        aluno18.setPrimeiroNome("");
        java.lang.Long long21 = aluno18.getMatricula();
        java.lang.Long long22 = aluno18.getMatricula();
        aluno18.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        aluno25.setPrimeiroNome("");
        java.lang.Long long28 = aluno25.getMatricula();
        java.lang.Long long29 = aluno25.getMatricula();
        aluno25.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno10, aluno18, aluno25, aluno32 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        com.unifacisa.tcc.domain.Professor professor36 = professor7.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Aluno aluno37 = aluno0.professor(professor36);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa39 = aluno37.segundoNome("");
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor41 = null;
        aluno40.setProfessor(professor41);
        aluno40.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor45 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor47 = professor45.diponibilidade((java.lang.Boolean) true);
        professor47.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        aluno50.setPrimeiroNome("");
        java.lang.Long long53 = aluno50.getMatricula();
        aluno50.setHabilitadoTcc((java.lang.Boolean) false);
        aluno50.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        aluno58.setPrimeiroNome("");
        java.lang.Long long61 = aluno58.getMatricula();
        java.lang.Long long62 = aluno58.getMatricula();
        aluno58.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno65 = new com.unifacisa.tcc.domain.Aluno();
        aluno65.setPrimeiroNome("");
        java.lang.Long long68 = aluno65.getMatricula();
        java.lang.Long long69 = aluno65.getMatricula();
        aluno65.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno72 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray73 = new com.unifacisa.tcc.domain.Aluno[] { aluno50, aluno58, aluno65, aluno72 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet74 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet74, alunoArray73);
        com.unifacisa.tcc.domain.Professor professor76 = professor47.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet74);
        com.unifacisa.tcc.domain.Aluno aluno77 = aluno40.professor(professor76);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa79 = aluno77.segundoNome("");
        boolean boolean80 = aluno37.equals((java.lang.Object) "");
        java.lang.String str81 = aluno37.getPrimeiroNome();
        org.junit.Assert.assertNotNull(professor7);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNull(long21);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNull(long28);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(professor36);
        org.junit.Assert.assertNotNull(aluno37);
        org.junit.Assert.assertNotNull(pessoa39);
        org.junit.Assert.assertNotNull(professor47);
        org.junit.Assert.assertNull(long53);
        org.junit.Assert.assertNull(long61);
        org.junit.Assert.assertNull(long62);
        org.junit.Assert.assertNull(long68);
        org.junit.Assert.assertNull(long69);
        org.junit.Assert.assertNotNull(alunoArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(professor76);
        org.junit.Assert.assertNotNull(aluno77);
        org.junit.Assert.assertNotNull(pessoa79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(str81);
    }

    @Test
    public void test2475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2475");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        persistentAuditEvent0.setId((java.lang.Long) 1L);
        java.lang.String str3 = persistentAuditEvent0.getAuditEventType();
        persistentAuditEvent0.setId((java.lang.Long) (-1L));
        persistentAuditEvent0.setPrincipal("");
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test2476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2476");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user7 = userMapper5.userFromId((java.lang.Long) 100L);
        user7.setLangKey("");
        java.time.Instant instant10 = user7.getResetDate();
        java.time.Instant instant11 = user7.getCreatedDate();
        user0.setResetDate(instant11);
        java.time.Instant instant13 = null;
        user0.setCreatedDate(instant13);
        java.lang.String str15 = user0.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user16 = new com.unifacisa.tcc.domain.User();
        java.lang.String str17 = user16.toString();
        boolean boolean18 = user0.equals((java.lang.Object) user16);
        java.lang.String str19 = user16.getCreatedBy();
        user16.setPassword("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}");
        org.junit.Assert.assertNotNull(user7);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(instant11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str17, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test2477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2477");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.primeiroNome("hi!");
        java.lang.Long long7 = aluno0.getId();
        com.unifacisa.tcc.domain.Aluno aluno9 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor10 = aluno0.getProfessor();
        java.lang.Boolean boolean11 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor12 = aluno0.getProfessor();
        aluno0.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa16 = aluno0.segundoNome("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}'}");
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNotNull(aluno9);
        org.junit.Assert.assertNull(professor10);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNull(professor12);
        org.junit.Assert.assertNotNull(pessoa16);
    }

    @Test
    public void test2478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2478");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setFirstName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str3 = user0.getPassword();
        java.lang.String str4 = user0.getEmail();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test2479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2479");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setPassword("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        java.lang.String str6 = loginVM0.getUsername();
        loginVM0.setPassword("Aluno{id=-1, primeiroNome='', segundoNome='null', matricula='null', email='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test2480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2480");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM4 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant5 = managedUserVM4.getCreatedDate();
        java.lang.Long long6 = managedUserVM4.getId();
        java.lang.Long long7 = managedUserVM4.getId();
        java.lang.String str8 = managedUserVM4.toString();
        managedUserVM4.setId((java.lang.Long) (-1L));
        java.util.Set<java.lang.String> strSet11 = managedUserVM4.getAuthorities();
        java.lang.String str12 = managedUserVM4.getImageUrl();
        org.springframework.http.ResponseEntity responseEntity13 = userResource3.createUser(managedUserVM4);
        java.time.Instant instant24 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant36 = null;
        java.time.Instant instant38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet42 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet42, strArray41);
        com.unifacisa.tcc.service.dto.UserDTO userDTO44 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant36, "hi!", instant38, (java.util.Set<java.lang.String>) strSet42);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM45 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", false, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoginVM{username='null', rememberMe=false}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", instant24, "hi!", instant26, (java.util.Set<java.lang.String>) strSet42);
        org.springframework.http.ResponseEntity responseEntity46 = userResource3.createUser(managedUserVM45);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM47 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str48 = managedUserVM47.toString();
        java.lang.String str49 = managedUserVM47.getLogin();
        java.time.Instant instant50 = managedUserVM47.getLastModifiedDate();
        java.lang.String str51 = managedUserVM47.getEmail();
        managedUserVM47.setLogin("");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.service.dto.UserDTO> userDTOResponseEntity54 = userResource3.updateUser(managedUserVM47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str8, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(strSet11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(responseEntity13);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(responseEntity46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str48, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(instant50);
        org.junit.Assert.assertNull(str51);
    }

    @Test
    public void test2481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2481");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList1 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM2 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM2.setName("LoginVM{username='null', rememberMe=false}");
        java.lang.String str5 = loggerVM2.toString();
        loggerVM2.setName("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='error.validation', expireTime=null}");
        java.lang.String str8 = loggerVM2.getLevel();
        logsResource0.changeLevel(loggerVM2);
        loggerVM2.setName("LoginVM{username='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:08.859Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.859Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', rememberMe=false}");
        org.junit.Assert.assertNotNull(loggerVMList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}" + "'", str5, "LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}");
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test2482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2482");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setDisplayName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str6 = socialUserConnection0.getProviderId();
        socialUserConnection0.setRefreshToken("Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str9 = socialUserConnection0.getAccessToken();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str6, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test2483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2483");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper3 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray4 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList5 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList5, userArray4);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList7 = userMapper3.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList5);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray9 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList10 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList10, userArray9);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList12 = userMapper8.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList10);
        java.time.Instant instant23 = null;
        java.time.Instant instant25 = null;
        java.time.Instant instant35 = null;
        java.time.Instant instant37 = null;
        java.lang.String[] strArray40 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet41 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet41, strArray40);
        com.unifacisa.tcc.service.dto.UserDTO userDTO43 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant35, "hi!", instant37, (java.util.Set<java.lang.String>) strSet41);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM44 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant23, "", instant25, (java.util.Set<java.lang.String>) strSet41);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet45 = userMapper8.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet41);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper46 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray47 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList48 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList48, userArray47);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList50 = userMapper46.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList48);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList51 = userMapper8.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList48);
        java.util.List<com.unifacisa.tcc.domain.User> userList52 = userMapper3.userDTOsToUsers(userDTOList51);
        java.util.List<com.unifacisa.tcc.domain.User> userList53 = userMapper0.userDTOsToUsers(userDTOList51);
        com.unifacisa.tcc.domain.User user55 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM56 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.Long long57 = managedUserVM56.getId();
        boolean boolean58 = user55.equals((java.lang.Object) managedUserVM56);
        java.time.Instant instant59 = managedUserVM56.getCreatedDate();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(userDTOList7);
        org.junit.Assert.assertNotNull(userArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(userDTOList12);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(authoritySet45);
        org.junit.Assert.assertNotNull(userArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(userDTOList50);
        org.junit.Assert.assertNotNull(userDTOList51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(user55);
        org.junit.Assert.assertNull(long57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(instant59);
    }

    @Test
    public void test2484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2484");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean2 = aluno0.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = aluno0.primeiroNome("Authority{name='error.concurrencyFailure'}");
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str6 = professor5.toString();
        professor5.setDiponibilidade((java.lang.Boolean) false);
        java.lang.Long long9 = professor5.getMatricula();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa11 = professor5.matricula((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno12 = aluno0.professor(professor5);
        aluno0.setPrimeiroNome("LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=null}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str6, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertNotNull(pessoa11);
        org.junit.Assert.assertNotNull(aluno12);
    }

    @Test
    public void test2485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2485");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        aluno5.setPrimeiroNome("");
        java.lang.Long long8 = aluno5.getMatricula();
        aluno5.setHabilitadoTcc((java.lang.Boolean) false);
        aluno5.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        aluno13.setPrimeiroNome("");
        java.lang.Long long16 = aluno13.getMatricula();
        java.lang.Long long17 = aluno13.getMatricula();
        aluno13.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        aluno20.setPrimeiroNome("");
        java.lang.Long long23 = aluno20.getMatricula();
        java.lang.Long long24 = aluno20.getMatricula();
        aluno20.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray28 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno13, aluno20, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet29 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet29, alunoArray28);
        com.unifacisa.tcc.domain.Professor professor31 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet29);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa33 = professor2.matricula((java.lang.Long) 1L);
        pessoa33.setEmail("error.validation");
        pessoa33.setSegundoNome("User{login='null', firstName='LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertNull(long23);
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertNotNull(alunoArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNotNull(pessoa33);
    }

    @Test
    public void test2486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2486");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        java.lang.String str5 = user2.getResetKey();
        user2.setLastName("LoginVM{username='null', rememberMe=null}");
        java.lang.String str8 = user2.getActivationKey();
        java.lang.String str9 = user2.getCreatedBy();
        java.time.Instant instant10 = user2.getResetDate();
        user2.setLangKey("LoginVM{username='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', rememberMe=false}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(instant10);
    }

    @Test
    public void test2487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2487");
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository0 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource1 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository0);
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository2 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource3 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository2);
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor6 = professor4.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = professor4.email("");
        com.unifacisa.tcc.domain.Professor professor10 = professor4.diponibilidade((java.lang.Boolean) true);
        professor10.setId((java.lang.Long) (-1L));
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity13 = professorResource3.createProfessor(professor10);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity14 = professorResource1.createProfessor(professor10);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor16 = null;
        aluno15.setProfessor(professor16);
        aluno15.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa21 = aluno15.primeiroNome("hi!");
        java.lang.Long long22 = aluno15.getId();
        com.unifacisa.tcc.domain.Aluno aluno24 = aluno15.habilitadoTcc((java.lang.Boolean) false);
        java.lang.Long long25 = aluno24.getMatricula();
        com.unifacisa.tcc.domain.Professor professor26 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor28 = professor26.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa30 = professor26.email("");
        com.unifacisa.tcc.domain.Professor professor32 = professor26.diponibilidade((java.lang.Boolean) true);
        professor32.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno35 = aluno24.professor(professor32);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity36 = professorResource1.createProfessor(professor32);
        com.unifacisa.tcc.domain.Professor professor37 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor39 = professor37.diponibilidade((java.lang.Boolean) true);
        professor39.setDiponibilidade((java.lang.Boolean) false);
        java.lang.String str42 = professor39.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor43 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor45 = professor43.diponibilidade((java.lang.Boolean) true);
        professor45.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno48 = new com.unifacisa.tcc.domain.Aluno();
        aluno48.setPrimeiroNome("");
        java.lang.Long long51 = aluno48.getMatricula();
        aluno48.setHabilitadoTcc((java.lang.Boolean) false);
        aluno48.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno56 = new com.unifacisa.tcc.domain.Aluno();
        aluno56.setPrimeiroNome("");
        java.lang.Long long59 = aluno56.getMatricula();
        java.lang.Long long60 = aluno56.getMatricula();
        aluno56.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        aluno63.setPrimeiroNome("");
        java.lang.Long long66 = aluno63.getMatricula();
        java.lang.Long long67 = aluno63.getMatricula();
        aluno63.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno70 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray71 = new com.unifacisa.tcc.domain.Aluno[] { aluno48, aluno56, aluno63, aluno70 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet72 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet72, alunoArray71);
        com.unifacisa.tcc.domain.Professor professor74 = professor45.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet72);
        com.unifacisa.tcc.domain.Professor professor75 = professor39.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet72);
        com.unifacisa.tcc.domain.Professor professor77 = professor39.diponibilidade((java.lang.Boolean) true);
        java.lang.Long long78 = professor39.getMatricula();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity79 = professorResource1.updateProfessor(professor39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor6);
        org.junit.Assert.assertNotNull(pessoa8);
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNotNull(professorResponseEntity13);
        org.junit.Assert.assertNotNull(professorResponseEntity14);
        org.junit.Assert.assertNotNull(pessoa21);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNotNull(aluno24);
        org.junit.Assert.assertNull(long25);
        org.junit.Assert.assertNotNull(professor28);
        org.junit.Assert.assertNotNull(pessoa30);
        org.junit.Assert.assertNotNull(professor32);
        org.junit.Assert.assertNotNull(aluno35);
        org.junit.Assert.assertNotNull(professorResponseEntity36);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(professor45);
        org.junit.Assert.assertNull(long51);
        org.junit.Assert.assertNull(long59);
        org.junit.Assert.assertNull(long60);
        org.junit.Assert.assertNull(long66);
        org.junit.Assert.assertNull(long67);
        org.junit.Assert.assertNotNull(alunoArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(professor74);
        org.junit.Assert.assertNotNull(professor75);
        org.junit.Assert.assertNotNull(professor77);
        org.junit.Assert.assertNull(long78);
    }

    @Test
    public void test2488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2488");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        java.lang.String str5 = user2.getResetKey();
        boolean boolean7 = user2.equals((java.lang.Object) 10.0f);
        java.lang.String str8 = user2.getLangKey();
        java.lang.String str9 = user2.getPassword();
        java.lang.String str10 = user2.toString();
        com.unifacisa.tcc.service.dto.UserDTO userDTO11 = new com.unifacisa.tcc.service.dto.UserDTO(user2);
        java.lang.String str12 = user2.getActivationKey();
        java.lang.String str13 = user2.getLogin();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str10, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test2489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2489");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        user2.setFirstName("error.validation");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper7 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user9 = userMapper7.userFromId((java.lang.Long) 100L);
        user9.setLangKey("");
        java.time.Instant instant12 = user9.getResetDate();
        java.time.Instant instant13 = user9.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        aluno14.setPrimeiroNome("");
        java.lang.String str17 = aluno14.getPrimeiroNome();
        java.lang.Long long18 = aluno14.getMatricula();
        boolean boolean19 = user9.equals((java.lang.Object) aluno14);
        user9.setFirstName("");
        com.unifacisa.tcc.domain.User user22 = new com.unifacisa.tcc.domain.User();
        user22.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user22.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper27 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user29 = userMapper27.userFromId((java.lang.Long) 100L);
        user29.setLangKey("");
        java.time.Instant instant32 = user29.getResetDate();
        java.time.Instant instant33 = user29.getCreatedDate();
        user22.setResetDate(instant33);
        user9.setCreatedDate(instant33);
        user2.setResetDate(instant33);
        com.unifacisa.tcc.service.dto.UserDTO userDTO37 = new com.unifacisa.tcc.service.dto.UserDTO(user2);
        java.lang.String str38 = user2.getCreatedBy();
        java.lang.String str39 = user2.getResetKey();
        java.time.Instant instant40 = user2.getLastModifiedDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper41 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user43 = userMapper41.userFromId((java.lang.Long) 100L);
        user43.setLangKey("");
        java.time.Instant instant46 = user43.getResetDate();
        java.time.Instant instant47 = user43.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno48 = new com.unifacisa.tcc.domain.Aluno();
        aluno48.setPrimeiroNome("");
        java.lang.String str51 = aluno48.getPrimeiroNome();
        java.lang.Long long52 = aluno48.getMatricula();
        boolean boolean53 = user43.equals((java.lang.Object) aluno48);
        user43.setFirstName("");
        com.unifacisa.tcc.domain.User user56 = new com.unifacisa.tcc.domain.User();
        user56.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user56.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper61 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user63 = userMapper61.userFromId((java.lang.Long) 100L);
        user63.setLangKey("");
        java.time.Instant instant66 = user63.getResetDate();
        java.time.Instant instant67 = user63.getCreatedDate();
        user56.setResetDate(instant67);
        user43.setCreatedDate(instant67);
        user2.setLastModifiedDate(instant67);
        user2.setActivationKey("ManagedUserVM{} UserDTO{login='', firstName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', lastName='', email='hi!', imageUrl='hi!', activated=false, langKey='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', createdBy=error.validation, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        java.lang.String str73 = user2.getLangKey();
        java.lang.String str74 = user2.getEmail();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(user9);
        org.junit.Assert.assertNull(instant12);
        org.junit.Assert.assertNotNull(instant13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(long18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(user29);
        org.junit.Assert.assertNull(instant32);
        org.junit.Assert.assertNotNull(instant33);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(instant40);
        org.junit.Assert.assertNotNull(user43);
        org.junit.Assert.assertNull(instant46);
        org.junit.Assert.assertNotNull(instant47);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNull(long52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(user63);
        org.junit.Assert.assertNull(instant66);
        org.junit.Assert.assertNotNull(instant67);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(str74);
    }

    @Test
    public void test2490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2490");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.toString();
        java.lang.String str2 = managedUserVM0.getLogin();
        java.time.Instant instant3 = managedUserVM0.getLastModifiedDate();
        java.lang.String str4 = managedUserVM0.getLangKey();
        java.lang.String str5 = managedUserVM0.getImageUrl();
        java.lang.String str6 = managedUserVM0.getLogin();
        com.unifacisa.tcc.domain.User user7 = new com.unifacisa.tcc.domain.User();
        user7.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user7.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO12 = new com.unifacisa.tcc.service.dto.UserDTO(user7);
        java.lang.Long long13 = userDTO12.getId();
        java.lang.String str14 = userDTO12.getFirstName();
        java.time.Instant instant15 = userDTO12.getLastModifiedDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper16 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user18 = userMapper16.userFromId((java.lang.Long) 100L);
        user18.setResetKey("hi!");
        java.lang.String str21 = user18.getResetKey();
        user18.setId((java.lang.Long) 0L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper24 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user26 = userMapper24.userFromId((java.lang.Long) 100L);
        user26.setResetKey("hi!");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper29 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user31 = userMapper29.userFromId((java.lang.Long) 100L);
        user31.setLangKey("");
        java.time.Instant instant34 = user31.getResetDate();
        java.time.Instant instant35 = user31.getCreatedDate();
        user26.setResetDate(instant35);
        user18.setResetDate(instant35);
        user18.setCreatedBy("Aluno{id=null, primeiroNome='null', segundoNome='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent40 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant41 = persistentAuditEvent40.getAuditEventDate();
        java.time.Instant instant42 = null;
        persistentAuditEvent40.setAuditEventDate(instant42);
        java.time.Instant instant44 = persistentAuditEvent40.getAuditEventDate();
        persistentAuditEvent40.setPrincipal("");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent47 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant48 = persistentAuditEvent47.getAuditEventDate();
        java.time.Instant instant49 = null;
        persistentAuditEvent47.setAuditEventDate(instant49);
        persistentAuditEvent47.setId((java.lang.Long) 1L);
        persistentAuditEvent47.setId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent55 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = null;
        persistentAuditEvent55.setData(strMap56);
        persistentAuditEvent55.setAuditEventType("hi!");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent60 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant61 = null;
        persistentAuditEvent60.setAuditEventDate(instant61);
        com.unifacisa.tcc.domain.User user63 = new com.unifacisa.tcc.domain.User();
        user63.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user63.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper68 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user70 = userMapper68.userFromId((java.lang.Long) 100L);
        user70.setLangKey("");
        java.time.Instant instant73 = user70.getResetDate();
        java.time.Instant instant74 = user70.getCreatedDate();
        user63.setResetDate(instant74);
        persistentAuditEvent60.setAuditEventDate(instant74);
        persistentAuditEvent55.setAuditEventDate(instant74);
        persistentAuditEvent47.setAuditEventDate(instant74);
        com.unifacisa.tcc.domain.User user79 = new com.unifacisa.tcc.domain.User();
        user79.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM82 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet83 = managedUserVM82.getAuthorities();
        boolean boolean84 = user79.equals((java.lang.Object) strSet83);
        java.time.Instant instant85 = user79.getLastModifiedDate();
        persistentAuditEvent47.setAuditEventDate(instant85);
        persistentAuditEvent40.setAuditEventDate(instant85);
        user18.setLastModifiedDate(instant85);
        userDTO12.setLastModifiedDate(instant85);
        managedUserVM0.setLastModifiedDate(instant85);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str1, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(instant3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(instant15);
        org.junit.Assert.assertNotNull(user18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(user26);
        org.junit.Assert.assertNotNull(user31);
        org.junit.Assert.assertNull(instant34);
        org.junit.Assert.assertNotNull(instant35);
        org.junit.Assert.assertNull(instant41);
        org.junit.Assert.assertNull(instant44);
        org.junit.Assert.assertNull(instant48);
        org.junit.Assert.assertNotNull(user70);
        org.junit.Assert.assertNull(instant73);
        org.junit.Assert.assertNotNull(instant74);
        org.junit.Assert.assertNull(strSet83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(instant85);
    }

    @Test
    public void test2491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2491");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.matricula((java.lang.Long) 10L);
        java.lang.Long long7 = aluno0.getId();
        java.lang.String str8 = aluno0.getEmail();
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test2492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2492");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str6 = socialUserConnection0.getDisplayName();
        java.lang.String str7 = socialUserConnection0.getUserId();
        socialUserConnection0.setSecret("LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=null}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test2493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2493");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 10L);
        java.lang.String str5 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("Authority{name='null'}");
        socialUserConnection0.setProviderId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=null}");
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        aluno12.setPrimeiroNome("");
        java.lang.Long long15 = aluno12.getMatricula();
        java.lang.Long long16 = aluno12.getMatricula();
        com.unifacisa.tcc.domain.Professor professor17 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor19 = professor17.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor22 = null;
        aluno21.setProfessor(professor22);
        aluno21.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor28 = null;
        aluno27.setProfessor(professor28);
        java.lang.Long long30 = aluno27.getMatricula();
        java.lang.String str31 = aluno27.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean34 = aluno32.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor36 = null;
        aluno35.setProfessor(professor36);
        aluno35.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean42 = aluno40.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        aluno43.setPrimeiroNome("");
        java.lang.Long long46 = aluno43.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        aluno47.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray50 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno26, aluno27, aluno32, aluno35, aluno40, aluno43, aluno47 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet51 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet51, alunoArray50);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet51);
        com.unifacisa.tcc.domain.Professor professor54 = professor19.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet51);
        com.unifacisa.tcc.domain.Professor professor56 = professor54.diponibilidade((java.lang.Boolean) true);
        professor54.setDiponibilidade((java.lang.Boolean) false);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet59 = professor54.getAlunos();
        com.unifacisa.tcc.domain.Aluno aluno60 = aluno12.professor(professor54);
        boolean boolean61 = socialUserConnection0.equals((java.lang.Object) professor54);
        java.lang.String str62 = socialUserConnection0.getDisplayName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str5, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long15);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertNotNull(professor19);
        org.junit.Assert.assertNull(long30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(long46);
        org.junit.Assert.assertNotNull(alunoArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(professor54);
        org.junit.Assert.assertNotNull(professor56);
        org.junit.Assert.assertNotNull(alunoSet59);
        org.junit.Assert.assertNotNull(aluno60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(str62);
    }

    @Test
    public void test2494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2494");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            customSocialConnectionRepository3.removeConnections("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='LoggerVM{name='null', level='null'}', secret='null', refreshToken='null', expireTime=null}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2495");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setId((java.lang.Long) (-1L));
        socialUserConnection0.setImageURL("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        socialUserConnection0.setAccessToken("LoggerVM{name='null', level='null'}");
        java.lang.String str7 = socialUserConnection0.toString();
        socialUserConnection0.setExpireTime((java.lang.Long) 10L);
        socialUserConnection0.setAccessToken("LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}'}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='LoggerVM{name='null', level='null'}', secret='null', refreshToken='null', expireTime=null}" + "'", str7, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='LoggerVM{name='null', level='null'}', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test2496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2496");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', refreshToken='null', expireTime=null}", "LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}", "User{login='null', firstName='error.validation', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", (java.lang.Long) (-1L), "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', refreshToken='null', expireTime=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}", "LoggerVM{name='LoggerVM{name='null', level='null'}', level='null'}", "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:08.859Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.859Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}", "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=2021-03-26T03:34:08.443Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.443Z, authorities=[]}", "LoginVM{username='null', rememberMe=false}", (java.lang.Long) 10L);
        socialUserConnection11.setRefreshToken("ManagedUserVM{} UserDTO{login='User{login='null', firstName='error.validation', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str14 = socialUserConnection11.getProfileURL();
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}" + "'", str14, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}");
    }

    @Test
    public void test2497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2497");
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository0 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource1 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository0);
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository2 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource3 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository2);
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor6 = professor4.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = professor4.email("");
        com.unifacisa.tcc.domain.Professor professor10 = professor4.diponibilidade((java.lang.Boolean) true);
        professor10.setId((java.lang.Long) (-1L));
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity13 = professorResource3.createProfessor(professor10);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity14 = professorResource1.createProfessor(professor10);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor16 = null;
        aluno15.setProfessor(professor16);
        aluno15.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa21 = aluno15.primeiroNome("hi!");
        java.lang.Long long22 = aluno15.getId();
        com.unifacisa.tcc.domain.Aluno aluno24 = aluno15.habilitadoTcc((java.lang.Boolean) false);
        java.lang.Long long25 = aluno24.getMatricula();
        com.unifacisa.tcc.domain.Professor professor26 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor28 = professor26.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa30 = professor26.email("");
        com.unifacisa.tcc.domain.Professor professor32 = professor26.diponibilidade((java.lang.Boolean) true);
        professor32.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno35 = aluno24.professor(professor32);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity36 = professorResource1.createProfessor(professor32);
        com.unifacisa.tcc.domain.Professor professor37 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor39 = professor37.diponibilidade((java.lang.Boolean) true);
        professor39.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.Long long42 = professor39.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa44 = professor39.email("error.validation");
        professor39.setId((java.lang.Long) 0L);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity47 = professorResource1.createProfessor(professor39);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.unifacisa.tcc.domain.Professor> professorList48 = professorResource1.getAllProfessors();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor6);
        org.junit.Assert.assertNotNull(pessoa8);
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNotNull(professorResponseEntity13);
        org.junit.Assert.assertNotNull(professorResponseEntity14);
        org.junit.Assert.assertNotNull(pessoa21);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNotNull(aluno24);
        org.junit.Assert.assertNull(long25);
        org.junit.Assert.assertNotNull(professor28);
        org.junit.Assert.assertNotNull(pessoa30);
        org.junit.Assert.assertNotNull(professor32);
        org.junit.Assert.assertNotNull(aluno35);
        org.junit.Assert.assertNotNull(professorResponseEntity36);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNull(long42);
        org.junit.Assert.assertNotNull(pessoa44);
        org.junit.Assert.assertNotNull(professorResponseEntity47);
    }

    @Test
    public void test2498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2498");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = null;
        persistentAuditEvent0.setData(strMap1);
        persistentAuditEvent0.setAuditEventType("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.User user14 = new com.unifacisa.tcc.domain.User();
        user14.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user14.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant19 = user14.getLastModifiedDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper21 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user23 = userMapper21.userFromId((java.lang.Long) 100L);
        user23.setLangKey("");
        java.time.Instant instant26 = user23.getResetDate();
        java.time.Instant instant27 = user23.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        aluno28.setPrimeiroNome("");
        java.lang.String str31 = aluno28.getPrimeiroNome();
        java.lang.Long long32 = aluno28.getMatricula();
        boolean boolean33 = user23.equals((java.lang.Object) aluno28);
        user23.setFirstName("");
        com.unifacisa.tcc.domain.User user36 = new com.unifacisa.tcc.domain.User();
        user36.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user36.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper41 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user43 = userMapper41.userFromId((java.lang.Long) 100L);
        user43.setLangKey("");
        java.time.Instant instant46 = user43.getResetDate();
        java.time.Instant instant47 = user43.getCreatedDate();
        user36.setResetDate(instant47);
        user23.setCreatedDate(instant47);
        java.util.Set<java.lang.String> strSet50 = null;
        com.unifacisa.tcc.service.dto.UserDTO userDTO51 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "LoginVM{username='null', rememberMe=false}", "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}", "error.concurrencyFailure", "LoginVM{username='null', rememberMe=false}", true, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", instant19, "", instant47, strSet50);
        persistentAuditEvent0.setAuditEventDate(instant47);
        persistentAuditEvent0.setId((java.lang.Long) 10L);
        org.junit.Assert.assertNotNull(instant19);
        org.junit.Assert.assertNotNull(user23);
        org.junit.Assert.assertNull(instant26);
        org.junit.Assert.assertNotNull(instant27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNull(long32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(user43);
        org.junit.Assert.assertNull(instant46);
        org.junit.Assert.assertNotNull(instant47);
    }

    @Test
    public void test2499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2499");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor3 = professor0.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet4 = professor0.getAlunos();
        professor0.setId((java.lang.Long) 1L);
        professor0.setPrimeiroNome("LoggerVM{name='null', level='ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}'}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str1, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor3);
        org.junit.Assert.assertNotNull(alunoSet4);
    }

    @Test
    public void test2500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2500");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("error.concurrencyFailure");
        java.lang.Long long12 = socialUserConnection0.getRank();
        socialUserConnection0.setUserId("");
        com.unifacisa.tcc.config.LoggingAspectConfiguration loggingAspectConfiguration15 = new com.unifacisa.tcc.config.LoggingAspectConfiguration();
        boolean boolean16 = socialUserConnection0.equals((java.lang.Object) loggingAspectConfiguration15);
        java.lang.String str17 = socialUserConnection0.getRefreshToken();
        java.lang.String str18 = socialUserConnection0.getProviderId();
        java.lang.String str19 = socialUserConnection0.getRefreshToken();
        socialUserConnection0.setDisplayName("");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str18, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str19);
    }
}
