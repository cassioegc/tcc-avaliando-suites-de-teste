import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getAccessToken();
        java.lang.String str4 = socialUserConnection0.toString();
        java.lang.Long long5 = socialUserConnection0.getId();
        socialUserConnection0.setId((java.lang.Long) 10L);
        java.lang.String str8 = socialUserConnection0.getProviderUserId();
        java.lang.String str9 = socialUserConnection0.getDisplayName();
        socialUserConnection0.setSecret("SocialUserConnection{id=null, userId=null, providerId='Authority{name='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str4, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        java.lang.Boolean boolean2 = loginVM0.isRememberMe();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.Boolean boolean5 = loginVM0.isRememberMe();
        java.lang.Boolean boolean6 = loginVM0.isRememberMe();
        java.lang.String str7 = loginVM0.getPassword();
        java.lang.String str8 = loginVM0.getPassword();
        java.lang.String str9 = loginVM0.toString();
        java.lang.String str10 = loginVM0.getPassword();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertEquals("'" + boolean5 + "' != '" + false + "'", boolean5, false);
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + false + "'", boolean6, false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str9, "LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        professor0.setDiponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor5 = professor0.diponibilidade((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(professor5);
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str12 = aluno11.getEmail();
        aluno11.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray15 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno6, aluno10, aluno11 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet16 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet16, alunoArray15);
        professor4.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        java.lang.String str19 = professor4.toString();
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray31 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno22, aluno26, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet32 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet32, alunoArray31);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Professor professor35 = professor4.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Aluno aluno36 = aluno0.professor(professor35);
        com.unifacisa.tcc.domain.Aluno aluno38 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor39 = aluno0.getProfessor();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(alunoArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str19, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(alunoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNotNull(aluno36);
        org.junit.Assert.assertNotNull(aluno38);
        org.junit.Assert.assertNotNull(professor39);
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setHabilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa5 = aluno0.numeroContato((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.Professor professor6 = aluno0.getProfessor();
        java.lang.Boolean boolean7 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = aluno0.numeroContato((java.lang.Long) (-1L));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(pessoa5);
        org.junit.Assert.assertNull(professor6);
        org.junit.Assert.assertEquals("'" + boolean7 + "' != '" + false + "'", boolean7, false);
        org.junit.Assert.assertNotNull(pessoa9);
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str3 = user0.getLastModifiedBy();
        user0.setEmail("");
        user0.setLastModifiedBy("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        java.lang.String str8 = user0.getFirstName();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper9 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray10 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList11 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList11, userArray10);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList13 = userMapper9.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList11);
        com.unifacisa.tcc.domain.User user15 = userMapper9.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user17 = userMapper9.userFromId((java.lang.Long) (-1L));
        java.time.Instant instant28 = null;
        com.unifacisa.tcc.domain.User user30 = new com.unifacisa.tcc.domain.User();
        java.lang.String str31 = user30.getCreatedBy();
        user30.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO34 = new com.unifacisa.tcc.service.dto.UserDTO(user30);
        java.time.Instant instant35 = userDTO34.getLastModifiedDate();
        java.time.Instant instant46 = null;
        java.time.Instant instant48 = null;
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet54 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet54, strArray53);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM56 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant46, "error.validation", instant48, (java.util.Set<java.lang.String>) strSet54);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM57 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}", "User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "User{login='null', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", false, "Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}", "LoginVM{username='null', rememberMe=false}", "error.validation", instant28, "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", instant35, (java.util.Set<java.lang.String>) strSet54);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet58 = userMapper9.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet54);
        user0.setAuthorities(authoritySet58);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(userDTOList13);
        org.junit.Assert.assertNotNull(user15);
        org.junit.Assert.assertNotNull(user17);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(instant35);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(authoritySet58);
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.lang.String str34 = userDTO33.getLastName();
        java.lang.String str35 = userDTO33.getEmail();
        userDTO33.setId((java.lang.Long) 0L);
        java.lang.String str38 = userDTO33.getLangKey();
        java.time.Instant instant39 = userDTO33.getCreatedDate();
        java.lang.String str40 = userDTO33.getLogin();
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "error.concurrencyFailure" + "'", str34, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "error.concurrencyFailure" + "'", str35, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "error.validation" + "'", str38, "error.validation");
        org.junit.Assert.assertNull(instant39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        loginVM0.setUsername("error.concurrencyFailure");
        java.lang.String str3 = loginVM0.getUsername();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "error.concurrencyFailure" + "'", str3, "error.concurrencyFailure");
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", (java.lang.Long) 0L, "LoginVM{username='null', rememberMe=null}", "", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", "", "LoggerVM{name='null', level='null'}", (java.lang.Long) 0L);
        java.lang.String str12 = socialUserConnection11.getImageURL();
        java.lang.String str13 = socialUserConnection11.getProviderUserId();
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}" + "'", str12, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str13, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.domain.User user6 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user8 = userMapper0.userFromId((java.lang.Long) (-1L));
        java.time.Instant instant19 = null;
        com.unifacisa.tcc.domain.User user21 = new com.unifacisa.tcc.domain.User();
        java.lang.String str22 = user21.getCreatedBy();
        user21.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO25 = new com.unifacisa.tcc.service.dto.UserDTO(user21);
        java.time.Instant instant26 = userDTO25.getLastModifiedDate();
        java.time.Instant instant37 = null;
        java.time.Instant instant39 = null;
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet45 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet45, strArray44);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM47 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant37, "error.validation", instant39, (java.util.Set<java.lang.String>) strSet45);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM48 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}", "User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "User{login='null', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", false, "Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}", "LoginVM{username='null', rememberMe=false}", "error.validation", instant19, "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", instant26, (java.util.Set<java.lang.String>) strSet45);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet49 = userMapper0.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet45);
        com.unifacisa.tcc.domain.User user50 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO51 = new com.unifacisa.tcc.service.dto.UserDTO(user50);
        java.lang.String str52 = user50.getImageUrl();
        java.lang.String str53 = user50.getLangKey();
        java.lang.String str54 = user50.getLogin();
        com.unifacisa.tcc.domain.User user55 = new com.unifacisa.tcc.domain.User();
        user55.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant58 = user55.getLastModifiedDate();
        user50.setLastModifiedDate(instant58);
        java.lang.String str60 = user50.getActivationKey();
        user50.setImageUrl("Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='false'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO63 = userMapper0.userToUserDTO(user50);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet64 = user50.getAuthorities();
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(user6);
        org.junit.Assert.assertNotNull(user8);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(instant26);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(authoritySet49);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(instant58);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(userDTO63);
        org.junit.Assert.assertNotNull(authoritySet64);
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str12 = aluno11.getEmail();
        aluno11.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray15 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno6, aluno10, aluno11 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet16 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet16, alunoArray15);
        professor4.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        java.lang.String str19 = professor4.toString();
        com.unifacisa.tcc.domain.Professor professor21 = professor4.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet22 = professor4.getAlunos();
        com.unifacisa.tcc.domain.Aluno aluno23 = aluno0.professor(professor4);
        java.lang.String str24 = aluno0.toString();
        aluno0.setId((java.lang.Long) 100L);
        aluno0.setHabilitadoTcc((java.lang.Boolean) false);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(alunoArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str19, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor21);
        org.junit.Assert.assertNotNull(alunoSet22);
        org.junit.Assert.assertNotNull(aluno23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str24, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor18 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str21 = aluno20.getEmail();
        aluno20.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str26 = aluno25.getEmail();
        aluno25.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray29 = new com.unifacisa.tcc.domain.Aluno[] { aluno19, aluno20, aluno24, aluno25 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet30 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet30, alunoArray29);
        professor18.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet30);
        com.unifacisa.tcc.domain.Professor professor33 = professor17.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet30);
        com.unifacisa.tcc.domain.Professor professor34 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str37 = aluno36.getEmail();
        aluno36.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        aluno41.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray45 = new com.unifacisa.tcc.domain.Aluno[] { aluno35, aluno36, aluno40, aluno41 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet46 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet46, alunoArray45);
        professor34.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet46);
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str50 = aluno49.getEmail();
        java.lang.Boolean boolean51 = aluno49.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor52 = professor34.addAluno(aluno49);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa54 = professor52.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor55 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno56 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str58 = aluno57.getEmail();
        aluno57.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno61 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str63 = aluno62.getEmail();
        aluno62.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray66 = new com.unifacisa.tcc.domain.Aluno[] { aluno56, aluno57, aluno61, aluno62 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet67 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet67, alunoArray66);
        professor55.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet67);
        com.unifacisa.tcc.domain.Aluno aluno70 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str71 = aluno70.getEmail();
        java.lang.Boolean boolean72 = aluno70.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor73 = professor55.addAluno(aluno70);
        com.unifacisa.tcc.domain.Professor professor74 = aluno70.getProfessor();
        com.unifacisa.tcc.domain.Professor professor75 = aluno70.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno76 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str77 = aluno76.getEmail();
        aluno76.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor80 = professor75.removeAluno(aluno76);
        com.unifacisa.tcc.domain.Professor professor81 = professor52.removeAluno(aluno76);
        com.unifacisa.tcc.domain.Professor professor82 = professor17.addAluno(aluno76);
        com.unifacisa.tcc.domain.Professor professor83 = null;
        aluno76.setProfessor(professor83);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(alunoArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(professor33);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(alunoArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNotNull(professor52);
        org.junit.Assert.assertNotNull(pessoa54);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(alunoArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(boolean72);
        org.junit.Assert.assertNotNull(professor73);
        org.junit.Assert.assertNotNull(professor74);
        org.junit.Assert.assertNotNull(professor75);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(professor80);
        org.junit.Assert.assertNotNull(professor81);
        org.junit.Assert.assertNotNull(professor82);
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        java.lang.String str6 = user0.getFirstName();
        java.time.Instant instant7 = user0.getResetDate();
        java.time.Instant instant8 = user0.getResetDate();
        java.lang.String str9 = user0.getEmail();
        java.lang.String str10 = user0.getFirstName();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(instant7);
        org.junit.Assert.assertNull(instant8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        user0.setLangKey("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.time.Instant instant14 = null;
        java.time.Instant instant16 = null;
        java.time.Instant instant27 = null;
        java.time.Instant instant29 = null;
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet35 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet35, strArray34);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM37 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant27, "error.validation", instant29, (java.util.Set<java.lang.String>) strSet35);
        com.unifacisa.tcc.service.dto.UserDTO userDTO38 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant14, "", instant16, (java.util.Set<java.lang.String>) strSet35);
        java.lang.String str39 = userDTO38.getLastModifiedBy();
        java.time.Instant instant40 = userDTO38.getLastModifiedDate();
        boolean boolean41 = user0.equals((java.lang.Object) userDTO38);
        user0.setId((java.lang.Long) 1L);
        java.lang.String str44 = user0.getActivationKey();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNull(instant40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(str44);
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        loginVM0.setUsername("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        loginVM0.setRememberMe((java.lang.Boolean) true);
        loginVM0.setUsername("Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}");
        loginVM0.setPassword("LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=true}");
        loginVM0.setPassword("SocialUserConnection{id=1, userId=error.validation, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.toString();
        java.lang.String str2 = authority0.getName();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent3 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant4 = persistentAuditEvent3.getAuditEventDate();
        java.lang.Long long5 = persistentAuditEvent3.getId();
        java.lang.Long long6 = persistentAuditEvent3.getId();
        com.unifacisa.tcc.domain.User user7 = new com.unifacisa.tcc.domain.User();
        java.lang.String str8 = user7.getCreatedBy();
        java.lang.String str9 = user7.getLangKey();
        java.time.Instant instant10 = user7.getCreatedDate();
        persistentAuditEvent3.setAuditEventDate(instant10);
        java.util.Map<java.lang.String, java.lang.String> strMap12 = persistentAuditEvent3.getData();
        persistentAuditEvent3.setPrincipal("User{login='null', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        boolean boolean15 = authority0.equals((java.lang.Object) persistentAuditEvent3);
        authority0.setName("User{login='null', firstName='null', lastName='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str18 = authority0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Authority{name='null'}" + "'", str1, "Authority{name='null'}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(instant10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Authority{name='User{login='null', firstName='null', lastName='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}" + "'", str18, "Authority{name='User{login='null', firstName='null', lastName='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}");
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.toString();
        java.time.Instant instant12 = null;
        java.time.Instant instant14 = null;
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM22 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant12, "error.validation", instant14, (java.util.Set<java.lang.String>) strSet20);
        java.lang.String str23 = managedUserVM22.toString();
        boolean boolean24 = authority0.equals((java.lang.Object) managedUserVM22);
        java.time.Instant instant25 = managedUserVM22.getLastModifiedDate();
        java.lang.String str26 = managedUserVM22.getEmail();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Authority{name='null'}" + "'", str1, "Authority{name='null'}");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str23, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(instant25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "error.validation" + "'", str26, "error.validation");
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant3 = user0.getLastModifiedDate();
        user0.setResetKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str6 = user0.getEmail();
        java.time.Instant instant7 = user0.getResetDate();
        user0.setLangKey("Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNotNull(instant3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(instant7);
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor16 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str19 = aluno18.getEmail();
        aluno18.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str24 = aluno23.getEmail();
        aluno23.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray27 = new com.unifacisa.tcc.domain.Aluno[] { aluno17, aluno18, aluno22, aluno23 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet28 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet28, alunoArray27);
        professor16.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet28);
        com.unifacisa.tcc.domain.Professor professor31 = professor0.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet28);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa33 = professor31.numeroContato((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa35 = pessoa33.email("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        pessoa33.setEmail("ManagedUserVM{} UserDTO{login='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(alunoArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNotNull(pessoa33);
        org.junit.Assert.assertNotNull(pessoa35);
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor3 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa5 = professor3.primeiroNome("error.concurrencyFailure");
        com.unifacisa.tcc.domain.Professor professor6 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str9 = aluno8.getEmail();
        aluno8.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str14 = aluno13.getEmail();
        aluno13.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray17 = new com.unifacisa.tcc.domain.Aluno[] { aluno7, aluno8, aluno12, aluno13 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet18 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet18, alunoArray17);
        professor6.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet18);
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        java.lang.Boolean boolean23 = aluno21.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor24 = professor6.addAluno(aluno21);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str26 = aluno25.getEmail();
        aluno25.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection29 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean30 = aluno25.equals((java.lang.Object) socialUserConnection29);
        socialUserConnection29.setRefreshToken("error.validation");
        socialUserConnection29.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean35 = aluno21.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str36 = aluno21.toString();
        java.lang.Boolean boolean37 = aluno21.isHabilitadoTcc();
        java.lang.String str38 = aluno21.toString();
        com.unifacisa.tcc.domain.Professor professor39 = professor3.removeAluno(aluno21);
        java.lang.Boolean boolean40 = professor3.isDiponibilidade();
        java.lang.String str41 = professor3.getPrimeiroNome();
        java.lang.String str42 = professor3.getEmail();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(professor3);
        org.junit.Assert.assertNotNull(pessoa5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(alunoArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(professor24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str36, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str38, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertEquals("'" + boolean40 + "' != '" + true + "'", boolean40, true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "error.concurrencyFailure" + "'", str41, "error.concurrencyFailure");
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setImageURL("error.concurrencyFailure");
        boolean boolean5 = socialUserConnection0.equals((java.lang.Object) "");
        java.lang.Long long6 = socialUserConnection0.getId();
        java.lang.Long long7 = socialUserConnection0.getExpireTime();
        socialUserConnection0.setProfileURL("error.concurrencyFailure");
        java.lang.String str10 = socialUserConnection0.getUserId();
        java.lang.String str11 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setAccessToken("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        java.lang.String str14 = socialUserConnection0.getDisplayName();
        java.lang.String str15 = socialUserConnection0.getProviderUserId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "error.concurrencyFailure" + "'", str11, "error.concurrencyFailure");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLangKey();
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str6 = aluno5.getEmail();
        aluno5.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str11 = aluno10.getEmail();
        aluno10.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray14 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno5, aluno9, aluno10 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet15 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet15, alunoArray14);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet15);
        java.lang.String str18 = professor3.toString();
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        com.unifacisa.tcc.domain.Professor professor34 = professor3.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        boolean boolean35 = user0.equals((java.lang.Object) professor3);
        professor3.setDiponibilidade((java.lang.Boolean) true);
        professor3.setNumeroContato((java.lang.Long) (-1L));
        java.lang.Long long40 = professor3.getId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(alunoArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str18, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(long40);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.String str1 = persistentAuditEvent0.getPrincipal();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        java.lang.String str3 = persistentAuditEvent0.getPrincipal();
        persistentAuditEvent0.setAuditEventType("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        persistentAuditEvent0.setAuditEventType("LoggerVM{name='null', level='Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.time.Instant instant34 = userDTO33.getLastModifiedDate();
        userDTO33.setLogin("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        userDTO33.setId((java.lang.Long) 0L);
        java.lang.String str39 = userDTO33.getCreatedBy();
        java.time.Instant instant40 = userDTO33.getLastModifiedDate();
        java.lang.String str41 = userDTO33.getEmail();
        java.lang.String str42 = userDTO33.getLogin();
        java.lang.String str43 = userDTO33.getImageUrl();
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(instant34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "error.concurrencyFailure" + "'", str39, "error.concurrencyFailure");
        org.junit.Assert.assertNull(instant40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "error.concurrencyFailure" + "'", str41, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str42, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        boolean boolean3 = user2.getActivated();
        java.time.Instant instant4 = user2.getLastModifiedDate();
        user2.setLangKey("");
        java.lang.String str7 = user2.getLangKey();
        java.lang.String str8 = user2.getResetKey();
        user2.setImageUrl("UserDTO{login='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(instant4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        user0.setImageUrl("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent16 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant17 = persistentAuditEvent16.getAuditEventDate();
        persistentAuditEvent16.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent20 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = persistentAuditEvent20.getData();
        persistentAuditEvent20.setPrincipal("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long24 = persistentAuditEvent20.getId();
        java.lang.Long long25 = persistentAuditEvent20.getId();
        java.time.Instant instant26 = persistentAuditEvent20.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        persistentAuditEvent20.setData(strMap27);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent29 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant30 = persistentAuditEvent29.getAuditEventDate();
        java.lang.Long long31 = persistentAuditEvent29.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent32 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = persistentAuditEvent32.getData();
        persistentAuditEvent29.setData(strMap33);
        persistentAuditEvent20.setData(strMap33);
        persistentAuditEvent16.setData(strMap33);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper37 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user39 = userMapper37.userFromId((java.lang.Long) 1L);
        boolean boolean40 = user39.getActivated();
        java.time.Instant instant41 = user39.getLastModifiedDate();
        persistentAuditEvent16.setAuditEventDate(instant41);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper44 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray45 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList46 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList46, userArray45);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList48 = userMapper44.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList46);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper49 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray50 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList51 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList51, userArray50);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList53 = userMapper49.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList51);
        java.util.List<com.unifacisa.tcc.domain.User> userList54 = userMapper44.userDTOsToUsers(userDTOList53);
        com.unifacisa.tcc.domain.User user56 = userMapper44.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO57 = new com.unifacisa.tcc.service.dto.UserDTO(user56);
        java.time.Instant instant58 = userDTO57.getLastModifiedDate();
        java.time.Instant instant69 = null;
        java.time.Instant instant71 = null;
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet77 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet77, strArray76);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM79 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant69, "error.validation", instant71, (java.util.Set<java.lang.String>) strSet77);
        java.lang.String str80 = managedUserVM79.getFirstName();
        java.util.Set<java.lang.String> strSet81 = managedUserVM79.getAuthorities();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM82 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=100}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}", "UserDTO{login='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", false, "error.validation", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}", instant41, "Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", instant58, strSet81);
        user0.setCreatedDate(instant41);
        user0.setActivated(false);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(instant17);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertNull(long25);
        org.junit.Assert.assertNull(instant26);
        org.junit.Assert.assertNull(instant30);
        org.junit.Assert.assertNull(long31);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(user39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(instant41);
        org.junit.Assert.assertNotNull(userArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(userDTOList48);
        org.junit.Assert.assertNotNull(userArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(userDTOList53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(user56);
        org.junit.Assert.assertNotNull(instant58);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertNotNull(strSet81);
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        java.lang.Long long3 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setAuditEventType("ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        persistentAuditEvent0.setId((java.lang.Long) 1L);
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.String str1 = persistentAuditEvent0.getPrincipal();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        java.lang.String str3 = persistentAuditEvent0.getPrincipal();
        persistentAuditEvent0.setAuditEventType("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        persistentAuditEvent0.setId((java.lang.Long) (-1L));
        java.time.Instant instant8 = persistentAuditEvent0.getAuditEventDate();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(instant8);
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        user0.setLastModifiedBy("");
        user0.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str8 = user0.getPassword();
        user0.setActivated(true);
        java.lang.Long long11 = user0.getId();
        user0.setCreatedBy("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(long11);
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setImageURL("error.concurrencyFailure");
        boolean boolean5 = socialUserConnection0.equals((java.lang.Object) "");
        java.lang.Long long6 = socialUserConnection0.getId();
        socialUserConnection0.setRefreshToken("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str9 = socialUserConnection0.getSecret();
        java.lang.String str10 = socialUserConnection0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}" + "'", str10, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}");
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getSecret();
        java.lang.Long long4 = socialUserConnection0.getRank();
        java.lang.String str5 = socialUserConnection0.getProviderId();
        socialUserConnection0.setUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.Long long8 = socialUserConnection0.getExpireTime();
        java.lang.String str9 = socialUserConnection0.toString();
        socialUserConnection0.setDisplayName("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=0, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str9, "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getProfileURL();
        java.lang.String str2 = socialUserConnection0.getAccessToken();
        socialUserConnection0.setAccessToken("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        professor17.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor22 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno23, aluno24, aluno28, aluno29 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor22.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        professor17.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor39 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        aluno41.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str47 = aluno46.getEmail();
        aluno46.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray50 = new com.unifacisa.tcc.domain.Aluno[] { aluno40, aluno41, aluno45, aluno46 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet51 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet51, alunoArray50);
        professor39.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet51);
        aluno38.setProfessor(professor39);
        com.unifacisa.tcc.domain.Professor professor55 = professor17.removeAluno(aluno38);
        com.unifacisa.tcc.domain.Professor professor56 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str59 = aluno58.getEmail();
        aluno58.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str64 = aluno63.getEmail();
        aluno63.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray67 = new com.unifacisa.tcc.domain.Aluno[] { aluno57, aluno58, aluno62, aluno63 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet68 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet68, alunoArray67);
        professor56.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet68);
        java.lang.String str71 = professor56.toString();
        com.unifacisa.tcc.domain.Professor professor73 = professor56.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet74 = professor56.getAlunos();
        com.unifacisa.tcc.domain.Aluno aluno75 = aluno38.professor(professor56);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa77 = aluno75.matricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Professor professor78 = aluno75.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno79 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str80 = aluno79.toString();
        com.unifacisa.tcc.domain.Professor professor81 = aluno79.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno83 = aluno79.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno85 = aluno83.habilitadoTcc((java.lang.Boolean) false);
        java.lang.String str86 = aluno83.toString();
        com.unifacisa.tcc.domain.Professor professor87 = professor78.addAluno(aluno83);
        java.lang.String str88 = professor87.getPrimeiroNome();
        professor87.setDiponibilidade((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(alunoArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(alunoArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str71, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor73);
        org.junit.Assert.assertNotNull(alunoSet74);
        org.junit.Assert.assertNotNull(aluno75);
        org.junit.Assert.assertNotNull(pessoa77);
        org.junit.Assert.assertNotNull(professor78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str80, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(professor81);
        org.junit.Assert.assertNotNull(aluno83);
        org.junit.Assert.assertNotNull(aluno85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}" + "'", str86, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertNotNull(professor87);
        org.junit.Assert.assertNull(str88);
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str3 = user0.getLastName();
        java.lang.String str4 = user0.getEmail();
        com.unifacisa.tcc.domain.User user5 = new com.unifacisa.tcc.domain.User();
        java.lang.String str6 = user5.getCreatedBy();
        java.lang.String str7 = user5.getLastModifiedBy();
        user5.setCreatedBy("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str10 = user5.toString();
        java.time.Instant instant11 = user5.getCreatedDate();
        java.lang.String str12 = user5.getActivationKey();
        java.time.Instant instant13 = user5.getLastModifiedDate();
        user0.setCreatedDate(instant13);
        java.lang.String str15 = user0.getImageUrl();
        user0.setLastModifiedBy("");
        java.lang.String str18 = user0.toString();
        user0.setLastName("LoggerVM{name='null', level='Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str3, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str10, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(instant13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str18, "User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.segundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa21 = professor17.segundoNome("LoggerVM{name='', level='null'}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa23 = professor17.segundoNome("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNotNull(pessoa21);
        org.junit.Assert.assertNotNull(pessoa23);
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.toString();
        java.lang.String str2 = authority0.toString();
        authority0.setName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM5 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str6 = loginVM5.getUsername();
        java.lang.Boolean boolean7 = loginVM5.isRememberMe();
        java.lang.String str8 = loginVM5.toString();
        java.lang.String str9 = loginVM5.getPassword();
        boolean boolean10 = authority0.equals((java.lang.Object) loginVM5);
        loginVM5.setRememberMe((java.lang.Boolean) true);
        java.lang.Boolean boolean13 = loginVM5.isRememberMe();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Authority{name='null'}" + "'", str1, "Authority{name='null'}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Authority{name='null'}" + "'", str2, "Authority{name='null'}");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str8, "LoginVM{username='null', rememberMe=null}");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + true + "'", boolean13, true);
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.Long long1 = aluno0.getNumeroContato();
        com.unifacisa.tcc.domain.Professor professor2 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno3 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str5 = aluno4.getEmail();
        aluno4.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str10 = aluno9.getEmail();
        aluno9.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray13 = new com.unifacisa.tcc.domain.Aluno[] { aluno3, aluno4, aluno8, aluno9 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet14 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet14, alunoArray13);
        professor2.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet14);
        java.lang.String str17 = professor2.toString();
        com.unifacisa.tcc.domain.Professor professor18 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str21 = aluno20.getEmail();
        aluno20.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str26 = aluno25.getEmail();
        aluno25.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray29 = new com.unifacisa.tcc.domain.Aluno[] { aluno19, aluno20, aluno24, aluno25 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet30 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet30, alunoArray29);
        professor18.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet30);
        java.lang.String str33 = professor18.toString();
        java.lang.Long long34 = professor18.getMatricula();
        com.unifacisa.tcc.domain.Professor professor35 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno37 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str38 = aluno37.getEmail();
        aluno37.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str43 = aluno42.getEmail();
        aluno42.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray46 = new com.unifacisa.tcc.domain.Aluno[] { aluno36, aluno37, aluno41, aluno42 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet47 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet47, alunoArray46);
        professor35.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet47);
        java.lang.String str50 = professor35.toString();
        com.unifacisa.tcc.domain.Professor professor52 = professor35.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa54 = professor52.primeiroNome("");
        professor52.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor57 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno59 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str60 = aluno59.getEmail();
        aluno59.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno64 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str65 = aluno64.getEmail();
        aluno64.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray68 = new com.unifacisa.tcc.domain.Aluno[] { aluno58, aluno59, aluno63, aluno64 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet69 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet69, alunoArray68);
        professor57.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet69);
        professor52.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet69);
        com.unifacisa.tcc.domain.Professor professor73 = professor18.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet69);
        professor2.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet69);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet75 = professor2.getAlunos();
        com.unifacisa.tcc.domain.Aluno aluno76 = aluno0.professor(professor2);
        com.unifacisa.tcc.domain.Professor professor77 = aluno76.getProfessor();
        java.lang.Boolean boolean78 = aluno76.isHabilitadoTcc();
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(alunoArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str17, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(alunoArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str33, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long34);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(alunoArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str50, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor52);
        org.junit.Assert.assertNotNull(pessoa54);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(alunoArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(professor73);
        org.junit.Assert.assertNotNull(alunoSet75);
        org.junit.Assert.assertNotNull(aluno76);
        org.junit.Assert.assertNotNull(professor77);
        org.junit.Assert.assertNull(boolean78);
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setImageURL("error.concurrencyFailure");
        java.lang.String str4 = socialUserConnection0.toString();
        socialUserConnection0.setAccessToken("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.lang.String str7 = socialUserConnection0.getProfileURL();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str4, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM20 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant10, "error.validation", instant12, (java.util.Set<java.lang.String>) strSet18);
        java.lang.String str21 = managedUserVM20.getFirstName();
        java.lang.String str22 = managedUserVM20.getPassword();
        java.lang.String str23 = managedUserVM20.getLastModifiedBy();
        java.util.Set<java.lang.String> strSet24 = managedUserVM20.getAuthorities();
        java.lang.String str25 = managedUserVM20.toString();
        java.lang.String str26 = managedUserVM20.toString();
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "error.concurrencyFailure" + "'", str22, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "error.validation" + "'", str23, "error.validation");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str25, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str26, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        java.lang.Boolean boolean17 = aluno15.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor18 = professor0.addAluno(aluno15);
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str20 = aluno19.getEmail();
        aluno19.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection23 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean24 = aluno19.equals((java.lang.Object) socialUserConnection23);
        socialUserConnection23.setRefreshToken("error.validation");
        socialUserConnection23.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean29 = aluno15.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str30 = aluno15.toString();
        com.unifacisa.tcc.domain.Aluno aluno32 = aluno15.habilitadoTcc((java.lang.Boolean) true);
        java.lang.String str33 = aluno15.toString();
        aluno15.setId((java.lang.Long) 100L);
        java.lang.Boolean boolean36 = aluno15.isHabilitadoTcc();
        java.lang.String str37 = aluno15.getEmail();
        java.lang.String str38 = aluno15.getEmail();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str30, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(aluno32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str33, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertEquals("'" + boolean36 + "' != '" + true + "'", boolean36, true);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str38);
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        java.lang.Boolean boolean2 = loginVM0.isRememberMe();
        java.lang.String str3 = loginVM0.toString();
        java.lang.String str4 = loginVM0.getPassword();
        java.lang.String str5 = loginVM0.toString();
        java.lang.String str6 = loginVM0.getPassword();
        java.lang.String str7 = loginVM0.toString();
        java.lang.Class<?> wildcardClass8 = loginVM0.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str3, "LoginVM{username='null', rememberMe=null}");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str5, "LoginVM{username='null', rememberMe=null}");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str7, "LoginVM{username='null', rememberMe=null}");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getEmail();
        java.lang.String str4 = user0.getLogin();
        java.lang.String str5 = user0.getImageUrl();
        com.unifacisa.tcc.domain.User user6 = new com.unifacisa.tcc.domain.User();
        java.lang.String str7 = user6.getCreatedBy();
        java.lang.String str8 = user6.getLangKey();
        java.lang.String str9 = user6.getCreatedBy();
        com.unifacisa.tcc.domain.User user10 = new com.unifacisa.tcc.domain.User();
        java.lang.String str11 = user10.getCreatedBy();
        java.lang.String str12 = user10.getLangKey();
        java.time.Instant instant13 = user10.getCreatedDate();
        user6.setLastModifiedDate(instant13);
        user0.setLastModifiedDate(instant13);
        user0.setResetKey("Professor{id=null, primeiroNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(instant13);
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str1 = loggerVM0.getName();
        loggerVM0.setLevel("error.validation");
        loggerVM0.setLevel("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        java.lang.String str6 = loggerVM0.getLevel();
        java.lang.String str7 = loggerVM0.getLevel();
        java.lang.String str8 = loggerVM0.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str6, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str7, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent3 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = persistentAuditEvent3.getData();
        persistentAuditEvent0.setData(strMap4);
        persistentAuditEvent0.setId((java.lang.Long) 1L);
        persistentAuditEvent0.setAuditEventType("Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}");
        persistentAuditEvent0.setPrincipal("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNotNull(strMap4);
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.toString();
        com.unifacisa.tcc.domain.Professor professor2 = aluno0.getProfessor();
        // The following exception was thrown during execution in test generation
        try {
            professor2.setSegundoNome("Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str1, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(professor2);
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        java.lang.Long long3 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setAuditEventType("ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str6 = persistentAuditEvent0.getPrincipal();
        java.time.Instant instant7 = persistentAuditEvent0.getAuditEventDate();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(instant7);
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setImageURL("error.concurrencyFailure");
        boolean boolean5 = socialUserConnection0.equals((java.lang.Object) "");
        java.lang.Long long6 = socialUserConnection0.getId();
        java.lang.Long long7 = socialUserConnection0.getExpireTime();
        java.lang.String str8 = socialUserConnection0.toString();
        java.lang.String str9 = socialUserConnection0.getUserId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str8, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM0.setLevel("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = loggerVM0.getName();
        java.lang.String str4 = loggerVM0.getName();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.String str2 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='-1', diponibilidade='true'}");
        socialUserConnection0.setId((java.lang.Long) 0L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        java.lang.Boolean boolean17 = aluno15.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor18 = professor0.addAluno(aluno15);
        aluno15.setNumeroContato((java.lang.Long) 0L);
        aluno15.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno24 = aluno15.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno26 = aluno15.habilitadoTcc((java.lang.Boolean) true);
        aluno15.setNumeroContato((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Professor professor29 = aluno15.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno31 = aluno15.habilitadoTcc((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNotNull(aluno24);
        org.junit.Assert.assertNotNull(aluno26);
        org.junit.Assert.assertNotNull(professor29);
        org.junit.Assert.assertNotNull(aluno31);
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        user0.setResetKey("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str5 = user0.getEmail();
        user0.setActivationKey("LoggerVM{name='null', level='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}'}");
        java.lang.String str8 = user0.getPassword();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        user0.setLastName("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str6 = user0.getImageUrl();
        java.lang.String str7 = user0.toString();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "User{login='null', firstName='null', lastName='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str7, "User{login='null', firstName='null', lastName='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        socialUserConnection0.setId((java.lang.Long) (-1L));
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        socialUserConnection0.setDisplayName("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long11 = socialUserConnection0.getRank();
        socialUserConnection0.setImageURL("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.lang.String str14 = socialUserConnection0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', accessToken='null', secret='null', refreshToken='null', expireTime=0}" + "'", str14, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        java.lang.Boolean boolean17 = aluno15.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor18 = professor0.addAluno(aluno15);
        professor0.setSegundoNome("Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(professor18);
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.lang.String str34 = userDTO33.getLastModifiedBy();
        java.time.Instant instant35 = userDTO33.getLastModifiedDate();
        java.util.Set<java.lang.String> strSet36 = userDTO33.getAuthorities();
        java.util.Set<java.lang.String> strSet37 = userDTO33.getAuthorities();
        java.lang.String str38 = userDTO33.getLangKey();
        java.lang.String str39 = userDTO33.getCreatedBy();
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(instant35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "error.validation" + "'", str38, "error.validation");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "error.concurrencyFailure" + "'", str39, "error.concurrencyFailure");
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        socialUserConnection4.setRefreshToken("error.validation");
        socialUserConnection4.setUserId("LoginVM{username='null', rememberMe=false}");
        java.lang.String str10 = socialUserConnection4.getImageURL();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO4 = new com.unifacisa.tcc.service.dto.UserDTO(user3);
        java.lang.String str5 = user3.getImageUrl();
        boolean boolean7 = user3.equals((java.lang.Object) (byte) -1);
        java.lang.String str8 = user3.getLastName();
        java.lang.String str9 = user3.getFirstName();
        java.time.Instant instant10 = user3.getResetDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO11 = userMapper0.userToUserDTO(user3);
        com.unifacisa.tcc.domain.User user12 = new com.unifacisa.tcc.domain.User();
        java.lang.String str13 = user12.getCreatedBy();
        java.lang.String str14 = user12.getLastModifiedBy();
        java.lang.String str15 = user12.getImageUrl();
        com.unifacisa.tcc.service.dto.UserDTO userDTO16 = userMapper0.userToUserDTO(user12);
        com.unifacisa.tcc.domain.User user17 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO18 = new com.unifacisa.tcc.service.dto.UserDTO(user17);
        java.time.Instant instant19 = user17.getResetDate();
        java.lang.String str20 = user17.getResetKey();
        com.unifacisa.tcc.domain.User user31 = new com.unifacisa.tcc.domain.User();
        user31.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str34 = user31.getLastName();
        java.time.Instant instant35 = user31.getLastModifiedDate();
        com.unifacisa.tcc.domain.User user37 = new com.unifacisa.tcc.domain.User();
        user37.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str40 = user37.getLastName();
        java.time.Instant instant41 = user37.getLastModifiedDate();
        java.time.Instant instant51 = null;
        java.time.Instant instant53 = null;
        java.time.Instant instant64 = null;
        java.time.Instant instant66 = null;
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet72 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet72, strArray71);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM74 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant64, "error.validation", instant66, (java.util.Set<java.lang.String>) strSet72);
        com.unifacisa.tcc.service.dto.UserDTO userDTO75 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant51, "", instant53, (java.util.Set<java.lang.String>) strSet72);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM76 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) (-1L), "LoggerVM{name='null', level='error.validation'}", "Authority{name='null'}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", false, "LoginVM{username='null', rememberMe=false}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "LoggerVM{name='null', level='error.validation'}", instant35, "", instant41, (java.util.Set<java.lang.String>) strSet72);
        user17.setResetDate(instant35);
        user17.setEmail("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str80 = user17.getResetKey();
        com.unifacisa.tcc.service.dto.UserDTO userDTO81 = userMapper0.userToUserDTO(user17);
        java.lang.String str82 = user17.toString();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent83 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap84 = persistentAuditEvent83.getData();
        persistentAuditEvent83.setPrincipal("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long87 = persistentAuditEvent83.getId();
        persistentAuditEvent83.setPrincipal("error.concurrencyFailure");
        java.util.Map<java.lang.String, java.lang.String> strMap90 = null;
        persistentAuditEvent83.setData(strMap90);
        java.lang.String str92 = persistentAuditEvent83.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap93 = persistentAuditEvent83.getData();
        java.time.Instant instant94 = persistentAuditEvent83.getAuditEventDate();
        boolean boolean95 = user17.equals((java.lang.Object) instant94);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(userDTO11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(userDTO16);
        org.junit.Assert.assertNull(instant19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str34, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str40, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant41);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(userDTO81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "User{login='null', firstName='null', lastName='null', email='Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str82, "User{login='null', firstName='null', lastName='null', email='Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNull(long87);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertNull(strMap93);
        org.junit.Assert.assertNull(instant94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long1 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setAuditEventType("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Long long4 = persistentAuditEvent0.getId();
        java.lang.String str5 = persistentAuditEvent0.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = persistentAuditEvent0.getData();
        persistentAuditEvent0.setPrincipal("Authority{name='Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}'}");
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str5, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(strMap6);
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno3 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str4 = aluno3.getEmail();
        aluno3.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str9 = aluno8.getEmail();
        aluno8.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray12 = new com.unifacisa.tcc.domain.Aluno[] { aluno2, aluno3, aluno7, aluno8 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet13 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet13, alunoArray12);
        professor1.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet13);
        java.lang.String str16 = professor1.toString();
        com.unifacisa.tcc.domain.Professor professor18 = professor1.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        com.unifacisa.tcc.domain.Professor professor34 = professor18.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        aluno0.setProfessor(professor34);
        com.unifacisa.tcc.domain.Professor professor37 = professor34.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa39 = professor34.segundoNome("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet40 = professor34.getAlunos();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(alunoArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str16, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNotNull(pessoa39);
        org.junit.Assert.assertNotNull(alunoSet40);
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        java.lang.Boolean boolean17 = aluno15.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor18 = professor0.addAluno(aluno15);
        com.unifacisa.tcc.domain.Professor professor19 = aluno15.getProfessor();
        com.unifacisa.tcc.domain.Professor professor20 = aluno15.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor25 = professor20.removeAluno(aluno21);
        com.unifacisa.tcc.domain.Professor professor26 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str29 = aluno28.getEmail();
        aluno28.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str34 = aluno33.getEmail();
        aluno33.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray37 = new com.unifacisa.tcc.domain.Aluno[] { aluno27, aluno28, aluno32, aluno33 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet38 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet38, alunoArray37);
        professor26.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet38);
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        java.lang.Boolean boolean43 = aluno41.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor44 = professor26.addAluno(aluno41);
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str46 = aluno45.getEmail();
        aluno45.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection49 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean50 = aluno45.equals((java.lang.Object) socialUserConnection49);
        socialUserConnection49.setRefreshToken("error.validation");
        socialUserConnection49.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean55 = aluno41.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str56 = aluno41.toString();
        java.lang.Boolean boolean57 = aluno41.isHabilitadoTcc();
        aluno41.setHabilitadoTcc((java.lang.Boolean) true);
        aluno41.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor62 = aluno41.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno63 = aluno21.professor(professor62);
        com.unifacisa.tcc.domain.Professor professor64 = aluno63.getProfessor();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNotNull(professor19);
        org.junit.Assert.assertNotNull(professor20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(professor25);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(alunoArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(professor44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str56, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(professor62);
        org.junit.Assert.assertNotNull(aluno63);
        org.junit.Assert.assertNotNull(professor64);
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        com.unifacisa.tcc.domain.Professor professor21 = professor17.diponibilidade((java.lang.Boolean) true);
        professor17.setEmail("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str24 = professor17.toString();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNotNull(professor21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', numeroContato='null', diponibilidade='true'}" + "'", str24, "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', numeroContato='null', diponibilidade='true'}");
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.lang.String str34 = userDTO33.getLastName();
        java.lang.String str35 = userDTO33.getLogin();
        java.lang.String str36 = userDTO33.getFirstName();
        java.util.Set<java.lang.String> strSet37 = userDTO33.getAuthorities();
        java.lang.String str38 = userDTO33.getEmail();
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "error.concurrencyFailure" + "'", str34, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "error.concurrencyFailure" + "'", str38, "error.concurrencyFailure");
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.String str1 = persistentAuditEvent0.getPrincipal();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent3 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long4 = persistentAuditEvent3.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent5 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant6 = persistentAuditEvent5.getAuditEventDate();
        java.lang.Long long7 = persistentAuditEvent5.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent8 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = persistentAuditEvent8.getData();
        persistentAuditEvent5.setData(strMap9);
        persistentAuditEvent3.setData(strMap9);
        persistentAuditEvent0.setData(strMap9);
        persistentAuditEvent0.setPrincipal("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(instant6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNotNull(strMap9);
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        user3.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant6 = user3.getLastModifiedDate();
        user0.setCreatedDate(instant6);
        java.lang.String str8 = user0.getEmail();
        java.lang.String str9 = user0.getResetKey();
        java.lang.String str10 = user0.getFirstName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setUserId("error.validation");
        java.lang.String str3 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setDisplayName("error.validation");
        socialUserConnection0.setImageURL("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        java.lang.String str8 = socialUserConnection0.getAccessToken();
        socialUserConnection0.setId((java.lang.Long) 100L);
        socialUserConnection0.setProviderId("LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getRefreshToken();
        socialUserConnection0.setProfileURL("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setId((java.lang.Long) 1L);
        java.lang.String str8 = socialUserConnection0.getUserId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("", "hi!", "hi!");
        java.lang.String str4 = fieldErrorVM3.getField();
        java.lang.String str5 = fieldErrorVM3.getObjectName();
        java.lang.String str6 = fieldErrorVM3.getField();
        java.lang.String str7 = fieldErrorVM3.getObjectName();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        socialUserConnection4.setRefreshToken("error.validation");
        socialUserConnection4.setSecret("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.Long long10 = socialUserConnection4.getRank();
        socialUserConnection4.setSecret("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}");
        socialUserConnection4.setImageURL("Aluno{id=-1, primeiroNome='null', segundoNome='LoginVM{username='null', rememberMe=false}', matricula='0', email='null', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long10);
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setImageURL("error.concurrencyFailure");
        boolean boolean5 = socialUserConnection0.equals((java.lang.Object) "");
        java.lang.Long long6 = socialUserConnection0.getId();
        socialUserConnection0.setRefreshToken("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str9 = socialUserConnection0.getUserId();
        java.lang.String str10 = socialUserConnection0.toString();
        java.lang.String str11 = socialUserConnection0.getProviderUserId();
        java.lang.String str12 = socialUserConnection0.toString();
        java.lang.String str13 = socialUserConnection0.getProfileURL();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}" + "'", str10, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}" + "'", str12, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}");
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM20 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant10, "error.validation", instant12, (java.util.Set<java.lang.String>) strSet18);
        java.lang.String str21 = managedUserVM20.getFirstName();
        java.lang.String str22 = managedUserVM20.toString();
        java.lang.String str23 = managedUserVM20.getEmail();
        java.util.Set<java.lang.String> strSet24 = managedUserVM20.getAuthorities();
        java.lang.String str25 = managedUserVM20.toString();
        managedUserVM20.setId((java.lang.Long) 0L);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str22, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "error.validation" + "'", str23, "error.validation");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str25, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setUserId("error.validation");
        java.lang.String str3 = socialUserConnection0.getProfileURL();
        java.lang.Long long4 = socialUserConnection0.getId();
        java.lang.String str5 = socialUserConnection0.getUserId();
        java.lang.String str6 = socialUserConnection0.getImageURL();
        socialUserConnection0.setProviderUserId("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', refreshToken='error.validation', expireTime=null}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "error.validation" + "'", str5, "error.validation");
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent1 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long2 = persistentAuditEvent1.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent3 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant4 = persistentAuditEvent3.getAuditEventDate();
        java.lang.Long long5 = persistentAuditEvent3.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent6 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = persistentAuditEvent6.getData();
        persistentAuditEvent3.setData(strMap7);
        persistentAuditEvent1.setData(strMap7);
        persistentAuditEvent0.setData(strMap7);
        java.lang.String str11 = persistentAuditEvent0.getPrincipal();
        java.lang.Long long12 = persistentAuditEvent0.getId();
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(long12);
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        java.lang.String str4 = user0.getLogin();
        com.unifacisa.tcc.domain.User user5 = new com.unifacisa.tcc.domain.User();
        user5.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant8 = user5.getLastModifiedDate();
        user0.setLastModifiedDate(instant8);
        java.lang.String str10 = user0.getPassword();
        java.time.Instant instant11 = user0.getResetDate();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent12 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.String str13 = persistentAuditEvent12.getPrincipal();
        java.lang.Long long14 = persistentAuditEvent12.getId();
        persistentAuditEvent12.setPrincipal("LoginVM{username='null', rememberMe=null}");
        persistentAuditEvent12.setId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.User user19 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO20 = new com.unifacisa.tcc.service.dto.UserDTO(user19);
        java.lang.String str21 = user19.getImageUrl();
        boolean boolean23 = user19.equals((java.lang.Object) (byte) -1);
        java.lang.String str24 = user19.getLastName();
        user19.setResetKey("LoginVM{username='null', rememberMe=null}");
        java.time.Instant instant27 = user19.getCreatedDate();
        persistentAuditEvent12.setAuditEventDate(instant27);
        user0.setCreatedDate(instant27);
        user0.setResetKey("Authority{name='LoggerVM{name='', level='null'}'}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(instant8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(instant11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(long14);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(instant27);
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor16 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str19 = aluno18.getEmail();
        aluno18.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str24 = aluno23.getEmail();
        aluno23.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray27 = new com.unifacisa.tcc.domain.Aluno[] { aluno17, aluno18, aluno22, aluno23 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet28 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet28, alunoArray27);
        professor16.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet28);
        com.unifacisa.tcc.domain.Professor professor31 = professor0.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet28);
        com.unifacisa.tcc.domain.Professor professor33 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa35 = professor0.matricula((java.lang.Long) 1L);
        java.lang.String str36 = pessoa35.getEmail();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa38 = pessoa35.segundoNome("LoginVM{username='', rememberMe=null}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(alunoArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNotNull(professor33);
        org.junit.Assert.assertNotNull(pessoa35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(pessoa38);
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        java.lang.String str4 = user0.getLogin();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet5 = user0.getAuthorities();
        java.lang.String str6 = user0.getResetKey();
        user0.setLangKey("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        user0.setId((java.lang.Long) 100L);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(authoritySet5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        java.lang.Boolean boolean2 = professor0.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str13 = aluno12.getEmail();
        aluno12.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray16 = new com.unifacisa.tcc.domain.Aluno[] { aluno6, aluno7, aluno11, aluno12 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet17 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet17, alunoArray16);
        professor5.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet17);
        java.lang.String str20 = professor5.toString();
        com.unifacisa.tcc.domain.Professor professor22 = professor5.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa24 = professor22.primeiroNome("");
        professor22.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor27 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str35 = aluno34.getEmail();
        aluno34.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray38 = new com.unifacisa.tcc.domain.Aluno[] { aluno28, aluno29, aluno33, aluno34 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet39 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet39, alunoArray38);
        professor27.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet39);
        professor22.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet39);
        com.unifacisa.tcc.domain.Professor professor43 = professor0.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet39);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa45 = professor0.primeiroNome("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        pessoa45.setMatricula((java.lang.Long) 1L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(alunoArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str20, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor22);
        org.junit.Assert.assertNotNull(pessoa24);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(alunoArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(professor43);
        org.junit.Assert.assertNotNull(pessoa45);
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}", "LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=false}", "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", (java.lang.Long) 10L, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "LoginVM{username='error.concurrencyFailure', rememberMe=null}", "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "hi!", "Authority{name='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", (java.lang.Long) 1L);
        socialUserConnection11.setProfileURL("User{login='null', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection11.setProviderUserId("LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=false}");
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        professor0.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor17 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str20 = aluno19.getEmail();
        aluno19.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray28 = new com.unifacisa.tcc.domain.Aluno[] { aluno18, aluno19, aluno23, aluno24 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet29 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet29, alunoArray28);
        professor17.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet29);
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str33 = aluno32.getEmail();
        java.lang.Boolean boolean34 = aluno32.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor35 = professor17.addAluno(aluno32);
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str37 = aluno36.getEmail();
        aluno36.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection40 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean41 = aluno36.equals((java.lang.Object) socialUserConnection40);
        socialUserConnection40.setRefreshToken("error.validation");
        socialUserConnection40.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean46 = aluno32.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str47 = aluno32.toString();
        com.unifacisa.tcc.domain.Aluno aluno49 = aluno32.habilitadoTcc((java.lang.Boolean) true);
        java.lang.String str50 = aluno32.toString();
        com.unifacisa.tcc.domain.Professor professor51 = professor0.removeAluno(aluno32);
        com.unifacisa.tcc.domain.Professor professor53 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor55 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa57 = professor0.segundoNome("");
        com.unifacisa.tcc.domain.User user58 = new com.unifacisa.tcc.domain.User();
        java.lang.String str59 = user58.getCreatedBy();
        java.lang.String str60 = user58.getLastModifiedBy();
        java.lang.String str61 = user58.getPassword();
        boolean boolean62 = pessoa57.equals((java.lang.Object) str61);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(alunoArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str47, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(aluno49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str50, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertNotNull(professor51);
        org.junit.Assert.assertNotNull(professor53);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNotNull(pessoa57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        java.time.Instant instant6 = user0.getCreatedDate();
        user0.setResetKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(instant6);
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        socialUserConnection4.setRefreshToken("error.validation");
        socialUserConnection4.setSecret("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.Long long10 = socialUserConnection4.getRank();
        socialUserConnection4.setImageURL("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        socialUserConnection4.setDisplayName("User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}'}");
        java.lang.String str15 = socialUserConnection4.getDisplayName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}'}" + "'", str15, "User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}'}");
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor3 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor5 = professor3.diponibilidade((java.lang.Boolean) true);
        professor3.setDiponibilidade((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(professor3);
        org.junit.Assert.assertNotNull(professor5);
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        user0.setResetKey("LoginVM{username='null', rememberMe=null}");
        java.lang.String str8 = user0.getLastName();
        user0.setLastModifiedBy("");
        com.unifacisa.tcc.service.dto.UserDTO userDTO11 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        user0.setLangKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='Authority{name='null'}', activationKey='null'}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.util.List<com.unifacisa.tcc.domain.User> userList10 = userMapper0.userDTOsToUsers(userDTOList9);
        com.unifacisa.tcc.domain.User user12 = userMapper0.userFromId((java.lang.Long) 1L);
        user12.setActivationKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        java.lang.String str15 = user12.getFirstName();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent16 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant17 = persistentAuditEvent16.getAuditEventDate();
        com.unifacisa.tcc.domain.User user18 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO19 = new com.unifacisa.tcc.service.dto.UserDTO(user18);
        java.lang.String str20 = user18.toString();
        java.time.Instant instant21 = user18.getCreatedDate();
        persistentAuditEvent16.setAuditEventDate(instant21);
        user12.setLastModifiedDate(instant21);
        java.lang.String str24 = user12.getActivationKey();
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(user12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(instant17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str20, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str24, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setImageURL("error.concurrencyFailure");
        socialUserConnection0.setAccessToken("User{login='null', firstName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setUserId("LoginVM{username='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', rememberMe=false}");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setProviderId("");
        java.lang.String str4 = socialUserConnection0.getProfileURL();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user7 = userMapper5.userFromId((java.lang.Long) 1L);
        boolean boolean8 = user7.getActivated();
        java.time.Instant instant9 = user7.getLastModifiedDate();
        boolean boolean10 = socialUserConnection0.equals((java.lang.Object) instant9);
        java.lang.String str11 = socialUserConnection0.toString();
        java.lang.String str12 = socialUserConnection0.getProfileURL();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(user7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(instant9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str11, "SocialUserConnection{id=null, userId=null, providerId='', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        java.lang.Boolean boolean2 = professor0.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str13 = aluno12.getEmail();
        aluno12.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray16 = new com.unifacisa.tcc.domain.Aluno[] { aluno6, aluno7, aluno11, aluno12 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet17 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet17, alunoArray16);
        professor5.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet17);
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str21 = aluno20.getEmail();
        java.lang.Boolean boolean22 = aluno20.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor23 = professor5.addAluno(aluno20);
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection28 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean29 = aluno24.equals((java.lang.Object) socialUserConnection28);
        socialUserConnection28.setRefreshToken("error.validation");
        socialUserConnection28.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean34 = aluno20.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.domain.Professor professor35 = professor0.removeAluno(aluno20);
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str37 = aluno36.getEmail();
        aluno36.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor40 = aluno36.getProfessor();
        com.unifacisa.tcc.domain.Professor professor41 = professor35.addAluno(aluno36);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet42 = professor41.getAlunos();
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str44 = aluno43.getEmail();
        java.lang.Boolean boolean45 = aluno43.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor46 = aluno43.getProfessor();
        com.unifacisa.tcc.domain.Professor professor47 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno48 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str50 = aluno49.getEmail();
        aluno49.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno53 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno54 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str55 = aluno54.getEmail();
        aluno54.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray58 = new com.unifacisa.tcc.domain.Aluno[] { aluno48, aluno49, aluno53, aluno54 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet59 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet59, alunoArray58);
        professor47.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet59);
        java.lang.String str62 = professor47.toString();
        com.unifacisa.tcc.domain.Professor professor63 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno64 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno65 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str66 = aluno65.getEmail();
        aluno65.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno69 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno70 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str71 = aluno70.getEmail();
        aluno70.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray74 = new com.unifacisa.tcc.domain.Aluno[] { aluno64, aluno65, aluno69, aluno70 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet75 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet75, alunoArray74);
        professor63.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet75);
        com.unifacisa.tcc.domain.Professor professor78 = professor47.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet75);
        com.unifacisa.tcc.domain.Aluno aluno79 = aluno43.professor(professor78);
        com.unifacisa.tcc.domain.Aluno aluno81 = aluno43.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor82 = professor41.addAluno(aluno81);
        java.lang.String str83 = professor82.getEmail();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(alunoArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(professor23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(professor40);
        org.junit.Assert.assertNotNull(professor41);
        org.junit.Assert.assertNotNull(alunoSet42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNull(professor46);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(alunoArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str62, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(alunoArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(professor78);
        org.junit.Assert.assertNotNull(aluno79);
        org.junit.Assert.assertNotNull(aluno81);
        org.junit.Assert.assertNotNull(professor82);
        org.junit.Assert.assertNull(str83);
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLangKey();
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str6 = aluno5.getEmail();
        aluno5.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str11 = aluno10.getEmail();
        aluno10.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray14 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno5, aluno9, aluno10 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet15 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet15, alunoArray14);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet15);
        java.lang.String str18 = professor3.toString();
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        com.unifacisa.tcc.domain.Professor professor34 = professor3.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        boolean boolean35 = user0.equals((java.lang.Object) professor3);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent36 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.User user37 = new com.unifacisa.tcc.domain.User();
        java.lang.String str38 = user37.getCreatedBy();
        java.lang.String str39 = user37.getLangKey();
        java.time.Instant instant40 = user37.getCreatedDate();
        persistentAuditEvent36.setAuditEventDate(instant40);
        user0.setCreatedDate(instant40);
        com.unifacisa.tcc.service.dto.UserDTO userDTO43 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str44 = user0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(alunoArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str18, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(instant40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str44, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.lang.String str34 = userDTO33.getLastModifiedBy();
        java.time.Instant instant35 = userDTO33.getLastModifiedDate();
        java.lang.String str36 = userDTO33.getLogin();
        java.lang.String str37 = userDTO33.getLastModifiedBy();
        java.lang.String str38 = userDTO33.getLogin();
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(instant35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        user3.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant6 = user3.getLastModifiedDate();
        user0.setCreatedDate(instant6);
        user0.setResetKey("UserDTO{login='LoggerVM{name='null', level='null'}', firstName='error.concurrencyFailure', lastName='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', imageUrl='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', activated=true, langKey='', createdBy=Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}, createdDate=2021-03-24T23:46:14.824Z, lastModifiedBy='', lastModifiedDate=2021-03-24T23:46:14.824Z, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(instant6);
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor4 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno6 = aluno0.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor7 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str10 = aluno9.getEmail();
        aluno9.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str15 = aluno14.getEmail();
        aluno14.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray18 = new com.unifacisa.tcc.domain.Aluno[] { aluno8, aluno9, aluno13, aluno14 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet19 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet19, alunoArray18);
        professor7.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet19);
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        java.lang.Boolean boolean24 = aluno22.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor25 = professor7.addAluno(aluno22);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa27 = professor25.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa29 = professor25.segundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor25.setEmail("Authority{name='Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}'}");
        com.unifacisa.tcc.domain.Professor professor33 = professor25.diponibilidade((java.lang.Boolean) false);
        aluno0.setProfessor(professor33);
        com.unifacisa.tcc.domain.Professor professor35 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno37 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str38 = aluno37.getEmail();
        aluno37.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str43 = aluno42.getEmail();
        aluno42.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray46 = new com.unifacisa.tcc.domain.Aluno[] { aluno36, aluno37, aluno41, aluno42 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet47 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet47, alunoArray46);
        professor35.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet47);
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str51 = aluno50.getEmail();
        java.lang.Boolean boolean52 = aluno50.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor53 = professor35.addAluno(aluno50);
        aluno50.setNumeroContato((java.lang.Long) 0L);
        aluno50.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor58 = professor33.addAluno(aluno50);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNull(professor4);
        org.junit.Assert.assertNotNull(aluno6);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(alunoArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(professor25);
        org.junit.Assert.assertNotNull(pessoa27);
        org.junit.Assert.assertNotNull(pessoa29);
        org.junit.Assert.assertNotNull(professor33);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(alunoArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertNotNull(professor53);
        org.junit.Assert.assertNotNull(professor58);
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Professor professor16 = professor0.diponibilidade((java.lang.Boolean) true);
        professor16.setEmail("");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(professor16);
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor16 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str19 = aluno18.getEmail();
        aluno18.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str24 = aluno23.getEmail();
        aluno23.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray27 = new com.unifacisa.tcc.domain.Aluno[] { aluno17, aluno18, aluno22, aluno23 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet28 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet28, alunoArray27);
        professor16.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet28);
        com.unifacisa.tcc.domain.Professor professor31 = professor0.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet28);
        com.unifacisa.tcc.domain.Professor professor33 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor34 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str37 = aluno36.getEmail();
        aluno36.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        aluno41.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray45 = new com.unifacisa.tcc.domain.Aluno[] { aluno35, aluno36, aluno40, aluno41 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet46 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet46, alunoArray45);
        professor34.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet46);
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str50 = aluno49.getEmail();
        java.lang.Boolean boolean51 = aluno49.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor52 = professor34.addAluno(aluno49);
        aluno49.setNumeroContato((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Professor professor55 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str56 = professor55.getPrimeiroNome();
        java.lang.Boolean boolean57 = professor55.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa59 = professor55.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Aluno aluno60 = aluno49.professor(professor55);
        com.unifacisa.tcc.domain.Professor professor61 = professor0.removeAluno(aluno49);
        professor61.setSegundoNome("Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='false'}");
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet64 = professor61.getAlunos();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(alunoArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNotNull(professor33);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(alunoArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNotNull(professor52);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(pessoa59);
        org.junit.Assert.assertNotNull(aluno60);
        org.junit.Assert.assertNotNull(professor61);
        org.junit.Assert.assertNotNull(alunoSet64);
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor3 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa5 = professor3.primeiroNome("error.concurrencyFailure");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa7 = pessoa5.matricula((java.lang.Long) 1L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(professor3);
        org.junit.Assert.assertNotNull(pessoa5);
        org.junit.Assert.assertNotNull(pessoa7);
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        java.lang.Long long3 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.User user4 = new com.unifacisa.tcc.domain.User();
        java.lang.String str5 = user4.getCreatedBy();
        java.lang.String str6 = user4.getLangKey();
        java.time.Instant instant7 = user4.getCreatedDate();
        persistentAuditEvent0.setAuditEventDate(instant7);
        java.lang.String str9 = persistentAuditEvent0.getAuditEventType();
        persistentAuditEvent0.setPrincipal("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        persistentAuditEvent0.setPrincipal("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        persistentAuditEvent0.setAuditEventType("ManagedUserVM{} UserDTO{login='LoginVM{username='null', rememberMe=false}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(instant7);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        user0.setResetKey("LoginVM{username='null', rememberMe=null}");
        user0.setActivated(false);
        java.time.Instant instant10 = user0.getLastModifiedDate();
        user0.setLastModifiedBy("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='0', email='null', numeroContato='1', habilitadoTcc='false'}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(instant10);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        java.lang.Boolean boolean2 = loginVM0.isRememberMe();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.Boolean boolean5 = loginVM0.isRememberMe();
        java.lang.Boolean boolean6 = loginVM0.isRememberMe();
        java.lang.String str7 = loginVM0.getPassword();
        java.lang.String str8 = loginVM0.toString();
        loginVM0.setPassword("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=100}");
        java.lang.String str11 = loginVM0.getUsername();
        loginVM0.setRememberMe((java.lang.Boolean) true);
        loginVM0.setPassword("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertEquals("'" + boolean5 + "' != '" + false + "'", boolean5, false);
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + false + "'", boolean6, false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str8, "LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setUserId("error.validation");
        java.lang.String str3 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setId((java.lang.Long) 1L);
        java.lang.String str6 = socialUserConnection0.getRefreshToken();
        java.lang.String str7 = socialUserConnection0.getUserId();
        socialUserConnection0.setProfileURL("Authority{name='LoggerVM{name='', level='null'}'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "error.validation" + "'", str7, "error.validation");
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        java.lang.String str6 = user0.getFirstName();
        java.time.Instant instant7 = user0.getResetDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO8 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str9 = user0.getFirstName();
        user0.setEmail("UserDTO{login='LoggerVM{name='null', level='null'}', firstName='error.concurrencyFailure', lastName='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', imageUrl='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', activated=true, langKey='', createdBy=Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}, createdDate=2021-03-24T23:46:14.824Z, lastModifiedBy='', lastModifiedDate=2021-03-24T23:46:14.824Z, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(instant7);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet6 = user0.getAuthorities();
        java.lang.String str7 = user0.getLastName();
        java.lang.String str8 = user0.getResetKey();
        com.unifacisa.tcc.service.dto.UserDTO userDTO9 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str10 = user0.getLastName();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(authoritySet6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str1 = loggerVM0.getLevel();
        java.lang.String str2 = loggerVM0.getName();
        loggerVM0.setLevel("ManagedUserVM{} UserDTO{login='LoginVM{username='null', rememberMe=false}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str5 = loggerVM0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "LoggerVM{name='null', level='ManagedUserVM{} UserDTO{login='LoginVM{username='null', rememberMe=false}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}'}" + "'", str5, "LoggerVM{name='null', level='ManagedUserVM{} UserDTO{login='LoginVM{username='null', rememberMe=false}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}'}");
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setProviderId("");
        java.lang.String str4 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setProviderId("LoggerVM{name='null', level='error.validation'}");
        socialUserConnection0.setProviderId("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList1 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList2 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList3 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList4 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM5 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str6 = loggerVM5.getName();
        loggerVM5.setLevel("error.validation");
        java.lang.String str9 = loggerVM5.getLevel();
        java.lang.String str10 = loggerVM5.toString();
        loggerVM5.setLevel("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        loggerVM5.setName("LoginVM{username='error.concurrencyFailure', rememberMe=null}");
        logsResource0.changeLevel(loggerVM5);
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM16 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str17 = loggerVM16.getLevel();
        java.lang.String str18 = loggerVM16.getName();
        java.lang.String str19 = loggerVM16.getName();
        loggerVM16.setName("");
        logsResource0.changeLevel(loggerVM16);
        java.lang.String str23 = loggerVM16.getLevel();
        org.junit.Assert.assertNotNull(loggerVMList1);
        org.junit.Assert.assertNotNull(loggerVMList2);
        org.junit.Assert.assertNotNull(loggerVMList3);
        org.junit.Assert.assertNotNull(loggerVMList4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "error.validation" + "'", str9, "error.validation");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str10, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "error.validation", "hi!", (java.lang.Long) 100L, "hi!", "error.concurrencyFailure", "error.concurrencyFailure", "error.validation", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "", (java.lang.Long) 100L);
        socialUserConnection11.setDisplayName("");
        socialUserConnection11.setProfileURL("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=100}");
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setImageURL("error.concurrencyFailure");
        boolean boolean5 = socialUserConnection0.equals((java.lang.Object) "");
        java.lang.Long long6 = socialUserConnection0.getId();
        socialUserConnection0.setRefreshToken("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str9 = socialUserConnection0.getUserId();
        java.lang.Long long10 = socialUserConnection0.getRank();
        java.lang.String str11 = socialUserConnection0.getProviderId();
        socialUserConnection0.setRank((java.lang.Long) 100L);
        socialUserConnection0.setProviderId("LoggerVM{name='null', level='User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}");
        socialUserConnection0.setSecret("User{login='null', firstName='null', lastName='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        java.lang.String str1 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str2 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str3 = keyAndPasswordVM0.getKey();
        java.lang.String str4 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str5 = keyAndPasswordVM0.getKey();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setId((java.lang.Long) (-1L));
        socialUserConnection0.setRank((java.lang.Long) 1L);
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        user0.setActivationKey("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str5 = user0.getEmail();
        user0.setLastName("Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str8 = user0.getLogin();
        java.lang.String str9 = user0.getImageUrl();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        java.lang.String str6 = user0.getFirstName();
        java.lang.String str7 = user0.getLangKey();
        java.time.Instant instant8 = user0.getResetDate();
        java.lang.String str9 = user0.toString();
        user0.setCreatedBy("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str12 = user0.getLastModifiedBy();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(instant8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str9, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray31 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno22, aluno26, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet32 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet32, alunoArray31);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str36 = aluno35.getEmail();
        java.lang.Boolean boolean37 = aluno35.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor38 = professor20.addAluno(aluno35);
        com.unifacisa.tcc.domain.Professor professor39 = aluno35.getProfessor();
        com.unifacisa.tcc.domain.Professor professor40 = aluno35.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        aluno41.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor45 = professor40.removeAluno(aluno41);
        aluno41.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor48 = professor17.removeAluno(aluno41);
        professor17.setMatricula((java.lang.Long) (-1L));
        professor17.setEmail("User{login='null', firstName='null', lastName='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.Boolean boolean53 = professor17.isDiponibilidade();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(alunoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(professor38);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(professor40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(professor45);
        org.junit.Assert.assertNotNull(professor48);
        org.junit.Assert.assertEquals("'" + boolean53 + "' != '" + false + "'", boolean53, false);
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("error.concurrencyFailure");
        keyAndPasswordVM0.setNewPassword("error.concurrencyFailure");
        keyAndPasswordVM0.setKey("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str7 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str8 = keyAndPasswordVM0.getNewPassword();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "error.concurrencyFailure" + "'", str7, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "error.concurrencyFailure" + "'", str8, "error.concurrencyFailure");
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getSecret();
        java.lang.String str4 = socialUserConnection0.toString();
        java.lang.Long long5 = socialUserConnection0.getExpireTime();
        socialUserConnection0.setProviderUserId("error.validation");
        socialUserConnection0.setRank((java.lang.Long) 1L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str4, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(long5);
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.lang.String str34 = userDTO33.getLastModifiedBy();
        java.lang.String str35 = userDTO33.toString();
        java.lang.String str36 = userDTO33.getLogin();
        java.lang.String str37 = userDTO33.getEmail();
        java.lang.String str38 = userDTO33.getLastName();
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str35, "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "error.concurrencyFailure" + "'", str37, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "error.concurrencyFailure" + "'", str38, "error.concurrencyFailure");
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLangKey();
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str6 = aluno5.getEmail();
        aluno5.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str11 = aluno10.getEmail();
        aluno10.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray14 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno5, aluno9, aluno10 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet15 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet15, alunoArray14);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet15);
        java.lang.String str18 = professor3.toString();
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        com.unifacisa.tcc.domain.Professor professor34 = professor3.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        boolean boolean35 = user0.equals((java.lang.Object) professor3);
        java.lang.String str36 = user0.getLogin();
        java.lang.String str37 = user0.getImageUrl();
        java.lang.String str38 = user0.getResetKey();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(alunoArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str18, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str38);
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM20 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant10, "error.validation", instant12, (java.util.Set<java.lang.String>) strSet18);
        java.lang.String str21 = managedUserVM20.getFirstName();
        java.lang.String str22 = managedUserVM20.getCreatedBy();
        java.util.Set<java.lang.String> strSet23 = managedUserVM20.getAuthorities();
        java.lang.String str24 = managedUserVM20.toString();
        java.time.Instant instant25 = managedUserVM20.getCreatedDate();
        managedUserVM20.setLogin("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', refreshToken='error.validation', expireTime=null}");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str24, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertNull(instant25);
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.time.Instant instant2 = user0.getResetDate();
        java.lang.String str3 = user0.getResetKey();
        com.unifacisa.tcc.domain.User user14 = new com.unifacisa.tcc.domain.User();
        user14.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str17 = user14.getLastName();
        java.time.Instant instant18 = user14.getLastModifiedDate();
        com.unifacisa.tcc.domain.User user20 = new com.unifacisa.tcc.domain.User();
        user20.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str23 = user20.getLastName();
        java.time.Instant instant24 = user20.getLastModifiedDate();
        java.time.Instant instant34 = null;
        java.time.Instant instant36 = null;
        java.time.Instant instant47 = null;
        java.time.Instant instant49 = null;
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet55 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet55, strArray54);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM57 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant47, "error.validation", instant49, (java.util.Set<java.lang.String>) strSet55);
        com.unifacisa.tcc.service.dto.UserDTO userDTO58 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant34, "", instant36, (java.util.Set<java.lang.String>) strSet55);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM59 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) (-1L), "LoggerVM{name='null', level='error.validation'}", "Authority{name='null'}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", false, "LoginVM{username='null', rememberMe=false}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "LoggerVM{name='null', level='error.validation'}", instant18, "", instant24, (java.util.Set<java.lang.String>) strSet55);
        user0.setResetDate(instant18);
        java.lang.String str61 = user0.getImageUrl();
        java.lang.String str62 = user0.getLangKey();
        org.junit.Assert.assertNull(instant2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str17, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str23, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant24);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(str62);
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.String str2 = socialUserConnection0.getAccessToken();
        java.lang.String str3 = socialUserConnection0.getAccessToken();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        java.lang.String str4 = user0.getLogin();
        user0.setActivationKey("");
        com.unifacisa.tcc.service.dto.UserDTO userDTO7 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getSecret();
        java.lang.Long long4 = socialUserConnection0.getRank();
        java.lang.String str5 = socialUserConnection0.getProviderUserId();
        java.lang.String str6 = socialUserConnection0.getAccessToken();
        socialUserConnection0.setRefreshToken("Authority{name=''}");
        socialUserConnection0.setRefreshToken("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList1 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList2 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList3 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList4 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM5 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str6 = loggerVM5.getName();
        loggerVM5.setLevel("error.validation");
        java.lang.String str9 = loggerVM5.getLevel();
        java.lang.String str10 = loggerVM5.toString();
        loggerVM5.setLevel("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        loggerVM5.setName("LoginVM{username='error.concurrencyFailure', rememberMe=null}");
        logsResource0.changeLevel(loggerVM5);
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM16 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str17 = loggerVM16.getLevel();
        java.lang.String str18 = loggerVM16.getName();
        java.lang.String str19 = loggerVM16.getName();
        loggerVM16.setName("");
        logsResource0.changeLevel(loggerVM16);
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM23 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str24 = loggerVM23.getName();
        loggerVM23.setLevel("error.validation");
        java.lang.String str27 = loggerVM23.getLevel();
        loggerVM23.setLevel("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str30 = loggerVM23.getLevel();
        java.lang.String str31 = loggerVM23.getLevel();
        loggerVM23.setLevel("LoggerVM{name='null', level='error.validation'}");
        java.lang.String str34 = loggerVM23.getLevel();
        // The following exception was thrown during execution in test generation
        try {
            logsResource0.changeLevel(loggerVM23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: name argument cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(loggerVMList1);
        org.junit.Assert.assertNotNull(loggerVMList2);
        org.junit.Assert.assertNotNull(loggerVMList3);
        org.junit.Assert.assertNotNull(loggerVMList4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "error.validation" + "'", str9, "error.validation");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str10, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "error.validation" + "'", str27, "error.validation");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str30, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str31, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str34, "LoggerVM{name='null', level='error.validation'}");
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.toString();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper3 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray4 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList5 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList5, userArray4);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList7 = userMapper3.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList5);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray9 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList10 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList10, userArray9);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList12 = userMapper8.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList10);
        java.util.List<com.unifacisa.tcc.domain.User> userList13 = userMapper3.userDTOsToUsers(userDTOList12);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper14 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray15 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList16 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList16, userArray15);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList18 = userMapper14.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList16);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper19 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray20 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList21 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList21, userArray20);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList23 = userMapper19.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList21);
        java.util.List<com.unifacisa.tcc.domain.User> userList24 = userMapper14.userDTOsToUsers(userDTOList23);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper25 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray26 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList27 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList27, userArray26);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList29 = userMapper25.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList27);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper30 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray31 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList32 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList32, userArray31);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList34 = userMapper30.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList32);
        java.util.List<com.unifacisa.tcc.domain.User> userList35 = userMapper25.userDTOsToUsers(userDTOList34);
        java.util.List<com.unifacisa.tcc.domain.User> userList36 = userMapper14.userDTOsToUsers(userDTOList34);
        java.util.List<com.unifacisa.tcc.domain.User> userList37 = userMapper3.userDTOsToUsers(userDTOList34);
        java.time.Instant instant47 = null;
        java.time.Instant instant49 = null;
        java.time.Instant instant59 = null;
        java.time.Instant instant61 = null;
        java.time.Instant instant72 = null;
        java.time.Instant instant74 = null;
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet80 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet80, strArray79);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM82 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant72, "error.validation", instant74, (java.util.Set<java.lang.String>) strSet80);
        com.unifacisa.tcc.service.dto.UserDTO userDTO83 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant59, "", instant61, (java.util.Set<java.lang.String>) strSet80);
        com.unifacisa.tcc.service.dto.UserDTO userDTO84 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) (-1L), "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "hi!", "", "hi!", true, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "error.concurrencyFailure", instant47, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", instant49, (java.util.Set<java.lang.String>) strSet80);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet85 = userMapper3.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet80);
        user0.setAuthorities(authoritySet85);
        user0.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        user0.setCreatedBy("Authority{name='User{login='null', firstName='null', lastName='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}");
        java.lang.String str91 = user0.getLastModifiedBy();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str2, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(userDTOList7);
        org.junit.Assert.assertNotNull(userArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(userDTOList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(userDTOList18);
        org.junit.Assert.assertNotNull(userArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(userDTOList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(userDTOList29);
        org.junit.Assert.assertNotNull(userArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(userDTOList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(authoritySet85);
        org.junit.Assert.assertNull(str91);
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        java.lang.Boolean boolean17 = aluno15.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor18 = professor0.addAluno(aluno15);
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str20 = aluno19.getEmail();
        aluno19.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection23 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean24 = aluno19.equals((java.lang.Object) socialUserConnection23);
        socialUserConnection23.setRefreshToken("error.validation");
        socialUserConnection23.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean29 = aluno15.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str30 = aluno15.toString();
        java.lang.Boolean boolean31 = aluno15.isHabilitadoTcc();
        java.lang.String str32 = aluno15.toString();
        aluno15.setPrimeiroNome("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        aluno15.setEmail("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.domain.Professor professor37 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str40 = aluno39.getEmail();
        aluno39.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str45 = aluno44.getEmail();
        aluno44.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray48 = new com.unifacisa.tcc.domain.Aluno[] { aluno38, aluno39, aluno43, aluno44 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet49 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet49, alunoArray48);
        professor37.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet49);
        java.lang.String str52 = professor37.toString();
        com.unifacisa.tcc.domain.Professor professor54 = professor37.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa56 = professor54.primeiroNome("");
        com.unifacisa.tcc.domain.Professor professor58 = professor54.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet59 = professor58.getAlunos();
        aluno15.setProfessor(professor58);
        com.unifacisa.tcc.domain.Professor professor62 = professor58.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent63 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant64 = persistentAuditEvent63.getAuditEventDate();
        persistentAuditEvent63.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent67 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap68 = persistentAuditEvent67.getData();
        persistentAuditEvent67.setPrincipal("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long71 = persistentAuditEvent67.getId();
        java.lang.Long long72 = persistentAuditEvent67.getId();
        java.time.Instant instant73 = persistentAuditEvent67.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap74 = null;
        persistentAuditEvent67.setData(strMap74);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent76 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant77 = persistentAuditEvent76.getAuditEventDate();
        java.lang.Long long78 = persistentAuditEvent76.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent79 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap80 = persistentAuditEvent79.getData();
        persistentAuditEvent76.setData(strMap80);
        persistentAuditEvent67.setData(strMap80);
        persistentAuditEvent63.setData(strMap80);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper84 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user86 = userMapper84.userFromId((java.lang.Long) 1L);
        boolean boolean87 = user86.getActivated();
        java.time.Instant instant88 = user86.getLastModifiedDate();
        persistentAuditEvent63.setAuditEventDate(instant88);
        boolean boolean90 = professor58.equals((java.lang.Object) persistentAuditEvent63);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str30, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str32, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(alunoArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str52, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor54);
        org.junit.Assert.assertNotNull(pessoa56);
        org.junit.Assert.assertNotNull(professor58);
        org.junit.Assert.assertNotNull(alunoSet59);
        org.junit.Assert.assertNotNull(professor62);
        org.junit.Assert.assertNull(instant64);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNull(long71);
        org.junit.Assert.assertNull(long72);
        org.junit.Assert.assertNull(instant73);
        org.junit.Assert.assertNull(instant77);
        org.junit.Assert.assertNull(long78);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(user86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(instant88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        java.lang.Long long3 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.User user4 = new com.unifacisa.tcc.domain.User();
        java.lang.String str5 = user4.getCreatedBy();
        java.lang.String str6 = user4.getLangKey();
        java.time.Instant instant7 = user4.getCreatedDate();
        persistentAuditEvent0.setAuditEventDate(instant7);
        java.lang.String str9 = persistentAuditEvent0.getAuditEventType();
        persistentAuditEvent0.setPrincipal("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        persistentAuditEvent0.setPrincipal("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.time.Instant instant14 = persistentAuditEvent0.getAuditEventDate();
        java.lang.String str15 = persistentAuditEvent0.getPrincipal();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(instant7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(instant14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str15, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setUsername("LoggerVM{name='error.concurrencyFailure', level='error.validation'}");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        java.lang.String str1 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str2 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str3 = keyAndPasswordVM0.getKey();
        keyAndPasswordVM0.setKey("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}");
        keyAndPasswordVM0.setKey("SocialUserConnection{id=null, userId=null, providerId='Authority{name='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor13 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        aluno15.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str21 = aluno20.getEmail();
        aluno20.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray24 = new com.unifacisa.tcc.domain.Aluno[] { aluno14, aluno15, aluno19, aluno20 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet25 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet25, alunoArray24);
        professor13.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet25);
        java.lang.String str28 = professor13.toString();
        com.unifacisa.tcc.domain.Professor professor30 = professor13.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet31 = professor13.getAlunos();
        com.unifacisa.tcc.domain.User user32 = new com.unifacisa.tcc.domain.User();
        java.lang.String str33 = user32.getCreatedBy();
        user32.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant36 = user32.getLastModifiedDate();
        boolean boolean37 = professor13.equals((java.lang.Object) instant36);
        com.unifacisa.tcc.domain.User user39 = new com.unifacisa.tcc.domain.User();
        java.lang.String str40 = user39.getCreatedBy();
        java.lang.String str41 = user39.getLangKey();
        java.time.Instant instant42 = user39.getCreatedDate();
        java.time.Instant instant53 = null;
        java.time.Instant instant55 = null;
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet61 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet61, strArray60);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM63 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant53, "error.validation", instant55, (java.util.Set<java.lang.String>) strSet61);
        java.lang.String str64 = managedUserVM63.getFirstName();
        java.lang.String str65 = managedUserVM63.getCreatedBy();
        java.util.Set<java.lang.String> strSet66 = managedUserVM63.getAuthorities();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM67 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) (-1L), "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoggerVM{name='null', level='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoggerVM{name='null', level='error.validation'}", true, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", instant36, "LoginVM{username='null', rememberMe=null}", instant42, strSet66);
        user2.setResetDate(instant36);
        user2.setLastName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        com.unifacisa.tcc.domain.User user71 = new com.unifacisa.tcc.domain.User();
        java.lang.String str72 = user71.getCreatedBy();
        user71.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.User user75 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO76 = new com.unifacisa.tcc.service.dto.UserDTO(user75);
        java.lang.String str77 = user75.getImageUrl();
        java.lang.String str78 = user75.getLangKey();
        java.lang.String str79 = user75.getLogin();
        com.unifacisa.tcc.domain.User user80 = new com.unifacisa.tcc.domain.User();
        user80.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant83 = user80.getLastModifiedDate();
        user75.setLastModifiedDate(instant83);
        user71.setLastModifiedDate(instant83);
        user2.setResetDate(instant83);
        user2.setActivated(true);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(alunoArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str28, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor30);
        org.junit.Assert.assertNotNull(alunoSet31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(instant36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(instant42);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(strSet66);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(instant83);
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.time.Instant instant2 = userDTO1.getLastModifiedDate();
        userDTO1.setId((java.lang.Long) 1L);
        userDTO1.setLogin("LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=false}");
        java.lang.String str7 = userDTO1.getLangKey();
        org.junit.Assert.assertNotNull(instant2);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        com.unifacisa.tcc.service.dto.UserDTO userDTO0 = new com.unifacisa.tcc.service.dto.UserDTO();
        java.lang.String str1 = userDTO0.getLogin();
        java.lang.String str2 = userDTO0.getCreatedBy();
        java.lang.Long long3 = userDTO0.getId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLangKey();
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str6 = aluno5.getEmail();
        aluno5.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str11 = aluno10.getEmail();
        aluno10.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray14 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno5, aluno9, aluno10 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet15 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet15, alunoArray14);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet15);
        java.lang.String str18 = professor3.toString();
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        com.unifacisa.tcc.domain.Professor professor34 = professor3.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        boolean boolean35 = user0.equals((java.lang.Object) professor3);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent36 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.User user37 = new com.unifacisa.tcc.domain.User();
        java.lang.String str38 = user37.getCreatedBy();
        java.lang.String str39 = user37.getLangKey();
        java.time.Instant instant40 = user37.getCreatedDate();
        persistentAuditEvent36.setAuditEventDate(instant40);
        user0.setCreatedDate(instant40);
        com.unifacisa.tcc.service.dto.UserDTO userDTO43 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        user0.setPassword("User{login='null', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str46 = user0.getFirstName();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet47 = user0.getAuthorities();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet48 = user0.getAuthorities();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(alunoArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str18, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(instant40);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(authoritySet47);
        org.junit.Assert.assertNotNull(authoritySet48);
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setImageURL("error.concurrencyFailure");
        java.lang.String str4 = socialUserConnection0.toString();
        socialUserConnection0.setUserId("SocialUserConnection{id=-1, userId=null, providerId='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}', providerUserId='null', rank=null, displayName='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='Authority{name='null'}', refreshToken='null', expireTime=0}");
        socialUserConnection0.setImageURL("Aluno{id=-1, primeiroNome='null', segundoNome='LoginVM{username='null', rememberMe=false}', matricula='0', email='null', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str4, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        aluno0.setId((java.lang.Long) (-1L));
        java.lang.String str6 = aluno0.toString();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = aluno0.numeroContato((java.lang.Long) 10L);
        aluno0.setHabilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno12 = aluno0.habilitadoTcc((java.lang.Boolean) true);
        java.lang.Boolean boolean13 = aluno12.isHabilitadoTcc();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str6, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(pessoa8);
        org.junit.Assert.assertNotNull(aluno12);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + true + "'", boolean13, true);
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor4 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno6 = aluno0.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno8 = aluno6.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor9 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str12 = aluno11.getEmail();
        aluno11.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno16 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str17 = aluno16.getEmail();
        aluno16.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray20 = new com.unifacisa.tcc.domain.Aluno[] { aluno10, aluno11, aluno15, aluno16 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet21 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet21, alunoArray20);
        professor9.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet21);
        java.lang.String str24 = professor9.toString();
        com.unifacisa.tcc.domain.Professor professor26 = professor9.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa28 = professor26.primeiroNome("");
        professor26.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor26.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor34 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str37 = aluno36.getEmail();
        aluno36.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        aluno41.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray45 = new com.unifacisa.tcc.domain.Aluno[] { aluno35, aluno36, aluno40, aluno41 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet46 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet46, alunoArray45);
        professor34.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet46);
        aluno33.setProfessor(professor34);
        java.lang.String str50 = aluno33.toString();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa52 = aluno33.numeroContato((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Professor professor53 = professor26.removeAluno(aluno33);
        com.unifacisa.tcc.domain.Aluno aluno54 = aluno8.professor(professor26);
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str56 = aluno55.getEmail();
        java.lang.Boolean boolean57 = aluno55.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor58 = aluno55.getProfessor();
        com.unifacisa.tcc.domain.Professor professor59 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno60 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno61 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str62 = aluno61.getEmail();
        aluno61.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno65 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno66 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str67 = aluno66.getEmail();
        aluno66.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray70 = new com.unifacisa.tcc.domain.Aluno[] { aluno60, aluno61, aluno65, aluno66 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet71 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet71, alunoArray70);
        professor59.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet71);
        java.lang.String str74 = professor59.toString();
        com.unifacisa.tcc.domain.Professor professor75 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno76 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno77 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str78 = aluno77.getEmail();
        aluno77.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno81 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno82 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str83 = aluno82.getEmail();
        aluno82.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray86 = new com.unifacisa.tcc.domain.Aluno[] { aluno76, aluno77, aluno81, aluno82 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet87 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet87, alunoArray86);
        professor75.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet87);
        com.unifacisa.tcc.domain.Professor professor90 = professor59.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet87);
        com.unifacisa.tcc.domain.Aluno aluno91 = aluno55.professor(professor90);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa93 = aluno91.numeroContato((java.lang.Long) (-1L));
        java.lang.Long long94 = aluno91.getMatricula();
        com.unifacisa.tcc.domain.Professor professor95 = professor26.addAluno(aluno91);
        java.lang.String str96 = professor26.getSegundoNome();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNull(professor4);
        org.junit.Assert.assertNotNull(aluno6);
        org.junit.Assert.assertNotNull(aluno8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(alunoArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str24, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor26);
        org.junit.Assert.assertNotNull(pessoa28);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(alunoArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str50, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(pessoa52);
        org.junit.Assert.assertNotNull(professor53);
        org.junit.Assert.assertNotNull(aluno54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNull(professor58);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(alunoArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str74, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(alunoArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(professor90);
        org.junit.Assert.assertNotNull(aluno91);
        org.junit.Assert.assertNotNull(pessoa93);
        org.junit.Assert.assertNull(long94);
        org.junit.Assert.assertNotNull(professor95);
        org.junit.Assert.assertNull(str96);
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("LoginVM{username='null', rememberMe=null}", "LoginVM{username='null', rememberMe=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", (java.lang.Long) (-1L), "LoginVM{username='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', rememberMe=false}", "LoggerVM{name='null', level='null'}", "LoginVM{username='Authority{name='null'}', rememberMe=null}", "Professor{id=null, primeiroNome='error.concurrencyFailure', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", "Professor{id=null, primeiroNome='error.concurrencyFailure', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}", (java.lang.Long) 1L);
        java.lang.String str12 = socialUserConnection11.getSecret();
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Professor{id=null, primeiroNome='error.concurrencyFailure', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}" + "'", str12, "Professor{id=null, primeiroNome='error.concurrencyFailure', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        user0.setResetKey("LoginVM{username='null', rememberMe=null}");
        java.time.Instant instant8 = user0.getCreatedDate();
        java.lang.String str9 = user0.getLangKey();
        java.lang.String str10 = user0.getImageUrl();
        user0.setId((java.lang.Long) 1L);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(instant8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.String str2 = persistentAuditEvent0.getPrincipal();
        persistentAuditEvent0.setAuditEventType("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str5 = persistentAuditEvent0.getPrincipal();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = persistentAuditEvent0.getData();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap6);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getRefreshToken();
        socialUserConnection0.setProfileURL("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setImageURL("LoggerVM{name='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', level='error.validation'}");
        java.lang.String str8 = socialUserConnection0.getImageURL();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LoggerVM{name='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', level='error.validation'}" + "'", str8, "LoggerVM{name='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', level='error.validation'}");
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        java.time.Instant instant9 = null;
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        java.lang.String str12 = user11.getCreatedBy();
        java.lang.String str13 = user11.getLastModifiedBy();
        user11.setActivationKey("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str16 = user11.getEmail();
        com.unifacisa.tcc.domain.User user17 = new com.unifacisa.tcc.domain.User();
        java.lang.String str18 = user17.getCreatedBy();
        java.lang.String str19 = user17.getLastModifiedBy();
        user17.setCreatedBy("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str22 = user17.toString();
        com.unifacisa.tcc.domain.User user23 = new com.unifacisa.tcc.domain.User();
        java.lang.String str24 = user23.getCreatedBy();
        java.lang.String str25 = user23.getLastModifiedBy();
        user23.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.User user28 = new com.unifacisa.tcc.domain.User();
        java.lang.String str29 = user28.getCreatedBy();
        user28.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO32 = new com.unifacisa.tcc.service.dto.UserDTO(user28);
        java.time.Instant instant33 = userDTO32.getLastModifiedDate();
        user23.setCreatedDate(instant33);
        user17.setResetDate(instant33);
        user11.setLastModifiedDate(instant33);
        java.time.Instant instant46 = null;
        java.time.Instant instant48 = null;
        java.time.Instant instant59 = null;
        java.time.Instant instant61 = null;
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet67 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet67, strArray66);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM69 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant59, "error.validation", instant61, (java.util.Set<java.lang.String>) strSet67);
        com.unifacisa.tcc.service.dto.UserDTO userDTO70 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant46, "", instant48, (java.util.Set<java.lang.String>) strSet67);
        java.lang.String str71 = userDTO70.getLastName();
        java.lang.String str72 = userDTO70.getEmail();
        userDTO70.setId((java.lang.Long) 0L);
        boolean boolean75 = userDTO70.isActivated();
        java.util.Set<java.lang.String> strSet76 = userDTO70.getAuthorities();
        com.unifacisa.tcc.service.dto.UserDTO userDTO77 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 10L, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "LoggerVM{name='error.concurrencyFailure', level='null'}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', refreshToken='error.validation', expireTime=null}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", false, "UserDTO{login='LoggerVM{name='null', level='null'}', firstName='error.concurrencyFailure', lastName='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', imageUrl='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', activated=true, langKey='', createdBy=Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}, createdDate=2021-03-24T23:46:05.135Z, lastModifiedBy='', lastModifiedDate=2021-03-24T23:46:05.135Z, authorities=[hi!, error.validation, ]}", "ManagedUserVM{} UserDTO{login='LoginVM{username='null', rememberMe=false}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "Aluno{id=null, primeiroNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}", instant9, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', refreshToken='error.validation', expireTime=null}", instant33, strSet76);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str22, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(instant33);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "error.concurrencyFailure" + "'", str71, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "error.concurrencyFailure" + "'", str72, "error.concurrencyFailure");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strSet76);
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.time.Instant instant34 = userDTO33.getLastModifiedDate();
        userDTO33.setLogin("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str37 = userDTO33.getLastModifiedBy();
        java.lang.String str38 = userDTO33.toString();
        java.lang.String str39 = userDTO33.getLastName();
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(instant34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "UserDTO{login='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str38, "UserDTO{login='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "error.concurrencyFailure" + "'", str39, "error.concurrencyFailure");
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        java.lang.Boolean boolean2 = professor0.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str13 = aluno12.getEmail();
        aluno12.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray16 = new com.unifacisa.tcc.domain.Aluno[] { aluno6, aluno7, aluno11, aluno12 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet17 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet17, alunoArray16);
        professor5.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet17);
        java.lang.String str20 = professor5.toString();
        com.unifacisa.tcc.domain.Professor professor22 = professor5.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa24 = professor22.primeiroNome("");
        professor22.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor27 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str35 = aluno34.getEmail();
        aluno34.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray38 = new com.unifacisa.tcc.domain.Aluno[] { aluno28, aluno29, aluno33, aluno34 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet39 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet39, alunoArray38);
        professor27.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet39);
        professor22.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet39);
        com.unifacisa.tcc.domain.Professor professor43 = professor0.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet39);
        java.lang.String str44 = professor0.toString();
        professor0.setSegundoNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        java.lang.String str47 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor48 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str49 = professor48.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor51 = professor48.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa53 = professor51.primeiroNome("error.concurrencyFailure");
        com.unifacisa.tcc.domain.Professor professor54 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno56 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str57 = aluno56.getEmail();
        aluno56.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno60 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno61 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str62 = aluno61.getEmail();
        aluno61.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray65 = new com.unifacisa.tcc.domain.Aluno[] { aluno55, aluno56, aluno60, aluno61 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet66 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet66, alunoArray65);
        professor54.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet66);
        com.unifacisa.tcc.domain.Aluno aluno69 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str70 = aluno69.getEmail();
        java.lang.Boolean boolean71 = aluno69.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor72 = professor54.addAluno(aluno69);
        com.unifacisa.tcc.domain.Aluno aluno73 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str74 = aluno73.getEmail();
        aluno73.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection77 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean78 = aluno73.equals((java.lang.Object) socialUserConnection77);
        socialUserConnection77.setRefreshToken("error.validation");
        socialUserConnection77.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean83 = aluno69.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str84 = aluno69.toString();
        java.lang.Boolean boolean85 = aluno69.isHabilitadoTcc();
        java.lang.String str86 = aluno69.toString();
        com.unifacisa.tcc.domain.Professor professor87 = professor51.removeAluno(aluno69);
        com.unifacisa.tcc.domain.Professor professor88 = professor0.addAluno(aluno69);
        java.lang.String str89 = professor0.getSegundoNome();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(alunoArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str20, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor22);
        org.junit.Assert.assertNotNull(pessoa24);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(alunoArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(professor43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str44, "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str47, "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(professor51);
        org.junit.Assert.assertNotNull(pessoa53);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(alunoArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(boolean71);
        org.junit.Assert.assertNotNull(professor72);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str84, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(boolean85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str86, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(professor87);
        org.junit.Assert.assertNotNull(professor88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str89, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str12 = aluno11.getEmail();
        aluno11.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray15 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno6, aluno10, aluno11 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet16 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet16, alunoArray15);
        professor4.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        java.lang.String str19 = professor4.toString();
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray31 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno22, aluno26, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet32 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet32, alunoArray31);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Professor professor35 = professor4.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Aluno aluno36 = aluno0.professor(professor35);
        com.unifacisa.tcc.domain.Aluno aluno38 = aluno0.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.User user39 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO40 = new com.unifacisa.tcc.service.dto.UserDTO(user39);
        java.lang.String str41 = user39.getImageUrl();
        java.lang.String str42 = user39.getEmail();
        boolean boolean43 = user39.getActivated();
        java.time.Instant instant44 = user39.getResetDate();
        boolean boolean45 = aluno0.equals((java.lang.Object) user39);
        java.time.Instant instant46 = user39.getLastModifiedDate();
        user39.setActivationKey("Authority{name=''}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(alunoArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str19, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(alunoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNotNull(aluno36);
        org.junit.Assert.assertNotNull(aluno38);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(instant44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(instant46);
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM20 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant10, "error.validation", instant12, (java.util.Set<java.lang.String>) strSet18);
        java.lang.String str21 = managedUserVM20.getFirstName();
        java.lang.String str22 = managedUserVM20.getCreatedBy();
        java.lang.String str23 = managedUserVM20.toString();
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str23, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno3 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str4 = aluno3.getEmail();
        aluno3.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str9 = aluno8.getEmail();
        aluno8.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray12 = new com.unifacisa.tcc.domain.Aluno[] { aluno2, aluno3, aluno7, aluno8 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet13 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet13, alunoArray12);
        professor1.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet13);
        java.lang.String str16 = professor1.toString();
        com.unifacisa.tcc.domain.Professor professor18 = professor1.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        com.unifacisa.tcc.domain.Professor professor34 = professor18.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        aluno0.setProfessor(professor34);
        com.unifacisa.tcc.domain.Professor professor37 = professor34.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa39 = professor34.segundoNome("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor41 = professor34.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa43 = professor41.numeroContato((java.lang.Long) 0L);
        java.lang.Long long44 = professor41.getId();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(alunoArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str16, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNotNull(pessoa39);
        org.junit.Assert.assertNotNull(professor41);
        org.junit.Assert.assertNotNull(pessoa43);
        org.junit.Assert.assertNull(long44);
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.lang.String str34 = userDTO33.getLastName();
        java.lang.String str35 = userDTO33.getLogin();
        java.lang.String str36 = userDTO33.getFirstName();
        java.util.Set<java.lang.String> strSet37 = userDTO33.getAuthorities();
        java.time.Instant instant38 = userDTO33.getLastModifiedDate();
        java.lang.String str39 = userDTO33.getImageUrl();
        java.lang.String str40 = userDTO33.getLangKey();
        java.lang.String str41 = userDTO33.getLastModifiedBy();
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "error.concurrencyFailure" + "'", str34, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNull(instant38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "error.validation" + "'", str40, "error.validation");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        java.lang.Boolean boolean2 = loginVM0.isRememberMe();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.Boolean boolean5 = loginVM0.isRememberMe();
        java.lang.String str6 = loginVM0.getPassword();
        java.lang.Boolean boolean7 = loginVM0.isRememberMe();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertEquals("'" + boolean5 + "' != '" + false + "'", boolean5, false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + boolean7 + "' != '" + false + "'", boolean7, false);
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = persistentAuditEvent0.getData();
        persistentAuditEvent0.setPrincipal("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long4 = persistentAuditEvent0.getId();
        java.lang.Long long5 = persistentAuditEvent0.getId();
        java.time.Instant instant6 = persistentAuditEvent0.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        persistentAuditEvent0.setData(strMap7);
        java.lang.String str9 = persistentAuditEvent0.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = persistentAuditEvent0.getData();
        persistentAuditEvent0.setPrincipal("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(instant6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(strMap10);
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        java.lang.Boolean boolean2 = professor0.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str13 = aluno12.getEmail();
        aluno12.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray16 = new com.unifacisa.tcc.domain.Aluno[] { aluno6, aluno7, aluno11, aluno12 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet17 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet17, alunoArray16);
        professor5.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet17);
        java.lang.String str20 = professor5.toString();
        com.unifacisa.tcc.domain.Professor professor22 = professor5.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa24 = professor22.primeiroNome("");
        professor22.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor27 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str35 = aluno34.getEmail();
        aluno34.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray38 = new com.unifacisa.tcc.domain.Aluno[] { aluno28, aluno29, aluno33, aluno34 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet39 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet39, alunoArray38);
        professor27.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet39);
        professor22.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet39);
        com.unifacisa.tcc.domain.Professor professor43 = professor0.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet39);
        com.unifacisa.tcc.domain.Professor professor44 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str47 = aluno46.getEmail();
        aluno46.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno51 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str52 = aluno51.getEmail();
        aluno51.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray55 = new com.unifacisa.tcc.domain.Aluno[] { aluno45, aluno46, aluno50, aluno51 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet56 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet56, alunoArray55);
        professor44.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet56);
        com.unifacisa.tcc.domain.Aluno aluno59 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str60 = aluno59.getEmail();
        java.lang.Boolean boolean61 = aluno59.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor62 = professor44.addAluno(aluno59);
        java.lang.Long long63 = aluno59.getMatricula();
        com.unifacisa.tcc.domain.Professor professor64 = professor0.removeAluno(aluno59);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa66 = professor0.email("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=100}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(alunoArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str20, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor22);
        org.junit.Assert.assertNotNull(pessoa24);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(alunoArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(professor43);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(alunoArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(boolean61);
        org.junit.Assert.assertNotNull(professor62);
        org.junit.Assert.assertNull(long63);
        org.junit.Assert.assertNotNull(professor64);
        org.junit.Assert.assertNotNull(pessoa66);
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO4 = new com.unifacisa.tcc.service.dto.UserDTO(user3);
        java.lang.String str5 = user3.getImageUrl();
        boolean boolean7 = user3.equals((java.lang.Object) (byte) -1);
        java.lang.String str8 = user3.getLastName();
        java.lang.String str9 = user3.getFirstName();
        java.time.Instant instant10 = user3.getResetDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO11 = userMapper0.userToUserDTO(user3);
        boolean boolean12 = userDTO11.isActivated();
        java.lang.String str13 = userDTO11.getLastModifiedBy();
        boolean boolean14 = userDTO11.isActivated();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(userDTO11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        professor17.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor22 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno23, aluno24, aluno28, aluno29 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor22.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        professor17.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor39 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        aluno41.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str47 = aluno46.getEmail();
        aluno46.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray50 = new com.unifacisa.tcc.domain.Aluno[] { aluno40, aluno41, aluno45, aluno46 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet51 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet51, alunoArray50);
        professor39.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet51);
        aluno38.setProfessor(professor39);
        com.unifacisa.tcc.domain.Professor professor55 = professor17.removeAluno(aluno38);
        com.unifacisa.tcc.domain.Professor professor56 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str59 = aluno58.getEmail();
        aluno58.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str64 = aluno63.getEmail();
        aluno63.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray67 = new com.unifacisa.tcc.domain.Aluno[] { aluno57, aluno58, aluno62, aluno63 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet68 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet68, alunoArray67);
        professor56.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet68);
        java.lang.String str71 = professor56.toString();
        com.unifacisa.tcc.domain.Professor professor73 = professor56.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet74 = professor56.getAlunos();
        com.unifacisa.tcc.domain.Aluno aluno75 = aluno38.professor(professor56);
        com.unifacisa.tcc.domain.Aluno aluno77 = aluno38.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor78 = aluno77.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno80 = aluno77.habilitadoTcc((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(alunoArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(alunoArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str71, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor73);
        org.junit.Assert.assertNotNull(alunoSet74);
        org.junit.Assert.assertNotNull(aluno75);
        org.junit.Assert.assertNotNull(aluno77);
        org.junit.Assert.assertNotNull(professor78);
        org.junit.Assert.assertNotNull(aluno80);
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        user0.setActivationKey("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str5 = user0.getEmail();
        user0.setLastName("Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        user0.setResetKey("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        user0.setImageUrl("LoggerVM{name='null', level='ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        boolean boolean3 = user2.getActivated();
        java.time.Instant instant4 = user2.getLastModifiedDate();
        java.time.Instant instant5 = null;
        user2.setResetDate(instant5);
        java.lang.String str7 = user2.toString();
        java.lang.String str8 = user2.getEmail();
        user2.setFirstName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        java.lang.String str11 = user2.getFirstName();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(instant4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str7, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str11, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        user0.setActivationKey("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str5 = user0.getEmail();
        boolean boolean6 = user0.getActivated();
        user0.setPassword("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.time.Instant instant2 = user0.getResetDate();
        java.lang.String str3 = user0.getImageUrl();
        user0.setLastModifiedBy("Authority{name='null'}");
        java.lang.String str6 = user0.getEmail();
        org.junit.Assert.assertNull(instant2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant3 = user0.getLastModifiedDate();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet4 = null;
        user0.setAuthorities(authoritySet4);
        java.lang.String str6 = user0.getActivationKey();
        org.junit.Assert.assertNotNull(instant3);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        socialUserConnection4.setRank((java.lang.Long) (-1L));
        socialUserConnection4.setExpireTime((java.lang.Long) 100L);
        java.lang.String str10 = socialUserConnection4.getDisplayName();
        java.lang.String str11 = socialUserConnection4.toString();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM12 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant13 = null;
        managedUserVM12.setLastModifiedDate(instant13);
        java.lang.String str15 = managedUserVM12.getLogin();
        java.lang.Long long16 = managedUserVM12.getId();
        java.lang.String str17 = managedUserVM12.toString();
        java.lang.String str18 = managedUserVM12.getImageUrl();
        java.lang.String str19 = managedUserVM12.toString();
        boolean boolean20 = socialUserConnection4.equals((java.lang.Object) managedUserVM12);
        java.lang.String str21 = socialUserConnection4.getDisplayName();
        java.lang.String str22 = socialUserConnection4.getSecret();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=100}" + "'", str11, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=100}");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str17, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str19, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setHabilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa5 = aluno0.numeroContato((java.lang.Long) 100L);
        aluno0.setMatricula((java.lang.Long) 10L);
        java.lang.String str8 = aluno0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(pessoa5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='10', email='null', numeroContato='100', habilitadoTcc='false'}" + "'", str8, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='10', email='null', numeroContato='100', habilitadoTcc='false'}");
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        java.lang.String str4 = user0.getLogin();
        boolean boolean5 = user0.getActivated();
        java.lang.String str6 = user0.toString();
        user0.setResetKey("LoggerVM{name='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', level='error.validation'}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str6, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        professor0.setDiponibilidade((java.lang.Boolean) false);
        java.lang.Long long18 = professor0.getMatricula();
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        java.lang.String str34 = professor19.toString();
        com.unifacisa.tcc.domain.Professor professor36 = professor19.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa38 = professor36.primeiroNome("");
        professor36.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor41 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str44 = aluno43.getEmail();
        aluno43.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno48 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str49 = aluno48.getEmail();
        aluno48.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray52 = new com.unifacisa.tcc.domain.Aluno[] { aluno42, aluno43, aluno47, aluno48 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet53 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet53, alunoArray52);
        professor41.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet53);
        professor36.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet53);
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor58 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno59 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno60 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str61 = aluno60.getEmail();
        aluno60.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno64 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno65 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str66 = aluno65.getEmail();
        aluno65.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray69 = new com.unifacisa.tcc.domain.Aluno[] { aluno59, aluno60, aluno64, aluno65 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet70 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet70, alunoArray69);
        professor58.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet70);
        aluno57.setProfessor(professor58);
        com.unifacisa.tcc.domain.Professor professor74 = professor36.removeAluno(aluno57);
        com.unifacisa.tcc.domain.Professor professor75 = professor0.addAluno(aluno57);
        com.unifacisa.tcc.domain.Professor professor77 = professor75.diponibilidade((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long18);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str34, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor36);
        org.junit.Assert.assertNotNull(pessoa38);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(alunoArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(alunoArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(professor74);
        org.junit.Assert.assertNotNull(professor75);
        org.junit.Assert.assertNotNull(professor77);
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        aluno0.setId((java.lang.Long) (-1L));
        java.lang.String str6 = aluno0.toString();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = aluno0.numeroContato((java.lang.Long) 10L);
        aluno0.setHabilitadoTcc((java.lang.Boolean) false);
        java.lang.Long long11 = aluno0.getMatricula();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str6, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(pessoa8);
        org.junit.Assert.assertNull(long11);
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent3 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = persistentAuditEvent3.getData();
        persistentAuditEvent0.setData(strMap4);
        persistentAuditEvent0.setAuditEventType("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str8 = persistentAuditEvent0.getAuditEventType();
        persistentAuditEvent0.setId((java.lang.Long) (-1L));
        persistentAuditEvent0.setPrincipal("");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent13 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long14 = persistentAuditEvent13.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent15 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant16 = persistentAuditEvent15.getAuditEventDate();
        java.lang.Long long17 = persistentAuditEvent15.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent18 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = persistentAuditEvent18.getData();
        persistentAuditEvent15.setData(strMap19);
        persistentAuditEvent13.setData(strMap19);
        com.unifacisa.tcc.domain.User user22 = new com.unifacisa.tcc.domain.User();
        java.lang.String str23 = user22.getCreatedBy();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent24 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant25 = persistentAuditEvent24.getAuditEventDate();
        java.lang.Long long26 = persistentAuditEvent24.getId();
        java.lang.Long long27 = persistentAuditEvent24.getId();
        com.unifacisa.tcc.domain.User user28 = new com.unifacisa.tcc.domain.User();
        java.lang.String str29 = user28.getCreatedBy();
        java.lang.String str30 = user28.getLangKey();
        java.time.Instant instant31 = user28.getCreatedDate();
        persistentAuditEvent24.setAuditEventDate(instant31);
        user22.setResetDate(instant31);
        persistentAuditEvent13.setAuditEventDate(instant31);
        persistentAuditEvent0.setAuditEventDate(instant31);
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str8, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(long14);
        org.junit.Assert.assertNull(instant16);
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(instant25);
        org.junit.Assert.assertNull(long26);
        org.junit.Assert.assertNull(long27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(instant31);
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        java.lang.String str6 = user0.getFirstName();
        java.time.Instant instant7 = user0.getResetDate();
        com.unifacisa.tcc.domain.Professor professor8 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str11 = aluno10.getEmail();
        aluno10.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        aluno15.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray19 = new com.unifacisa.tcc.domain.Aluno[] { aluno9, aluno10, aluno14, aluno15 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet20 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet20, alunoArray19);
        professor8.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet20);
        professor8.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor25 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno31 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str33 = aluno32.getEmail();
        aluno32.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray36 = new com.unifacisa.tcc.domain.Aluno[] { aluno26, aluno27, aluno31, aluno32 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet37 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet37, alunoArray36);
        professor25.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet37);
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str41 = aluno40.getEmail();
        java.lang.Boolean boolean42 = aluno40.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor43 = professor25.addAluno(aluno40);
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str45 = aluno44.getEmail();
        aluno44.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection48 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean49 = aluno44.equals((java.lang.Object) socialUserConnection48);
        socialUserConnection48.setRefreshToken("error.validation");
        socialUserConnection48.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean54 = aluno40.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str55 = aluno40.toString();
        com.unifacisa.tcc.domain.Aluno aluno57 = aluno40.habilitadoTcc((java.lang.Boolean) true);
        java.lang.String str58 = aluno40.toString();
        com.unifacisa.tcc.domain.Professor professor59 = professor8.removeAluno(aluno40);
        com.unifacisa.tcc.domain.Professor professor61 = professor8.diponibilidade((java.lang.Boolean) false);
        boolean boolean62 = user0.equals((java.lang.Object) professor8);
        java.lang.String str63 = professor8.toString();
        java.lang.Long long64 = professor8.getMatricula();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(instant7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(alunoArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(alunoArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(professor43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str55, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(aluno57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str58, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertNotNull(professor59);
        org.junit.Assert.assertNotNull(professor61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='false'}" + "'", str63, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='false'}");
        org.junit.Assert.assertNull(long64);
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        professor0.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor17 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str20 = aluno19.getEmail();
        aluno19.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray28 = new com.unifacisa.tcc.domain.Aluno[] { aluno18, aluno19, aluno23, aluno24 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet29 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet29, alunoArray28);
        professor17.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet29);
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str33 = aluno32.getEmail();
        java.lang.Boolean boolean34 = aluno32.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor35 = professor17.addAluno(aluno32);
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str37 = aluno36.getEmail();
        aluno36.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection40 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean41 = aluno36.equals((java.lang.Object) socialUserConnection40);
        socialUserConnection40.setRefreshToken("error.validation");
        socialUserConnection40.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean46 = aluno32.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str47 = aluno32.toString();
        com.unifacisa.tcc.domain.Aluno aluno49 = aluno32.habilitadoTcc((java.lang.Boolean) true);
        java.lang.String str50 = aluno32.toString();
        com.unifacisa.tcc.domain.Professor professor51 = professor0.removeAluno(aluno32);
        com.unifacisa.tcc.domain.Professor professor53 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor55 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa57 = professor0.segundoNome("");
        java.lang.Long long58 = professor0.getMatricula();
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet59 = professor0.getAlunos();
        professor0.setNumeroContato((java.lang.Long) 10L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(alunoArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str47, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(aluno49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str50, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertNotNull(professor51);
        org.junit.Assert.assertNotNull(professor53);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNotNull(pessoa57);
        org.junit.Assert.assertNull(long58);
        org.junit.Assert.assertNotNull(alunoSet59);
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        user3.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray7 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList8 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList8, userArray7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper6.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList8);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper11 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray12 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList13 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList13, userArray12);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList15 = userMapper11.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList13);
        java.util.List<com.unifacisa.tcc.domain.User> userList16 = userMapper6.userDTOsToUsers(userDTOList15);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper17 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray18 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList19 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList19, userArray18);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList21 = userMapper17.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList19);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper22 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray23 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList24 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList24, userArray23);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList26 = userMapper22.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList24);
        java.util.List<com.unifacisa.tcc.domain.User> userList27 = userMapper17.userDTOsToUsers(userDTOList26);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper28 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray29 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList30 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList30, userArray29);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList32 = userMapper28.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList30);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper33 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray34 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList35 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList35, userArray34);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList37 = userMapper33.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList35);
        java.util.List<com.unifacisa.tcc.domain.User> userList38 = userMapper28.userDTOsToUsers(userDTOList37);
        java.util.List<com.unifacisa.tcc.domain.User> userList39 = userMapper17.userDTOsToUsers(userDTOList37);
        java.util.List<com.unifacisa.tcc.domain.User> userList40 = userMapper6.userDTOsToUsers(userDTOList37);
        java.time.Instant instant50 = null;
        java.time.Instant instant52 = null;
        java.time.Instant instant62 = null;
        java.time.Instant instant64 = null;
        java.time.Instant instant75 = null;
        java.time.Instant instant77 = null;
        java.lang.String[] strArray82 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet83 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet83, strArray82);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM85 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant75, "error.validation", instant77, (java.util.Set<java.lang.String>) strSet83);
        com.unifacisa.tcc.service.dto.UserDTO userDTO86 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant62, "", instant64, (java.util.Set<java.lang.String>) strSet83);
        com.unifacisa.tcc.service.dto.UserDTO userDTO87 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) (-1L), "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "hi!", "", "hi!", true, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "error.concurrencyFailure", instant50, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", instant52, (java.util.Set<java.lang.String>) strSet83);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet88 = userMapper6.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet83);
        user3.setAuthorities(authoritySet88);
        com.unifacisa.tcc.service.dto.UserDTO userDTO90 = userMapper0.userToUserDTO(user3);
        java.lang.String str91 = user3.getCreatedBy();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(userArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(userDTOList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(userArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(userDTOList21);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(userDTOList26);
        org.junit.Assert.assertNotNull(userList27);
        org.junit.Assert.assertNotNull(userArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(userDTOList32);
        org.junit.Assert.assertNotNull(userArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(userDTOList37);
        org.junit.Assert.assertNotNull(userList38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(authoritySet88);
        org.junit.Assert.assertNotNull(userDTO90);
        org.junit.Assert.assertNull(str91);
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        persistentAuditEvent0.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent4 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = persistentAuditEvent4.getData();
        persistentAuditEvent4.setPrincipal("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long8 = persistentAuditEvent4.getId();
        java.lang.Long long9 = persistentAuditEvent4.getId();
        java.time.Instant instant10 = persistentAuditEvent4.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        persistentAuditEvent4.setData(strMap11);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent13 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant14 = persistentAuditEvent13.getAuditEventDate();
        java.lang.Long long15 = persistentAuditEvent13.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent16 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = persistentAuditEvent16.getData();
        persistentAuditEvent13.setData(strMap17);
        persistentAuditEvent4.setData(strMap17);
        persistentAuditEvent0.setData(strMap17);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = persistentAuditEvent0.getData();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNull(instant14);
        org.junit.Assert.assertNull(long15);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap21);
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getEmail();
        java.lang.String str4 = user0.getLogin();
        java.time.Instant instant5 = user0.getLastModifiedDate();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(instant5);
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getProviderId();
        java.lang.Long long2 = socialUserConnection0.getId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        com.unifacisa.tcc.domain.Professor professor21 = professor17.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa23 = professor21.numeroContato((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa25 = pessoa23.email("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='false'}");
        pessoa25.setId((java.lang.Long) 1L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNotNull(professor21);
        org.junit.Assert.assertNotNull(pessoa23);
        org.junit.Assert.assertNotNull(pessoa25);
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        aluno0.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.segundoNome("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = aluno0.matricula((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.Professor professor9 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str10 = professor9.getPrimeiroNome();
        professor9.setDiponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor13 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        aluno15.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str21 = aluno20.getEmail();
        aluno20.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray24 = new com.unifacisa.tcc.domain.Aluno[] { aluno14, aluno15, aluno19, aluno20 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet25 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet25, alunoArray24);
        professor13.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet25);
        professor9.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet25);
        java.lang.String str29 = professor9.getEmail();
        com.unifacisa.tcc.domain.Aluno aluno30 = aluno0.professor(professor9);
        com.unifacisa.tcc.domain.Professor professor32 = professor9.diponibilidade((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNotNull(pessoa8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(alunoArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(aluno30);
        org.junit.Assert.assertNotNull(professor32);
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList1 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList2 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList3 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList4 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM5 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str6 = loggerVM5.getName();
        loggerVM5.setLevel("error.validation");
        java.lang.String str9 = loggerVM5.getLevel();
        loggerVM5.setName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        logsResource0.changeLevel(loggerVM5);
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM13 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str14 = loggerVM13.getName();
        loggerVM13.setLevel("error.validation");
        loggerVM13.setLevel("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        java.lang.String str19 = loggerVM13.getLevel();
        java.lang.String str20 = loggerVM13.getLevel();
        java.lang.String str21 = loggerVM13.getLevel();
        java.lang.String str22 = loggerVM13.toString();
        // The following exception was thrown during execution in test generation
        try {
            logsResource0.changeLevel(loggerVM13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: name argument cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(loggerVMList1);
        org.junit.Assert.assertNotNull(loggerVMList2);
        org.junit.Assert.assertNotNull(loggerVMList3);
        org.junit.Assert.assertNotNull(loggerVMList4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "error.validation" + "'", str9, "error.validation");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str19, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str20, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str21, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}" + "'", str22, "LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}");
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.time.Instant instant34 = userDTO33.getLastModifiedDate();
        userDTO33.setLogin("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        userDTO33.setId((java.lang.Long) 0L);
        java.lang.String str39 = userDTO33.getCreatedBy();
        java.lang.String str40 = userDTO33.getLogin();
        java.util.Set<java.lang.String> strSet41 = userDTO33.getAuthorities();
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(instant34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "error.concurrencyFailure" + "'", str39, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str40, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(strSet41);
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        user0.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant4 = user0.getLastModifiedDate();
        user0.setLastName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.User user7 = new com.unifacisa.tcc.domain.User();
        java.lang.String str8 = user7.getCreatedBy();
        java.lang.String str9 = user7.getLastModifiedBy();
        java.lang.String str10 = user7.getPassword();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent11 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant12 = persistentAuditEvent11.getAuditEventDate();
        java.lang.String str13 = persistentAuditEvent11.getPrincipal();
        persistentAuditEvent11.setAuditEventType("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent16 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.User user17 = new com.unifacisa.tcc.domain.User();
        java.lang.String str18 = user17.getCreatedBy();
        java.lang.String str19 = user17.getLangKey();
        java.time.Instant instant20 = user17.getCreatedDate();
        persistentAuditEvent16.setAuditEventDate(instant20);
        persistentAuditEvent11.setAuditEventDate(instant20);
        user7.setLastModifiedDate(instant20);
        boolean boolean24 = user0.equals((java.lang.Object) user7);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(instant4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(instant12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(instant20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        user0.setLastModifiedBy("");
        java.lang.Long long6 = user0.getId();
        java.lang.String str7 = user0.getLangKey();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        com.unifacisa.tcc.domain.Aluno aluno7 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor8 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str11 = aluno10.getEmail();
        aluno10.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        aluno15.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray19 = new com.unifacisa.tcc.domain.Aluno[] { aluno9, aluno10, aluno14, aluno15 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet20 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet20, alunoArray19);
        professor8.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet20);
        java.lang.String str23 = professor8.toString();
        com.unifacisa.tcc.domain.Professor professor25 = professor8.diponibilidade((java.lang.Boolean) false);
        aluno7.setProfessor(professor8);
        com.unifacisa.tcc.domain.Professor professor27 = aluno7.getProfessor();
        aluno7.setPrimeiroNome("LoggerVM{name='null', level='error.validation'}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa31 = aluno7.segundoNome("LoginVM{username='error.concurrencyFailure', rememberMe=null}");
        com.unifacisa.tcc.domain.Aluno aluno33 = aluno7.habilitadoTcc((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(aluno7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(alunoArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str23, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor25);
        org.junit.Assert.assertNotNull(professor27);
        org.junit.Assert.assertNotNull(pessoa31);
        org.junit.Assert.assertNotNull(aluno33);
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        java.lang.String str4 = user0.getLogin();
        boolean boolean5 = user0.getActivated();
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection6 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str7 = socialUserConnection6.getUserId();
        socialUserConnection6.setRefreshToken("LoginVM{username='null', rememberMe=null}");
        boolean boolean10 = user0.equals((java.lang.Object) socialUserConnection6);
        java.lang.Long long11 = socialUserConnection6.getExpireTime();
        socialUserConnection6.setProfileURL("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        socialUserConnection6.setRank((java.lang.Long) (-1L));
        socialUserConnection6.setRefreshToken("");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(long11);
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        java.lang.Long long20 = professor17.getMatricula();
        professor17.setDiponibilidade((java.lang.Boolean) false);
        java.lang.String str23 = professor17.toString();
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet24 = professor17.getAlunos();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(long20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='false'}" + "'", str23, "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='false'}");
        org.junit.Assert.assertNotNull(alunoSet24);
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getCreatedBy();
        java.time.Instant instant2 = managedUserVM0.getLastModifiedDate();
        java.lang.String str3 = managedUserVM0.getFirstName();
        java.time.Instant instant4 = managedUserVM0.getLastModifiedDate();
        java.lang.String str5 = managedUserVM0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(instant2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str5, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.time.Instant instant2 = user0.getResetDate();
        user0.setActivationKey("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.lang.String str5 = user0.getResetKey();
        java.lang.String str6 = user0.getLangKey();
        org.junit.Assert.assertNull(instant2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        user0.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.User user4 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO5 = new com.unifacisa.tcc.service.dto.UserDTO(user4);
        java.lang.String str6 = user4.getImageUrl();
        java.lang.String str7 = user4.getLangKey();
        java.lang.String str8 = user4.getLogin();
        com.unifacisa.tcc.domain.User user9 = new com.unifacisa.tcc.domain.User();
        user9.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant12 = user9.getLastModifiedDate();
        user4.setLastModifiedDate(instant12);
        user0.setLastModifiedDate(instant12);
        user0.setActivated(false);
        user0.setLastModifiedBy("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(instant12);
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.Long long1 = aluno0.getNumeroContato();
        com.unifacisa.tcc.domain.Professor professor2 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno3 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str5 = aluno4.getEmail();
        aluno4.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str10 = aluno9.getEmail();
        aluno9.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray13 = new com.unifacisa.tcc.domain.Aluno[] { aluno3, aluno4, aluno8, aluno9 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet14 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet14, alunoArray13);
        professor2.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet14);
        java.lang.String str17 = professor2.toString();
        com.unifacisa.tcc.domain.Professor professor18 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str21 = aluno20.getEmail();
        aluno20.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str26 = aluno25.getEmail();
        aluno25.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray29 = new com.unifacisa.tcc.domain.Aluno[] { aluno19, aluno20, aluno24, aluno25 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet30 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet30, alunoArray29);
        professor18.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet30);
        java.lang.String str33 = professor18.toString();
        java.lang.Long long34 = professor18.getMatricula();
        com.unifacisa.tcc.domain.Professor professor35 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno37 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str38 = aluno37.getEmail();
        aluno37.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str43 = aluno42.getEmail();
        aluno42.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray46 = new com.unifacisa.tcc.domain.Aluno[] { aluno36, aluno37, aluno41, aluno42 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet47 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet47, alunoArray46);
        professor35.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet47);
        java.lang.String str50 = professor35.toString();
        com.unifacisa.tcc.domain.Professor professor52 = professor35.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa54 = professor52.primeiroNome("");
        professor52.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor57 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno59 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str60 = aluno59.getEmail();
        aluno59.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno64 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str65 = aluno64.getEmail();
        aluno64.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray68 = new com.unifacisa.tcc.domain.Aluno[] { aluno58, aluno59, aluno63, aluno64 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet69 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet69, alunoArray68);
        professor57.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet69);
        professor52.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet69);
        com.unifacisa.tcc.domain.Professor professor73 = professor18.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet69);
        professor2.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet69);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet75 = professor2.getAlunos();
        com.unifacisa.tcc.domain.Aluno aluno76 = aluno0.professor(professor2);
        com.unifacisa.tcc.domain.Professor professor77 = aluno76.getProfessor();
        aluno76.setNumeroContato((java.lang.Long) (-1L));
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(alunoArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str17, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(alunoArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str33, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long34);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(alunoArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str50, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor52);
        org.junit.Assert.assertNotNull(pessoa54);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(alunoArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(professor73);
        org.junit.Assert.assertNotNull(alunoSet75);
        org.junit.Assert.assertNotNull(aluno76);
        org.junit.Assert.assertNotNull(professor77);
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        java.lang.String str3 = persistentAuditEvent0.getAuditEventType();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent4 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.User user5 = new com.unifacisa.tcc.domain.User();
        java.lang.String str6 = user5.getCreatedBy();
        java.lang.String str7 = user5.getLangKey();
        java.time.Instant instant8 = user5.getCreatedDate();
        persistentAuditEvent4.setAuditEventDate(instant8);
        persistentAuditEvent0.setAuditEventDate(instant8);
        java.lang.Long long11 = persistentAuditEvent0.getId();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(instant8);
        org.junit.Assert.assertNull(long11);
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getPassword();
        java.lang.String str2 = managedUserVM0.toString();
        java.lang.String str3 = managedUserVM0.getPassword();
        java.lang.String str4 = managedUserVM0.getLastName();
        managedUserVM0.setLogin("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.time.Instant instant7 = managedUserVM0.getCreatedDate();
        boolean boolean8 = managedUserVM0.isActivated();
        java.lang.String str9 = managedUserVM0.getPassword();
        java.time.Instant instant10 = managedUserVM0.getCreatedDate();
        java.lang.String str11 = managedUserVM0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str2, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(instant7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ManagedUserVM{} UserDTO{login='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str11, "ManagedUserVM{} UserDTO{login='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        user0.setLastModifiedBy("");
        user0.setLastModifiedBy("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.time.Instant instant8 = user0.getCreatedDate();
        java.lang.String str9 = user0.getCreatedBy();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(instant8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        java.lang.Boolean boolean2 = professor0.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str13 = aluno12.getEmail();
        aluno12.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray16 = new com.unifacisa.tcc.domain.Aluno[] { aluno6, aluno7, aluno11, aluno12 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet17 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet17, alunoArray16);
        professor5.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet17);
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str21 = aluno20.getEmail();
        java.lang.Boolean boolean22 = aluno20.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor23 = professor5.addAluno(aluno20);
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection28 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean29 = aluno24.equals((java.lang.Object) socialUserConnection28);
        socialUserConnection28.setRefreshToken("error.validation");
        socialUserConnection28.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean34 = aluno20.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.domain.Professor professor35 = professor0.removeAluno(aluno20);
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str37 = aluno36.getEmail();
        aluno36.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor40 = aluno36.getProfessor();
        com.unifacisa.tcc.domain.Professor professor41 = professor35.addAluno(aluno36);
        java.lang.String str42 = professor35.getSegundoNome();
        java.lang.String str43 = professor35.getPrimeiroNome();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(alunoArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(professor23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(professor40);
        org.junit.Assert.assertNotNull(professor41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str43, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setImageURL("error.concurrencyFailure");
        boolean boolean5 = socialUserConnection0.equals((java.lang.Object) "");
        java.lang.Long long6 = socialUserConnection0.getId();
        socialUserConnection0.setRefreshToken("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str9 = socialUserConnection0.getUserId();
        java.lang.String str10 = socialUserConnection0.toString();
        java.lang.String str11 = socialUserConnection0.getProviderUserId();
        java.lang.String str12 = socialUserConnection0.toString();
        java.lang.Long long13 = socialUserConnection0.getId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}" + "'", str10, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}" + "'", str12, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}");
        org.junit.Assert.assertNull(long13);
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        professor0.setDiponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str12 = aluno11.getEmail();
        aluno11.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray15 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno6, aluno10, aluno11 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet16 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet16, alunoArray15);
        professor4.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa22 = aluno20.matricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Professor professor23 = professor0.addAluno(aluno20);
        java.lang.Class<?> wildcardClass24 = aluno20.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(alunoArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(pessoa22);
        org.junit.Assert.assertNotNull(professor23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        java.lang.String str4 = user0.getLogin();
        boolean boolean5 = user0.getActivated();
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection6 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str7 = socialUserConnection6.getUserId();
        socialUserConnection6.setRefreshToken("LoginVM{username='null', rememberMe=null}");
        boolean boolean10 = user0.equals((java.lang.Object) socialUserConnection6);
        user0.setImageUrl("Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}");
        user0.setPassword("Aluno{id=null, primeiroNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant3 = user0.getLastModifiedDate();
        user0.setResetKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str6 = user0.getEmail();
        java.lang.String str7 = user0.getResetKey();
        org.junit.Assert.assertNotNull(instant3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str7, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setImageURL("error.concurrencyFailure");
        boolean boolean5 = socialUserConnection0.equals((java.lang.Object) "");
        java.lang.Long long6 = socialUserConnection0.getId();
        socialUserConnection0.setRefreshToken("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str9 = socialUserConnection0.getUserId();
        java.lang.String str10 = socialUserConnection0.toString();
        java.lang.String str11 = socialUserConnection0.getProviderUserId();
        socialUserConnection0.setSecret("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}");
        java.lang.String str14 = socialUserConnection0.toString();
        java.lang.String str15 = socialUserConnection0.getImageURL();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}" + "'", str10, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}" + "'", str14, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "error.concurrencyFailure" + "'", str15, "error.concurrencyFailure");
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.String str2 = persistentAuditEvent0.getPrincipal();
        persistentAuditEvent0.setAuditEventType("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent5 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.User user6 = new com.unifacisa.tcc.domain.User();
        java.lang.String str7 = user6.getCreatedBy();
        java.lang.String str8 = user6.getLangKey();
        java.time.Instant instant9 = user6.getCreatedDate();
        persistentAuditEvent5.setAuditEventDate(instant9);
        persistentAuditEvent0.setAuditEventDate(instant9);
        persistentAuditEvent0.setId((java.lang.Long) 100L);
        persistentAuditEvent0.setId((java.lang.Long) 100L);
        persistentAuditEvent0.setAuditEventType("Aluno{id=0, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='100', habilitadoTcc='false'}");
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(instant9);
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        professor17.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor22 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno23, aluno24, aluno28, aluno29 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor22.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        professor17.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        java.lang.String str38 = professor17.toString();
        com.unifacisa.tcc.domain.Professor professor39 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        aluno41.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str47 = aluno46.getEmail();
        aluno46.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray50 = new com.unifacisa.tcc.domain.Aluno[] { aluno40, aluno41, aluno45, aluno46 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet51 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet51, alunoArray50);
        professor39.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet51);
        java.lang.String str54 = professor39.toString();
        com.unifacisa.tcc.domain.Professor professor56 = professor39.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor57 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno59 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str60 = aluno59.getEmail();
        aluno59.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno64 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str65 = aluno64.getEmail();
        aluno64.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray68 = new com.unifacisa.tcc.domain.Aluno[] { aluno58, aluno59, aluno63, aluno64 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet69 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet69, alunoArray68);
        professor57.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet69);
        java.lang.String str72 = professor57.toString();
        com.unifacisa.tcc.domain.Professor professor74 = professor57.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet75 = professor57.getAlunos();
        professor56.setAlunos(alunoSet75);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa78 = professor56.primeiroNome("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.Boolean boolean79 = professor56.isDiponibilidade();
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet80 = professor56.getAlunos();
        com.unifacisa.tcc.domain.Professor professor81 = professor17.alunos(alunoSet80);
        java.lang.Long long82 = professor81.getId();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}" + "'", str38, "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(alunoArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str54, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor56);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(alunoArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str72, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor74);
        org.junit.Assert.assertNotNull(alunoSet75);
        org.junit.Assert.assertNotNull(pessoa78);
        org.junit.Assert.assertEquals("'" + boolean79 + "' != '" + true + "'", boolean79, true);
        org.junit.Assert.assertNotNull(alunoSet80);
        org.junit.Assert.assertNotNull(professor81);
        org.junit.Assert.assertNull(long82);
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        java.lang.String str6 = user0.getPassword();
        com.unifacisa.tcc.service.dto.UserDTO userDTO7 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getPassword();
        java.lang.String str2 = managedUserVM0.toString();
        java.lang.String str3 = managedUserVM0.getPassword();
        java.lang.String str4 = managedUserVM0.getLastName();
        managedUserVM0.setLogin("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.time.Instant instant7 = managedUserVM0.getCreatedDate();
        java.time.Instant instant8 = managedUserVM0.getCreatedDate();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str2, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(instant7);
        org.junit.Assert.assertNull(instant8);
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setProviderId("");
        socialUserConnection0.setSecret("");
        socialUserConnection0.setProviderId("LoginVM{username='null', rememberMe=false}");
        java.lang.String str8 = socialUserConnection0.getProfileURL();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        java.lang.String str4 = user0.getLogin();
        boolean boolean5 = user0.getActivated();
        java.lang.String str6 = user0.getLogin();
        com.unifacisa.tcc.domain.User user7 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO8 = new com.unifacisa.tcc.service.dto.UserDTO(user7);
        java.lang.String str9 = user7.getImageUrl();
        boolean boolean11 = user7.equals((java.lang.Object) (byte) -1);
        java.lang.String str12 = user7.getLastName();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet13 = user7.getAuthorities();
        user0.setAuthorities(authoritySet13);
        user0.setCreatedBy("hi!");
        java.lang.String str17 = user0.getLastModifiedBy();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(authoritySet13);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno3 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str4 = aluno3.getEmail();
        aluno3.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str9 = aluno8.getEmail();
        aluno8.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray12 = new com.unifacisa.tcc.domain.Aluno[] { aluno2, aluno3, aluno7, aluno8 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet13 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet13, alunoArray12);
        professor1.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet13);
        aluno0.setProfessor(professor1);
        professor1.setSegundoNome("LoginVM{username='null', rememberMe=null}");
        professor1.setDiponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa22 = professor1.numeroContato((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Authority authority23 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str24 = authority23.toString();
        java.time.Instant instant35 = null;
        java.time.Instant instant37 = null;
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet43 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet43, strArray42);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM45 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant35, "error.validation", instant37, (java.util.Set<java.lang.String>) strSet43);
        java.lang.String str46 = managedUserVM45.toString();
        boolean boolean47 = authority23.equals((java.lang.Object) managedUserVM45);
        java.lang.String str48 = authority23.toString();
        com.unifacisa.tcc.domain.Professor professor49 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str50 = professor49.getPrimeiroNome();
        java.lang.Boolean boolean51 = professor49.isDiponibilidade();
        java.lang.Long long52 = professor49.getId();
        com.unifacisa.tcc.domain.Professor professor53 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno54 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str56 = aluno55.getEmail();
        aluno55.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno59 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno60 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str61 = aluno60.getEmail();
        aluno60.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray64 = new com.unifacisa.tcc.domain.Aluno[] { aluno54, aluno55, aluno59, aluno60 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet65 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet65, alunoArray64);
        professor53.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet65);
        java.lang.String str68 = professor53.toString();
        com.unifacisa.tcc.domain.Professor professor70 = professor53.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa72 = professor70.primeiroNome("");
        professor70.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor75 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno76 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno77 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str78 = aluno77.getEmail();
        aluno77.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno81 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno82 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str83 = aluno82.getEmail();
        aluno82.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray86 = new com.unifacisa.tcc.domain.Aluno[] { aluno76, aluno77, aluno81, aluno82 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet87 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet87, alunoArray86);
        professor75.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet87);
        professor70.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet87);
        com.unifacisa.tcc.domain.Professor professor91 = professor49.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet87);
        boolean boolean92 = authority23.equals((java.lang.Object) alunoSet87);
        com.unifacisa.tcc.domain.Professor professor93 = professor1.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet87);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(alunoArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(pessoa22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Authority{name='null'}" + "'", str24, "Authority{name='null'}");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str46, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Authority{name='null'}" + "'", str48, "Authority{name='null'}");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNull(long52);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(alunoArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str68, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor70);
        org.junit.Assert.assertNotNull(pessoa72);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(alunoArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(professor91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(professor93);
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper3 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray4 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList5 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList5, userArray4);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList7 = userMapper3.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList5);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray9 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList10 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList10, userArray9);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList12 = userMapper8.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList10);
        java.util.List<com.unifacisa.tcc.domain.User> userList13 = userMapper3.userDTOsToUsers(userDTOList12);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper14 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray15 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList16 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList16, userArray15);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList18 = userMapper14.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList16);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper19 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray20 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList21 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList21, userArray20);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList23 = userMapper19.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList21);
        java.util.List<com.unifacisa.tcc.domain.User> userList24 = userMapper14.userDTOsToUsers(userDTOList23);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper25 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray26 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList27 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList27, userArray26);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList29 = userMapper25.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList27);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper30 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray31 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList32 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList32, userArray31);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList34 = userMapper30.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList32);
        java.util.List<com.unifacisa.tcc.domain.User> userList35 = userMapper25.userDTOsToUsers(userDTOList34);
        java.util.List<com.unifacisa.tcc.domain.User> userList36 = userMapper14.userDTOsToUsers(userDTOList34);
        java.util.List<com.unifacisa.tcc.domain.User> userList37 = userMapper3.userDTOsToUsers(userDTOList34);
        java.time.Instant instant47 = null;
        java.time.Instant instant49 = null;
        java.time.Instant instant59 = null;
        java.time.Instant instant61 = null;
        java.time.Instant instant72 = null;
        java.time.Instant instant74 = null;
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet80 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet80, strArray79);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM82 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant72, "error.validation", instant74, (java.util.Set<java.lang.String>) strSet80);
        com.unifacisa.tcc.service.dto.UserDTO userDTO83 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant59, "", instant61, (java.util.Set<java.lang.String>) strSet80);
        com.unifacisa.tcc.service.dto.UserDTO userDTO84 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) (-1L), "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "hi!", "", "hi!", true, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "error.concurrencyFailure", instant47, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", instant49, (java.util.Set<java.lang.String>) strSet80);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet85 = userMapper3.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet80);
        user0.setAuthorities(authoritySet85);
        java.lang.String str87 = user0.getFirstName();
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(userDTOList7);
        org.junit.Assert.assertNotNull(userArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(userDTOList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(userDTOList18);
        org.junit.Assert.assertNotNull(userArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(userDTOList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(userDTOList29);
        org.junit.Assert.assertNotNull(userArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(userDTOList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(authoritySet85);
        org.junit.Assert.assertNull(str87);
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor16 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str19 = aluno18.getEmail();
        aluno18.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str24 = aluno23.getEmail();
        aluno23.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray27 = new com.unifacisa.tcc.domain.Aluno[] { aluno17, aluno18, aluno22, aluno23 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet28 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet28, alunoArray27);
        professor16.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet28);
        java.lang.String str31 = professor16.toString();
        java.lang.Long long32 = professor16.getMatricula();
        com.unifacisa.tcc.domain.Professor professor33 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str36 = aluno35.getEmail();
        aluno35.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str41 = aluno40.getEmail();
        aluno40.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray44 = new com.unifacisa.tcc.domain.Aluno[] { aluno34, aluno35, aluno39, aluno40 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet45 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet45, alunoArray44);
        professor33.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet45);
        java.lang.String str48 = professor33.toString();
        com.unifacisa.tcc.domain.Professor professor50 = professor33.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa52 = professor50.primeiroNome("");
        professor50.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor55 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno56 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str58 = aluno57.getEmail();
        aluno57.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno61 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str63 = aluno62.getEmail();
        aluno62.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray66 = new com.unifacisa.tcc.domain.Aluno[] { aluno56, aluno57, aluno61, aluno62 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet67 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet67, alunoArray66);
        professor55.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet67);
        professor50.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet67);
        com.unifacisa.tcc.domain.Professor professor71 = professor16.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet67);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet67);
        java.lang.Boolean boolean73 = professor0.isDiponibilidade();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(alunoArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str31, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long32);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(alunoArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str48, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor50);
        org.junit.Assert.assertNotNull(pessoa52);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(alunoArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(professor71);
        org.junit.Assert.assertNull(boolean73);
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setImageURL("error.concurrencyFailure");
        boolean boolean5 = socialUserConnection0.equals((java.lang.Object) "");
        java.lang.Long long6 = socialUserConnection0.getId();
        java.lang.Long long7 = socialUserConnection0.getExpireTime();
        socialUserConnection0.setProfileURL("error.concurrencyFailure");
        java.lang.String str10 = socialUserConnection0.getUserId();
        java.lang.String str11 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setAccessToken("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        java.lang.String str14 = socialUserConnection0.getDisplayName();
        java.lang.Long long15 = socialUserConnection0.getId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "error.concurrencyFailure" + "'", str11, "error.concurrencyFailure");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(long15);
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.toString();
        java.lang.String str2 = authority0.toString();
        authority0.setName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str5 = authority0.getName();
        com.unifacisa.tcc.domain.User user6 = new com.unifacisa.tcc.domain.User();
        user6.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        boolean boolean9 = authority0.equals((java.lang.Object) "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str10 = authority0.toString();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent11 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long12 = persistentAuditEvent11.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent13 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant14 = persistentAuditEvent13.getAuditEventDate();
        java.lang.Long long15 = persistentAuditEvent13.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent16 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = persistentAuditEvent16.getData();
        persistentAuditEvent13.setData(strMap17);
        persistentAuditEvent11.setData(strMap17);
        com.unifacisa.tcc.domain.User user20 = new com.unifacisa.tcc.domain.User();
        java.lang.String str21 = user20.getCreatedBy();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent22 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant23 = persistentAuditEvent22.getAuditEventDate();
        java.lang.Long long24 = persistentAuditEvent22.getId();
        java.lang.Long long25 = persistentAuditEvent22.getId();
        com.unifacisa.tcc.domain.User user26 = new com.unifacisa.tcc.domain.User();
        java.lang.String str27 = user26.getCreatedBy();
        java.lang.String str28 = user26.getLangKey();
        java.time.Instant instant29 = user26.getCreatedDate();
        persistentAuditEvent22.setAuditEventDate(instant29);
        user20.setResetDate(instant29);
        persistentAuditEvent11.setAuditEventDate(instant29);
        boolean boolean33 = authority0.equals((java.lang.Object) persistentAuditEvent11);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent34 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant35 = persistentAuditEvent34.getAuditEventDate();
        java.lang.Long long36 = persistentAuditEvent34.getId();
        java.lang.String str37 = persistentAuditEvent34.getAuditEventType();
        java.time.Instant instant38 = persistentAuditEvent34.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = persistentAuditEvent34.getData();
        persistentAuditEvent11.setData(strMap39);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Authority{name='null'}" + "'", str1, "Authority{name='null'}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Authority{name='null'}" + "'", str2, "Authority{name='null'}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}" + "'", str5, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}" + "'", str10, "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNull(instant14);
        org.junit.Assert.assertNull(long15);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(instant23);
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertNull(long25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(instant29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(instant35);
        org.junit.Assert.assertNull(long36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(instant38);
        org.junit.Assert.assertNotNull(strMap39);
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("LoggerVM{name='null', level='Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}", "UserDTO{login='LoggerVM{name='null', level='null'}', firstName='error.concurrencyFailure', lastName='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', imageUrl='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', activated=true, langKey='', createdBy=Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}, createdDate=2021-03-24T23:46:05.135Z, lastModifiedBy='', lastModifiedDate=2021-03-24T23:46:05.135Z, authorities=[hi!, error.validation, ]}", "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setPassword("Authority{name='null'}");
        loginVM0.setUsername("Authority{name='null'}");
        java.lang.String str6 = loginVM0.toString();
        loginVM0.setPassword("error.concurrencyFailure");
        java.lang.Boolean boolean9 = loginVM0.isRememberMe();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "LoginVM{username='Authority{name='null'}', rememberMe=null}" + "'", str6, "LoginVM{username='Authority{name='null'}', rememberMe=null}");
        org.junit.Assert.assertNull(boolean9);
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet6 = user0.getAuthorities();
        java.lang.String str7 = user0.getLastName();
        java.lang.String str8 = user0.getResetKey();
        com.unifacisa.tcc.service.dto.UserDTO userDTO9 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str10 = userDTO9.getImageUrl();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(authoritySet6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1701");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getLangKey();
        java.lang.String str2 = user0.getFirstName();
        java.lang.String str3 = user0.getLastModifiedBy();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1702");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("hi!", "error.validation", "");
        java.lang.String str4 = fieldErrorVM3.getObjectName();
        java.lang.String str5 = fieldErrorVM3.getField();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "error.validation" + "'", str5, "error.validation");
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1703");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        user3.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant6 = user3.getLastModifiedDate();
        user0.setCreatedDate(instant6);
        java.lang.String str8 = user0.getEmail();
        java.lang.String str9 = user0.getEmail();
        java.time.Instant instant10 = null;
        user0.setResetDate(instant10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1704");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.String str2 = persistentAuditEvent0.getPrincipal();
        java.lang.String str3 = persistentAuditEvent0.getPrincipal();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent4 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant5 = persistentAuditEvent4.getAuditEventDate();
        java.lang.Long long6 = persistentAuditEvent4.getId();
        java.lang.String str7 = persistentAuditEvent4.getAuditEventType();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent8 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.User user9 = new com.unifacisa.tcc.domain.User();
        java.lang.String str10 = user9.getCreatedBy();
        java.lang.String str11 = user9.getLangKey();
        java.time.Instant instant12 = user9.getCreatedDate();
        persistentAuditEvent8.setAuditEventDate(instant12);
        persistentAuditEvent4.setAuditEventDate(instant12);
        com.unifacisa.tcc.domain.User user15 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO16 = new com.unifacisa.tcc.service.dto.UserDTO(user15);
        java.lang.String str17 = user15.getImageUrl();
        boolean boolean19 = user15.equals((java.lang.Object) (byte) -1);
        java.lang.String str20 = user15.getLastName();
        java.time.Instant instant21 = user15.getCreatedDate();
        persistentAuditEvent4.setAuditEventDate(instant21);
        persistentAuditEvent0.setAuditEventDate(instant21);
        com.unifacisa.tcc.domain.User user24 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO25 = new com.unifacisa.tcc.service.dto.UserDTO(user24);
        java.lang.String str26 = user24.getImageUrl();
        boolean boolean28 = user24.equals((java.lang.Object) (byte) -1);
        java.lang.String str29 = user24.getLastName();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet30 = user24.getAuthorities();
        java.lang.String str31 = user24.getLastName();
        com.unifacisa.tcc.service.dto.UserDTO userDTO32 = new com.unifacisa.tcc.service.dto.UserDTO(user24);
        com.unifacisa.tcc.domain.User user33 = new com.unifacisa.tcc.domain.User();
        java.lang.String str34 = user33.getCreatedBy();
        java.lang.String str35 = user33.getLastModifiedBy();
        user33.setActivationKey("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str38 = user33.getEmail();
        com.unifacisa.tcc.domain.User user39 = new com.unifacisa.tcc.domain.User();
        java.lang.String str40 = user39.getCreatedBy();
        java.lang.String str41 = user39.getLastModifiedBy();
        user39.setCreatedBy("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str44 = user39.toString();
        com.unifacisa.tcc.domain.User user45 = new com.unifacisa.tcc.domain.User();
        java.lang.String str46 = user45.getCreatedBy();
        java.lang.String str47 = user45.getLastModifiedBy();
        user45.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.User user50 = new com.unifacisa.tcc.domain.User();
        java.lang.String str51 = user50.getCreatedBy();
        user50.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO54 = new com.unifacisa.tcc.service.dto.UserDTO(user50);
        java.time.Instant instant55 = userDTO54.getLastModifiedDate();
        user45.setCreatedDate(instant55);
        user39.setResetDate(instant55);
        user33.setLastModifiedDate(instant55);
        userDTO32.setLastModifiedDate(instant55);
        persistentAuditEvent0.setAuditEventDate(instant55);
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(instant12);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(instant21);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(authoritySet30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str44, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(instant55);
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1705");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.time.Instant instant34 = userDTO33.getLastModifiedDate();
        userDTO33.setLogin("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str37 = userDTO33.getFirstName();
        java.lang.String str38 = userDTO33.getCreatedBy();
        java.lang.String str39 = userDTO33.getLangKey();
        java.lang.String str40 = userDTO33.getFirstName();
        java.lang.String str41 = userDTO33.getFirstName();
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(instant34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "error.concurrencyFailure" + "'", str38, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "error.validation" + "'", str39, "error.validation");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1706");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setProviderId("");
        java.time.Instant instant13 = null;
        java.time.Instant instant15 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM36 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant26, "error.validation", instant28, (java.util.Set<java.lang.String>) strSet34);
        com.unifacisa.tcc.service.dto.UserDTO userDTO37 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant13, "", instant15, (java.util.Set<java.lang.String>) strSet34);
        java.time.Instant instant38 = userDTO37.getLastModifiedDate();
        userDTO37.setLogin("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        boolean boolean41 = socialUserConnection0.equals((java.lang.Object) userDTO37);
        socialUserConnection0.setSecret("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=100}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(instant38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1707");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}", (java.lang.Long) 0L, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}", "hi!", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", (java.lang.Long) 10L);
        java.lang.Long long12 = socialUserConnection11.getId();
        socialUserConnection11.setAccessToken("hi!");
        org.junit.Assert.assertNull(long12);
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1708");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "error.validation", "hi!", (java.lang.Long) 100L, "hi!", "error.concurrencyFailure", "error.concurrencyFailure", "error.validation", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "", (java.lang.Long) 100L);
        socialUserConnection11.setAccessToken("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection11.setRank((java.lang.Long) 100L);
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1709");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.toString();
        java.lang.String str2 = authority0.toString();
        authority0.setName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str5 = authority0.getName();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM6 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str7 = loggerVM6.getName();
        loggerVM6.setLevel("error.validation");
        java.lang.String str10 = loggerVM6.getLevel();
        java.lang.String str11 = loggerVM6.toString();
        loggerVM6.setLevel("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        boolean boolean14 = authority0.equals((java.lang.Object) "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str15 = authority0.getName();
        com.unifacisa.tcc.domain.User user16 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO17 = new com.unifacisa.tcc.service.dto.UserDTO(user16);
        java.lang.String str18 = user16.toString();
        com.unifacisa.tcc.domain.User user19 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO20 = new com.unifacisa.tcc.service.dto.UserDTO(user19);
        java.lang.String str21 = user19.getImageUrl();
        boolean boolean23 = user19.equals((java.lang.Object) (byte) -1);
        java.lang.String str24 = user19.getLastName();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet25 = user19.getAuthorities();
        user16.setAuthorities(authoritySet25);
        java.lang.String str27 = user16.toString();
        boolean boolean28 = authority0.equals((java.lang.Object) user16);
        java.lang.String str29 = authority0.toString();
        authority0.setName("LoggerVM{name='', level='null'}");
        java.lang.String str32 = authority0.toString();
        java.lang.String str33 = authority0.toString();
        authority0.setName("SocialUserConnection{id=1, userId=error.validation, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Authority{name='null'}" + "'", str1, "Authority{name='null'}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Authority{name='null'}" + "'", str2, "Authority{name='null'}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}" + "'", str5, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "error.validation" + "'", str10, "error.validation");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str11, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str18, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(authoritySet25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str27, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}" + "'", str29, "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Authority{name='LoggerVM{name='', level='null'}'}" + "'", str32, "Authority{name='LoggerVM{name='', level='null'}'}");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Authority{name='LoggerVM{name='', level='null'}'}" + "'", str33, "Authority{name='LoggerVM{name='', level='null'}'}");
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1710");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        socialUserConnection0.setId((java.lang.Long) (-1L));
        socialUserConnection0.setProviderUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='10', email='null', numeroContato='100', habilitadoTcc='false'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1711");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        java.lang.String str4 = user0.getLogin();
        com.unifacisa.tcc.domain.User user5 = new com.unifacisa.tcc.domain.User();
        user5.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant8 = user5.getLastModifiedDate();
        user0.setLastModifiedDate(instant8);
        java.lang.String str10 = user0.getPassword();
        user0.setCreatedBy("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        boolean boolean13 = user0.getActivated();
        user0.setActivated(false);
        java.lang.String str16 = user0.getResetKey();
        java.time.Instant instant17 = user0.getLastModifiedDate();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(instant8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(instant17);
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1712");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        professor0.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor17 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str20 = aluno19.getEmail();
        aluno19.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray28 = new com.unifacisa.tcc.domain.Aluno[] { aluno18, aluno19, aluno23, aluno24 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet29 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet29, alunoArray28);
        professor17.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet29);
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str33 = aluno32.getEmail();
        java.lang.Boolean boolean34 = aluno32.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor35 = professor17.addAluno(aluno32);
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str37 = aluno36.getEmail();
        aluno36.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection40 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean41 = aluno36.equals((java.lang.Object) socialUserConnection40);
        socialUserConnection40.setRefreshToken("error.validation");
        socialUserConnection40.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean46 = aluno32.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str47 = aluno32.toString();
        com.unifacisa.tcc.domain.Aluno aluno49 = aluno32.habilitadoTcc((java.lang.Boolean) true);
        java.lang.String str50 = aluno32.toString();
        com.unifacisa.tcc.domain.Professor professor51 = professor0.removeAluno(aluno32);
        com.unifacisa.tcc.domain.Professor professor53 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor55 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa57 = professor0.segundoNome("");
        java.lang.Long long58 = professor0.getMatricula();
        professor0.setSegundoNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='0', habilitadoTcc='false'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(alunoArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str47, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(aluno49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str50, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertNotNull(professor51);
        org.junit.Assert.assertNotNull(professor53);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNotNull(pessoa57);
        org.junit.Assert.assertNull(long58);
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1713");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.time.Instant instant2 = user0.getResetDate();
        java.lang.String str3 = user0.getImageUrl();
        user0.setImageUrl("SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        user0.setPassword("LoginVM{username='null', rememberMe=null}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO8 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        org.junit.Assert.assertNull(instant2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1714");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setDisplayName("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        java.lang.String str6 = socialUserConnection0.getSecret();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1715");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor3 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa5 = professor3.primeiroNome("error.concurrencyFailure");
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection10 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean11 = aluno6.equals((java.lang.Object) socialUserConnection10);
        com.unifacisa.tcc.domain.Aluno aluno13 = aluno6.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor14 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno16 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str17 = aluno16.getEmail();
        aluno16.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray25 = new com.unifacisa.tcc.domain.Aluno[] { aluno15, aluno16, aluno20, aluno21 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet26 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet26, alunoArray25);
        professor14.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet26);
        java.lang.String str29 = professor14.toString();
        com.unifacisa.tcc.domain.Professor professor31 = professor14.diponibilidade((java.lang.Boolean) false);
        aluno13.setProfessor(professor14);
        com.unifacisa.tcc.domain.Professor professor33 = aluno13.getProfessor();
        java.lang.String str34 = aluno13.getEmail();
        com.unifacisa.tcc.domain.Professor professor35 = professor3.addAluno(aluno13);
        com.unifacisa.tcc.domain.Professor professor36 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno37 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str39 = aluno38.getEmail();
        aluno38.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str44 = aluno43.getEmail();
        aluno43.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray47 = new com.unifacisa.tcc.domain.Aluno[] { aluno37, aluno38, aluno42, aluno43 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet48 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet48, alunoArray47);
        professor36.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet48);
        com.unifacisa.tcc.domain.Aluno aluno51 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str52 = aluno51.getEmail();
        java.lang.Boolean boolean53 = aluno51.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor54 = professor36.addAluno(aluno51);
        com.unifacisa.tcc.domain.Professor professor55 = aluno51.getProfessor();
        com.unifacisa.tcc.domain.Professor professor56 = aluno51.getProfessor();
        java.lang.String str57 = aluno51.getEmail();
        com.unifacisa.tcc.domain.Professor professor58 = professor3.addAluno(aluno51);
        professor58.setNumeroContato((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Professor professor61 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str64 = aluno63.getEmail();
        aluno63.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno67 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno68 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str69 = aluno68.getEmail();
        aluno68.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray72 = new com.unifacisa.tcc.domain.Aluno[] { aluno62, aluno63, aluno67, aluno68 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet73 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet73, alunoArray72);
        professor61.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet73);
        com.unifacisa.tcc.domain.Aluno aluno76 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str77 = aluno76.getEmail();
        java.lang.Boolean boolean78 = aluno76.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor79 = professor61.addAluno(aluno76);
        aluno76.setNumeroContato((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Professor professor82 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str83 = professor82.getPrimeiroNome();
        java.lang.Boolean boolean84 = professor82.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa86 = professor82.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Aluno aluno87 = aluno76.professor(professor82);
        aluno87.setHabilitadoTcc((java.lang.Boolean) true);
        java.lang.Long long90 = aluno87.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa92 = aluno87.segundoNome("");
        java.lang.String str93 = aluno87.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor94 = professor58.removeAluno(aluno87);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(professor3);
        org.junit.Assert.assertNotNull(pessoa5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(aluno13);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(alunoArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str29, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNotNull(professor33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(alunoArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(professor54);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNotNull(professor56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(professor58);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(alunoArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNull(boolean78);
        org.junit.Assert.assertNotNull(professor79);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNull(boolean84);
        org.junit.Assert.assertNotNull(pessoa86);
        org.junit.Assert.assertNotNull(aluno87);
        org.junit.Assert.assertNull(long90);
        org.junit.Assert.assertNotNull(pessoa92);
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertNotNull(professor94);
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1716");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.lang.String str34 = userDTO33.getLastModifiedBy();
        java.lang.String str35 = userDTO33.toString();
        java.lang.String str36 = userDTO33.toString();
        java.lang.String str37 = userDTO33.getEmail();
        java.lang.String str38 = userDTO33.getFirstName();
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str35, "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str36, "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "error.concurrencyFailure" + "'", str37, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1717");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        java.lang.Long long3 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.User user4 = new com.unifacisa.tcc.domain.User();
        java.lang.String str5 = user4.getCreatedBy();
        java.lang.String str6 = user4.getLangKey();
        java.time.Instant instant7 = user4.getCreatedDate();
        persistentAuditEvent0.setAuditEventDate(instant7);
        java.lang.String str9 = persistentAuditEvent0.getAuditEventType();
        java.lang.Long long10 = persistentAuditEvent0.getId();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(instant7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(long10);
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1718");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str1 = loggerVM0.getName();
        loggerVM0.setLevel("error.validation");
        java.lang.String str4 = loggerVM0.getLevel();
        loggerVM0.setName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str7 = loggerVM0.getName();
        java.lang.String str8 = loggerVM0.getLevel();
        loggerVM0.setName("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "error.validation" + "'", str4, "error.validation");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}" + "'", str7, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "error.validation" + "'", str8, "error.validation");
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1719");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        java.lang.String str2 = loginVM0.toString();
        java.lang.String str3 = loginVM0.toString();
        loginVM0.setUsername("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='0', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str2, "LoginVM{username='null', rememberMe=null}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str3, "LoginVM{username='null', rememberMe=null}");
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1720");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long1 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setAuditEventType("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Long long4 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.User user5 = new com.unifacisa.tcc.domain.User();
        java.lang.String str6 = user5.getCreatedBy();
        user5.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant9 = user5.getLastModifiedDate();
        persistentAuditEvent0.setAuditEventDate(instant9);
        java.util.Map<java.lang.String, java.lang.String> strMap11 = persistentAuditEvent0.getData();
        persistentAuditEvent0.setId((java.lang.Long) 100L);
        persistentAuditEvent0.setAuditEventType("");
        java.lang.Class<?> wildcardClass16 = persistentAuditEvent0.getClass();
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(instant9);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1721");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.domain.User user6 = userMapper0.userFromId((java.lang.Long) 1L);
        java.lang.String str7 = user6.getCreatedBy();
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(user6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1722");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        com.unifacisa.tcc.domain.Aluno aluno7 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno9 = aluno0.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa11 = aluno9.matricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa13 = aluno9.numeroContato((java.lang.Long) 1L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(aluno7);
        org.junit.Assert.assertNotNull(aluno9);
        org.junit.Assert.assertNotNull(pessoa11);
        org.junit.Assert.assertNotNull(pessoa13);
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1723");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        boolean boolean3 = user2.getActivated();
        com.unifacisa.tcc.domain.User user4 = new com.unifacisa.tcc.domain.User();
        java.lang.String str5 = user4.getCreatedBy();
        java.lang.String str6 = user4.getLangKey();
        java.time.Instant instant7 = user4.getCreatedDate();
        user2.setResetDate(instant7);
        com.unifacisa.tcc.domain.User user9 = new com.unifacisa.tcc.domain.User();
        java.lang.String str10 = user9.getCreatedBy();
        java.lang.String str11 = user9.getLangKey();
        java.time.Instant instant12 = user9.getCreatedDate();
        user9.setLangKey("Authority{name='null'}");
        com.unifacisa.tcc.domain.User user15 = new com.unifacisa.tcc.domain.User();
        java.lang.String str16 = user15.getCreatedBy();
        java.lang.String str17 = user15.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user18 = new com.unifacisa.tcc.domain.User();
        user18.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant21 = user18.getLastModifiedDate();
        user15.setCreatedDate(instant21);
        user9.setLastModifiedDate(instant21);
        user2.setResetDate(instant21);
        user2.setActivationKey("SocialUserConnection{id=1, userId=error.validation, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(instant7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(instant12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(instant21);
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1724");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.time.Instant instant34 = userDTO33.getLastModifiedDate();
        userDTO33.setLogin("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str37 = userDTO33.getLangKey();
        java.lang.String str38 = userDTO33.getLastModifiedBy();
        boolean boolean39 = userDTO33.isActivated();
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(instant34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "error.validation" + "'", str37, "error.validation");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1725");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper3 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray4 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList5 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList5, userArray4);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList7 = userMapper3.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList5);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList8 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList5);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper9 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray10 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList11 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList11, userArray10);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList13 = userMapper9.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList11);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper14 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user16 = userMapper14.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper17 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray18 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList19 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList19, userArray18);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList21 = userMapper17.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList19);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList22 = userMapper14.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList19);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList23 = userMapper9.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList19);
        java.util.List<com.unifacisa.tcc.domain.User> userList24 = userMapper0.userDTOsToUsers(userDTOList23);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(userDTOList7);
        org.junit.Assert.assertNotNull(userDTOList8);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(userDTOList13);
        org.junit.Assert.assertNotNull(user16);
        org.junit.Assert.assertNotNull(userArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(userDTOList21);
        org.junit.Assert.assertNotNull(userDTOList22);
        org.junit.Assert.assertNotNull(userDTOList23);
        org.junit.Assert.assertNotNull(userList24);
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1726");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.toString();
        java.lang.String str2 = authority0.toString();
        java.lang.String str3 = authority0.getName();
        authority0.setName("Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}");
        java.lang.String str6 = authority0.getName();
        java.lang.String str7 = authority0.getName();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Authority{name='null'}" + "'", str1, "Authority{name='null'}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Authority{name='null'}" + "'", str2, "Authority{name='null'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}" + "'", str6, "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}" + "'", str7, "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}");
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1727");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        java.time.Instant instant14 = null;
        java.time.Instant instant16 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.time.Instant instant39 = null;
        java.time.Instant instant41 = null;
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet47 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet47, strArray46);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM49 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant39, "error.validation", instant41, (java.util.Set<java.lang.String>) strSet47);
        com.unifacisa.tcc.service.dto.UserDTO userDTO50 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant26, "", instant28, (java.util.Set<java.lang.String>) strSet47);
        com.unifacisa.tcc.service.dto.UserDTO userDTO51 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 10L, "", "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "error.concurrencyFailure", "hi!", false, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "LoginVM{username='null', rememberMe=null}", "LoginVM{username='null', rememberMe=null}", instant14, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", instant16, (java.util.Set<java.lang.String>) strSet47);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet52 = userMapper0.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet47);
        com.unifacisa.tcc.domain.User user54 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.User user56 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user57 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO58 = new com.unifacisa.tcc.service.dto.UserDTO(user57);
        java.lang.String str59 = user57.toString();
        user57.setActivationKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO62 = userMapper0.userToUserDTO(user57);
        java.lang.String str63 = user57.getPassword();
        java.time.Instant instant64 = user57.getResetDate();
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(authoritySet52);
        org.junit.Assert.assertNotNull(user54);
        org.junit.Assert.assertNotNull(user56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str59, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(userDTO62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(instant64);
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1728");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        java.lang.Boolean boolean2 = professor0.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Long long5 = pessoa4.getMatricula();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNull(long5);
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1729");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        boolean boolean3 = user2.getActivated();
        java.time.Instant instant4 = user2.getLastModifiedDate();
        java.time.Instant instant5 = user2.getLastModifiedDate();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(instant4);
        org.junit.Assert.assertNotNull(instant5);
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1730");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long1 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setId((java.lang.Long) (-1L));
        java.lang.String str4 = persistentAuditEvent0.getPrincipal();
        java.time.Instant instant5 = persistentAuditEvent0.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = persistentAuditEvent0.getData();
        java.time.Instant instant7 = persistentAuditEvent0.getAuditEventDate();
        java.lang.String str8 = persistentAuditEvent0.getPrincipal();
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(instant7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1731");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        java.lang.Boolean boolean2 = loginVM0.isRememberMe();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setRememberMe((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1732");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor3 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa5 = professor3.primeiroNome("error.concurrencyFailure");
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection10 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean11 = aluno6.equals((java.lang.Object) socialUserConnection10);
        com.unifacisa.tcc.domain.Aluno aluno13 = aluno6.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor14 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno16 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str17 = aluno16.getEmail();
        aluno16.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray25 = new com.unifacisa.tcc.domain.Aluno[] { aluno15, aluno16, aluno20, aluno21 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet26 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet26, alunoArray25);
        professor14.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet26);
        java.lang.String str29 = professor14.toString();
        com.unifacisa.tcc.domain.Professor professor31 = professor14.diponibilidade((java.lang.Boolean) false);
        aluno13.setProfessor(professor14);
        com.unifacisa.tcc.domain.Professor professor33 = aluno13.getProfessor();
        java.lang.String str34 = aluno13.getEmail();
        com.unifacisa.tcc.domain.Professor professor35 = professor3.addAluno(aluno13);
        professor3.setPrimeiroNome("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', refreshToken='error.validation', expireTime=null}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(professor3);
        org.junit.Assert.assertNotNull(pessoa5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(aluno13);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(alunoArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str29, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNotNull(professor33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(professor35);
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1733");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        professor17.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor17.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor24 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno31 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str32 = aluno31.getEmail();
        aluno31.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray35 = new com.unifacisa.tcc.domain.Aluno[] { aluno25, aluno26, aluno30, aluno31 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet36 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet36, alunoArray35);
        professor24.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet36);
        java.lang.String str39 = professor24.toString();
        java.lang.Long long40 = professor24.getMatricula();
        com.unifacisa.tcc.domain.Professor professor41 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str44 = aluno43.getEmail();
        aluno43.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno48 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str49 = aluno48.getEmail();
        aluno48.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray52 = new com.unifacisa.tcc.domain.Aluno[] { aluno42, aluno43, aluno47, aluno48 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet53 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet53, alunoArray52);
        professor41.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet53);
        java.lang.String str56 = professor41.toString();
        com.unifacisa.tcc.domain.Professor professor58 = professor41.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa60 = professor58.primeiroNome("");
        professor58.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor63 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno64 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno65 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str66 = aluno65.getEmail();
        aluno65.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno69 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno70 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str71 = aluno70.getEmail();
        aluno70.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray74 = new com.unifacisa.tcc.domain.Aluno[] { aluno64, aluno65, aluno69, aluno70 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet75 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet75, alunoArray74);
        professor63.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet75);
        professor58.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet75);
        com.unifacisa.tcc.domain.Professor professor79 = professor24.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet75);
        com.unifacisa.tcc.domain.Professor professor80 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno81 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno82 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str83 = aluno82.getEmail();
        aluno82.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno86 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno87 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str88 = aluno87.getEmail();
        aluno87.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray91 = new com.unifacisa.tcc.domain.Aluno[] { aluno81, aluno82, aluno86, aluno87 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet92 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet92, alunoArray91);
        professor80.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet92);
        professor79.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet92);
        com.unifacisa.tcc.domain.Professor professor96 = professor17.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet92);
        professor17.setMatricula((java.lang.Long) 10L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(alunoArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str39, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long40);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(alunoArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str56, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor58);
        org.junit.Assert.assertNotNull(pessoa60);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(alunoArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(professor79);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNotNull(alunoArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(professor96);
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1734");
        com.unifacisa.tcc.domain.User user10 = new com.unifacisa.tcc.domain.User();
        user10.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant13 = user10.getLastModifiedDate();
        java.time.Instant instant14 = user10.getCreatedDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper16 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray17 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList18 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList18, userArray17);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList20 = userMapper16.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList18);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper21 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray22 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList23 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList23, userArray22);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList25 = userMapper21.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList23);
        java.util.List<com.unifacisa.tcc.domain.User> userList26 = userMapper16.userDTOsToUsers(userDTOList25);
        com.unifacisa.tcc.domain.User user28 = userMapper16.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO29 = new com.unifacisa.tcc.service.dto.UserDTO(user28);
        com.unifacisa.tcc.domain.User user30 = new com.unifacisa.tcc.domain.User();
        java.lang.String str31 = user30.getCreatedBy();
        java.lang.String str32 = user30.getLangKey();
        com.unifacisa.tcc.domain.Professor professor33 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str36 = aluno35.getEmail();
        aluno35.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str41 = aluno40.getEmail();
        aluno40.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray44 = new com.unifacisa.tcc.domain.Aluno[] { aluno34, aluno35, aluno39, aluno40 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet45 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet45, alunoArray44);
        professor33.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet45);
        java.lang.String str48 = professor33.toString();
        com.unifacisa.tcc.domain.Professor professor49 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno51 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str52 = aluno51.getEmail();
        aluno51.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno56 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str57 = aluno56.getEmail();
        aluno56.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray60 = new com.unifacisa.tcc.domain.Aluno[] { aluno50, aluno51, aluno55, aluno56 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet61 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet61, alunoArray60);
        professor49.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet61);
        com.unifacisa.tcc.domain.Professor professor64 = professor33.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet61);
        boolean boolean65 = user30.equals((java.lang.Object) professor33);
        java.lang.String str66 = user30.getLogin();
        user30.setId((java.lang.Long) 0L);
        user30.setImageUrl("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant71 = user30.getLastModifiedDate();
        user28.setLastModifiedDate(instant71);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper73 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray74 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList75 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList75, userArray74);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList77 = userMapper73.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList75);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper78 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray79 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList80 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList80, userArray79);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList82 = userMapper78.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList80);
        java.util.List<com.unifacisa.tcc.domain.User> userList83 = userMapper73.userDTOsToUsers(userDTOList82);
        com.unifacisa.tcc.domain.User user85 = userMapper73.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO86 = new com.unifacisa.tcc.service.dto.UserDTO(user85);
        java.time.Instant instant87 = userDTO86.getLastModifiedDate();
        java.lang.String str88 = userDTO86.getFirstName();
        java.util.Set<java.lang.String> strSet89 = userDTO86.getAuthorities();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM90 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='Authority{name='null'}', activationKey='null'}", "", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "ManagedUserVM{} UserDTO{login='LoginVM{username='null', rememberMe=false}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", true, "LoginVM{username='null', rememberMe=false}", "LoggerVM{name='error.concurrencyFailure', level='error.validation'}", "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", instant14, "LoggerVM{name='null', level='error.validation'}", instant71, strSet89);
        org.junit.Assert.assertNotNull(instant13);
        org.junit.Assert.assertNotNull(instant14);
        org.junit.Assert.assertNotNull(userArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(userDTOList20);
        org.junit.Assert.assertNotNull(userArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(userDTOList25);
        org.junit.Assert.assertNotNull(userList26);
        org.junit.Assert.assertNotNull(user28);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(alunoArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str48, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(alunoArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(professor64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(instant71);
        org.junit.Assert.assertNotNull(userArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(userDTOList77);
        org.junit.Assert.assertNotNull(userArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(userDTOList82);
        org.junit.Assert.assertNotNull(userList83);
        org.junit.Assert.assertNotNull(user85);
        org.junit.Assert.assertNotNull(instant87);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNotNull(strSet89);
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1735");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setProviderId("");
        java.lang.String str4 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setRank((java.lang.Long) 100L);
        java.lang.String str7 = socialUserConnection0.getAccessToken();
        java.lang.Long long8 = socialUserConnection0.getId();
        java.lang.Long long9 = socialUserConnection0.getId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long9);
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1736");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getRefreshToken();
        socialUserConnection0.setProfileURL("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setDisplayName("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        socialUserConnection0.setUserId("LoginVM{username='error.concurrencyFailure', rememberMe=null}");
        socialUserConnection0.setExpireTime((java.lang.Long) 10L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1737");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        socialUserConnection0.setId((java.lang.Long) (-1L));
        java.lang.String str7 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setProfileURL("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1738");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long1 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setAuditEventType("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Long long4 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setPrincipal("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        persistentAuditEvent0.setPrincipal("LoginVM{username='null', rememberMe=false}");
        java.lang.String str9 = persistentAuditEvent0.getAuditEventType();
        persistentAuditEvent0.setId((java.lang.Long) 1L);
        java.lang.String str12 = persistentAuditEvent0.getPrincipal();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = persistentAuditEvent0.getData();
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str9, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str12, "LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertNotNull(strMap13);
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1739");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.util.List<com.unifacisa.tcc.domain.User> userList10 = userMapper0.userDTOsToUsers(userDTOList9);
        com.unifacisa.tcc.domain.User user12 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper13 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray14 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList15 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList15, userArray14);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList17 = userMapper13.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList15);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper18 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray19 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList20 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList20, userArray19);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList22 = userMapper18.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList20);
        java.util.List<com.unifacisa.tcc.domain.User> userList23 = userMapper13.userDTOsToUsers(userDTOList22);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper24 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray25 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList26 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList26, userArray25);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList28 = userMapper24.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList26);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper29 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray30 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList31 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList31, userArray30);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList33 = userMapper29.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList31);
        java.util.List<com.unifacisa.tcc.domain.User> userList34 = userMapper24.userDTOsToUsers(userDTOList33);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper35 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray36 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList37 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList37, userArray36);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList39 = userMapper35.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList37);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper40 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray41 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList42 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList42, userArray41);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList44 = userMapper40.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList42);
        java.util.List<com.unifacisa.tcc.domain.User> userList45 = userMapper35.userDTOsToUsers(userDTOList44);
        java.util.List<com.unifacisa.tcc.domain.User> userList46 = userMapper24.userDTOsToUsers(userDTOList44);
        java.util.List<com.unifacisa.tcc.domain.User> userList47 = userMapper13.userDTOsToUsers(userDTOList44);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList48 = userMapper0.usersToUserDTOs(userList47);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper49 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray50 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList51 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList51, userArray50);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList53 = userMapper49.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList51);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper54 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray55 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList56 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList56, userArray55);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList58 = userMapper54.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList56);
        com.unifacisa.tcc.domain.User user60 = userMapper54.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper61 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray62 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList63 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList63, userArray62);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList65 = userMapper61.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList63);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper66 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray67 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList68 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList68, userArray67);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList70 = userMapper66.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList68);
        java.util.List<com.unifacisa.tcc.domain.User> userList71 = userMapper61.userDTOsToUsers(userDTOList70);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper72 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray73 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList74 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList74, userArray73);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList76 = userMapper72.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList74);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper77 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray78 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList79 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList79, userArray78);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList81 = userMapper77.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList79);
        java.util.List<com.unifacisa.tcc.domain.User> userList82 = userMapper72.userDTOsToUsers(userDTOList81);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper83 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray84 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList85 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList85, userArray84);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList87 = userMapper83.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList85);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper88 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray89 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList90 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList90, userArray89);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList92 = userMapper88.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList90);
        java.util.List<com.unifacisa.tcc.domain.User> userList93 = userMapper83.userDTOsToUsers(userDTOList92);
        java.util.List<com.unifacisa.tcc.domain.User> userList94 = userMapper72.userDTOsToUsers(userDTOList92);
        java.util.List<com.unifacisa.tcc.domain.User> userList95 = userMapper61.userDTOsToUsers(userDTOList92);
        java.util.List<com.unifacisa.tcc.domain.User> userList96 = userMapper54.userDTOsToUsers(userDTOList92);
        java.util.List<com.unifacisa.tcc.domain.User> userList97 = userMapper49.userDTOsToUsers(userDTOList92);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList98 = userMapper0.usersToUserDTOs(userList97);
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(user12);
        org.junit.Assert.assertNotNull(userArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(userDTOList17);
        org.junit.Assert.assertNotNull(userArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(userDTOList22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(userArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(userDTOList28);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(userDTOList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(userDTOList39);
        org.junit.Assert.assertNotNull(userArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(userDTOList44);
        org.junit.Assert.assertNotNull(userList45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userList47);
        org.junit.Assert.assertNotNull(userDTOList48);
        org.junit.Assert.assertNotNull(userArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(userDTOList53);
        org.junit.Assert.assertNotNull(userArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(userDTOList58);
        org.junit.Assert.assertNotNull(user60);
        org.junit.Assert.assertNotNull(userArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(userDTOList65);
        org.junit.Assert.assertNotNull(userArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(userDTOList70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(userArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(userDTOList76);
        org.junit.Assert.assertNotNull(userArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(userDTOList81);
        org.junit.Assert.assertNotNull(userList82);
        org.junit.Assert.assertNotNull(userArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(userDTOList87);
        org.junit.Assert.assertNotNull(userArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(userDTOList92);
        org.junit.Assert.assertNotNull(userList93);
        org.junit.Assert.assertNotNull(userList94);
        org.junit.Assert.assertNotNull(userList95);
        org.junit.Assert.assertNotNull(userList96);
        org.junit.Assert.assertNotNull(userList97);
        org.junit.Assert.assertNotNull(userDTOList98);
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1740");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = persistentAuditEvent0.getData();
        persistentAuditEvent0.setPrincipal("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long4 = persistentAuditEvent0.getId();
        java.lang.Long long5 = persistentAuditEvent0.getId();
        java.time.Instant instant6 = persistentAuditEvent0.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        persistentAuditEvent0.setData(strMap7);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent9 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = persistentAuditEvent9.getData();
        persistentAuditEvent9.setPrincipal("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long13 = persistentAuditEvent9.getId();
        java.lang.Long long14 = persistentAuditEvent9.getId();
        java.time.Instant instant15 = persistentAuditEvent9.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        persistentAuditEvent9.setData(strMap16);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent18 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant19 = persistentAuditEvent18.getAuditEventDate();
        java.lang.Long long20 = persistentAuditEvent18.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent21 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = persistentAuditEvent21.getData();
        persistentAuditEvent18.setData(strMap22);
        persistentAuditEvent9.setData(strMap22);
        persistentAuditEvent0.setData(strMap22);
        java.lang.String str26 = persistentAuditEvent0.getAuditEventType();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(instant6);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNull(long14);
        org.junit.Assert.assertNull(instant15);
        org.junit.Assert.assertNull(instant19);
        org.junit.Assert.assertNull(long20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1741");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getSecret();
        java.lang.Long long4 = socialUserConnection0.getRank();
        java.lang.String str5 = socialUserConnection0.getProviderId();
        socialUserConnection0.setRank((java.lang.Long) 10L);
        java.lang.String str8 = socialUserConnection0.getImageURL();
        java.lang.Long long9 = socialUserConnection0.getExpireTime();
        socialUserConnection0.setRefreshToken("");
        java.lang.String str12 = socialUserConnection0.getProviderId();
        java.lang.String str13 = socialUserConnection0.getSecret();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1742");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        professor17.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor22 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno23, aluno24, aluno28, aluno29 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor22.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        professor17.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor39 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        aluno41.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str47 = aluno46.getEmail();
        aluno46.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray50 = new com.unifacisa.tcc.domain.Aluno[] { aluno40, aluno41, aluno45, aluno46 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet51 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet51, alunoArray50);
        professor39.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet51);
        aluno38.setProfessor(professor39);
        com.unifacisa.tcc.domain.Professor professor55 = professor17.removeAluno(aluno38);
        com.unifacisa.tcc.domain.Professor professor56 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str59 = aluno58.getEmail();
        aluno58.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str64 = aluno63.getEmail();
        aluno63.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray67 = new com.unifacisa.tcc.domain.Aluno[] { aluno57, aluno58, aluno62, aluno63 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet68 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet68, alunoArray67);
        professor56.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet68);
        java.lang.String str71 = professor56.toString();
        com.unifacisa.tcc.domain.Professor professor73 = professor56.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet74 = professor56.getAlunos();
        com.unifacisa.tcc.domain.Aluno aluno75 = aluno38.professor(professor56);
        com.unifacisa.tcc.domain.Aluno aluno77 = aluno38.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor78 = aluno77.getProfessor();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa80 = aluno77.email("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='0', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Aluno aluno82 = aluno77.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor83 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str84 = professor83.getPrimeiroNome();
        java.lang.Boolean boolean85 = professor83.isDiponibilidade();
        java.lang.Long long86 = professor83.getId();
        com.unifacisa.tcc.domain.Aluno aluno87 = aluno82.professor(professor83);
        java.lang.String str88 = professor83.getPrimeiroNome();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(alunoArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(alunoArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str71, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor73);
        org.junit.Assert.assertNotNull(alunoSet74);
        org.junit.Assert.assertNotNull(aluno75);
        org.junit.Assert.assertNotNull(aluno77);
        org.junit.Assert.assertNotNull(professor78);
        org.junit.Assert.assertNotNull(pessoa80);
        org.junit.Assert.assertNotNull(aluno82);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNull(boolean85);
        org.junit.Assert.assertNull(long86);
        org.junit.Assert.assertNotNull(aluno87);
        org.junit.Assert.assertNull(str88);
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1743");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor16 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str19 = aluno18.getEmail();
        aluno18.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str24 = aluno23.getEmail();
        aluno23.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray27 = new com.unifacisa.tcc.domain.Aluno[] { aluno17, aluno18, aluno22, aluno23 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet28 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet28, alunoArray27);
        professor16.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet28);
        com.unifacisa.tcc.domain.Professor professor31 = professor0.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet28);
        com.unifacisa.tcc.domain.Professor professor33 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa35 = professor0.matricula((java.lang.Long) 1L);
        professor0.setSegundoNome("SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str39 = aluno38.getEmail();
        aluno38.setNumeroContato((java.lang.Long) 1L);
        java.lang.String str42 = aluno38.toString();
        com.unifacisa.tcc.domain.Professor professor43 = professor0.addAluno(aluno38);
        com.unifacisa.tcc.domain.Professor professor44 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str45 = professor44.getPrimeiroNome();
        java.lang.Boolean boolean46 = professor44.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa48 = professor44.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor49 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno51 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str52 = aluno51.getEmail();
        aluno51.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno56 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str57 = aluno56.getEmail();
        aluno56.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray60 = new com.unifacisa.tcc.domain.Aluno[] { aluno50, aluno51, aluno55, aluno56 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet61 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet61, alunoArray60);
        professor49.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet61);
        com.unifacisa.tcc.domain.Aluno aluno64 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str65 = aluno64.getEmail();
        java.lang.Boolean boolean66 = aluno64.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor67 = professor49.addAluno(aluno64);
        com.unifacisa.tcc.domain.Aluno aluno68 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str69 = aluno68.getEmail();
        aluno68.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection72 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean73 = aluno68.equals((java.lang.Object) socialUserConnection72);
        socialUserConnection72.setRefreshToken("error.validation");
        socialUserConnection72.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean78 = aluno64.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.domain.Professor professor79 = professor44.removeAluno(aluno64);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet80 = professor44.getAlunos();
        professor43.setAlunos(alunoSet80);
        professor43.setDiponibilidade((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(alunoArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNotNull(professor33);
        org.junit.Assert.assertNotNull(pessoa35);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='1', habilitadoTcc='null'}" + "'", str42, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='1', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(professor43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(pessoa48);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(alunoArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(boolean66);
        org.junit.Assert.assertNotNull(professor67);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(professor79);
        org.junit.Assert.assertNotNull(alunoSet80);
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1744");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getLangKey();
        user0.setResetKey("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        user0.setResetKey("Aluno{id=-1, primeiroNome='null', segundoNome='LoginVM{username='null', rememberMe=false}', matricula='0', email='null', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1745");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLangKey();
        java.lang.String str3 = user0.getCreatedBy();
        user0.setEmail("Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}");
        com.unifacisa.tcc.domain.User user6 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO7 = new com.unifacisa.tcc.service.dto.UserDTO(user6);
        java.lang.String str8 = user6.getImageUrl();
        java.lang.String str9 = user6.getLangKey();
        user6.setLastModifiedBy("");
        user6.setLastModifiedBy("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        user6.setLastName("LoginVM{username='null', rememberMe=null}");
        user6.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        aluno18.setProfessor(professor19);
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM35 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM35.setKey("error.concurrencyFailure");
        java.lang.String str38 = keyAndPasswordVM35.getNewPassword();
        boolean boolean39 = aluno18.equals((java.lang.Object) str38);
        com.unifacisa.tcc.domain.Professor professor40 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str43 = aluno42.getEmail();
        aluno42.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str48 = aluno47.getEmail();
        aluno47.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray51 = new com.unifacisa.tcc.domain.Aluno[] { aluno41, aluno42, aluno46, aluno47 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet52 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet52, alunoArray51);
        professor40.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet52);
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str56 = aluno55.getEmail();
        java.lang.Boolean boolean57 = aluno55.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor58 = professor40.addAluno(aluno55);
        aluno55.setNumeroContato((java.lang.Long) 0L);
        boolean boolean61 = aluno18.equals((java.lang.Object) aluno55);
        java.lang.String str62 = aluno55.getPrimeiroNome();
        boolean boolean63 = user6.equals((java.lang.Object) aluno55);
        com.unifacisa.tcc.domain.User user64 = new com.unifacisa.tcc.domain.User();
        java.lang.String str65 = user64.getCreatedBy();
        java.lang.String str66 = user64.getLastModifiedBy();
        user64.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.User user69 = new com.unifacisa.tcc.domain.User();
        java.lang.String str70 = user69.getCreatedBy();
        user69.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO73 = new com.unifacisa.tcc.service.dto.UserDTO(user69);
        java.time.Instant instant74 = userDTO73.getLastModifiedDate();
        user64.setCreatedDate(instant74);
        user6.setCreatedDate(instant74);
        user0.setLastModifiedDate(instant74);
        java.lang.Class<?> wildcardClass78 = instant74.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(alunoArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(professor58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(instant74);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1746");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        loginVM0.setUsername("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.String str6 = loginVM0.getUsername();
        java.lang.String str7 = loginVM0.toString();
        loginVM0.setRememberMe((java.lang.Boolean) true);
        loginVM0.setPassword("SocialUserConnection{id=1, userId=error.validation, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.lang.String str12 = loginVM0.getPassword();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str6, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=false}" + "'", str7, "LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=false}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "SocialUserConnection{id=1, userId=error.validation, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str12, "SocialUserConnection{id=1, userId=error.validation, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1747");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper3 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray4 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList5 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList5, userArray4);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList7 = userMapper3.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList5);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray9 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList10 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList10, userArray9);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList12 = userMapper8.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList10);
        java.util.List<com.unifacisa.tcc.domain.User> userList13 = userMapper3.userDTOsToUsers(userDTOList12);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper14 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray15 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList16 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList16, userArray15);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList18 = userMapper14.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList16);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper19 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray20 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList21 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList21, userArray20);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList23 = userMapper19.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList21);
        java.util.List<com.unifacisa.tcc.domain.User> userList24 = userMapper14.userDTOsToUsers(userDTOList23);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper25 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray26 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList27 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList27, userArray26);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList29 = userMapper25.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList27);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper30 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray31 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList32 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList32, userArray31);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList34 = userMapper30.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList32);
        java.util.List<com.unifacisa.tcc.domain.User> userList35 = userMapper25.userDTOsToUsers(userDTOList34);
        java.util.List<com.unifacisa.tcc.domain.User> userList36 = userMapper14.userDTOsToUsers(userDTOList34);
        java.util.List<com.unifacisa.tcc.domain.User> userList37 = userMapper3.userDTOsToUsers(userDTOList34);
        java.time.Instant instant47 = null;
        java.time.Instant instant49 = null;
        java.time.Instant instant59 = null;
        java.time.Instant instant61 = null;
        java.time.Instant instant72 = null;
        java.time.Instant instant74 = null;
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet80 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet80, strArray79);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM82 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant72, "error.validation", instant74, (java.util.Set<java.lang.String>) strSet80);
        com.unifacisa.tcc.service.dto.UserDTO userDTO83 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant59, "", instant61, (java.util.Set<java.lang.String>) strSet80);
        com.unifacisa.tcc.service.dto.UserDTO userDTO84 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) (-1L), "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "hi!", "", "hi!", true, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "error.concurrencyFailure", instant47, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", instant49, (java.util.Set<java.lang.String>) strSet80);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet85 = userMapper3.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet80);
        user0.setAuthorities(authoritySet85);
        java.lang.String str87 = user0.getLastName();
        user0.setActivated(true);
        user0.setActivated(true);
        java.lang.String str92 = user0.getLogin();
        java.lang.Long long93 = user0.getId();
        user0.setLastName("LoggerVM{name='error.concurrencyFailure', level='null'}");
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(userDTOList7);
        org.junit.Assert.assertNotNull(userArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(userDTOList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(userDTOList18);
        org.junit.Assert.assertNotNull(userArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(userDTOList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(userDTOList29);
        org.junit.Assert.assertNotNull(userArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(userDTOList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(authoritySet85);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str87, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertNull(long93);
    }

    @Test
    public void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1748");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        java.lang.Boolean boolean2 = professor0.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor6 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str9 = aluno8.getEmail();
        aluno8.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str14 = aluno13.getEmail();
        aluno13.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray17 = new com.unifacisa.tcc.domain.Aluno[] { aluno7, aluno8, aluno12, aluno13 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet18 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet18, alunoArray17);
        professor6.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet18);
        aluno5.setProfessor(professor6);
        professor6.setSegundoNome("LoginVM{username='null', rememberMe=null}");
        professor6.setDiponibilidade((java.lang.Boolean) true);
        professor6.setMatricula((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Professor professor28 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str29 = professor28.getPrimeiroNome();
        java.lang.Boolean boolean30 = professor28.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa32 = professor28.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor33 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str36 = aluno35.getEmail();
        aluno35.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str41 = aluno40.getEmail();
        aluno40.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray44 = new com.unifacisa.tcc.domain.Aluno[] { aluno34, aluno35, aluno39, aluno40 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet45 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet45, alunoArray44);
        professor33.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet45);
        com.unifacisa.tcc.domain.Aluno aluno48 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str49 = aluno48.getEmail();
        java.lang.Boolean boolean50 = aluno48.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor51 = professor33.addAluno(aluno48);
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str53 = aluno52.getEmail();
        aluno52.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection56 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean57 = aluno52.equals((java.lang.Object) socialUserConnection56);
        socialUserConnection56.setRefreshToken("error.validation");
        socialUserConnection56.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean62 = aluno48.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.domain.Professor professor63 = professor28.removeAluno(aluno48);
        com.unifacisa.tcc.domain.Aluno aluno64 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str65 = aluno64.getEmail();
        aluno64.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor68 = aluno64.getProfessor();
        com.unifacisa.tcc.domain.Professor professor69 = professor63.addAluno(aluno64);
        java.lang.String str70 = professor63.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor71 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str72 = professor71.getPrimeiroNome();
        java.lang.Boolean boolean73 = professor71.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa75 = professor71.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet76 = professor71.getAlunos();
        professor63.setAlunos(alunoSet76);
        com.unifacisa.tcc.domain.Professor professor78 = professor6.alunos(alunoSet76);
        com.unifacisa.tcc.domain.Professor professor79 = professor0.alunos(alunoSet76);
        java.lang.String str80 = professor79.getEmail();
        java.lang.String str81 = professor79.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(alunoArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(pessoa32);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(alunoArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(professor51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(professor63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(professor68);
        org.junit.Assert.assertNotNull(professor69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(boolean73);
        org.junit.Assert.assertNotNull(pessoa75);
        org.junit.Assert.assertNotNull(alunoSet76);
        org.junit.Assert.assertNotNull(professor78);
        org.junit.Assert.assertNotNull(professor79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str81, "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1749");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper3 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray4 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList5 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList5, userArray4);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList7 = userMapper3.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList5);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray9 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList10 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList10, userArray9);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList12 = userMapper8.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList10);
        java.util.List<com.unifacisa.tcc.domain.User> userList13 = userMapper3.userDTOsToUsers(userDTOList12);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper14 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray15 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList16 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList16, userArray15);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList18 = userMapper14.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList16);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper19 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray20 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList21 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList21, userArray20);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList23 = userMapper19.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList21);
        java.util.List<com.unifacisa.tcc.domain.User> userList24 = userMapper14.userDTOsToUsers(userDTOList23);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper25 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray26 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList27 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList27, userArray26);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList29 = userMapper25.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList27);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper30 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray31 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList32 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList32, userArray31);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList34 = userMapper30.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList32);
        java.util.List<com.unifacisa.tcc.domain.User> userList35 = userMapper25.userDTOsToUsers(userDTOList34);
        java.util.List<com.unifacisa.tcc.domain.User> userList36 = userMapper14.userDTOsToUsers(userDTOList34);
        java.util.List<com.unifacisa.tcc.domain.User> userList37 = userMapper3.userDTOsToUsers(userDTOList34);
        java.time.Instant instant47 = null;
        java.time.Instant instant49 = null;
        java.time.Instant instant59 = null;
        java.time.Instant instant61 = null;
        java.time.Instant instant72 = null;
        java.time.Instant instant74 = null;
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet80 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet80, strArray79);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM82 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant72, "error.validation", instant74, (java.util.Set<java.lang.String>) strSet80);
        com.unifacisa.tcc.service.dto.UserDTO userDTO83 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant59, "", instant61, (java.util.Set<java.lang.String>) strSet80);
        com.unifacisa.tcc.service.dto.UserDTO userDTO84 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) (-1L), "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "hi!", "", "hi!", true, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "error.concurrencyFailure", instant47, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", instant49, (java.util.Set<java.lang.String>) strSet80);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet85 = userMapper3.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet80);
        user0.setAuthorities(authoritySet85);
        java.lang.String str87 = user0.getLastName();
        com.unifacisa.tcc.domain.User user88 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO89 = new com.unifacisa.tcc.service.dto.UserDTO(user88);
        java.time.Instant instant90 = userDTO89.getLastModifiedDate();
        user0.setLastModifiedDate(instant90);
        java.time.Instant instant92 = user0.getLastModifiedDate();
        boolean boolean93 = user0.getActivated();
        java.lang.String str94 = user0.getResetKey();
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(userDTOList7);
        org.junit.Assert.assertNotNull(userArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(userDTOList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(userDTOList18);
        org.junit.Assert.assertNotNull(userArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(userDTOList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(userDTOList29);
        org.junit.Assert.assertNotNull(userArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(userDTOList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(authoritySet85);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str87, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant90);
        org.junit.Assert.assertNotNull(instant92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNull(str94);
    }

    @Test
    public void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1750");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor3 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa5 = professor3.primeiroNome("error.concurrencyFailure");
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection10 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean11 = aluno6.equals((java.lang.Object) socialUserConnection10);
        com.unifacisa.tcc.domain.Aluno aluno13 = aluno6.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor14 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno16 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str17 = aluno16.getEmail();
        aluno16.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray25 = new com.unifacisa.tcc.domain.Aluno[] { aluno15, aluno16, aluno20, aluno21 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet26 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet26, alunoArray25);
        professor14.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet26);
        java.lang.String str29 = professor14.toString();
        com.unifacisa.tcc.domain.Professor professor31 = professor14.diponibilidade((java.lang.Boolean) false);
        aluno13.setProfessor(professor14);
        com.unifacisa.tcc.domain.Professor professor33 = aluno13.getProfessor();
        java.lang.String str34 = aluno13.getEmail();
        com.unifacisa.tcc.domain.Professor professor35 = professor3.addAluno(aluno13);
        com.unifacisa.tcc.domain.Professor professor36 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno37 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str39 = aluno38.getEmail();
        aluno38.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str44 = aluno43.getEmail();
        aluno43.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray47 = new com.unifacisa.tcc.domain.Aluno[] { aluno37, aluno38, aluno42, aluno43 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet48 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet48, alunoArray47);
        professor36.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet48);
        com.unifacisa.tcc.domain.Aluno aluno51 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str52 = aluno51.getEmail();
        java.lang.Boolean boolean53 = aluno51.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor54 = professor36.addAluno(aluno51);
        com.unifacisa.tcc.domain.Professor professor55 = aluno51.getProfessor();
        com.unifacisa.tcc.domain.Professor professor56 = aluno51.getProfessor();
        java.lang.String str57 = aluno51.getEmail();
        com.unifacisa.tcc.domain.Professor professor58 = professor3.addAluno(aluno51);
        com.unifacisa.tcc.domain.Professor professor60 = professor58.diponibilidade((java.lang.Boolean) true);
        java.lang.String str61 = professor58.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(professor3);
        org.junit.Assert.assertNotNull(pessoa5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(aluno13);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(alunoArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str29, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNotNull(professor33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(alunoArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(professor54);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNotNull(professor56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(professor58);
        org.junit.Assert.assertNotNull(professor60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Professor{id=null, primeiroNome='error.concurrencyFailure', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}" + "'", str61, "Professor{id=null, primeiroNome='error.concurrencyFailure', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
    }

    @Test
    public void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1751");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        boolean boolean3 = user2.getActivated();
        com.unifacisa.tcc.web.rest.LogsResource logsResource4 = new com.unifacisa.tcc.web.rest.LogsResource();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList5 = logsResource4.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList6 = logsResource4.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList7 = logsResource4.getList();
        boolean boolean8 = user2.equals((java.lang.Object) logsResource4);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(loggerVMList5);
        org.junit.Assert.assertNotNull(loggerVMList6);
        org.junit.Assert.assertNotNull(loggerVMList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1752");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        java.lang.String str6 = socialUserConnection4.getRefreshToken();
        java.lang.Long long7 = socialUserConnection4.getExpireTime();
        java.lang.String str8 = socialUserConnection4.getRefreshToken();
        java.lang.String str9 = socialUserConnection4.getProviderId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1753");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        persistentAuditEvent0.setAuditEventType("LoginVM{username='error.concurrencyFailure', rememberMe=false}");
        java.util.Map<java.lang.String, java.lang.String> strMap3 = persistentAuditEvent0.getData();
        java.lang.Long long4 = persistentAuditEvent0.getId();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1754");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getEmail();
        java.lang.String str4 = user0.getLogin();
        java.lang.String str5 = user0.getLastModifiedBy();
        java.lang.Long long6 = user0.getId();
        user0.setLastName("");
        java.lang.String str9 = user0.getLastModifiedBy();
        java.time.Instant instant10 = user0.getCreatedDate();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(instant10);
    }

    @Test
    public void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1755");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setImageURL("error.concurrencyFailure");
        boolean boolean5 = socialUserConnection0.equals((java.lang.Object) "");
        java.lang.Long long6 = socialUserConnection0.getId();
        socialUserConnection0.setRefreshToken("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str9 = socialUserConnection0.getUserId();
        java.lang.String str10 = socialUserConnection0.getDisplayName();
        socialUserConnection0.setDisplayName("Professor{id=null, primeiroNome='LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=false}', segundoNome='null', matricula='null', email='LoggerVM{name='null', level='error.validation'}', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1756");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str1 = loggerVM0.getLevel();
        java.lang.String str2 = loggerVM0.toString();
        java.lang.String str3 = loggerVM0.getLevel();
        java.lang.String str4 = loggerVM0.getName();
        loggerVM0.setLevel("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "LoggerVM{name='null', level='null'}" + "'", str2, "LoggerVM{name='null', level='null'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1757");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getPassword();
        java.lang.String str2 = managedUserVM0.toString();
        java.lang.String str3 = managedUserVM0.getPassword();
        java.lang.String str4 = managedUserVM0.getLangKey();
        java.lang.String str5 = managedUserVM0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str2, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str5, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1758");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setHabilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa5 = aluno0.numeroContato((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa7 = pessoa5.matricula((java.lang.Long) 0L);
        pessoa7.setMatricula((java.lang.Long) (-1L));
        pessoa7.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa13 = pessoa7.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='1', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str15 = aluno14.getEmail();
        aluno14.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection18 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean19 = aluno14.equals((java.lang.Object) socialUserConnection18);
        socialUserConnection18.setRefreshToken("error.validation");
        socialUserConnection18.setSecret("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.Long long24 = socialUserConnection18.getRank();
        java.lang.String str25 = socialUserConnection18.getProfileURL();
        java.lang.String str26 = socialUserConnection18.getUserId();
        java.lang.String str27 = socialUserConnection18.getAccessToken();
        java.lang.String str28 = socialUserConnection18.getSecret();
        boolean boolean29 = pessoa7.equals((java.lang.Object) socialUserConnection18);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa31 = pessoa7.segundoNome("LoginVM{username='error.concurrencyFailure', rememberMe=null}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(pessoa5);
        org.junit.Assert.assertNotNull(pessoa7);
        org.junit.Assert.assertNotNull(pessoa13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str28, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(pessoa31);
    }

    @Test
    public void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1759");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLangKey();
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str6 = aluno5.getEmail();
        aluno5.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str11 = aluno10.getEmail();
        aluno10.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray14 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno5, aluno9, aluno10 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet15 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet15, alunoArray14);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet15);
        java.lang.String str18 = professor3.toString();
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        com.unifacisa.tcc.domain.Professor professor34 = professor3.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        boolean boolean35 = user0.equals((java.lang.Object) professor3);
        professor3.setDiponibilidade((java.lang.Boolean) true);
        professor3.setNumeroContato((java.lang.Long) (-1L));
        java.lang.Boolean boolean40 = professor3.isDiponibilidade();
        java.lang.String str41 = professor3.getSegundoNome();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa43 = professor3.numeroContato((java.lang.Long) 1L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(alunoArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str18, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + boolean40 + "' != '" + true + "'", boolean40, true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(pessoa43);
    }

    @Test
    public void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1760");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str12 = aluno11.getEmail();
        aluno11.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray15 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno6, aluno10, aluno11 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet16 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet16, alunoArray15);
        professor4.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        java.lang.String str19 = professor4.toString();
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray31 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno22, aluno26, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet32 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet32, alunoArray31);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Professor professor35 = professor4.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Aluno aluno36 = aluno0.professor(professor35);
        com.unifacisa.tcc.domain.Aluno aluno38 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno40 = aluno38.habilitadoTcc((java.lang.Boolean) false);
        aluno40.setHabilitadoTcc((java.lang.Boolean) false);
        aluno40.setNumeroContato((java.lang.Long) 10L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(alunoArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str19, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(alunoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNotNull(aluno36);
        org.junit.Assert.assertNotNull(aluno38);
        org.junit.Assert.assertNotNull(aluno40);
    }

    @Test
    public void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1761");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        aluno0.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa7 = aluno0.segundoNome("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = aluno0.matricula((java.lang.Long) 0L);
        java.lang.String str10 = pessoa9.getSegundoNome();
        pessoa9.setMatricula((java.lang.Long) (-1L));
        pessoa9.setNumeroContato((java.lang.Long) 1L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNotNull(pessoa7);
        org.junit.Assert.assertNotNull(pessoa9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str10, "LoginVM{username='null', rememberMe=false}");
    }

    @Test
    public void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1762");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getCreatedBy();
        java.time.Instant instant2 = managedUserVM0.getLastModifiedDate();
        managedUserVM0.setLogin("LoggerVM{name='null', level='error.validation'}");
        boolean boolean5 = managedUserVM0.isActivated();
        java.lang.String str6 = managedUserVM0.getFirstName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(instant2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1763");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.lang.String str34 = userDTO33.getLastName();
        java.lang.String str35 = userDTO33.getEmail();
        userDTO33.setId((java.lang.Long) 0L);
        java.lang.String str38 = userDTO33.getImageUrl();
        java.time.Instant instant39 = userDTO33.getCreatedDate();
        java.lang.String str40 = userDTO33.getLogin();
        java.lang.String str41 = userDTO33.getLastModifiedBy();
        userDTO33.setLogin("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='-1', diponibilidade='true'}");
        java.lang.String str44 = userDTO33.getFirstName();
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "error.concurrencyFailure" + "'", str34, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "error.concurrencyFailure" + "'", str35, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNull(instant39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
    }

    @Test
    public void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1764");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setHabilitadoTcc((java.lang.Boolean) true);
        aluno0.setEmail("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.domain.Professor professor6 = aluno0.getProfessor();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(professor6);
    }

    @Test
    public void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1765");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        java.lang.String str4 = user0.getLogin();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet5 = user0.getAuthorities();
        user0.setLastName("");
        java.lang.Class<?> wildcardClass8 = user0.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(authoritySet5);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1766");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.toString();
        java.lang.String str2 = authority0.toString();
        java.lang.String str3 = authority0.getName();
        authority0.setName("Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}");
        com.unifacisa.tcc.domain.Professor professor6 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str9 = aluno8.getEmail();
        aluno8.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str14 = aluno13.getEmail();
        aluno13.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray17 = new com.unifacisa.tcc.domain.Aluno[] { aluno7, aluno8, aluno12, aluno13 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet18 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet18, alunoArray17);
        professor6.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet18);
        java.lang.String str21 = professor6.toString();
        com.unifacisa.tcc.domain.Professor professor23 = professor6.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor24 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno31 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str32 = aluno31.getEmail();
        aluno31.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray35 = new com.unifacisa.tcc.domain.Aluno[] { aluno25, aluno26, aluno30, aluno31 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet36 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet36, alunoArray35);
        professor24.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet36);
        com.unifacisa.tcc.domain.Professor professor39 = professor23.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet36);
        com.unifacisa.tcc.domain.Professor professor40 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str43 = aluno42.getEmail();
        aluno42.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str48 = aluno47.getEmail();
        aluno47.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray51 = new com.unifacisa.tcc.domain.Aluno[] { aluno41, aluno42, aluno46, aluno47 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet52 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet52, alunoArray51);
        professor40.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet52);
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str56 = aluno55.getEmail();
        java.lang.Boolean boolean57 = aluno55.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor58 = professor40.addAluno(aluno55);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa60 = professor58.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor61 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str64 = aluno63.getEmail();
        aluno63.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno67 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno68 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str69 = aluno68.getEmail();
        aluno68.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray72 = new com.unifacisa.tcc.domain.Aluno[] { aluno62, aluno63, aluno67, aluno68 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet73 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet73, alunoArray72);
        professor61.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet73);
        com.unifacisa.tcc.domain.Aluno aluno76 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str77 = aluno76.getEmail();
        java.lang.Boolean boolean78 = aluno76.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor79 = professor61.addAluno(aluno76);
        com.unifacisa.tcc.domain.Professor professor80 = aluno76.getProfessor();
        com.unifacisa.tcc.domain.Professor professor81 = aluno76.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno82 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str83 = aluno82.getEmail();
        aluno82.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor86 = professor81.removeAluno(aluno82);
        com.unifacisa.tcc.domain.Professor professor87 = professor58.removeAluno(aluno82);
        com.unifacisa.tcc.domain.Professor professor88 = professor23.addAluno(aluno82);
        boolean boolean89 = authority0.equals((java.lang.Object) aluno82);
        java.lang.String str90 = aluno82.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Authority{name='null'}" + "'", str1, "Authority{name='null'}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Authority{name='null'}" + "'", str2, "Authority{name='null'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(alunoArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str21, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor23);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(alunoArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(alunoArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(professor58);
        org.junit.Assert.assertNotNull(pessoa60);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(alunoArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNull(boolean78);
        org.junit.Assert.assertNotNull(professor79);
        org.junit.Assert.assertNotNull(professor80);
        org.junit.Assert.assertNotNull(professor81);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(professor86);
        org.junit.Assert.assertNotNull(professor87);
        org.junit.Assert.assertNotNull(professor88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str90, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
    }

    @Test
    public void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1767");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        aluno0.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa7 = aluno0.segundoNome("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = aluno0.matricula((java.lang.Long) 0L);
        java.lang.String str10 = aluno0.getEmail();
        com.unifacisa.tcc.domain.Aluno aluno12 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        java.lang.String str13 = aluno0.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor14 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str15 = professor14.getPrimeiroNome();
        professor14.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor18 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str21 = aluno20.getEmail();
        aluno20.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str26 = aluno25.getEmail();
        aluno25.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray29 = new com.unifacisa.tcc.domain.Aluno[] { aluno19, aluno20, aluno24, aluno25 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet30 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet30, alunoArray29);
        professor18.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet30);
        java.lang.String str33 = professor18.toString();
        com.unifacisa.tcc.domain.Professor professor34 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str37 = aluno36.getEmail();
        aluno36.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        aluno41.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray45 = new com.unifacisa.tcc.domain.Aluno[] { aluno35, aluno36, aluno40, aluno41 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet46 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet46, alunoArray45);
        professor34.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet46);
        com.unifacisa.tcc.domain.Professor professor49 = professor18.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet46);
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str51 = aluno50.getEmail();
        java.lang.Boolean boolean52 = aluno50.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor53 = aluno50.getProfessor();
        com.unifacisa.tcc.domain.Professor professor54 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno56 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str57 = aluno56.getEmail();
        aluno56.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno60 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno61 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str62 = aluno61.getEmail();
        aluno61.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray65 = new com.unifacisa.tcc.domain.Aluno[] { aluno55, aluno56, aluno60, aluno61 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet66 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet66, alunoArray65);
        professor54.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet66);
        java.lang.String str69 = professor54.toString();
        com.unifacisa.tcc.domain.Professor professor70 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno71 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno72 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str73 = aluno72.getEmail();
        aluno72.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno76 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno77 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str78 = aluno77.getEmail();
        aluno77.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray81 = new com.unifacisa.tcc.domain.Aluno[] { aluno71, aluno72, aluno76, aluno77 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet82 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet82, alunoArray81);
        professor70.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet82);
        com.unifacisa.tcc.domain.Professor professor85 = professor54.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet82);
        com.unifacisa.tcc.domain.Aluno aluno86 = aluno50.professor(professor85);
        com.unifacisa.tcc.domain.Aluno aluno88 = aluno50.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa90 = aluno50.numeroContato((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.Professor professor91 = professor49.removeAluno(aluno50);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet92 = professor49.getAlunos();
        professor14.setAlunos(alunoSet92);
        aluno0.setProfessor(professor14);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNotNull(pessoa7);
        org.junit.Assert.assertNotNull(pessoa9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(aluno12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str13, "LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(alunoArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str33, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(alunoArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(professor49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertNull(professor53);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(alunoArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str69, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(alunoArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(professor85);
        org.junit.Assert.assertNotNull(aluno86);
        org.junit.Assert.assertNotNull(aluno88);
        org.junit.Assert.assertNotNull(pessoa90);
        org.junit.Assert.assertNotNull(professor91);
        org.junit.Assert.assertNotNull(alunoSet92);
    }

    @Test
    public void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1768");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("", "hi!", "hi!");
        java.lang.String str4 = fieldErrorVM3.getObjectName();
        java.lang.String str5 = fieldErrorVM3.getObjectName();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }

    @Test
    public void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1769");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setHabilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor4 = aluno0.getProfessor();
        aluno0.setHabilitadoTcc((java.lang.Boolean) false);
        java.lang.Boolean boolean7 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor8 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str11 = aluno10.getEmail();
        aluno10.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        aluno15.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray19 = new com.unifacisa.tcc.domain.Aluno[] { aluno9, aluno10, aluno14, aluno15 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet20 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet20, alunoArray19);
        professor8.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet20);
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str24 = aluno23.getEmail();
        java.lang.Boolean boolean25 = aluno23.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor26 = professor8.addAluno(aluno23);
        com.unifacisa.tcc.domain.Professor professor27 = aluno23.getProfessor();
        com.unifacisa.tcc.domain.Professor professor28 = aluno23.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor33 = professor28.removeAluno(aluno29);
        com.unifacisa.tcc.domain.Aluno aluno34 = aluno0.professor(professor28);
        com.unifacisa.tcc.domain.Professor professor35 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno37 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str38 = aluno37.getEmail();
        aluno37.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str43 = aluno42.getEmail();
        aluno42.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray46 = new com.unifacisa.tcc.domain.Aluno[] { aluno36, aluno37, aluno41, aluno42 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet47 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet47, alunoArray46);
        professor35.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet47);
        java.lang.String str50 = professor35.toString();
        com.unifacisa.tcc.domain.Professor professor51 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno53 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str54 = aluno53.getEmail();
        aluno53.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str59 = aluno58.getEmail();
        aluno58.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray62 = new com.unifacisa.tcc.domain.Aluno[] { aluno52, aluno53, aluno57, aluno58 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet63 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet63, alunoArray62);
        professor51.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet63);
        com.unifacisa.tcc.domain.Professor professor66 = professor35.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet63);
        com.unifacisa.tcc.domain.Professor professor68 = professor35.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor70 = professor35.diponibilidade((java.lang.Boolean) true);
        boolean boolean71 = aluno34.equals((java.lang.Object) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(professor4);
        org.junit.Assert.assertEquals("'" + boolean7 + "' != '" + false + "'", boolean7, false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(alunoArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(professor26);
        org.junit.Assert.assertNotNull(professor27);
        org.junit.Assert.assertNotNull(professor28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(professor33);
        org.junit.Assert.assertNotNull(aluno34);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(alunoArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str50, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(alunoArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(professor66);
        org.junit.Assert.assertNotNull(professor68);
        org.junit.Assert.assertNotNull(professor70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1770");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        java.lang.Boolean boolean2 = loginVM0.isRememberMe();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.Boolean boolean5 = loginVM0.isRememberMe();
        java.lang.Boolean boolean6 = loginVM0.isRememberMe();
        java.lang.String str7 = loginVM0.getPassword();
        java.lang.String str8 = loginVM0.getPassword();
        java.lang.Boolean boolean9 = loginVM0.isRememberMe();
        java.lang.String str10 = loginVM0.getUsername();
        loginVM0.setPassword("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        java.lang.Boolean boolean13 = loginVM0.isRememberMe();
        loginVM0.setUsername("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        java.lang.Boolean boolean16 = loginVM0.isRememberMe();
        loginVM0.setPassword("LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertEquals("'" + boolean5 + "' != '" + false + "'", boolean5, false);
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + false + "'", boolean6, false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + false + "'", boolean9, false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertEquals("'" + boolean16 + "' != '" + false + "'", boolean16, false);
    }

    @Test
    public void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1771");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        professor0.setDiponibilidade((java.lang.Boolean) false);
        java.lang.Long long18 = professor0.getMatricula();
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        java.lang.String str34 = professor19.toString();
        com.unifacisa.tcc.domain.Professor professor36 = professor19.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa38 = professor36.primeiroNome("");
        professor36.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor41 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str44 = aluno43.getEmail();
        aluno43.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno48 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str49 = aluno48.getEmail();
        aluno48.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray52 = new com.unifacisa.tcc.domain.Aluno[] { aluno42, aluno43, aluno47, aluno48 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet53 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet53, alunoArray52);
        professor41.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet53);
        professor36.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet53);
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor58 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno59 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno60 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str61 = aluno60.getEmail();
        aluno60.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno64 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno65 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str66 = aluno65.getEmail();
        aluno65.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray69 = new com.unifacisa.tcc.domain.Aluno[] { aluno59, aluno60, aluno64, aluno65 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet70 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet70, alunoArray69);
        professor58.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet70);
        aluno57.setProfessor(professor58);
        com.unifacisa.tcc.domain.Professor professor74 = professor36.removeAluno(aluno57);
        com.unifacisa.tcc.domain.Professor professor75 = professor0.addAluno(aluno57);
        java.lang.String str76 = professor0.getPrimeiroNome();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long18);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str34, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor36);
        org.junit.Assert.assertNotNull(pessoa38);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(alunoArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(alunoArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(professor74);
        org.junit.Assert.assertNotNull(professor75);
        org.junit.Assert.assertNull(str76);
    }

    @Test
    public void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1772");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        java.lang.String str6 = socialUserConnection4.getRefreshToken();
        java.lang.String str7 = socialUserConnection4.getProviderId();
        java.lang.String str8 = socialUserConnection4.getProviderId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1773");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        java.lang.Long long20 = professor17.getNumeroContato();
        com.unifacisa.tcc.domain.Professor professor21 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str24 = aluno23.getEmail();
        aluno23.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str29 = aluno28.getEmail();
        aluno28.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray32 = new com.unifacisa.tcc.domain.Aluno[] { aluno22, aluno23, aluno27, aluno28 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet33 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet33, alunoArray32);
        professor21.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet33);
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str37 = aluno36.getEmail();
        java.lang.Boolean boolean38 = aluno36.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor39 = professor21.addAluno(aluno36);
        com.unifacisa.tcc.domain.Professor professor40 = aluno36.getProfessor();
        com.unifacisa.tcc.domain.Professor professor41 = aluno36.getProfessor();
        java.lang.String str42 = aluno36.getEmail();
        com.unifacisa.tcc.domain.Professor professor43 = professor17.addAluno(aluno36);
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor45 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str48 = aluno47.getEmail();
        aluno47.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno51 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str53 = aluno52.getEmail();
        aluno52.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray56 = new com.unifacisa.tcc.domain.Aluno[] { aluno46, aluno47, aluno51, aluno52 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet57 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet57, alunoArray56);
        professor45.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet57);
        aluno44.setProfessor(professor45);
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM61 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM61.setKey("error.concurrencyFailure");
        java.lang.String str64 = keyAndPasswordVM61.getNewPassword();
        boolean boolean65 = aluno44.equals((java.lang.Object) str64);
        com.unifacisa.tcc.domain.Professor professor66 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno67 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno68 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str69 = aluno68.getEmail();
        aluno68.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno72 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno73 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str74 = aluno73.getEmail();
        aluno73.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray77 = new com.unifacisa.tcc.domain.Aluno[] { aluno67, aluno68, aluno72, aluno73 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet78 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet78, alunoArray77);
        professor66.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet78);
        com.unifacisa.tcc.domain.Aluno aluno81 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str82 = aluno81.getEmail();
        java.lang.Boolean boolean83 = aluno81.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor84 = professor66.addAluno(aluno81);
        aluno81.setNumeroContato((java.lang.Long) 0L);
        boolean boolean87 = aluno44.equals((java.lang.Object) aluno81);
        java.lang.String str88 = aluno81.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor89 = professor43.removeAluno(aluno81);
        java.lang.String str90 = professor89.toString();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(long20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(alunoArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(professor40);
        org.junit.Assert.assertNotNull(professor41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(professor43);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(alunoArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(alunoArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNull(boolean83);
        org.junit.Assert.assertNotNull(professor84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNotNull(professor89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='false'}" + "'", str90, "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='false'}");
    }

    @Test
    public void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1774");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.time.Instant instant2 = user0.getResetDate();
        java.lang.String str3 = user0.getResetKey();
        com.unifacisa.tcc.domain.User user14 = new com.unifacisa.tcc.domain.User();
        user14.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str17 = user14.getLastName();
        java.time.Instant instant18 = user14.getLastModifiedDate();
        com.unifacisa.tcc.domain.User user20 = new com.unifacisa.tcc.domain.User();
        user20.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str23 = user20.getLastName();
        java.time.Instant instant24 = user20.getLastModifiedDate();
        java.time.Instant instant34 = null;
        java.time.Instant instant36 = null;
        java.time.Instant instant47 = null;
        java.time.Instant instant49 = null;
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet55 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet55, strArray54);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM57 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant47, "error.validation", instant49, (java.util.Set<java.lang.String>) strSet55);
        com.unifacisa.tcc.service.dto.UserDTO userDTO58 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant34, "", instant36, (java.util.Set<java.lang.String>) strSet55);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM59 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) (-1L), "LoggerVM{name='null', level='error.validation'}", "Authority{name='null'}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", false, "LoginVM{username='null', rememberMe=false}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "LoggerVM{name='null', level='error.validation'}", instant18, "", instant24, (java.util.Set<java.lang.String>) strSet55);
        user0.setResetDate(instant18);
        user0.setEmail("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO63 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str64 = userDTO63.getLangKey();
        java.lang.String str65 = userDTO63.toString();
        org.junit.Assert.assertNull(instant2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str17, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str23, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant24);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(str64);
// flaky:         org.junit.Assert.assertEquals("'" + str65 + "' != '" + "UserDTO{login='null', firstName='null', lastName='null', email='Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=2021-03-24T23:46:23.063Z, lastModifiedBy='null', lastModifiedDate=2021-03-24T23:46:23.063Z, authorities=[]}" + "'", str65, "UserDTO{login='null', firstName='null', lastName='null', email='Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=2021-03-24T23:46:23.063Z, lastModifiedBy='null', lastModifiedDate=2021-03-24T23:46:23.063Z, authorities=[]}");
    }

    @Test
    public void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1775");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setImageURL("error.concurrencyFailure");
        boolean boolean5 = socialUserConnection0.equals((java.lang.Object) "");
        java.lang.Long long6 = socialUserConnection0.getId();
        java.lang.Long long7 = socialUserConnection0.getExpireTime();
        socialUserConnection0.setProfileURL("error.concurrencyFailure");
        java.lang.String str10 = socialUserConnection0.getUserId();
        java.lang.String str11 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setProviderId("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=0, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "error.concurrencyFailure" + "'", str11, "error.concurrencyFailure");
    }

    @Test
    public void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1776");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        professor0.setDiponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str12 = aluno11.getEmail();
        aluno11.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray15 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno6, aluno10, aluno11 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet16 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet16, alunoArray15);
        professor4.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa22 = aluno20.matricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Professor professor23 = professor0.addAluno(aluno20);
        com.unifacisa.tcc.domain.Professor professor24 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str25 = professor24.getPrimeiroNome();
        java.lang.Boolean boolean26 = professor24.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa28 = professor24.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor29 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno31 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str32 = aluno31.getEmail();
        aluno31.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str37 = aluno36.getEmail();
        aluno36.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray40 = new com.unifacisa.tcc.domain.Aluno[] { aluno30, aluno31, aluno35, aluno36 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet41 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet41, alunoArray40);
        professor29.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet41);
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str45 = aluno44.getEmail();
        java.lang.Boolean boolean46 = aluno44.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor47 = professor29.addAluno(aluno44);
        com.unifacisa.tcc.domain.Aluno aluno48 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str49 = aluno48.getEmail();
        aluno48.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection52 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean53 = aluno48.equals((java.lang.Object) socialUserConnection52);
        socialUserConnection52.setRefreshToken("error.validation");
        socialUserConnection52.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean58 = aluno44.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.domain.Professor professor59 = professor24.removeAluno(aluno44);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet60 = professor24.getAlunos();
        com.unifacisa.tcc.domain.Professor professor61 = professor23.alunos(alunoSet60);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(alunoArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(pessoa22);
        org.junit.Assert.assertNotNull(professor23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(pessoa28);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(alunoArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(professor47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(professor59);
        org.junit.Assert.assertNotNull(alunoSet60);
        org.junit.Assert.assertNotNull(professor61);
    }

    @Test
    public void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1777");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getRefreshToken();
        java.lang.String str4 = socialUserConnection0.getUserId();
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        socialUserConnection0.setAccessToken("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='10', email='null', numeroContato='100', habilitadoTcc='false'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1778");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str12 = aluno11.getEmail();
        aluno11.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray15 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno6, aluno10, aluno11 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet16 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet16, alunoArray15);
        professor4.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        java.lang.String str19 = professor4.toString();
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray31 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno22, aluno26, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet32 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet32, alunoArray31);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Professor professor35 = professor4.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Aluno aluno36 = aluno0.professor(professor35);
        aluno0.setHabilitadoTcc((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(alunoArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str19, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(alunoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNotNull(aluno36);
    }

    @Test
    public void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1779");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        professor17.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor22 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno23, aluno24, aluno28, aluno29 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor22.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        professor17.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor39 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        aluno41.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str47 = aluno46.getEmail();
        aluno46.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray50 = new com.unifacisa.tcc.domain.Aluno[] { aluno40, aluno41, aluno45, aluno46 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet51 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet51, alunoArray50);
        professor39.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet51);
        aluno38.setProfessor(professor39);
        com.unifacisa.tcc.domain.Professor professor55 = professor17.removeAluno(aluno38);
        com.unifacisa.tcc.domain.Professor professor56 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str59 = aluno58.getEmail();
        aluno58.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str64 = aluno63.getEmail();
        aluno63.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray67 = new com.unifacisa.tcc.domain.Aluno[] { aluno57, aluno58, aluno62, aluno63 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet68 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet68, alunoArray67);
        professor56.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet68);
        java.lang.String str71 = professor56.toString();
        com.unifacisa.tcc.domain.Professor professor73 = professor56.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet74 = professor56.getAlunos();
        com.unifacisa.tcc.domain.Aluno aluno75 = aluno38.professor(professor56);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa77 = aluno75.matricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Professor professor78 = aluno75.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno80 = aluno75.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno82 = aluno80.habilitadoTcc((java.lang.Boolean) true);
        java.lang.String str83 = aluno82.getSegundoNome();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(alunoArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(alunoArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str71, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor73);
        org.junit.Assert.assertNotNull(alunoSet74);
        org.junit.Assert.assertNotNull(aluno75);
        org.junit.Assert.assertNotNull(pessoa77);
        org.junit.Assert.assertNotNull(professor78);
        org.junit.Assert.assertNotNull(aluno80);
        org.junit.Assert.assertNotNull(aluno82);
        org.junit.Assert.assertNull(str83);
    }

    @Test
    public void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1780");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getProviderId();
        java.lang.String str2 = socialUserConnection0.getAccessToken();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent3 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant4 = persistentAuditEvent3.getAuditEventDate();
        java.lang.Long long5 = persistentAuditEvent3.getId();
        java.lang.Long long6 = persistentAuditEvent3.getId();
        com.unifacisa.tcc.domain.User user7 = new com.unifacisa.tcc.domain.User();
        java.lang.String str8 = user7.getCreatedBy();
        java.lang.String str9 = user7.getLangKey();
        java.time.Instant instant10 = user7.getCreatedDate();
        persistentAuditEvent3.setAuditEventDate(instant10);
        java.time.Instant instant12 = persistentAuditEvent3.getAuditEventDate();
        boolean boolean13 = socialUserConnection0.equals((java.lang.Object) persistentAuditEvent3);
        socialUserConnection0.setRank((java.lang.Long) 0L);
        java.lang.String str16 = socialUserConnection0.getImageURL();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(instant10);
        org.junit.Assert.assertNotNull(instant12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1781");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getEmail();
        java.lang.String str4 = user0.getLogin();
        user0.setActivationKey("hi!");
        boolean boolean7 = user0.getActivated();
        java.lang.String str8 = user0.getFirstName();
        user0.setResetKey("LoginVM{username='error.concurrencyFailure', rememberMe=null}");
        user0.setFirstName("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO13 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1782");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        boolean boolean6 = user0.getActivated();
        java.lang.String str7 = user0.getLogin();
        java.lang.String str8 = user0.getResetKey();
        java.lang.String str9 = user0.getImageUrl();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1783");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Professor professor16 = professor0.diponibilidade((java.lang.Boolean) true);
        professor16.setNumeroContato((java.lang.Long) (-1L));
        java.lang.String str19 = professor16.toString();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(professor16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='-1', diponibilidade='true'}" + "'", str19, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='-1', diponibilidade='true'}");
    }

    @Test
    public void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1784");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray31 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno22, aluno26, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet32 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet32, alunoArray31);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str36 = aluno35.getEmail();
        java.lang.Boolean boolean37 = aluno35.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor38 = professor20.addAluno(aluno35);
        com.unifacisa.tcc.domain.Professor professor39 = aluno35.getProfessor();
        com.unifacisa.tcc.domain.Professor professor40 = aluno35.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        aluno41.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor45 = professor40.removeAluno(aluno41);
        aluno41.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor48 = professor17.removeAluno(aluno41);
        java.lang.String str49 = aluno41.getPrimeiroNome();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(alunoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(professor38);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(professor40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(professor45);
        org.junit.Assert.assertNotNull(professor48);
        org.junit.Assert.assertNull(str49);
    }

    @Test
    public void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1785");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        java.lang.Boolean boolean2 = loginVM0.isRememberMe();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setPassword("hi!");
        java.lang.Boolean boolean7 = loginVM0.isRememberMe();
        java.lang.Boolean boolean8 = loginVM0.isRememberMe();
        loginVM0.setUsername("Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.String str13 = loginVM0.toString();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertEquals("'" + boolean7 + "' != '" + false + "'", boolean7, false);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + false + "'", boolean8, false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LoginVM{username='Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}', rememberMe=false}" + "'", str13, "LoginVM{username='Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}', rememberMe=false}");
    }

    @Test
    public void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1786");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str12 = aluno11.getEmail();
        aluno11.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray15 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno6, aluno10, aluno11 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet16 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet16, alunoArray15);
        professor4.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        java.lang.String str19 = professor4.toString();
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray31 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno22, aluno26, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet32 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet32, alunoArray31);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Professor professor35 = professor4.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Aluno aluno36 = aluno0.professor(professor35);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa38 = aluno0.email("");
        aluno0.setMatricula((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Professor professor41 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor42 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str43 = professor42.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor45 = professor42.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor47 = professor45.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno48 = aluno0.professor(professor47);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(alunoArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str19, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(alunoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNotNull(aluno36);
        org.junit.Assert.assertNotNull(pessoa38);
        org.junit.Assert.assertNotNull(professor41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(professor45);
        org.junit.Assert.assertNotNull(professor47);
        org.junit.Assert.assertNotNull(aluno48);
    }

    @Test
    public void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1787");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        socialUserConnection4.setRefreshToken("error.validation");
        socialUserConnection4.setUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection4.setId((java.lang.Long) 0L);
        socialUserConnection4.setExpireTime((java.lang.Long) 10L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1788");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor4 = aluno0.getProfessor();
        java.lang.Boolean boolean5 = aluno0.isHabilitadoTcc();
        java.lang.Boolean boolean6 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = aluno0.numeroContato((java.lang.Long) 0L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(professor4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(pessoa8);
    }

    @Test
    public void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1789");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        professor0.setDiponibilidade((java.lang.Boolean) false);
        professor0.setSegundoNome("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor20 = professor0.diponibilidade((java.lang.Boolean) false);
        java.lang.Boolean boolean21 = professor20.isDiponibilidade();
        java.lang.String str22 = professor20.getEmail();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(professor20);
        org.junit.Assert.assertEquals("'" + boolean21 + "' != '" + false + "'", boolean21, false);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1790");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getProfileURL();
        java.lang.String str2 = socialUserConnection0.getProfileURL();
        java.lang.Long long3 = socialUserConnection0.getExpireTime();
        java.lang.Long long4 = socialUserConnection0.getId();
        java.lang.Long long5 = socialUserConnection0.getId();
        socialUserConnection0.setExpireTime((java.lang.Long) (-1L));
        java.lang.Long long8 = socialUserConnection0.getId();
        socialUserConnection0.setAccessToken("UserDTO{login='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(long8);
    }

    @Test
    public void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1791");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet6 = user0.getAuthorities();
        java.lang.String str7 = user0.getLastName();
        java.lang.String str8 = user0.getLogin();
        user0.setActivated(true);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(authoritySet6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1792");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        java.lang.String str3 = user0.getPassword();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent4 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant5 = persistentAuditEvent4.getAuditEventDate();
        java.lang.String str6 = persistentAuditEvent4.getPrincipal();
        persistentAuditEvent4.setAuditEventType("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent9 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.User user10 = new com.unifacisa.tcc.domain.User();
        java.lang.String str11 = user10.getCreatedBy();
        java.lang.String str12 = user10.getLangKey();
        java.time.Instant instant13 = user10.getCreatedDate();
        persistentAuditEvent9.setAuditEventDate(instant13);
        persistentAuditEvent4.setAuditEventDate(instant13);
        user0.setLastModifiedDate(instant13);
        java.lang.String str17 = user0.getLangKey();
        java.lang.String str18 = user0.getEmail();
        user0.setCreatedBy("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', refreshToken='error.validation', expireTime=null}");
        user0.setActivationKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='10', email='null', numeroContato='100', habilitadoTcc='false'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(instant13);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1793");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        java.lang.Boolean boolean17 = aluno15.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor18 = professor0.addAluno(aluno15);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa20 = professor18.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa22 = professor18.segundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str24 = aluno23.getEmail();
        java.lang.Boolean boolean25 = aluno23.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor26 = aluno23.getProfessor();
        com.unifacisa.tcc.domain.Professor professor27 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str35 = aluno34.getEmail();
        aluno34.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray38 = new com.unifacisa.tcc.domain.Aluno[] { aluno28, aluno29, aluno33, aluno34 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet39 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet39, alunoArray38);
        professor27.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet39);
        java.lang.String str42 = professor27.toString();
        com.unifacisa.tcc.domain.Professor professor43 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str46 = aluno45.getEmail();
        aluno45.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str51 = aluno50.getEmail();
        aluno50.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray54 = new com.unifacisa.tcc.domain.Aluno[] { aluno44, aluno45, aluno49, aluno50 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet55 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet55, alunoArray54);
        professor43.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet55);
        com.unifacisa.tcc.domain.Professor professor58 = professor27.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet55);
        com.unifacisa.tcc.domain.Aluno aluno59 = aluno23.professor(professor58);
        com.unifacisa.tcc.domain.Aluno aluno61 = aluno23.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor62 = professor18.removeAluno(aluno61);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa64 = aluno61.numeroContato((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.Aluno aluno66 = aluno61.habilitadoTcc((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNotNull(pessoa20);
        org.junit.Assert.assertNotNull(pessoa22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(professor26);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(alunoArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str42, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(alunoArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(professor58);
        org.junit.Assert.assertNotNull(aluno59);
        org.junit.Assert.assertNotNull(aluno61);
        org.junit.Assert.assertNotNull(professor62);
        org.junit.Assert.assertNotNull(pessoa64);
        org.junit.Assert.assertNotNull(aluno66);
    }

    @Test
    public void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1794");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        aluno0.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.primeiroNome("");
        java.lang.String str7 = pessoa6.getPrimeiroNome();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = pessoa6.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa11 = pessoa6.email("User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}'}");
        pessoa6.setNumeroContato((java.lang.Long) 0L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(pessoa9);
        org.junit.Assert.assertNotNull(pessoa11);
    }

    @Test
    public void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1795");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.String str1 = persistentAuditEvent0.getPrincipal();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        java.lang.String str3 = persistentAuditEvent0.getPrincipal();
        java.lang.Long long4 = persistentAuditEvent0.getId();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = persistentAuditEvent0.getData();
        java.lang.Long long6 = persistentAuditEvent0.getId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(long6);
    }

    @Test
    public void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1796");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        professor0.setDiponibilidade((java.lang.Boolean) false);
        java.lang.Long long18 = professor0.getMatricula();
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        java.lang.String str34 = professor19.toString();
        com.unifacisa.tcc.domain.Professor professor36 = professor19.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa38 = professor36.primeiroNome("");
        professor36.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor41 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str44 = aluno43.getEmail();
        aluno43.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno48 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str49 = aluno48.getEmail();
        aluno48.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray52 = new com.unifacisa.tcc.domain.Aluno[] { aluno42, aluno43, aluno47, aluno48 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet53 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet53, alunoArray52);
        professor41.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet53);
        professor36.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet53);
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor58 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno59 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno60 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str61 = aluno60.getEmail();
        aluno60.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno64 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno65 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str66 = aluno65.getEmail();
        aluno65.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray69 = new com.unifacisa.tcc.domain.Aluno[] { aluno59, aluno60, aluno64, aluno65 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet70 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet70, alunoArray69);
        professor58.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet70);
        aluno57.setProfessor(professor58);
        com.unifacisa.tcc.domain.Professor professor74 = professor36.removeAluno(aluno57);
        com.unifacisa.tcc.domain.Professor professor75 = professor0.addAluno(aluno57);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa77 = aluno57.email("Authority{name='null'}");
        java.lang.String str78 = aluno57.toString();
        com.unifacisa.tcc.domain.Professor professor79 = null;
        aluno57.setProfessor(professor79);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long18);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str34, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor36);
        org.junit.Assert.assertNotNull(pessoa38);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(alunoArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(alunoArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(professor74);
        org.junit.Assert.assertNotNull(professor75);
        org.junit.Assert.assertNotNull(pessoa77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='Authority{name='null'}', numeroContato='null', habilitadoTcc='null'}" + "'", str78, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='Authority{name='null'}', numeroContato='null', habilitadoTcc='null'}");
    }

    @Test
    public void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1797");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        socialUserConnection4.setRefreshToken("error.validation");
        socialUserConnection4.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        socialUserConnection4.setRank((java.lang.Long) 10L);
        java.lang.Long long12 = socialUserConnection4.getId();
        java.lang.Long long13 = socialUserConnection4.getExpireTime();
        java.lang.String str14 = socialUserConnection4.getSecret();
        socialUserConnection4.setSecret("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='0', habilitadoTcc='false'}");
        java.lang.String str17 = socialUserConnection4.getUserId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1798");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLangKey();
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str6 = aluno5.getEmail();
        aluno5.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str11 = aluno10.getEmail();
        aluno10.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray14 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno5, aluno9, aluno10 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet15 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet15, alunoArray14);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet15);
        java.lang.String str18 = professor3.toString();
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        com.unifacisa.tcc.domain.Professor professor34 = professor3.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        boolean boolean35 = user0.equals((java.lang.Object) professor3);
        java.lang.String str36 = user0.getLogin();
        user0.setId((java.lang.Long) 0L);
        java.lang.String str39 = user0.getFirstName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(alunoArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str18, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str39);
    }

    @Test
    public void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1799");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        user0.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.User user4 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO5 = new com.unifacisa.tcc.service.dto.UserDTO(user4);
        java.lang.String str6 = user4.getImageUrl();
        java.lang.String str7 = user4.getLangKey();
        java.lang.String str8 = user4.getLogin();
        com.unifacisa.tcc.domain.User user9 = new com.unifacisa.tcc.domain.User();
        user9.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant12 = user9.getLastModifiedDate();
        user4.setLastModifiedDate(instant12);
        user0.setLastModifiedDate(instant12);
        user0.setActivated(false);
        user0.setImageUrl("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.lang.String str19 = user0.getLangKey();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(instant12);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1800");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        com.unifacisa.tcc.domain.Professor professor21 = professor17.diponibilidade((java.lang.Boolean) true);
        java.lang.String str22 = professor17.toString();
        java.lang.Boolean boolean23 = professor17.isDiponibilidade();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNotNull(professor21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}" + "'", str22, "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertEquals("'" + boolean23 + "' != '" + true + "'", boolean23, true);
    }

    @Test
    public void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1801");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.time.Instant instant2 = null;
        user0.setLastModifiedDate(instant2);
        java.lang.String str4 = user0.getEmail();
        java.lang.String str5 = user0.getEmail();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1802");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant21 = null;
        java.time.Instant instant23 = null;
        java.time.Instant instant34 = null;
        java.time.Instant instant36 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet42 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet42, strArray41);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM44 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant34, "error.validation", instant36, (java.util.Set<java.lang.String>) strSet42);
        com.unifacisa.tcc.service.dto.UserDTO userDTO45 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant21, "", instant23, (java.util.Set<java.lang.String>) strSet42);
        com.unifacisa.tcc.service.dto.UserDTO userDTO46 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 10L, "", "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "error.concurrencyFailure", "hi!", false, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "LoginVM{username='null', rememberMe=null}", "LoginVM{username='null', rememberMe=null}", instant9, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", instant11, (java.util.Set<java.lang.String>) strSet42);
        userDTO46.setId((java.lang.Long) 100L);
        java.lang.String str49 = userDTO46.getFirstName();
        userDTO46.setLogin("UserDTO{login='LoggerVM{name='null', level='null'}', firstName='error.concurrencyFailure', lastName='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', imageUrl='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', activated=true, langKey='', createdBy=Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}, createdDate=2021-03-24T23:46:05.135Z, lastModifiedBy='', lastModifiedDate=2021-03-24T23:46:05.135Z, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str49, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
    }

    @Test
    public void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1803");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLangKey();
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str6 = aluno5.getEmail();
        aluno5.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str11 = aluno10.getEmail();
        aluno10.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray14 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno5, aluno9, aluno10 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet15 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet15, alunoArray14);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet15);
        java.lang.String str18 = professor3.toString();
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        com.unifacisa.tcc.domain.Professor professor34 = professor3.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        boolean boolean35 = user0.equals((java.lang.Object) professor3);
        java.lang.String str36 = user0.getLogin();
        user0.setId((java.lang.Long) 0L);
        java.time.Instant instant39 = null;
        user0.setCreatedDate(instant39);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(alunoArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str18, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1804");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str1 = loggerVM0.getName();
        loggerVM0.setLevel("error.validation");
        java.lang.String str4 = loggerVM0.getLevel();
        java.lang.String str5 = loggerVM0.toString();
        java.lang.String str6 = loggerVM0.toString();
        loggerVM0.setName("error.concurrencyFailure");
        java.lang.String str9 = loggerVM0.getLevel();
        java.lang.String str10 = loggerVM0.getName();
        loggerVM0.setName("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        loggerVM0.setLevel("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "error.validation" + "'", str4, "error.validation");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str5, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str6, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "error.validation" + "'", str9, "error.validation");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "error.concurrencyFailure" + "'", str10, "error.concurrencyFailure");
    }

    @Test
    public void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1805");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", (java.lang.Long) 1L, "", "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "hi!", "", "User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", (java.lang.Long) 1L);
        socialUserConnection11.setId((java.lang.Long) 0L);
        java.lang.String str14 = socialUserConnection11.getSecret();
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1806");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str1 = loggerVM0.getName();
        loggerVM0.setLevel("error.validation");
        java.lang.String str4 = loggerVM0.getLevel();
        java.lang.String str5 = loggerVM0.toString();
        java.lang.String str6 = loggerVM0.toString();
        loggerVM0.setName("error.concurrencyFailure");
        java.lang.String str9 = loggerVM0.getLevel();
        loggerVM0.setLevel("SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.lang.String str12 = loggerVM0.getName();
        java.lang.String str13 = loggerVM0.getLevel();
        java.lang.String str14 = loggerVM0.getLevel();
        java.lang.String str15 = loggerVM0.getLevel();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "error.validation" + "'", str4, "error.validation");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str5, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str6, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "error.validation" + "'", str9, "error.validation");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "error.concurrencyFailure" + "'", str12, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str13, "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str14, "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str15, "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1807");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.String str2 = persistentAuditEvent0.getPrincipal();
        persistentAuditEvent0.setAuditEventType("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent5 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.User user6 = new com.unifacisa.tcc.domain.User();
        java.lang.String str7 = user6.getCreatedBy();
        java.lang.String str8 = user6.getLangKey();
        java.time.Instant instant9 = user6.getCreatedDate();
        persistentAuditEvent5.setAuditEventDate(instant9);
        persistentAuditEvent0.setAuditEventDate(instant9);
        persistentAuditEvent0.setId((java.lang.Long) 100L);
        persistentAuditEvent0.setId((java.lang.Long) 100L);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = persistentAuditEvent0.getData();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(instant9);
        org.junit.Assert.assertNotNull(strMap16);
    }

    @Test
    public void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1808");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        user0.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant4 = user0.getLastModifiedDate();
        user0.setLastName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        user0.setCreatedBy("error.concurrencyFailure");
        user0.setActivationKey("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(instant4);
    }

    @Test
    public void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1809");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getPassword();
        java.lang.String str2 = managedUserVM0.toString();
        java.lang.String str3 = managedUserVM0.getPassword();
        java.time.Instant instant4 = managedUserVM0.getLastModifiedDate();
        java.lang.String str5 = managedUserVM0.getLangKey();
        managedUserVM0.setLogin("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str8 = managedUserVM0.getLastName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str2, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1810");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.time.Instant instant2 = user0.getResetDate();
        java.lang.String str3 = user0.getResetKey();
        com.unifacisa.tcc.domain.User user14 = new com.unifacisa.tcc.domain.User();
        user14.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str17 = user14.getLastName();
        java.time.Instant instant18 = user14.getLastModifiedDate();
        com.unifacisa.tcc.domain.User user20 = new com.unifacisa.tcc.domain.User();
        user20.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str23 = user20.getLastName();
        java.time.Instant instant24 = user20.getLastModifiedDate();
        java.time.Instant instant34 = null;
        java.time.Instant instant36 = null;
        java.time.Instant instant47 = null;
        java.time.Instant instant49 = null;
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet55 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet55, strArray54);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM57 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant47, "error.validation", instant49, (java.util.Set<java.lang.String>) strSet55);
        com.unifacisa.tcc.service.dto.UserDTO userDTO58 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant34, "", instant36, (java.util.Set<java.lang.String>) strSet55);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM59 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) (-1L), "LoggerVM{name='null', level='error.validation'}", "Authority{name='null'}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", false, "LoginVM{username='null', rememberMe=false}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "LoggerVM{name='null', level='error.validation'}", instant18, "", instant24, (java.util.Set<java.lang.String>) strSet55);
        user0.setResetDate(instant18);
        user0.setEmail("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO63 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str64 = userDTO63.getLangKey();
        userDTO63.setLogin("User{login='null', firstName='null', lastName='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(instant2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str17, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str23, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant24);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(str64);
    }

    @Test
    public void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1811");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long1 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setAuditEventType("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Long long4 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setPrincipal("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        persistentAuditEvent0.setPrincipal("LoginVM{username='null', rememberMe=false}");
        java.lang.String str9 = persistentAuditEvent0.getAuditEventType();
        java.time.Instant instant10 = null;
        persistentAuditEvent0.setAuditEventDate(instant10);
        java.time.Instant instant12 = persistentAuditEvent0.getAuditEventDate();
        com.unifacisa.tcc.domain.User user13 = new com.unifacisa.tcc.domain.User();
        java.lang.String str14 = user13.getCreatedBy();
        java.lang.String str15 = user13.getLangKey();
        com.unifacisa.tcc.domain.Professor professor16 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str19 = aluno18.getEmail();
        aluno18.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str24 = aluno23.getEmail();
        aluno23.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray27 = new com.unifacisa.tcc.domain.Aluno[] { aluno17, aluno18, aluno22, aluno23 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet28 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet28, alunoArray27);
        professor16.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet28);
        java.lang.String str31 = professor16.toString();
        com.unifacisa.tcc.domain.Professor professor32 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str35 = aluno34.getEmail();
        aluno34.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str40 = aluno39.getEmail();
        aluno39.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray43 = new com.unifacisa.tcc.domain.Aluno[] { aluno33, aluno34, aluno38, aluno39 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet44 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet44, alunoArray43);
        professor32.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet44);
        com.unifacisa.tcc.domain.Professor professor47 = professor16.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet44);
        boolean boolean48 = user13.equals((java.lang.Object) professor16);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent49 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.User user50 = new com.unifacisa.tcc.domain.User();
        java.lang.String str51 = user50.getCreatedBy();
        java.lang.String str52 = user50.getLangKey();
        java.time.Instant instant53 = user50.getCreatedDate();
        persistentAuditEvent49.setAuditEventDate(instant53);
        user13.setCreatedDate(instant53);
        com.unifacisa.tcc.service.dto.UserDTO userDTO56 = new com.unifacisa.tcc.service.dto.UserDTO(user13);
        user13.setPassword("User{login='null', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str59 = user13.getFirstName();
        com.unifacisa.tcc.domain.User user60 = new com.unifacisa.tcc.domain.User();
        java.lang.String str61 = user60.getCreatedBy();
        java.lang.String str62 = user60.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user63 = new com.unifacisa.tcc.domain.User();
        user63.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant66 = user63.getLastModifiedDate();
        user60.setCreatedDate(instant66);
        java.lang.String str68 = user60.getEmail();
        java.time.Instant instant69 = user60.getCreatedDate();
        user13.setCreatedDate(instant69);
        persistentAuditEvent0.setAuditEventDate(instant69);
        java.lang.Long long72 = persistentAuditEvent0.getId();
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str9, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(instant12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(alunoArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str31, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(alunoArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(professor47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(instant53);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(instant66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(instant69);
        org.junit.Assert.assertNull(long72);
    }

    @Test
    public void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1812");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList1 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList2 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList3 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM4 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str5 = loggerVM4.getName();
        loggerVM4.setLevel("error.validation");
        java.lang.String str8 = loggerVM4.getLevel();
        java.lang.String str9 = loggerVM4.toString();
        java.lang.String str10 = loggerVM4.toString();
        loggerVM4.setName("error.concurrencyFailure");
        java.lang.String str13 = loggerVM4.getName();
        logsResource0.changeLevel(loggerVM4);
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM15 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str16 = loggerVM15.getName();
        loggerVM15.setLevel("error.validation");
        java.lang.String str19 = loggerVM15.getName();
        loggerVM15.setName("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str22 = loggerVM15.getName();
        logsResource0.changeLevel(loggerVM15);
        loggerVM15.setLevel("LoginVM{username='', rememberMe=null}");
        org.junit.Assert.assertNotNull(loggerVMList1);
        org.junit.Assert.assertNotNull(loggerVMList2);
        org.junit.Assert.assertNotNull(loggerVMList3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "error.validation" + "'", str8, "error.validation");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str9, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str10, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "error.concurrencyFailure" + "'", str13, "error.concurrencyFailure");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str22, "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
    }

    @Test
    public void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1813");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.domain.User user6 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user8 = userMapper0.userFromId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.User user10 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user12 = userMapper0.userFromId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.User user13 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO14 = new com.unifacisa.tcc.service.dto.UserDTO(user13);
        java.lang.String str15 = user13.getImageUrl();
        java.lang.String str16 = user13.getLangKey();
        java.lang.String str17 = user13.getLogin();
        com.unifacisa.tcc.domain.User user18 = new com.unifacisa.tcc.domain.User();
        user18.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant21 = user18.getLastModifiedDate();
        user13.setLastModifiedDate(instant21);
        java.lang.String str23 = user13.getActivationKey();
        user13.setImageUrl("Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='false'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO26 = userMapper0.userToUserDTO(user13);
        java.lang.String str27 = userDTO26.getEmail();
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(user6);
        org.junit.Assert.assertNotNull(user8);
        org.junit.Assert.assertNotNull(user10);
        org.junit.Assert.assertNotNull(user12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(instant21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(userDTO26);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1814");
        java.time.Instant instant10 = null;
        com.unifacisa.tcc.domain.User user12 = new com.unifacisa.tcc.domain.User();
        java.lang.String str13 = user12.getCreatedBy();
        user12.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO16 = new com.unifacisa.tcc.service.dto.UserDTO(user12);
        java.time.Instant instant17 = userDTO16.getLastModifiedDate();
        java.time.Instant instant28 = null;
        java.time.Instant instant30 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet36 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet36, strArray35);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM38 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant28, "error.validation", instant30, (java.util.Set<java.lang.String>) strSet36);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM39 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}", "User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "User{login='null', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", false, "Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}", "LoginVM{username='null', rememberMe=false}", "error.validation", instant10, "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", instant17, (java.util.Set<java.lang.String>) strSet36);
        managedUserVM39.setLogin("LoginVM{username='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', rememberMe=false}");
        java.lang.String str42 = managedUserVM39.getImageUrl();
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(instant17);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}" + "'", str42, "Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
    }

    @Test
    public void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1815");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet6 = user0.getAuthorities();
        user0.setLastName("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=100}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(authoritySet6);
    }

    @Test
    public void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1816");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        aluno0.setId((java.lang.Long) (-1L));
        aluno0.setId((java.lang.Long) (-1L));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
    }

    @Test
    public void test1817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1817");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("LoginVM{username='null', rememberMe=false}", "error.validation", "Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
    }

    @Test
    public void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1818");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        socialUserConnection0.setId((java.lang.Long) (-1L));
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        socialUserConnection0.setDisplayName("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent11 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant12 = persistentAuditEvent11.getAuditEventDate();
        java.lang.Long long13 = persistentAuditEvent11.getId();
        java.lang.String str14 = persistentAuditEvent11.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        persistentAuditEvent11.setData(strMap15);
        com.unifacisa.tcc.domain.Professor professor27 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str35 = aluno34.getEmail();
        aluno34.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray38 = new com.unifacisa.tcc.domain.Aluno[] { aluno28, aluno29, aluno33, aluno34 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet39 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet39, alunoArray38);
        professor27.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet39);
        java.lang.String str42 = professor27.toString();
        com.unifacisa.tcc.domain.Professor professor44 = professor27.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet45 = professor27.getAlunos();
        com.unifacisa.tcc.domain.User user46 = new com.unifacisa.tcc.domain.User();
        java.lang.String str47 = user46.getCreatedBy();
        user46.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant50 = user46.getLastModifiedDate();
        boolean boolean51 = professor27.equals((java.lang.Object) instant50);
        com.unifacisa.tcc.domain.User user53 = new com.unifacisa.tcc.domain.User();
        java.lang.String str54 = user53.getCreatedBy();
        java.lang.String str55 = user53.getLangKey();
        java.time.Instant instant56 = user53.getCreatedDate();
        java.time.Instant instant67 = null;
        java.time.Instant instant69 = null;
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet75 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet75, strArray74);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM77 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant67, "error.validation", instant69, (java.util.Set<java.lang.String>) strSet75);
        java.lang.String str78 = managedUserVM77.getFirstName();
        java.lang.String str79 = managedUserVM77.getCreatedBy();
        java.util.Set<java.lang.String> strSet80 = managedUserVM77.getAuthorities();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM81 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) (-1L), "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoggerVM{name='null', level='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoggerVM{name='null', level='error.validation'}", true, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", instant50, "LoginVM{username='null', rememberMe=null}", instant56, strSet80);
        persistentAuditEvent11.setAuditEventDate(instant56);
        boolean boolean83 = socialUserConnection0.equals((java.lang.Object) persistentAuditEvent11);
        java.lang.Long long84 = socialUserConnection0.getRank();
        socialUserConnection0.setRank((java.lang.Long) 100L);
        socialUserConnection0.setRefreshToken("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str89 = socialUserConnection0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(instant12);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(alunoArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str42, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor44);
        org.junit.Assert.assertNotNull(alunoSet45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(instant50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(instant56);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertNotNull(strSet80);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(long84);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=100, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', expireTime=0}" + "'", str89, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=100, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', expireTime=0}");
    }

    @Test
    public void test1819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1819");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent3 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = persistentAuditEvent3.getData();
        persistentAuditEvent0.setData(strMap4);
        persistentAuditEvent0.setAuditEventType("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str8 = persistentAuditEvent0.getAuditEventType();
        com.unifacisa.tcc.domain.User user9 = new com.unifacisa.tcc.domain.User();
        java.lang.String str10 = user9.getCreatedBy();
        java.lang.String str11 = user9.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user12 = new com.unifacisa.tcc.domain.User();
        user12.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant15 = user12.getLastModifiedDate();
        user9.setCreatedDate(instant15);
        java.lang.String str17 = user9.getEmail();
        java.time.Instant instant18 = user9.getCreatedDate();
        persistentAuditEvent0.setAuditEventDate(instant18);
        persistentAuditEvent0.setId((java.lang.Long) 100L);
        java.time.Instant instant22 = persistentAuditEvent0.getAuditEventDate();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str8, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(instant15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(instant18);
        org.junit.Assert.assertNotNull(instant22);
    }

    @Test
    public void test1820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1820");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        java.lang.Boolean boolean17 = aluno15.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor18 = professor0.addAluno(aluno15);
        com.unifacisa.tcc.domain.Professor professor19 = aluno15.getProfessor();
        com.unifacisa.tcc.domain.Professor professor20 = aluno15.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno22 = aluno15.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor23 = null;
        com.unifacisa.tcc.domain.Aluno aluno24 = aluno15.professor(professor23);
        com.unifacisa.tcc.domain.Aluno aluno26 = aluno15.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor27 = aluno15.getProfessor();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNotNull(professor19);
        org.junit.Assert.assertNotNull(professor20);
        org.junit.Assert.assertNotNull(aluno22);
        org.junit.Assert.assertNotNull(aluno24);
        org.junit.Assert.assertNotNull(aluno26);
        org.junit.Assert.assertNull(professor27);
    }

    @Test
    public void test1821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1821");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.time.Instant instant34 = userDTO33.getLastModifiedDate();
        userDTO33.setLogin("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str37 = userDTO33.getLastModifiedBy();
        java.lang.String str38 = userDTO33.getCreatedBy();
        java.time.Instant instant39 = userDTO33.getLastModifiedDate();
        java.lang.String str40 = userDTO33.getCreatedBy();
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(instant34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "error.concurrencyFailure" + "'", str38, "error.concurrencyFailure");
        org.junit.Assert.assertNull(instant39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "error.concurrencyFailure" + "'", str40, "error.concurrencyFailure");
    }

    @Test
    public void test1822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1822");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.segundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor21 = professor17.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa23 = professor21.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='0', habilitadoTcc='false'}");
        pessoa23.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='-1', diponibilidade='true'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNotNull(professor21);
        org.junit.Assert.assertNotNull(pessoa23);
    }

    @Test
    public void test1823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1823");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        user0.setLangKey("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str5 = user0.getFirstName();
        user0.setFirstName("UserDTO{login='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str8 = user0.getResetKey();
        user0.setLastModifiedBy("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1824");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.util.List<com.unifacisa.tcc.domain.User> userList10 = userMapper0.userDTOsToUsers(userDTOList9);
        com.unifacisa.tcc.domain.User user12 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper13 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray14 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList15 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList15, userArray14);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList17 = userMapper13.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList15);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper18 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray19 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList20 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList20, userArray19);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList22 = userMapper18.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList20);
        com.unifacisa.tcc.domain.User user24 = userMapper18.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper25 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray26 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList27 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList27, userArray26);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList29 = userMapper25.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList27);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper30 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray31 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList32 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList32, userArray31);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList34 = userMapper30.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList32);
        java.util.List<com.unifacisa.tcc.domain.User> userList35 = userMapper25.userDTOsToUsers(userDTOList34);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper36 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray37 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList38 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList38, userArray37);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList40 = userMapper36.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList38);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper41 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray42 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList43 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList43, userArray42);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList45 = userMapper41.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList43);
        java.util.List<com.unifacisa.tcc.domain.User> userList46 = userMapper36.userDTOsToUsers(userDTOList45);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper47 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray48 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList49 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList49, userArray48);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList51 = userMapper47.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList49);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper52 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray53 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList54 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList54, userArray53);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList56 = userMapper52.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList54);
        java.util.List<com.unifacisa.tcc.domain.User> userList57 = userMapper47.userDTOsToUsers(userDTOList56);
        java.util.List<com.unifacisa.tcc.domain.User> userList58 = userMapper36.userDTOsToUsers(userDTOList56);
        java.util.List<com.unifacisa.tcc.domain.User> userList59 = userMapper25.userDTOsToUsers(userDTOList56);
        java.util.List<com.unifacisa.tcc.domain.User> userList60 = userMapper18.userDTOsToUsers(userDTOList56);
        java.util.List<com.unifacisa.tcc.domain.User> userList61 = userMapper13.userDTOsToUsers(userDTOList56);
        java.util.List<com.unifacisa.tcc.domain.User> userList62 = userMapper0.userDTOsToUsers(userDTOList56);
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(user12);
        org.junit.Assert.assertNotNull(userArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(userDTOList17);
        org.junit.Assert.assertNotNull(userArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(userDTOList22);
        org.junit.Assert.assertNotNull(user24);
        org.junit.Assert.assertNotNull(userArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(userDTOList29);
        org.junit.Assert.assertNotNull(userArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(userDTOList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(userDTOList40);
        org.junit.Assert.assertNotNull(userArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(userDTOList45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(userDTOList51);
        org.junit.Assert.assertNotNull(userArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(userDTOList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userList58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList62);
    }

    @Test
    public void test1825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1825");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent1 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long2 = persistentAuditEvent1.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent3 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant4 = persistentAuditEvent3.getAuditEventDate();
        java.lang.Long long5 = persistentAuditEvent3.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent6 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = persistentAuditEvent6.getData();
        persistentAuditEvent3.setData(strMap7);
        persistentAuditEvent1.setData(strMap7);
        persistentAuditEvent0.setData(strMap7);
        java.lang.String str11 = persistentAuditEvent0.getPrincipal();
        com.unifacisa.tcc.domain.User user12 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO13 = new com.unifacisa.tcc.service.dto.UserDTO(user12);
        java.lang.String str14 = user12.getImageUrl();
        java.lang.String str15 = user12.getLangKey();
        user12.setImageUrl("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent28 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant29 = persistentAuditEvent28.getAuditEventDate();
        persistentAuditEvent28.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent32 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = persistentAuditEvent32.getData();
        persistentAuditEvent32.setPrincipal("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long36 = persistentAuditEvent32.getId();
        java.lang.Long long37 = persistentAuditEvent32.getId();
        java.time.Instant instant38 = persistentAuditEvent32.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        persistentAuditEvent32.setData(strMap39);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent41 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant42 = persistentAuditEvent41.getAuditEventDate();
        java.lang.Long long43 = persistentAuditEvent41.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent44 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = persistentAuditEvent44.getData();
        persistentAuditEvent41.setData(strMap45);
        persistentAuditEvent32.setData(strMap45);
        persistentAuditEvent28.setData(strMap45);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper49 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user51 = userMapper49.userFromId((java.lang.Long) 1L);
        boolean boolean52 = user51.getActivated();
        java.time.Instant instant53 = user51.getLastModifiedDate();
        persistentAuditEvent28.setAuditEventDate(instant53);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper56 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray57 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList58 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList58, userArray57);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList60 = userMapper56.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList58);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper61 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray62 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList63 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList63, userArray62);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList65 = userMapper61.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList63);
        java.util.List<com.unifacisa.tcc.domain.User> userList66 = userMapper56.userDTOsToUsers(userDTOList65);
        com.unifacisa.tcc.domain.User user68 = userMapper56.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO69 = new com.unifacisa.tcc.service.dto.UserDTO(user68);
        java.time.Instant instant70 = userDTO69.getLastModifiedDate();
        java.time.Instant instant81 = null;
        java.time.Instant instant83 = null;
        java.lang.String[] strArray88 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet89 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet89, strArray88);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM91 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant81, "error.validation", instant83, (java.util.Set<java.lang.String>) strSet89);
        java.lang.String str92 = managedUserVM91.getFirstName();
        java.util.Set<java.lang.String> strSet93 = managedUserVM91.getAuthorities();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM94 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=100}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}", "UserDTO{login='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", false, "error.validation", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}", instant53, "Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", instant70, strSet93);
        user12.setCreatedDate(instant53);
        persistentAuditEvent0.setAuditEventDate(instant53);
        java.time.Instant instant97 = persistentAuditEvent0.getAuditEventDate();
        java.lang.String str98 = persistentAuditEvent0.getAuditEventType();
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(instant29);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(long36);
        org.junit.Assert.assertNull(long37);
        org.junit.Assert.assertNull(instant38);
        org.junit.Assert.assertNull(instant42);
        org.junit.Assert.assertNull(long43);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(user51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(instant53);
        org.junit.Assert.assertNotNull(userArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(userDTOList60);
        org.junit.Assert.assertNotNull(userArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(userDTOList65);
        org.junit.Assert.assertNotNull(userList66);
        org.junit.Assert.assertNotNull(user68);
        org.junit.Assert.assertNotNull(instant70);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "hi!" + "'", str92, "hi!");
        org.junit.Assert.assertNotNull(strSet93);
        org.junit.Assert.assertNotNull(instant97);
        org.junit.Assert.assertNull(str98);
    }

    @Test
    public void test1826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1826");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant1 = null;
        managedUserVM0.setLastModifiedDate(instant1);
        java.lang.String str3 = managedUserVM0.getLogin();
        java.lang.Long long4 = managedUserVM0.getId();
        java.lang.String str5 = managedUserVM0.getPassword();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test1827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1827");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("UserDTO{login='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "ManagedUserVM{} UserDTO{login='LoginVM{username='null', rememberMe=false}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "UserDTO{login='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
    }

    @Test
    public void test1828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1828");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO3 = new com.unifacisa.tcc.service.dto.UserDTO(user2);
        user2.setPassword("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant6 = user2.getResetDate();
        user2.setPassword("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet9 = user2.getAuthorities();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant6);
        org.junit.Assert.assertNotNull(authoritySet9);
    }

    @Test
    public void test1829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1829");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getProfileURL();
        java.lang.String str2 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setId((java.lang.Long) 10L);
        socialUserConnection0.setDisplayName("LoginVM{username='Authority{name='null'}', rememberMe=null}");
        java.lang.String str7 = socialUserConnection0.getProviderUserId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1830");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.toString();
        java.lang.Object obj2 = null;
        boolean boolean3 = authority0.equals(obj2);
        authority0.setName("Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}");
        java.lang.String str6 = authority0.toString();
        com.unifacisa.tcc.domain.Authority authority7 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str8 = authority7.toString();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper9 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user11 = userMapper9.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor22 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno23, aluno24, aluno28, aluno29 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor22.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        java.lang.String str37 = professor22.toString();
        com.unifacisa.tcc.domain.Professor professor39 = professor22.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet40 = professor22.getAlunos();
        com.unifacisa.tcc.domain.User user41 = new com.unifacisa.tcc.domain.User();
        java.lang.String str42 = user41.getCreatedBy();
        user41.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant45 = user41.getLastModifiedDate();
        boolean boolean46 = professor22.equals((java.lang.Object) instant45);
        com.unifacisa.tcc.domain.User user48 = new com.unifacisa.tcc.domain.User();
        java.lang.String str49 = user48.getCreatedBy();
        java.lang.String str50 = user48.getLangKey();
        java.time.Instant instant51 = user48.getCreatedDate();
        java.time.Instant instant62 = null;
        java.time.Instant instant64 = null;
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet70 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet70, strArray69);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM72 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant62, "error.validation", instant64, (java.util.Set<java.lang.String>) strSet70);
        java.lang.String str73 = managedUserVM72.getFirstName();
        java.lang.String str74 = managedUserVM72.getCreatedBy();
        java.util.Set<java.lang.String> strSet75 = managedUserVM72.getAuthorities();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM76 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) (-1L), "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoggerVM{name='null', level='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoggerVM{name='null', level='error.validation'}", true, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", instant45, "LoginVM{username='null', rememberMe=null}", instant51, strSet75);
        user11.setResetDate(instant45);
        boolean boolean78 = authority7.equals((java.lang.Object) instant45);
        boolean boolean79 = authority0.equals((java.lang.Object) boolean78);
        java.lang.String str80 = authority0.toString();
        authority0.setName("LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=false}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Authority{name='null'}" + "'", str1, "Authority{name='null'}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Authority{name='Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}'}" + "'", str6, "Authority{name='Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}'}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Authority{name='null'}" + "'", str8, "Authority{name='null'}");
        org.junit.Assert.assertNotNull(user11);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str37, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(alunoSet40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(instant45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(instant51);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNotNull(strSet75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Authority{name='Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}'}" + "'", str80, "Authority{name='Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}'}");
    }

    @Test
    public void test1831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1831");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getEmail();
        java.lang.String str4 = user0.getLogin();
        java.lang.String str5 = user0.getLastModifiedBy();
        java.lang.Long long6 = user0.getId();
        user0.setLastName("");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection20 = new com.unifacisa.tcc.domain.SocialUserConnection("", "hi!", "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", (java.lang.Long) 0L, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "error.validation", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "LoginVM{username='null', rememberMe=null}", "", (java.lang.Long) 0L);
        socialUserConnection20.setAccessToken("LoggerVM{name='null', level='error.validation'}");
        java.lang.String str23 = socialUserConnection20.getRefreshToken();
        boolean boolean24 = user0.equals((java.lang.Object) str23);
        user0.setLastModifiedBy("SocialUserConnection{id=-1, userId=null, providerId='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}', providerUserId='null', rank=null, displayName='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='Authority{name='null'}', refreshToken='null', expireTime=0}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1832");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getAccessToken();
        java.lang.String str4 = socialUserConnection0.toString();
        java.lang.String str5 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setImageURL("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str9 = aluno8.getEmail();
        aluno8.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor12 = aluno8.getProfessor();
        com.unifacisa.tcc.domain.Professor professor13 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        aluno15.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str21 = aluno20.getEmail();
        aluno20.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray24 = new com.unifacisa.tcc.domain.Aluno[] { aluno14, aluno15, aluno19, aluno20 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet25 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet25, alunoArray24);
        professor13.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet25);
        java.lang.String str28 = professor13.toString();
        com.unifacisa.tcc.domain.Professor professor29 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno31 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str32 = aluno31.getEmail();
        aluno31.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str37 = aluno36.getEmail();
        aluno36.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray40 = new com.unifacisa.tcc.domain.Aluno[] { aluno30, aluno31, aluno35, aluno36 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet41 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet41, alunoArray40);
        professor29.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet41);
        com.unifacisa.tcc.domain.Professor professor44 = professor13.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet41);
        com.unifacisa.tcc.domain.Professor professor46 = professor13.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor47 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno48 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str50 = aluno49.getEmail();
        aluno49.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno53 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno54 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str55 = aluno54.getEmail();
        aluno54.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray58 = new com.unifacisa.tcc.domain.Aluno[] { aluno48, aluno49, aluno53, aluno54 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet59 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet59, alunoArray58);
        professor47.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet59);
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str63 = aluno62.getEmail();
        java.lang.Boolean boolean64 = aluno62.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor65 = professor47.addAluno(aluno62);
        aluno62.setNumeroContato((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Professor professor68 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str69 = professor68.getPrimeiroNome();
        java.lang.Boolean boolean70 = professor68.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa72 = professor68.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Aluno aluno73 = aluno62.professor(professor68);
        com.unifacisa.tcc.domain.Professor professor74 = professor13.removeAluno(aluno62);
        com.unifacisa.tcc.domain.Aluno aluno75 = aluno8.professor(professor13);
        boolean boolean76 = socialUserConnection0.equals((java.lang.Object) professor13);
        java.lang.String str77 = socialUserConnection0.getDisplayName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str4, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(professor12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(alunoArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str28, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(alunoArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(professor44);
        org.junit.Assert.assertNotNull(professor46);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(alunoArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertNotNull(professor65);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(boolean70);
        org.junit.Assert.assertNotNull(pessoa72);
        org.junit.Assert.assertNotNull(aluno73);
        org.junit.Assert.assertNotNull(professor74);
        org.junit.Assert.assertNotNull(aluno75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(str77);
    }

    @Test
    public void test1833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1833");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM1 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str2 = loggerVM1.getName();
        loggerVM1.setLevel("error.validation");
        java.lang.String str5 = loggerVM1.getName();
        java.lang.String str6 = loggerVM1.getLevel();
        loggerVM1.setLevel("SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.lang.String str9 = loggerVM1.toString();
        // The following exception was thrown during execution in test generation
        try {
            logsResource0.changeLevel(loggerVM1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: name argument cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "error.validation" + "'", str6, "error.validation");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LoggerVM{name='null', level='SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}'}" + "'", str9, "LoggerVM{name='null', level='SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}'}");
    }

    @Test
    public void test1834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1834");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setImageURL("error.concurrencyFailure");
        java.lang.String str4 = socialUserConnection0.toString();
        socialUserConnection0.setAccessToken("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.lang.String str7 = socialUserConnection0.getSecret();
        java.lang.String str8 = socialUserConnection0.getProviderId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str4, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1835");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long1 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setId((java.lang.Long) (-1L));
        java.lang.String str4 = persistentAuditEvent0.getAuditEventType();
        persistentAuditEvent0.setId((java.lang.Long) 0L);
        java.lang.String str7 = persistentAuditEvent0.getPrincipal();
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1836");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        professor0.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str19 = aluno18.getEmail();
        aluno18.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor22 = aluno18.getProfessor();
        com.unifacisa.tcc.domain.Professor professor23 = professor0.addAluno(aluno18);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa25 = professor0.primeiroNome("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        com.unifacisa.tcc.domain.Professor professor26 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str29 = aluno28.getEmail();
        aluno28.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str34 = aluno33.getEmail();
        aluno33.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray37 = new com.unifacisa.tcc.domain.Aluno[] { aluno27, aluno28, aluno32, aluno33 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet38 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet38, alunoArray37);
        professor26.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet38);
        java.lang.String str41 = professor26.toString();
        com.unifacisa.tcc.domain.Professor professor43 = professor26.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa45 = professor43.primeiroNome("");
        com.unifacisa.tcc.domain.Professor professor47 = professor43.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet48 = professor47.getAlunos();
        com.unifacisa.tcc.domain.Professor professor49 = professor0.alunos(alunoSet48);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet50 = professor0.getAlunos();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(professor22);
        org.junit.Assert.assertNotNull(professor23);
        org.junit.Assert.assertNotNull(pessoa25);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(alunoArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str41, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor43);
        org.junit.Assert.assertNotNull(pessoa45);
        org.junit.Assert.assertNotNull(professor47);
        org.junit.Assert.assertNotNull(alunoSet48);
        org.junit.Assert.assertNotNull(professor49);
        org.junit.Assert.assertNotNull(alunoSet50);
    }

    @Test
    public void test1837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1837");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("error.concurrencyFailure");
        java.lang.String str3 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str4 = keyAndPasswordVM0.getNewPassword();
        keyAndPasswordVM0.setKey("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        keyAndPasswordVM0.setNewPassword("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}");
        java.lang.String str9 = keyAndPasswordVM0.getKey();
        keyAndPasswordVM0.setNewPassword("User{login='null', firstName='null', lastName='null', email='null', imageUrl='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}" + "'", str9, "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
    }

    @Test
    public void test1838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1838");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.String str1 = persistentAuditEvent0.getPrincipal();
        java.lang.String str2 = persistentAuditEvent0.getAuditEventType();
        java.lang.String str3 = persistentAuditEvent0.getPrincipal();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test1839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1839");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        user3.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant6 = user3.getLastModifiedDate();
        user0.setCreatedDate(instant6);
        java.lang.String str8 = user0.toString();
        java.time.Instant instant9 = user0.getCreatedDate();
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM10 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM10.setKey("error.concurrencyFailure");
        java.lang.String str13 = keyAndPasswordVM10.getNewPassword();
        keyAndPasswordVM10.setNewPassword("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        keyAndPasswordVM10.setNewPassword("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        boolean boolean18 = user0.equals((java.lang.Object) keyAndPasswordVM10);
        user0.setActivated(true);
        java.time.Instant instant21 = user0.getCreatedDate();
        java.lang.String str22 = user0.getLogin();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str8, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(instant21);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test1840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1840");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setImageURL("error.concurrencyFailure");
        boolean boolean5 = socialUserConnection0.equals((java.lang.Object) "");
        java.lang.Long long6 = socialUserConnection0.getId();
        socialUserConnection0.setRefreshToken("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str9 = socialUserConnection0.getUserId();
        java.lang.String str10 = socialUserConnection0.toString();
        com.unifacisa.tcc.domain.Professor professor11 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str14 = aluno13.getEmail();
        aluno13.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str19 = aluno18.getEmail();
        aluno18.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray22 = new com.unifacisa.tcc.domain.Aluno[] { aluno12, aluno13, aluno17, aluno18 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet23 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet23, alunoArray22);
        professor11.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet23);
        java.lang.String str26 = professor11.toString();
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet27 = professor11.getAlunos();
        java.time.Instant instant37 = null;
        java.time.Instant instant39 = null;
        java.time.Instant instant50 = null;
        java.time.Instant instant52 = null;
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet58 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet58, strArray57);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM60 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant50, "error.validation", instant52, (java.util.Set<java.lang.String>) strSet58);
        com.unifacisa.tcc.service.dto.UserDTO userDTO61 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant37, "", instant39, (java.util.Set<java.lang.String>) strSet58);
        java.lang.String str62 = userDTO61.getLastName();
        java.lang.String str63 = userDTO61.getEmail();
        userDTO61.setId((java.lang.Long) 0L);
        java.lang.String str66 = userDTO61.getImageUrl();
        userDTO61.setLogin("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        boolean boolean69 = professor11.equals((java.lang.Object) userDTO61);
        boolean boolean70 = socialUserConnection0.equals((java.lang.Object) userDTO61);
        socialUserConnection0.setRank((java.lang.Long) 0L);
        socialUserConnection0.setProfileURL("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}" + "'", str10, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(alunoArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str26, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(alunoSet27);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "error.concurrencyFailure" + "'", str62, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "error.concurrencyFailure" + "'", str63, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test1841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1841");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getRefreshToken();
        socialUserConnection0.setProfileURL("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str6 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setRank((java.lang.Long) 100L);
        socialUserConnection0.setProviderId("User{login='null', firstName='null', lastName='null', email='Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProfileURL("Professor{id=null, primeiroNome='Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str6, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test1842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1842");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str12 = aluno11.getEmail();
        aluno11.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray15 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno6, aluno10, aluno11 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet16 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet16, alunoArray15);
        professor4.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        java.lang.String str19 = professor4.toString();
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray31 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno22, aluno26, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet32 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet32, alunoArray31);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Professor professor35 = professor4.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Aluno aluno36 = aluno0.professor(professor35);
        com.unifacisa.tcc.domain.Aluno aluno38 = aluno0.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.User user39 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO40 = new com.unifacisa.tcc.service.dto.UserDTO(user39);
        java.lang.String str41 = user39.getImageUrl();
        java.lang.String str42 = user39.getEmail();
        boolean boolean43 = user39.getActivated();
        java.time.Instant instant44 = user39.getResetDate();
        boolean boolean45 = aluno0.equals((java.lang.Object) user39);
        java.time.Instant instant46 = user39.getLastModifiedDate();
        user39.setLastName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        user39.setResetKey("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}");
        java.time.Instant instant51 = user39.getLastModifiedDate();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(alunoArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str19, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(alunoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNotNull(aluno36);
        org.junit.Assert.assertNotNull(aluno38);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(instant44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(instant46);
        org.junit.Assert.assertNotNull(instant51);
    }

    @Test
    public void test1843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1843");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.toString();
        java.time.Instant instant12 = null;
        java.time.Instant instant14 = null;
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM22 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant12, "error.validation", instant14, (java.util.Set<java.lang.String>) strSet20);
        java.lang.String str23 = managedUserVM22.toString();
        boolean boolean24 = authority0.equals((java.lang.Object) managedUserVM22);
        java.lang.String str25 = authority0.getName();
        com.unifacisa.tcc.domain.Professor professor26 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str29 = aluno28.getEmail();
        aluno28.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str34 = aluno33.getEmail();
        aluno33.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray37 = new com.unifacisa.tcc.domain.Aluno[] { aluno27, aluno28, aluno32, aluno33 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet38 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet38, alunoArray37);
        professor26.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet38);
        java.lang.String str41 = professor26.toString();
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet42 = professor26.getAlunos();
        java.time.Instant instant52 = null;
        java.time.Instant instant54 = null;
        java.time.Instant instant65 = null;
        java.time.Instant instant67 = null;
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet73 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet73, strArray72);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM75 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant65, "error.validation", instant67, (java.util.Set<java.lang.String>) strSet73);
        com.unifacisa.tcc.service.dto.UserDTO userDTO76 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant52, "", instant54, (java.util.Set<java.lang.String>) strSet73);
        java.lang.String str77 = userDTO76.getLastName();
        java.lang.String str78 = userDTO76.getEmail();
        userDTO76.setId((java.lang.Long) 0L);
        java.lang.String str81 = userDTO76.getImageUrl();
        userDTO76.setLogin("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        boolean boolean84 = professor26.equals((java.lang.Object) userDTO76);
        boolean boolean85 = authority0.equals((java.lang.Object) professor26);
        professor26.setDiponibilidade((java.lang.Boolean) true);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Authority{name='null'}" + "'", str1, "Authority{name='null'}");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str23, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(alunoArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str41, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(alunoSet42);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "error.concurrencyFailure" + "'", str77, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "error.concurrencyFailure" + "'", str78, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test1844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1844");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        java.lang.String str1 = keyAndPasswordVM0.getKey();
        java.lang.String str2 = keyAndPasswordVM0.getKey();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test1845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1845");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet6 = user0.getAuthorities();
        java.lang.String str7 = user0.getLastName();
        java.lang.String str8 = user0.getLogin();
        java.lang.String str9 = user0.getEmail();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(authoritySet6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1846");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getSecret();
        java.lang.String str4 = socialUserConnection0.toString();
        java.lang.Long long5 = socialUserConnection0.getExpireTime();
        java.lang.String str6 = socialUserConnection0.getImageURL();
        java.lang.Long long7 = socialUserConnection0.getId();
        socialUserConnection0.setProviderId("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        socialUserConnection0.setDisplayName("ManagedUserVM{} UserDTO{login='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str4, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(long7);
    }

    @Test
    public void test1847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1847");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno3 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str4 = aluno3.getEmail();
        aluno3.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str9 = aluno8.getEmail();
        aluno8.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray12 = new com.unifacisa.tcc.domain.Aluno[] { aluno2, aluno3, aluno7, aluno8 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet13 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet13, alunoArray12);
        professor1.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet13);
        aluno0.setProfessor(professor1);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa18 = aluno0.primeiroNome("error.concurrencyFailure");
        com.unifacisa.tcc.domain.Professor professor19 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray31 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno22, aluno26, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet32 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet32, alunoArray31);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        java.lang.String str35 = professor20.toString();
        com.unifacisa.tcc.domain.Professor professor37 = professor20.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor38 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str41 = aluno40.getEmail();
        aluno40.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str46 = aluno45.getEmail();
        aluno45.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray49 = new com.unifacisa.tcc.domain.Aluno[] { aluno39, aluno40, aluno44, aluno45 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet50 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet50, alunoArray49);
        professor38.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet50);
        com.unifacisa.tcc.domain.Professor professor53 = professor37.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet50);
        aluno0.setProfessor(professor53);
        aluno0.setSegundoNome("LoggerVM{name='null', level='Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
        com.unifacisa.tcc.domain.Professor professor57 = aluno0.getProfessor();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(alunoArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(pessoa18);
        org.junit.Assert.assertNotNull(professor19);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(alunoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str35, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(alunoArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(professor53);
        org.junit.Assert.assertNotNull(professor57);
    }

    @Test
    public void test1848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1848");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str3 = user0.getLastModifiedBy();
        java.lang.String str4 = user0.getLogin();
        user0.setFirstName("User{login='null', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str7 = user0.getFirstName();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "User{login='null', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str7, "User{login='null', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test1849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1849");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.util.List<com.unifacisa.tcc.domain.User> userList10 = userMapper0.userDTOsToUsers(userDTOList9);
        com.unifacisa.tcc.domain.User user12 = userMapper0.userFromId((java.lang.Long) 1L);
        user12.setActivationKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        java.time.Instant instant15 = user12.getResetDate();
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(user12);
        org.junit.Assert.assertNull(instant15);
    }

    @Test
    public void test1850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1850");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str1 = loggerVM0.getName();
        loggerVM0.setLevel("error.validation");
        loggerVM0.setLevel("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        loggerVM0.setName("LoggerVM{name='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', level='error.validation'}");
        loggerVM0.setLevel("UserDTO{login='LoggerVM{name='null', level='null'}', firstName='error.concurrencyFailure', lastName='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', imageUrl='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', activated=true, langKey='', createdBy=Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}, createdDate=2021-03-24T23:46:14.824Z, lastModifiedBy='', lastModifiedDate=2021-03-24T23:46:14.824Z, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test1851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1851");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno3 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str4 = aluno3.getEmail();
        aluno3.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str9 = aluno8.getEmail();
        aluno8.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray12 = new com.unifacisa.tcc.domain.Aluno[] { aluno2, aluno3, aluno7, aluno8 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet13 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet13, alunoArray12);
        professor1.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet13);
        java.lang.String str16 = professor1.toString();
        com.unifacisa.tcc.domain.Professor professor18 = professor1.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        com.unifacisa.tcc.domain.Professor professor34 = professor18.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        aluno0.setProfessor(professor34);
        com.unifacisa.tcc.domain.Professor professor37 = professor34.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor39 = professor37.diponibilidade((java.lang.Boolean) false);
        java.lang.String str40 = professor39.getPrimeiroNome();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(alunoArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str16, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNull(str40);
    }

    @Test
    public void test1852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1852");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        java.time.Instant instant11 = null;
        java.time.Instant instant13 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM21 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant11, "error.validation", instant13, (java.util.Set<java.lang.String>) strSet19);
        java.lang.String str22 = managedUserVM21.getFirstName();
        java.lang.String str23 = managedUserVM21.getPassword();
        java.util.Set<java.lang.String> strSet24 = managedUserVM21.getAuthorities();
        java.util.Set<java.lang.String> strSet25 = managedUserVM21.getAuthorities();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet26 = userMapper0.authoritiesFromStrings(strSet25);
        com.unifacisa.tcc.domain.User user28 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.User user29 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO30 = new com.unifacisa.tcc.service.dto.UserDTO(user29);
        java.lang.String str31 = user29.toString();
        java.time.Instant instant32 = user29.getCreatedDate();
        java.time.Instant instant33 = user29.getCreatedDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO34 = userMapper0.userToUserDTO(user29);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper35 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user37 = userMapper35.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper38 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray39 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList40 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList40, userArray39);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList42 = userMapper38.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList40);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList43 = userMapper35.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList40);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper44 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray45 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList46 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList46, userArray45);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList48 = userMapper44.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList46);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper49 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray50 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList51 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList51, userArray50);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList53 = userMapper49.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList51);
        java.util.List<com.unifacisa.tcc.domain.User> userList54 = userMapper44.userDTOsToUsers(userDTOList53);
        com.unifacisa.tcc.domain.User user56 = userMapper44.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper57 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray58 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList59 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList59, userArray58);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList61 = userMapper57.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList59);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper62 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray63 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList64 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList64, userArray63);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList66 = userMapper62.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList64);
        java.util.List<com.unifacisa.tcc.domain.User> userList67 = userMapper57.userDTOsToUsers(userDTOList66);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper68 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray69 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList70 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList70, userArray69);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList72 = userMapper68.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList70);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper73 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray74 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList75 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList75, userArray74);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList77 = userMapper73.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList75);
        java.util.List<com.unifacisa.tcc.domain.User> userList78 = userMapper68.userDTOsToUsers(userDTOList77);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper79 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray80 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList81 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList81, userArray80);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList83 = userMapper79.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList81);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper84 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray85 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList86 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList86, userArray85);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList88 = userMapper84.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList86);
        java.util.List<com.unifacisa.tcc.domain.User> userList89 = userMapper79.userDTOsToUsers(userDTOList88);
        java.util.List<com.unifacisa.tcc.domain.User> userList90 = userMapper68.userDTOsToUsers(userDTOList88);
        java.util.List<com.unifacisa.tcc.domain.User> userList91 = userMapper57.userDTOsToUsers(userDTOList88);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList92 = userMapper44.usersToUserDTOs(userList91);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList93 = userMapper35.usersToUserDTOs(userList91);
        java.util.List<com.unifacisa.tcc.domain.User> userList94 = userMapper0.userDTOsToUsers(userDTOList93);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "error.concurrencyFailure" + "'", str23, "error.concurrencyFailure");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(authoritySet26);
        org.junit.Assert.assertNotNull(user28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str31, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant32);
        org.junit.Assert.assertNotNull(instant33);
        org.junit.Assert.assertNotNull(userDTO34);
        org.junit.Assert.assertNotNull(user37);
        org.junit.Assert.assertNotNull(userArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(userDTOList42);
        org.junit.Assert.assertNotNull(userDTOList43);
        org.junit.Assert.assertNotNull(userArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(userDTOList48);
        org.junit.Assert.assertNotNull(userArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(userDTOList53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(user56);
        org.junit.Assert.assertNotNull(userArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(userDTOList61);
        org.junit.Assert.assertNotNull(userArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(userDTOList66);
        org.junit.Assert.assertNotNull(userList67);
        org.junit.Assert.assertNotNull(userArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(userDTOList72);
        org.junit.Assert.assertNotNull(userArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(userDTOList77);
        org.junit.Assert.assertNotNull(userList78);
        org.junit.Assert.assertNotNull(userArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(userDTOList83);
        org.junit.Assert.assertNotNull(userArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(userDTOList88);
        org.junit.Assert.assertNotNull(userList89);
        org.junit.Assert.assertNotNull(userList90);
        org.junit.Assert.assertNotNull(userList91);
        org.junit.Assert.assertNotNull(userDTOList92);
        org.junit.Assert.assertNotNull(userDTOList93);
        org.junit.Assert.assertNotNull(userList94);
    }

    @Test
    public void test1853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1853");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor4 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno6 = aluno0.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno8 = aluno6.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor9 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str12 = aluno11.getEmail();
        aluno11.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno16 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str17 = aluno16.getEmail();
        aluno16.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray20 = new com.unifacisa.tcc.domain.Aluno[] { aluno10, aluno11, aluno15, aluno16 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet21 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet21, alunoArray20);
        professor9.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet21);
        java.lang.String str24 = professor9.toString();
        com.unifacisa.tcc.domain.Professor professor26 = professor9.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa28 = professor26.primeiroNome("");
        professor26.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor26.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor34 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str37 = aluno36.getEmail();
        aluno36.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        aluno41.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray45 = new com.unifacisa.tcc.domain.Aluno[] { aluno35, aluno36, aluno40, aluno41 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet46 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet46, alunoArray45);
        professor34.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet46);
        aluno33.setProfessor(professor34);
        java.lang.String str50 = aluno33.toString();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa52 = aluno33.numeroContato((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Professor professor53 = professor26.removeAluno(aluno33);
        com.unifacisa.tcc.domain.Aluno aluno54 = aluno8.professor(professor26);
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str56 = aluno55.getEmail();
        java.lang.Boolean boolean57 = aluno55.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor58 = aluno55.getProfessor();
        com.unifacisa.tcc.domain.Professor professor59 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno60 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno61 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str62 = aluno61.getEmail();
        aluno61.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno65 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno66 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str67 = aluno66.getEmail();
        aluno66.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray70 = new com.unifacisa.tcc.domain.Aluno[] { aluno60, aluno61, aluno65, aluno66 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet71 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet71, alunoArray70);
        professor59.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet71);
        java.lang.String str74 = professor59.toString();
        com.unifacisa.tcc.domain.Professor professor75 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno76 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno77 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str78 = aluno77.getEmail();
        aluno77.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno81 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno82 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str83 = aluno82.getEmail();
        aluno82.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray86 = new com.unifacisa.tcc.domain.Aluno[] { aluno76, aluno77, aluno81, aluno82 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet87 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet87, alunoArray86);
        professor75.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet87);
        com.unifacisa.tcc.domain.Professor professor90 = professor59.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet87);
        com.unifacisa.tcc.domain.Aluno aluno91 = aluno55.professor(professor90);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa93 = aluno91.numeroContato((java.lang.Long) (-1L));
        java.lang.Long long94 = aluno91.getMatricula();
        com.unifacisa.tcc.domain.Professor professor95 = professor26.addAluno(aluno91);
        professor26.setDiponibilidade((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNull(professor4);
        org.junit.Assert.assertNotNull(aluno6);
        org.junit.Assert.assertNotNull(aluno8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(alunoArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str24, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor26);
        org.junit.Assert.assertNotNull(pessoa28);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(alunoArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str50, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(pessoa52);
        org.junit.Assert.assertNotNull(professor53);
        org.junit.Assert.assertNotNull(aluno54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNull(professor58);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(alunoArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str74, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(alunoArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(professor90);
        org.junit.Assert.assertNotNull(aluno91);
        org.junit.Assert.assertNotNull(pessoa93);
        org.junit.Assert.assertNull(long94);
        org.junit.Assert.assertNotNull(professor95);
    }

    @Test
    public void test1854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1854");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setUserId("error.validation");
        java.lang.String str3 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setId((java.lang.Long) 1L);
        socialUserConnection0.setDisplayName("Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str8 = socialUserConnection0.getAccessToken();
        socialUserConnection0.setProviderId("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=100}");
        java.lang.String str11 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setProfileURL("LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=true}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1855");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        java.lang.String str4 = user0.getLogin();
        com.unifacisa.tcc.domain.User user5 = new com.unifacisa.tcc.domain.User();
        user5.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant8 = user5.getLastModifiedDate();
        user0.setLastModifiedDate(instant8);
        java.lang.String str10 = user0.getActivationKey();
        user0.setPassword("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        user0.setResetKey("LoginVM{username='Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}', rememberMe=false}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(instant8);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1856");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        aluno0.setId((java.lang.Long) (-1L));
        java.lang.String str6 = aluno0.toString();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = aluno0.numeroContato((java.lang.Long) 10L);
        aluno0.setHabilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno12 = aluno0.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor13 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str14 = professor13.getPrimeiroNome();
        java.lang.String str15 = professor13.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno16 = aluno0.professor(professor13);
        com.unifacisa.tcc.domain.Professor professor17 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str18 = professor17.getPrimeiroNome();
        java.lang.Boolean boolean19 = professor17.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa21 = professor17.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet22 = professor17.getAlunos();
        com.unifacisa.tcc.domain.Professor professor23 = professor13.alunos(alunoSet22);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str6, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(pessoa8);
        org.junit.Assert.assertNotNull(aluno12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(aluno16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(pessoa21);
        org.junit.Assert.assertNotNull(alunoSet22);
        org.junit.Assert.assertNotNull(professor23);
    }

    @Test
    public void test1857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1857");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant3 = user0.getLastModifiedDate();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet4 = null;
        user0.setAuthorities(authoritySet4);
        user0.setActivationKey("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.lang.String str8 = user0.getActivationKey();
        java.time.Instant instant9 = user0.getResetDate();
        user0.setLangKey("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', refreshToken='error.validation', expireTime=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper12 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray13 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList14 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList14, userArray13);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList16 = userMapper12.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList14);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper17 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray18 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList19 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList19, userArray18);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList21 = userMapper17.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList19);
        java.util.List<com.unifacisa.tcc.domain.User> userList22 = userMapper12.userDTOsToUsers(userDTOList21);
        com.unifacisa.tcc.domain.User user24 = userMapper12.userFromId((java.lang.Long) 1L);
        user24.setActivationKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        java.lang.String str27 = user24.getFirstName();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent28 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant29 = persistentAuditEvent28.getAuditEventDate();
        com.unifacisa.tcc.domain.User user30 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO31 = new com.unifacisa.tcc.service.dto.UserDTO(user30);
        java.lang.String str32 = user30.toString();
        java.time.Instant instant33 = user30.getCreatedDate();
        persistentAuditEvent28.setAuditEventDate(instant33);
        user24.setLastModifiedDate(instant33);
        user0.setCreatedDate(instant33);
        com.unifacisa.tcc.domain.User user37 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO38 = new com.unifacisa.tcc.service.dto.UserDTO(user37);
        java.lang.String str39 = user37.getImageUrl();
        boolean boolean41 = user37.equals((java.lang.Object) (byte) -1);
        java.lang.String str42 = user37.getLastName();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet43 = user37.getAuthorities();
        java.lang.String str44 = user37.getLastName();
        com.unifacisa.tcc.service.dto.UserDTO userDTO45 = new com.unifacisa.tcc.service.dto.UserDTO(user37);
        com.unifacisa.tcc.domain.User user46 = new com.unifacisa.tcc.domain.User();
        java.lang.String str47 = user46.getCreatedBy();
        java.lang.String str48 = user46.getLastModifiedBy();
        user46.setActivationKey("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str51 = user46.getEmail();
        com.unifacisa.tcc.domain.User user52 = new com.unifacisa.tcc.domain.User();
        java.lang.String str53 = user52.getCreatedBy();
        java.lang.String str54 = user52.getLastModifiedBy();
        user52.setCreatedBy("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str57 = user52.toString();
        com.unifacisa.tcc.domain.User user58 = new com.unifacisa.tcc.domain.User();
        java.lang.String str59 = user58.getCreatedBy();
        java.lang.String str60 = user58.getLastModifiedBy();
        user58.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.User user63 = new com.unifacisa.tcc.domain.User();
        java.lang.String str64 = user63.getCreatedBy();
        user63.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO67 = new com.unifacisa.tcc.service.dto.UserDTO(user63);
        java.time.Instant instant68 = userDTO67.getLastModifiedDate();
        user58.setCreatedDate(instant68);
        user52.setResetDate(instant68);
        user46.setLastModifiedDate(instant68);
        userDTO45.setLastModifiedDate(instant68);
        java.time.Instant instant73 = userDTO45.getCreatedDate();
        user0.setLastModifiedDate(instant73);
        org.junit.Assert.assertNotNull(instant3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}" + "'", str8, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        org.junit.Assert.assertNull(instant9);
        org.junit.Assert.assertNotNull(userArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(userDTOList16);
        org.junit.Assert.assertNotNull(userArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(userDTOList21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(user24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(instant29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str32, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant33);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(authoritySet43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str57, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(instant68);
        org.junit.Assert.assertNotNull(instant73);
    }

    @Test
    public void test1858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1858");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        java.lang.Boolean boolean17 = aluno15.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor18 = professor0.addAluno(aluno15);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa20 = professor18.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor21 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str24 = aluno23.getEmail();
        aluno23.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str29 = aluno28.getEmail();
        aluno28.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray32 = new com.unifacisa.tcc.domain.Aluno[] { aluno22, aluno23, aluno27, aluno28 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet33 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet33, alunoArray32);
        professor21.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet33);
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str37 = aluno36.getEmail();
        java.lang.Boolean boolean38 = aluno36.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor39 = professor21.addAluno(aluno36);
        com.unifacisa.tcc.domain.Professor professor40 = aluno36.getProfessor();
        com.unifacisa.tcc.domain.Professor professor41 = aluno36.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str43 = aluno42.getEmail();
        aluno42.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor46 = professor41.removeAluno(aluno42);
        com.unifacisa.tcc.domain.Professor professor47 = professor18.removeAluno(aluno42);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa49 = professor18.email("ManagedUserVM{} UserDTO{login='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.Long long50 = pessoa49.getId();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNotNull(pessoa20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(alunoArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(professor40);
        org.junit.Assert.assertNotNull(professor41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(professor46);
        org.junit.Assert.assertNotNull(professor47);
        org.junit.Assert.assertNotNull(pessoa49);
        org.junit.Assert.assertNull(long50);
    }

    @Test
    public void test1859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1859");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM20 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant10, "error.validation", instant12, (java.util.Set<java.lang.String>) strSet18);
        java.lang.String str21 = managedUserVM20.getFirstName();
        java.lang.String str22 = managedUserVM20.getPassword();
        java.util.Set<java.lang.String> strSet23 = managedUserVM20.getAuthorities();
        java.lang.String str24 = managedUserVM20.getFirstName();
        java.lang.String str25 = managedUserVM20.toString();
        java.lang.String str26 = managedUserVM20.toString();
        java.lang.String str27 = managedUserVM20.getLogin();
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "error.concurrencyFailure" + "'", str22, "error.concurrencyFailure");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str25, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str26, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
    }

    @Test
    public void test1860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1860");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent3 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = persistentAuditEvent3.getData();
        persistentAuditEvent0.setData(strMap4);
        persistentAuditEvent0.setAuditEventType("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str8 = persistentAuditEvent0.getAuditEventType();
        java.lang.Long long9 = persistentAuditEvent0.getId();
        java.lang.String str10 = persistentAuditEvent0.getAuditEventType();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent11 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant12 = persistentAuditEvent11.getAuditEventDate();
        java.lang.Long long13 = persistentAuditEvent11.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent14 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = persistentAuditEvent14.getData();
        persistentAuditEvent11.setData(strMap15);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = persistentAuditEvent11.getData();
        persistentAuditEvent0.setData(strMap17);
        java.lang.Long long19 = persistentAuditEvent0.getId();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str8, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str10, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(instant12);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(long19);
    }

    @Test
    public void test1861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1861");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getPassword();
        java.lang.String str2 = managedUserVM0.getPassword();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper3 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user5 = userMapper3.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user6 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO7 = new com.unifacisa.tcc.service.dto.UserDTO(user6);
        java.lang.String str8 = user6.getImageUrl();
        boolean boolean10 = user6.equals((java.lang.Object) (byte) -1);
        java.lang.String str11 = user6.getLastName();
        java.lang.String str12 = user6.getFirstName();
        java.time.Instant instant13 = user6.getResetDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO14 = userMapper3.userToUserDTO(user6);
        boolean boolean15 = userDTO14.isActivated();
        userDTO14.setLogin("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant18 = userDTO14.getCreatedDate();
        managedUserVM0.setLastModifiedDate(instant18);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(user5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(instant13);
        org.junit.Assert.assertNotNull(userDTO14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(instant18);
    }

    @Test
    public void test1862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1862");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM20 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant10, "error.validation", instant12, (java.util.Set<java.lang.String>) strSet18);
        java.lang.String str21 = managedUserVM20.getFirstName();
        java.time.Instant instant22 = null;
        managedUserVM20.setLastModifiedDate(instant22);
        boolean boolean24 = managedUserVM20.isActivated();
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1863");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno3 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str4 = aluno3.getEmail();
        aluno3.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str9 = aluno8.getEmail();
        aluno8.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray12 = new com.unifacisa.tcc.domain.Aluno[] { aluno2, aluno3, aluno7, aluno8 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet13 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet13, alunoArray12);
        professor1.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet13);
        aluno0.setProfessor(professor1);
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM17 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM17.setKey("error.concurrencyFailure");
        java.lang.String str20 = keyAndPasswordVM17.getNewPassword();
        boolean boolean21 = aluno0.equals((java.lang.Object) str20);
        aluno0.setHabilitadoTcc((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(alunoArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1864");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        java.lang.String str6 = user0.getFirstName();
        java.time.Instant instant7 = user0.getResetDate();
        java.lang.String str8 = user0.getLogin();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=null}");
        user0.setId((java.lang.Long) 100L);
        java.time.Instant instant13 = user0.getCreatedDate();
        java.lang.String str14 = user0.getFirstName();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent15 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = persistentAuditEvent15.getData();
        persistentAuditEvent15.setPrincipal("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long19 = persistentAuditEvent15.getId();
        java.lang.Long long20 = persistentAuditEvent15.getId();
        java.time.Instant instant21 = persistentAuditEvent15.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        persistentAuditEvent15.setData(strMap22);
        com.unifacisa.tcc.domain.User user24 = new com.unifacisa.tcc.domain.User();
        java.lang.String str25 = user24.getCreatedBy();
        java.lang.String str26 = user24.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user27 = new com.unifacisa.tcc.domain.User();
        user27.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant30 = user27.getLastModifiedDate();
        user24.setCreatedDate(instant30);
        java.lang.String str32 = user24.toString();
        java.time.Instant instant33 = user24.getCreatedDate();
        persistentAuditEvent15.setAuditEventDate(instant33);
        user0.setCreatedDate(instant33);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(instant7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(instant13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(long19);
        org.junit.Assert.assertNull(long20);
        org.junit.Assert.assertNull(instant21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(instant30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str32, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant33);
    }

    @Test
    public void test1865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1865");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        professor0.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str19 = aluno18.getEmail();
        aluno18.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor22 = aluno18.getProfessor();
        com.unifacisa.tcc.domain.Professor professor23 = professor0.addAluno(aluno18);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa25 = professor0.primeiroNome("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        com.unifacisa.tcc.domain.Professor professor26 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str29 = aluno28.getEmail();
        aluno28.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str34 = aluno33.getEmail();
        aluno33.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray37 = new com.unifacisa.tcc.domain.Aluno[] { aluno27, aluno28, aluno32, aluno33 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet38 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet38, alunoArray37);
        professor26.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet38);
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        java.lang.Boolean boolean43 = aluno41.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor44 = professor26.addAluno(aluno41);
        aluno41.setNumeroContato((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Professor professor47 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str48 = professor47.getPrimeiroNome();
        java.lang.Boolean boolean49 = professor47.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa51 = professor47.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Aluno aluno52 = aluno41.professor(professor47);
        aluno52.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor55 = professor0.addAluno(aluno52);
        professor0.setDiponibilidade((java.lang.Boolean) false);
        java.lang.String str58 = professor0.getPrimeiroNome();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(professor22);
        org.junit.Assert.assertNotNull(professor23);
        org.junit.Assert.assertNotNull(pessoa25);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(alunoArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(professor44);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNotNull(pessoa51);
        org.junit.Assert.assertNotNull(aluno52);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str58, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test1866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1866");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=100}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=2021-03-24T23:46:06.586Z, authorities=null}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='true', langKey='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', activationKey='null'}");
    }

    @Test
    public void test1867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1867");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        user3.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant6 = user3.getLastModifiedDate();
        user0.setCreatedDate(instant6);
        java.lang.String str8 = user0.toString();
        java.time.Instant instant9 = user0.getCreatedDate();
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM10 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM10.setKey("error.concurrencyFailure");
        java.lang.String str13 = keyAndPasswordVM10.getNewPassword();
        keyAndPasswordVM10.setNewPassword("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        keyAndPasswordVM10.setNewPassword("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        boolean boolean18 = user0.equals((java.lang.Object) keyAndPasswordVM10);
        java.lang.String str19 = keyAndPasswordVM10.getKey();
        keyAndPasswordVM10.setKey("LoginVM{username='error.concurrencyFailure', rememberMe=false}");
        java.lang.String str22 = keyAndPasswordVM10.getNewPassword();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str8, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "error.concurrencyFailure" + "'", str19, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}" + "'", str22, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
    }

    @Test
    public void test1868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1868");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.util.List<com.unifacisa.tcc.domain.User> userList10 = userMapper0.userDTOsToUsers(userDTOList9);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper11 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray12 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList13 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList13, userArray12);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList15 = userMapper11.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList13);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper16 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray17 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList18 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList18, userArray17);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList20 = userMapper16.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList18);
        java.util.List<com.unifacisa.tcc.domain.User> userList21 = userMapper11.userDTOsToUsers(userDTOList20);
        java.util.List<com.unifacisa.tcc.domain.User> userList22 = userMapper0.userDTOsToUsers(userDTOList20);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper23 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray24 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList25 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList25, userArray24);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList27 = userMapper23.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList25);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper28 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray29 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList30 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList30, userArray29);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList32 = userMapper28.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList30);
        java.util.List<com.unifacisa.tcc.domain.User> userList33 = userMapper23.userDTOsToUsers(userDTOList32);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper34 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray35 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList36 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList36, userArray35);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList38 = userMapper34.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList36);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper39 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray40 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList41 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList41, userArray40);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList43 = userMapper39.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList41);
        java.util.List<com.unifacisa.tcc.domain.User> userList44 = userMapper34.userDTOsToUsers(userDTOList43);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper45 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray46 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList47 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList47, userArray46);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList49 = userMapper45.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList47);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper50 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray51 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList52 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList52, userArray51);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList54 = userMapper50.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList52);
        java.util.List<com.unifacisa.tcc.domain.User> userList55 = userMapper45.userDTOsToUsers(userDTOList54);
        java.util.List<com.unifacisa.tcc.domain.User> userList56 = userMapper34.userDTOsToUsers(userDTOList54);
        java.util.List<com.unifacisa.tcc.domain.User> userList57 = userMapper23.userDTOsToUsers(userDTOList54);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList58 = userMapper0.usersToUserDTOs(userList57);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper59 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray60 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList61 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList61, userArray60);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList63 = userMapper59.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList61);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper64 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray65 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList66 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList66, userArray65);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList68 = userMapper64.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList66);
        java.util.List<com.unifacisa.tcc.domain.User> userList69 = userMapper59.userDTOsToUsers(userDTOList68);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper70 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray71 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList72 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList72, userArray71);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList74 = userMapper70.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList72);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper75 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray76 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList77 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList77, userArray76);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList79 = userMapper75.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList77);
        java.util.List<com.unifacisa.tcc.domain.User> userList80 = userMapper70.userDTOsToUsers(userDTOList79);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper81 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray82 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList83 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList83, userArray82);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList85 = userMapper81.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList83);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper86 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray87 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList88 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList88, userArray87);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList90 = userMapper86.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList88);
        java.util.List<com.unifacisa.tcc.domain.User> userList91 = userMapper81.userDTOsToUsers(userDTOList90);
        java.util.List<com.unifacisa.tcc.domain.User> userList92 = userMapper70.userDTOsToUsers(userDTOList90);
        java.util.List<com.unifacisa.tcc.domain.User> userList93 = userMapper59.userDTOsToUsers(userDTOList90);
        java.util.List<com.unifacisa.tcc.domain.User> userList94 = userMapper0.userDTOsToUsers(userDTOList90);
        com.unifacisa.tcc.domain.User user96 = userMapper0.userFromId((java.lang.Long) 0L);
        java.lang.String str97 = user96.getLangKey();
        java.lang.String str98 = user96.getFirstName();
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(userDTOList15);
        org.junit.Assert.assertNotNull(userArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(userDTOList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(userDTOList27);
        org.junit.Assert.assertNotNull(userArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(userDTOList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(userDTOList38);
        org.junit.Assert.assertNotNull(userArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(userDTOList43);
        org.junit.Assert.assertNotNull(userList44);
        org.junit.Assert.assertNotNull(userArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(userDTOList49);
        org.junit.Assert.assertNotNull(userArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(userDTOList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userList57);
        org.junit.Assert.assertNotNull(userDTOList58);
        org.junit.Assert.assertNotNull(userArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(userDTOList63);
        org.junit.Assert.assertNotNull(userArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(userDTOList68);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(userArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(userDTOList74);
        org.junit.Assert.assertNotNull(userArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(userDTOList79);
        org.junit.Assert.assertNotNull(userList80);
        org.junit.Assert.assertNotNull(userArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(userDTOList85);
        org.junit.Assert.assertNotNull(userArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(userDTOList90);
        org.junit.Assert.assertNotNull(userList91);
        org.junit.Assert.assertNotNull(userList92);
        org.junit.Assert.assertNotNull(userList93);
        org.junit.Assert.assertNotNull(userList94);
        org.junit.Assert.assertNotNull(user96);
        org.junit.Assert.assertNull(str97);
        org.junit.Assert.assertNull(str98);
    }

    @Test
    public void test1869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1869");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("LoggerVM{name='error.concurrencyFailure', level='null'}", "LoggerVM{name='error.concurrencyFailure', level='null'}", "", (java.lang.Long) 100L, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='0', habilitadoTcc='null'}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "", "UserDTO{login='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "Aluno{id=-1, primeiroNome='null', segundoNome='LoginVM{username='null', rememberMe=false}', matricula='0', email='null', numeroContato='null', habilitadoTcc='false'}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", (java.lang.Long) 100L);
        java.lang.String str12 = socialUserConnection11.getRefreshToken();
        java.lang.Class<?> wildcardClass13 = socialUserConnection11.getClass();
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str12, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1870");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setRefreshToken("LoginVM{username='null', rememberMe=null}");
        socialUserConnection0.setAccessToken("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str6 = socialUserConnection0.getSecret();
        java.lang.Long long7 = socialUserConnection0.getExpireTime();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(long7);
    }

    @Test
    public void test1871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1871");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM20 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant10, "error.validation", instant12, (java.util.Set<java.lang.String>) strSet18);
        java.lang.String str21 = managedUserVM20.getFirstName();
        java.lang.String str22 = managedUserVM20.getPassword();
        java.lang.String str23 = managedUserVM20.getLastModifiedBy();
        java.lang.String str24 = managedUserVM20.toString();
        java.lang.String str25 = managedUserVM20.getCreatedBy();
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "error.concurrencyFailure" + "'", str22, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "error.validation" + "'", str23, "error.validation");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str24, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
    }

    @Test
    public void test1872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1872");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        professor0.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str5 = aluno4.getEmail();
        java.lang.Boolean boolean6 = aluno4.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor7 = aluno4.getProfessor();
        com.unifacisa.tcc.domain.Professor professor8 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str11 = aluno10.getEmail();
        aluno10.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        aluno15.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray19 = new com.unifacisa.tcc.domain.Aluno[] { aluno9, aluno10, aluno14, aluno15 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet20 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet20, alunoArray19);
        professor8.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet20);
        java.lang.String str23 = professor8.toString();
        com.unifacisa.tcc.domain.Professor professor24 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno31 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str32 = aluno31.getEmail();
        aluno31.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray35 = new com.unifacisa.tcc.domain.Aluno[] { aluno25, aluno26, aluno30, aluno31 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet36 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet36, alunoArray35);
        professor24.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet36);
        com.unifacisa.tcc.domain.Professor professor39 = professor8.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet36);
        com.unifacisa.tcc.domain.Aluno aluno40 = aluno4.professor(professor39);
        com.unifacisa.tcc.domain.Professor professor41 = professor0.removeAluno(aluno40);
        aluno40.setEmail("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        java.lang.Class<?> wildcardClass44 = aluno40.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(professor7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(alunoArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str23, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(alunoArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(aluno40);
        org.junit.Assert.assertNotNull(professor41);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1873");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getCreatedBy();
        java.time.Instant instant2 = managedUserVM0.getLastModifiedDate();
        managedUserVM0.setLogin("LoggerVM{name='null', level='error.validation'}");
        managedUserVM0.setLogin("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        managedUserVM0.setId((java.lang.Long) 0L);
        java.lang.String str9 = managedUserVM0.getPassword();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(instant2);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1874");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        socialUserConnection4.setRank((java.lang.Long) (-1L));
        socialUserConnection4.setExpireTime((java.lang.Long) 100L);
        java.lang.String str10 = socialUserConnection4.getDisplayName();
        java.lang.String str11 = socialUserConnection4.toString();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM12 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant13 = null;
        managedUserVM12.setLastModifiedDate(instant13);
        java.lang.String str15 = managedUserVM12.getLogin();
        java.lang.Long long16 = managedUserVM12.getId();
        java.lang.String str17 = managedUserVM12.toString();
        java.lang.String str18 = managedUserVM12.getImageUrl();
        java.lang.String str19 = managedUserVM12.toString();
        boolean boolean20 = socialUserConnection4.equals((java.lang.Object) managedUserVM12);
        java.lang.String str21 = managedUserVM12.getEmail();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=100}" + "'", str11, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=100}");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str17, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str19, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test1875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1875");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getRefreshToken();
        socialUserConnection0.setProfileURL("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setDisplayName("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        socialUserConnection0.setRefreshToken("UserDTO{login='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test1876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1876");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = persistentAuditEvent0.getData();
        persistentAuditEvent0.setPrincipal("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long4 = persistentAuditEvent0.getId();
        java.lang.Long long5 = persistentAuditEvent0.getId();
        java.time.Instant instant6 = persistentAuditEvent0.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        persistentAuditEvent0.setData(strMap7);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent9 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = persistentAuditEvent9.getData();
        persistentAuditEvent9.setPrincipal("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long13 = persistentAuditEvent9.getId();
        java.lang.Long long14 = persistentAuditEvent9.getId();
        java.time.Instant instant15 = persistentAuditEvent9.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        persistentAuditEvent9.setData(strMap16);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent18 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant19 = persistentAuditEvent18.getAuditEventDate();
        java.lang.Long long20 = persistentAuditEvent18.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent21 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = persistentAuditEvent21.getData();
        persistentAuditEvent18.setData(strMap22);
        persistentAuditEvent9.setData(strMap22);
        persistentAuditEvent0.setData(strMap22);
        persistentAuditEvent0.setId((java.lang.Long) 1L);
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(instant6);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNull(long14);
        org.junit.Assert.assertNull(instant15);
        org.junit.Assert.assertNull(instant19);
        org.junit.Assert.assertNull(long20);
        org.junit.Assert.assertNotNull(strMap22);
    }

    @Test
    public void test1877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1877");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.toString();
        java.lang.String str2 = authority0.toString();
        authority0.setName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str5 = authority0.getName();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM6 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str7 = loggerVM6.getName();
        loggerVM6.setLevel("error.validation");
        java.lang.String str10 = loggerVM6.getLevel();
        java.lang.String str11 = loggerVM6.toString();
        loggerVM6.setLevel("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        boolean boolean14 = authority0.equals((java.lang.Object) "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM15 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        boolean boolean16 = authority0.equals((java.lang.Object) loggerVM15);
        java.lang.String str17 = loggerVM15.getName();
        loggerVM15.setName("LoggerVM{name='Authority{name='null'}', level='Authority{name='Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}'}'}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Authority{name='null'}" + "'", str1, "Authority{name='null'}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Authority{name='null'}" + "'", str2, "Authority{name='null'}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}" + "'", str5, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "error.validation" + "'", str10, "error.validation");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str11, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test1878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1878");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        socialUserConnection4.setRefreshToken("error.validation");
        socialUserConnection4.setSecret("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.Long long10 = socialUserConnection4.getRank();
        socialUserConnection4.setImageURL("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        socialUserConnection4.setDisplayName("User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}'}");
        socialUserConnection4.setProviderUserId("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long10);
    }

    @Test
    public void test1879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1879");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        com.unifacisa.tcc.domain.Aluno aluno7 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno9 = aluno0.habilitadoTcc((java.lang.Boolean) true);
        java.lang.String str10 = aluno0.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor11 = aluno0.getProfessor();
        java.lang.String str12 = aluno0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(aluno7);
        org.junit.Assert.assertNotNull(aluno9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(professor11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='1', habilitadoTcc='true'}" + "'", str12, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='1', habilitadoTcc='true'}");
    }

    @Test
    public void test1880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1880");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper3 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray4 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList5 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList5, userArray4);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList7 = userMapper3.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList5);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray9 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList10 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList10, userArray9);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList12 = userMapper8.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList10);
        java.util.List<com.unifacisa.tcc.domain.User> userList13 = userMapper3.userDTOsToUsers(userDTOList12);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper14 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray15 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList16 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList16, userArray15);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList18 = userMapper14.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList16);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper19 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray20 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList21 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList21, userArray20);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList23 = userMapper19.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList21);
        java.util.List<com.unifacisa.tcc.domain.User> userList24 = userMapper14.userDTOsToUsers(userDTOList23);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper25 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray26 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList27 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList27, userArray26);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList29 = userMapper25.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList27);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper30 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray31 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList32 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList32, userArray31);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList34 = userMapper30.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList32);
        java.util.List<com.unifacisa.tcc.domain.User> userList35 = userMapper25.userDTOsToUsers(userDTOList34);
        java.util.List<com.unifacisa.tcc.domain.User> userList36 = userMapper14.userDTOsToUsers(userDTOList34);
        java.util.List<com.unifacisa.tcc.domain.User> userList37 = userMapper3.userDTOsToUsers(userDTOList34);
        java.time.Instant instant47 = null;
        java.time.Instant instant49 = null;
        java.time.Instant instant59 = null;
        java.time.Instant instant61 = null;
        java.time.Instant instant72 = null;
        java.time.Instant instant74 = null;
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet80 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet80, strArray79);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM82 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant72, "error.validation", instant74, (java.util.Set<java.lang.String>) strSet80);
        com.unifacisa.tcc.service.dto.UserDTO userDTO83 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant59, "", instant61, (java.util.Set<java.lang.String>) strSet80);
        com.unifacisa.tcc.service.dto.UserDTO userDTO84 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) (-1L), "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "hi!", "", "hi!", true, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "error.concurrencyFailure", instant47, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", instant49, (java.util.Set<java.lang.String>) strSet80);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet85 = userMapper3.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet80);
        user0.setAuthorities(authoritySet85);
        java.lang.String str87 = user0.getLastName();
        com.unifacisa.tcc.domain.User user88 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO89 = new com.unifacisa.tcc.service.dto.UserDTO(user88);
        java.time.Instant instant90 = userDTO89.getLastModifiedDate();
        user0.setLastModifiedDate(instant90);
        java.time.Instant instant92 = user0.getLastModifiedDate();
        user0.setEmail("error.validation");
        user0.setResetKey("error.validation");
        boolean boolean97 = user0.getActivated();
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(userDTOList7);
        org.junit.Assert.assertNotNull(userArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(userDTOList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(userDTOList18);
        org.junit.Assert.assertNotNull(userArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(userDTOList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(userDTOList29);
        org.junit.Assert.assertNotNull(userArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(userDTOList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(authoritySet85);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str87, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant90);
        org.junit.Assert.assertNotNull(instant92);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test1881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1881");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getPassword();
        java.lang.String str2 = managedUserVM0.toString();
        java.lang.String str3 = managedUserVM0.getPassword();
        java.lang.String str4 = managedUserVM0.getLastName();
        managedUserVM0.setLogin("LoginVM{username='null', rememberMe=false}");
        boolean boolean7 = managedUserVM0.isActivated();
        java.lang.String str8 = managedUserVM0.getImageUrl();
        java.lang.Long long9 = managedUserVM0.getId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str2, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(long9);
    }

    @Test
    public void test1882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1882");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("SocialUserConnection{id=null, userId=null, providerId='ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "LoginVM{username='error.concurrencyFailure', rememberMe=null}", (java.lang.Long) 0L, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='0', email='error.concurrencyFailure', numeroContato='null', habilitadoTcc='null'}", "", "LoginVM{username='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', rememberMe=false}", "LoggerVM{name='null', level='Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='Authority{name='null'}', numeroContato='null', habilitadoTcc='null'}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", (java.lang.Long) 1L);
    }

    @Test
    public void test1883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1883");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant3 = user0.getLastModifiedDate();
        java.time.Instant instant4 = user0.getCreatedDate();
        user0.setResetKey("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        java.lang.String str7 = user0.getLogin();
        com.unifacisa.tcc.domain.User user8 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO9 = new com.unifacisa.tcc.service.dto.UserDTO(user8);
        java.lang.String str10 = user8.getImageUrl();
        java.lang.String str11 = user8.getLangKey();
        user8.setLastModifiedBy("");
        user8.setLastName("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.lang.String str16 = user8.getLastName();
        java.lang.String str17 = user8.getLastModifiedBy();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent18 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant19 = persistentAuditEvent18.getAuditEventDate();
        java.lang.Long long20 = persistentAuditEvent18.getId();
        java.lang.Long long21 = persistentAuditEvent18.getId();
        com.unifacisa.tcc.domain.User user22 = new com.unifacisa.tcc.domain.User();
        java.lang.String str23 = user22.getCreatedBy();
        java.lang.String str24 = user22.getLangKey();
        java.time.Instant instant25 = user22.getCreatedDate();
        persistentAuditEvent18.setAuditEventDate(instant25);
        java.time.Instant instant27 = persistentAuditEvent18.getAuditEventDate();
        com.unifacisa.tcc.domain.User user28 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO29 = new com.unifacisa.tcc.service.dto.UserDTO(user28);
        java.lang.String str30 = user28.getImageUrl();
        java.lang.String str31 = user28.getLangKey();
        user28.setLastModifiedBy("");
        user28.setLastModifiedBy("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.time.Instant instant36 = user28.getCreatedDate();
        persistentAuditEvent18.setAuditEventDate(instant36);
        user8.setLastModifiedDate(instant36);
        user0.setLastModifiedDate(instant36);
        org.junit.Assert.assertNotNull(instant3);
        org.junit.Assert.assertNotNull(instant4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str16, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(instant19);
        org.junit.Assert.assertNull(long20);
        org.junit.Assert.assertNull(long21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(instant25);
        org.junit.Assert.assertNotNull(instant27);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(instant36);
    }

    @Test
    public void test1884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1884");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant3 = user0.getLastModifiedDate();
        user0.setResetKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        user0.setPassword("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.User user8 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO9 = new com.unifacisa.tcc.service.dto.UserDTO(user8);
        java.lang.String str10 = user8.getImageUrl();
        java.lang.String str11 = user8.getEmail();
        java.lang.String str12 = user8.getLogin();
        com.unifacisa.tcc.service.dto.UserDTO userDTO13 = new com.unifacisa.tcc.service.dto.UserDTO(user8);
        java.lang.Long long14 = user8.getId();
        user8.setCreatedBy("error.validation");
        com.unifacisa.tcc.domain.User user17 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO18 = new com.unifacisa.tcc.service.dto.UserDTO(user17);
        java.lang.String str19 = user17.getImageUrl();
        java.lang.String str20 = user17.getLangKey();
        user17.setLastModifiedBy("");
        user17.setLastModifiedBy("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.time.Instant instant25 = user17.getCreatedDate();
        user8.setResetDate(instant25);
        user0.setCreatedDate(instant25);
        com.unifacisa.tcc.domain.User user28 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO29 = new com.unifacisa.tcc.service.dto.UserDTO(user28);
        java.time.Instant instant30 = user28.getResetDate();
        java.lang.String str31 = user28.getResetKey();
        com.unifacisa.tcc.domain.User user42 = new com.unifacisa.tcc.domain.User();
        user42.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str45 = user42.getLastName();
        java.time.Instant instant46 = user42.getLastModifiedDate();
        com.unifacisa.tcc.domain.User user48 = new com.unifacisa.tcc.domain.User();
        user48.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str51 = user48.getLastName();
        java.time.Instant instant52 = user48.getLastModifiedDate();
        java.time.Instant instant62 = null;
        java.time.Instant instant64 = null;
        java.time.Instant instant75 = null;
        java.time.Instant instant77 = null;
        java.lang.String[] strArray82 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet83 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet83, strArray82);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM85 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant75, "error.validation", instant77, (java.util.Set<java.lang.String>) strSet83);
        com.unifacisa.tcc.service.dto.UserDTO userDTO86 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant62, "", instant64, (java.util.Set<java.lang.String>) strSet83);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM87 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) (-1L), "LoggerVM{name='null', level='error.validation'}", "Authority{name='null'}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", false, "LoginVM{username='null', rememberMe=false}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "LoggerVM{name='null', level='error.validation'}", instant46, "", instant52, (java.util.Set<java.lang.String>) strSet83);
        user28.setResetDate(instant46);
        user0.setResetDate(instant46);
        org.junit.Assert.assertNotNull(instant3);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(long14);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(instant25);
        org.junit.Assert.assertNull(instant30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str45, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str51, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant52);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test1885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1885");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant1 = null;
        managedUserVM0.setLastModifiedDate(instant1);
        java.lang.String str3 = managedUserVM0.toString();
        java.lang.String str4 = managedUserVM0.getLogin();
        java.lang.Long long5 = managedUserVM0.getId();
        java.time.Instant instant6 = managedUserVM0.getCreatedDate();
        managedUserVM0.setLogin("LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=null}");
        managedUserVM0.setLogin("LoggerVM{name='null', level='ManagedUserVM{} UserDTO{login='LoginVM{username='null', rememberMe=false}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}'}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str3, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(instant6);
    }

    @Test
    public void test1886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1886");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        java.lang.String str4 = user0.getLogin();
        boolean boolean5 = user0.getActivated();
        java.lang.String str6 = user0.getLogin();
        user0.setPassword("ManagedUserVM{} UserDTO{login='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent9 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant10 = persistentAuditEvent9.getAuditEventDate();
        persistentAuditEvent9.setPrincipal("SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        persistentAuditEvent9.setPrincipal("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        com.unifacisa.tcc.domain.User user15 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO16 = new com.unifacisa.tcc.service.dto.UserDTO(user15);
        java.lang.String str17 = user15.getImageUrl();
        java.lang.String str18 = user15.getLangKey();
        java.lang.String str19 = user15.getLogin();
        com.unifacisa.tcc.domain.User user20 = new com.unifacisa.tcc.domain.User();
        user20.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant23 = user20.getLastModifiedDate();
        user15.setLastModifiedDate(instant23);
        java.lang.String str25 = user15.getLastModifiedBy();
        java.time.Instant instant26 = user15.getCreatedDate();
        persistentAuditEvent9.setAuditEventDate(instant26);
        user0.setResetDate(instant26);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(instant23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(instant26);
    }

    @Test
    public void test1887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1887");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        java.time.Instant instant11 = null;
        java.time.Instant instant13 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM21 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant11, "error.validation", instant13, (java.util.Set<java.lang.String>) strSet19);
        java.lang.String str22 = managedUserVM21.getFirstName();
        java.lang.String str23 = managedUserVM21.getPassword();
        java.util.Set<java.lang.String> strSet24 = managedUserVM21.getAuthorities();
        java.util.Set<java.lang.String> strSet25 = managedUserVM21.getAuthorities();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet26 = userMapper0.authoritiesFromStrings(strSet25);
        com.unifacisa.tcc.domain.User user28 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper29 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray30 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList31 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList31, userArray30);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList33 = userMapper29.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList31);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper34 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray35 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList36 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList36, userArray35);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList38 = userMapper34.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList36);
        java.util.List<com.unifacisa.tcc.domain.User> userList39 = userMapper29.userDTOsToUsers(userDTOList38);
        java.util.List<com.unifacisa.tcc.domain.User> userList40 = userMapper0.userDTOsToUsers(userDTOList38);
        com.unifacisa.tcc.domain.User user42 = userMapper0.userFromId((java.lang.Long) 0L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper43 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user45 = userMapper43.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper46 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray47 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList48 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList48, userArray47);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList50 = userMapper46.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList48);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList51 = userMapper43.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList48);
        java.time.Instant instant62 = null;
        java.time.Instant instant64 = null;
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet70 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet70, strArray69);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM72 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant62, "error.validation", instant64, (java.util.Set<java.lang.String>) strSet70);
        java.lang.String str73 = managedUserVM72.getFirstName();
        java.lang.String str74 = managedUserVM72.getCreatedBy();
        java.util.Set<java.lang.String> strSet75 = managedUserVM72.getAuthorities();
        java.lang.String str76 = managedUserVM72.toString();
        java.lang.String str77 = managedUserVM72.getEmail();
        java.util.Set<java.lang.String> strSet78 = managedUserVM72.getAuthorities();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet79 = userMapper43.authoritiesFromStrings(strSet78);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet80 = userMapper0.authoritiesFromStrings(strSet78);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "error.concurrencyFailure" + "'", str23, "error.concurrencyFailure");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(authoritySet26);
        org.junit.Assert.assertNotNull(user28);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(userDTOList33);
        org.junit.Assert.assertNotNull(userArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(userDTOList38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(user42);
        org.junit.Assert.assertNotNull(user45);
        org.junit.Assert.assertNotNull(userArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(userDTOList50);
        org.junit.Assert.assertNotNull(userDTOList51);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNotNull(strSet75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str76, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "error.validation" + "'", str77, "error.validation");
        org.junit.Assert.assertNotNull(strSet78);
        org.junit.Assert.assertNotNull(authoritySet79);
        org.junit.Assert.assertNotNull(authoritySet80);
    }

    @Test
    public void test1888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1888");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM20 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant10, "error.validation", instant12, (java.util.Set<java.lang.String>) strSet18);
        java.lang.String str21 = managedUserVM20.getFirstName();
        java.lang.String str22 = managedUserVM20.getPassword();
        java.lang.String str23 = managedUserVM20.getLastModifiedBy();
        managedUserVM20.setId((java.lang.Long) (-1L));
        java.lang.String str26 = managedUserVM20.getPassword();
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "error.concurrencyFailure" + "'", str22, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "error.validation" + "'", str23, "error.validation");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "error.concurrencyFailure" + "'", str26, "error.concurrencyFailure");
    }

    @Test
    public void test1889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1889");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long1 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setId((java.lang.Long) (-1L));
        persistentAuditEvent0.setAuditEventType("LoggerVM{name='null', level='User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}");
        java.util.Map<java.lang.String, java.lang.String> strMap6 = persistentAuditEvent0.getData();
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNotNull(strMap6);
    }

    @Test
    public void test1890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1890");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getCreatedBy();
        java.time.Instant instant2 = managedUserVM0.getLastModifiedDate();
        managedUserVM0.setId((java.lang.Long) (-1L));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(instant2);
    }

    @Test
    public void test1891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1891");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getAccessToken();
        java.lang.String str4 = socialUserConnection0.toString();
        socialUserConnection0.setProviderUserId("");
        socialUserConnection0.setDisplayName("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str9 = socialUserConnection0.getRefreshToken();
        socialUserConnection0.setExpireTime((java.lang.Long) 10L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str4, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1892");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        persistentAuditEvent0.setPrincipal("SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        persistentAuditEvent0.setAuditEventType("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.User user16 = new com.unifacisa.tcc.domain.User();
        java.lang.String str17 = user16.getCreatedBy();
        java.lang.String str18 = user16.getLangKey();
        java.time.Instant instant19 = user16.getCreatedDate();
        com.unifacisa.tcc.domain.User user21 = new com.unifacisa.tcc.domain.User();
        user21.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str24 = user21.getLastName();
        java.lang.String str25 = user21.getEmail();
        com.unifacisa.tcc.domain.User user26 = new com.unifacisa.tcc.domain.User();
        java.lang.String str27 = user26.getCreatedBy();
        java.lang.String str28 = user26.getLastModifiedBy();
        user26.setCreatedBy("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str31 = user26.toString();
        java.time.Instant instant32 = user26.getCreatedDate();
        java.lang.String str33 = user26.getActivationKey();
        java.time.Instant instant34 = user26.getLastModifiedDate();
        user21.setCreatedDate(instant34);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper36 = new com.unifacisa.tcc.service.mapper.UserMapper();
        java.time.Instant instant47 = null;
        java.time.Instant instant49 = null;
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet55 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet55, strArray54);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM57 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant47, "error.validation", instant49, (java.util.Set<java.lang.String>) strSet55);
        java.lang.String str58 = managedUserVM57.getFirstName();
        java.lang.String str59 = managedUserVM57.getPassword();
        java.util.Set<java.lang.String> strSet60 = managedUserVM57.getAuthorities();
        java.util.Set<java.lang.String> strSet61 = managedUserVM57.getAuthorities();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet62 = userMapper36.authoritiesFromStrings(strSet61);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM63 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 0L, "User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}'}", "LoggerVM{name='error.concurrencyFailure', level='error.validation'}", "Authority{name='Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}'}", "LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=true}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}", false, "LoggerVM{name='null', level='SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "SocialUserConnection{id=1, userId=error.validation, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", instant19, "LoggerVM{name='null', level='null'}", instant34, strSet61);
        persistentAuditEvent0.setAuditEventDate(instant34);
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(instant19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str24, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str31, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(instant34);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "error.concurrencyFailure" + "'", str59, "error.concurrencyFailure");
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertNotNull(strSet61);
        org.junit.Assert.assertNotNull(authoritySet62);
    }

    @Test
    public void test1893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1893");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO4 = new com.unifacisa.tcc.service.dto.UserDTO(user3);
        java.lang.String str5 = user3.getImageUrl();
        boolean boolean7 = user3.equals((java.lang.Object) (byte) -1);
        java.lang.String str8 = user3.getLastName();
        java.lang.String str9 = user3.getFirstName();
        java.time.Instant instant10 = user3.getResetDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO11 = userMapper0.userToUserDTO(user3);
        com.unifacisa.tcc.domain.User user12 = new com.unifacisa.tcc.domain.User();
        java.lang.String str13 = user12.getCreatedBy();
        java.lang.String str14 = user12.getLastModifiedBy();
        java.lang.String str15 = user12.getImageUrl();
        com.unifacisa.tcc.service.dto.UserDTO userDTO16 = userMapper0.userToUserDTO(user12);
        com.unifacisa.tcc.domain.User user17 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO18 = new com.unifacisa.tcc.service.dto.UserDTO(user17);
        java.time.Instant instant19 = user17.getResetDate();
        java.lang.String str20 = user17.getResetKey();
        com.unifacisa.tcc.domain.User user31 = new com.unifacisa.tcc.domain.User();
        user31.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str34 = user31.getLastName();
        java.time.Instant instant35 = user31.getLastModifiedDate();
        com.unifacisa.tcc.domain.User user37 = new com.unifacisa.tcc.domain.User();
        user37.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str40 = user37.getLastName();
        java.time.Instant instant41 = user37.getLastModifiedDate();
        java.time.Instant instant51 = null;
        java.time.Instant instant53 = null;
        java.time.Instant instant64 = null;
        java.time.Instant instant66 = null;
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet72 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet72, strArray71);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM74 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant64, "error.validation", instant66, (java.util.Set<java.lang.String>) strSet72);
        com.unifacisa.tcc.service.dto.UserDTO userDTO75 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant51, "", instant53, (java.util.Set<java.lang.String>) strSet72);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM76 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) (-1L), "LoggerVM{name='null', level='error.validation'}", "Authority{name='null'}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", false, "LoginVM{username='null', rememberMe=false}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "LoggerVM{name='null', level='error.validation'}", instant35, "", instant41, (java.util.Set<java.lang.String>) strSet72);
        user17.setResetDate(instant35);
        user17.setEmail("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str80 = user17.getResetKey();
        com.unifacisa.tcc.service.dto.UserDTO userDTO81 = userMapper0.userToUserDTO(user17);
        java.lang.String str82 = userDTO81.toString();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(userDTO11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(userDTO16);
        org.junit.Assert.assertNull(instant19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str34, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str40, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant41);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(userDTO81);
// flaky:         org.junit.Assert.assertEquals("'" + str82 + "' != '" + "UserDTO{login='null', firstName='null', lastName='null', email='Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=2021-03-24T23:46:25.303Z, lastModifiedBy='null', lastModifiedDate=2021-03-24T23:46:25.303Z, authorities=[]}" + "'", str82, "UserDTO{login='null', firstName='null', lastName='null', email='Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=2021-03-24T23:46:25.303Z, lastModifiedBy='null', lastModifiedDate=2021-03-24T23:46:25.303Z, authorities=[]}");
    }

    @Test
    public void test1894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1894");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent9 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long10 = persistentAuditEvent9.getId();
        persistentAuditEvent9.setAuditEventType("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Long long13 = persistentAuditEvent9.getId();
        com.unifacisa.tcc.domain.User user14 = new com.unifacisa.tcc.domain.User();
        java.lang.String str15 = user14.getCreatedBy();
        user14.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant18 = user14.getLastModifiedDate();
        persistentAuditEvent9.setAuditEventDate(instant18);
        com.unifacisa.tcc.domain.User user21 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO22 = new com.unifacisa.tcc.service.dto.UserDTO(user21);
        java.lang.String str23 = user21.toString();
        java.time.Instant instant24 = user21.getLastModifiedDate();
        java.time.Instant instant35 = null;
        java.time.Instant instant37 = null;
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet43 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet43, strArray42);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM45 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant35, "error.validation", instant37, (java.util.Set<java.lang.String>) strSet43);
        java.lang.String str46 = managedUserVM45.getFirstName();
        java.lang.String str47 = managedUserVM45.getCreatedBy();
        java.util.Set<java.lang.String> strSet48 = managedUserVM45.getAuthorities();
        com.unifacisa.tcc.service.dto.UserDTO userDTO49 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 10L, "LoggerVM{name='null', level='error.validation'}", "", "ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "LoginVM{username='error.concurrencyFailure', rememberMe=null}", false, "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}", "Authority{name=''}", "LoggerVM{name='null', level='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}'}", instant18, "error.concurrencyFailure", instant24, strSet48);
        java.lang.String str50 = userDTO49.getLastName();
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(instant18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str23, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant24);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str50, "ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test1895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1895");
        java.time.Instant instant20 = null;
        com.unifacisa.tcc.domain.User user22 = new com.unifacisa.tcc.domain.User();
        java.lang.String str23 = user22.getCreatedBy();
        user22.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO26 = new com.unifacisa.tcc.service.dto.UserDTO(user22);
        java.time.Instant instant27 = userDTO26.getLastModifiedDate();
        java.time.Instant instant38 = null;
        java.time.Instant instant40 = null;
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet46 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet46, strArray45);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM48 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant38, "error.validation", instant40, (java.util.Set<java.lang.String>) strSet46);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM49 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}", "User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "User{login='null', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", false, "Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}", "LoginVM{username='null', rememberMe=false}", "error.validation", instant20, "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", instant27, (java.util.Set<java.lang.String>) strSet46);
        com.unifacisa.tcc.domain.User user51 = new com.unifacisa.tcc.domain.User();
        java.lang.String str52 = user51.getCreatedBy();
        java.lang.String str53 = user51.getLastModifiedBy();
        user51.setResetKey("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str56 = user51.getEmail();
        java.time.Instant instant57 = user51.getLastModifiedDate();
        java.lang.String[] strArray81 = new java.lang.String[] { "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "LoggerVM{name='null', level='null'}", "Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}", "ManagedUserVM{} UserDTO{login='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "SocialUserConnection{id=1, userId=error.validation, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "LoginVM{username='null', rememberMe=false}", "User{login='null', firstName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "hi!", "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}", "User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" };
        java.util.LinkedHashSet<java.lang.String> strSet82 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet82, strArray81);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM84 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 0L, "LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=false}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "", true, "Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}", "", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", instant20, "LoginVM{username='null', rememberMe=null}", instant57, (java.util.Set<java.lang.String>) strSet82);
        java.time.Instant instant85 = managedUserVM84.getCreatedDate();
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(instant27);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(instant57);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(instant85);
    }

    @Test
    public void test1896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1896");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM20 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant10, "error.validation", instant12, (java.util.Set<java.lang.String>) strSet18);
        java.lang.String str21 = managedUserVM20.getFirstName();
        java.lang.String str22 = managedUserVM20.getCreatedBy();
        java.util.Set<java.lang.String> strSet23 = managedUserVM20.getAuthorities();
        java.lang.String str24 = managedUserVM20.toString();
        java.time.Instant instant25 = managedUserVM20.getCreatedDate();
        java.lang.String str26 = managedUserVM20.toString();
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str24, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertNull(instant25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str26, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
    }

    @Test
    public void test1897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1897");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.time.Instant instant2 = null;
        user0.setLastModifiedDate(instant2);
        java.lang.String str4 = user0.getEmail();
        java.lang.String str5 = user0.getCreatedBy();
        java.time.Instant instant6 = null;
        user0.setLastModifiedDate(instant6);
        java.time.Instant instant8 = user0.getCreatedDate();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(instant8);
    }

    @Test
    public void test1898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1898");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM20 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant10, "error.validation", instant12, (java.util.Set<java.lang.String>) strSet18);
        java.lang.String str21 = managedUserVM20.getFirstName();
        java.lang.String str22 = managedUserVM20.getCreatedBy();
        java.util.Set<java.lang.String> strSet23 = managedUserVM20.getAuthorities();
        java.lang.String str24 = managedUserVM20.toString();
        java.lang.String str25 = managedUserVM20.getEmail();
        java.util.Set<java.lang.String> strSet26 = managedUserVM20.getAuthorities();
        java.lang.String str27 = managedUserVM20.getPassword();
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str24, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "error.validation" + "'", str25, "error.validation");
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "error.concurrencyFailure" + "'", str27, "error.concurrencyFailure");
    }

    @Test
    public void test1899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1899");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        java.lang.String str6 = user0.getFirstName();
        java.time.Instant instant7 = user0.getResetDate();
        com.unifacisa.tcc.domain.Professor professor8 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str11 = aluno10.getEmail();
        aluno10.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        aluno15.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray19 = new com.unifacisa.tcc.domain.Aluno[] { aluno9, aluno10, aluno14, aluno15 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet20 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet20, alunoArray19);
        professor8.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet20);
        professor8.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor25 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno31 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str33 = aluno32.getEmail();
        aluno32.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray36 = new com.unifacisa.tcc.domain.Aluno[] { aluno26, aluno27, aluno31, aluno32 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet37 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet37, alunoArray36);
        professor25.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet37);
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str41 = aluno40.getEmail();
        java.lang.Boolean boolean42 = aluno40.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor43 = professor25.addAluno(aluno40);
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str45 = aluno44.getEmail();
        aluno44.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection48 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean49 = aluno44.equals((java.lang.Object) socialUserConnection48);
        socialUserConnection48.setRefreshToken("error.validation");
        socialUserConnection48.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean54 = aluno40.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str55 = aluno40.toString();
        com.unifacisa.tcc.domain.Aluno aluno57 = aluno40.habilitadoTcc((java.lang.Boolean) true);
        java.lang.String str58 = aluno40.toString();
        com.unifacisa.tcc.domain.Professor professor59 = professor8.removeAluno(aluno40);
        com.unifacisa.tcc.domain.Professor professor61 = professor8.diponibilidade((java.lang.Boolean) false);
        boolean boolean62 = user0.equals((java.lang.Object) professor8);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet63 = professor8.getAlunos();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(instant7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(alunoArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(alunoArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(professor43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str55, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(aluno57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str58, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertNotNull(professor59);
        org.junit.Assert.assertNotNull(professor61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(alunoSet63);
    }

    @Test
    public void test1900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1900");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant21 = null;
        java.time.Instant instant23 = null;
        java.time.Instant instant34 = null;
        java.time.Instant instant36 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet42 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet42, strArray41);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM44 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant34, "error.validation", instant36, (java.util.Set<java.lang.String>) strSet42);
        com.unifacisa.tcc.service.dto.UserDTO userDTO45 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant21, "", instant23, (java.util.Set<java.lang.String>) strSet42);
        com.unifacisa.tcc.service.dto.UserDTO userDTO46 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) (-1L), "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "hi!", "", "hi!", true, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "error.concurrencyFailure", instant9, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", instant11, (java.util.Set<java.lang.String>) strSet42);
        java.lang.String str47 = userDTO46.getEmail();
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
    }

    @Test
    public void test1901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1901");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.toString();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper3 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray4 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList5 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList5, userArray4);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList7 = userMapper3.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList5);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray9 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList10 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList10, userArray9);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList12 = userMapper8.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList10);
        java.util.List<com.unifacisa.tcc.domain.User> userList13 = userMapper3.userDTOsToUsers(userDTOList12);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper14 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray15 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList16 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList16, userArray15);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList18 = userMapper14.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList16);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper19 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray20 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList21 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList21, userArray20);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList23 = userMapper19.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList21);
        java.util.List<com.unifacisa.tcc.domain.User> userList24 = userMapper14.userDTOsToUsers(userDTOList23);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper25 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray26 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList27 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList27, userArray26);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList29 = userMapper25.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList27);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper30 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray31 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList32 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList32, userArray31);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList34 = userMapper30.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList32);
        java.util.List<com.unifacisa.tcc.domain.User> userList35 = userMapper25.userDTOsToUsers(userDTOList34);
        java.util.List<com.unifacisa.tcc.domain.User> userList36 = userMapper14.userDTOsToUsers(userDTOList34);
        java.util.List<com.unifacisa.tcc.domain.User> userList37 = userMapper3.userDTOsToUsers(userDTOList34);
        java.time.Instant instant47 = null;
        java.time.Instant instant49 = null;
        java.time.Instant instant59 = null;
        java.time.Instant instant61 = null;
        java.time.Instant instant72 = null;
        java.time.Instant instant74 = null;
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet80 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet80, strArray79);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM82 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant72, "error.validation", instant74, (java.util.Set<java.lang.String>) strSet80);
        com.unifacisa.tcc.service.dto.UserDTO userDTO83 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant59, "", instant61, (java.util.Set<java.lang.String>) strSet80);
        com.unifacisa.tcc.service.dto.UserDTO userDTO84 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) (-1L), "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "hi!", "", "hi!", true, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "error.concurrencyFailure", instant47, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", instant49, (java.util.Set<java.lang.String>) strSet80);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet85 = userMapper3.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet80);
        user0.setAuthorities(authoritySet85);
        java.time.Instant instant87 = user0.getResetDate();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        java.lang.String str90 = user0.getLastName();
        boolean boolean91 = user0.getActivated();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str2, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(userDTOList7);
        org.junit.Assert.assertNotNull(userArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(userDTOList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(userDTOList18);
        org.junit.Assert.assertNotNull(userArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(userDTOList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(userDTOList29);
        org.junit.Assert.assertNotNull(userArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(userDTOList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(authoritySet85);
        org.junit.Assert.assertNull(instant87);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test1902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1902");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.lang.String str34 = userDTO33.getLastName();
        java.lang.String str35 = userDTO33.getEmail();
        userDTO33.setId((java.lang.Long) 0L);
        java.lang.String str38 = userDTO33.getImageUrl();
        java.time.Instant instant39 = userDTO33.getCreatedDate();
        java.lang.String str40 = userDTO33.getLogin();
        java.lang.String str41 = userDTO33.getLastModifiedBy();
        userDTO33.setLogin("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='-1', diponibilidade='true'}");
        com.unifacisa.tcc.domain.User user44 = new com.unifacisa.tcc.domain.User();
        java.lang.String str45 = user44.getLangKey();
        user44.setResetKey("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        com.unifacisa.tcc.domain.User user48 = new com.unifacisa.tcc.domain.User();
        java.lang.String str49 = user48.getCreatedBy();
        java.lang.String str50 = user48.getLangKey();
        com.unifacisa.tcc.domain.Professor professor51 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno53 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str54 = aluno53.getEmail();
        aluno53.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str59 = aluno58.getEmail();
        aluno58.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray62 = new com.unifacisa.tcc.domain.Aluno[] { aluno52, aluno53, aluno57, aluno58 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet63 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet63, alunoArray62);
        professor51.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet63);
        java.lang.String str66 = professor51.toString();
        com.unifacisa.tcc.domain.Professor professor67 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno68 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno69 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str70 = aluno69.getEmail();
        aluno69.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno73 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno74 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str75 = aluno74.getEmail();
        aluno74.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray78 = new com.unifacisa.tcc.domain.Aluno[] { aluno68, aluno69, aluno73, aluno74 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet79 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet79, alunoArray78);
        professor67.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet79);
        com.unifacisa.tcc.domain.Professor professor82 = professor51.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet79);
        boolean boolean83 = user48.equals((java.lang.Object) professor51);
        java.lang.String str84 = user48.getLogin();
        user48.setId((java.lang.Long) 0L);
        user48.setImageUrl("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant89 = user48.getLastModifiedDate();
        user44.setLastModifiedDate(instant89);
        userDTO33.setLastModifiedDate(instant89);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "error.concurrencyFailure" + "'", str34, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "error.concurrencyFailure" + "'", str35, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNull(instant39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(alunoArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str66, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(alunoArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(professor82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(instant89);
    }

    @Test
    public void test1903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1903");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        user0.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.User user4 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO5 = new com.unifacisa.tcc.service.dto.UserDTO(user4);
        java.lang.String str6 = user4.getImageUrl();
        java.lang.String str7 = user4.getLangKey();
        java.lang.String str8 = user4.getLogin();
        com.unifacisa.tcc.domain.User user9 = new com.unifacisa.tcc.domain.User();
        user9.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant12 = user9.getLastModifiedDate();
        user4.setLastModifiedDate(instant12);
        user0.setLastModifiedDate(instant12);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet15 = user0.getAuthorities();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(instant12);
        org.junit.Assert.assertNotNull(authoritySet15);
    }

    @Test
    public void test1904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1904");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        java.lang.String str6 = socialUserConnection4.getRefreshToken();
        java.lang.String str7 = socialUserConnection4.getProviderId();
        socialUserConnection4.setId((java.lang.Long) 10L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1905");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("error.concurrencyFailure");
        java.lang.String str3 = keyAndPasswordVM0.getNewPassword();
        keyAndPasswordVM0.setNewPassword("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        keyAndPasswordVM0.setNewPassword("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        keyAndPasswordVM0.setNewPassword("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        keyAndPasswordVM0.setNewPassword("");
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test1906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1906");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        user3.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant6 = user3.getLastModifiedDate();
        user0.setCreatedDate(instant6);
        java.lang.String str8 = user0.toString();
        java.time.Instant instant9 = user0.getCreatedDate();
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM10 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM10.setKey("error.concurrencyFailure");
        java.lang.String str13 = keyAndPasswordVM10.getNewPassword();
        keyAndPasswordVM10.setNewPassword("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        keyAndPasswordVM10.setNewPassword("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        boolean boolean18 = user0.equals((java.lang.Object) keyAndPasswordVM10);
        java.lang.String str19 = keyAndPasswordVM10.getKey();
        java.lang.String str20 = keyAndPasswordVM10.getKey();
        keyAndPasswordVM10.setKey("ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str23 = keyAndPasswordVM10.getNewPassword();
        keyAndPasswordVM10.setKey("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str8, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "error.concurrencyFailure" + "'", str19, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "error.concurrencyFailure" + "'", str20, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}" + "'", str23, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
    }

    @Test
    public void test1907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1907");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getPassword();
        java.lang.String str2 = managedUserVM0.toString();
        java.lang.String str3 = managedUserVM0.getPassword();
        java.lang.String str4 = managedUserVM0.getLastName();
        managedUserVM0.setLogin("LoginVM{username='null', rememberMe=false}");
        java.lang.String str7 = managedUserVM0.toString();
        java.lang.String str8 = managedUserVM0.getLastName();
        java.time.Instant instant9 = managedUserVM0.getCreatedDate();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str2, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ManagedUserVM{} UserDTO{login='LoginVM{username='null', rememberMe=false}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str7, "ManagedUserVM{} UserDTO{login='LoginVM{username='null', rememberMe=false}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(instant9);
    }

    @Test
    public void test1908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1908");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        java.lang.Boolean boolean2 = loginVM0.isRememberMe();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setPassword("hi!");
        java.lang.Boolean boolean7 = loginVM0.isRememberMe();
        java.lang.String str8 = loginVM0.getUsername();
        loginVM0.setRememberMe((java.lang.Boolean) true);
        java.lang.String str11 = loginVM0.getPassword();
        loginVM0.setPassword("hi!");
        loginVM0.setRememberMe((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertEquals("'" + boolean7 + "' != '" + false + "'", boolean7, false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test1909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1909");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        java.lang.String str4 = user0.getLogin();
        com.unifacisa.tcc.domain.User user5 = new com.unifacisa.tcc.domain.User();
        user5.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant8 = user5.getLastModifiedDate();
        user0.setLastModifiedDate(instant8);
        java.lang.String str10 = user0.getActivationKey();
        user0.setEmail("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='Authority{name='null'}', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(instant8);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1910");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLangKey();
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str6 = aluno5.getEmail();
        aluno5.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str11 = aluno10.getEmail();
        aluno10.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray14 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno5, aluno9, aluno10 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet15 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet15, alunoArray14);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet15);
        java.lang.String str18 = professor3.toString();
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        com.unifacisa.tcc.domain.Professor professor34 = professor3.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        boolean boolean35 = user0.equals((java.lang.Object) professor3);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent36 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.User user37 = new com.unifacisa.tcc.domain.User();
        java.lang.String str38 = user37.getCreatedBy();
        java.lang.String str39 = user37.getLangKey();
        java.time.Instant instant40 = user37.getCreatedDate();
        persistentAuditEvent36.setAuditEventDate(instant40);
        user0.setCreatedDate(instant40);
        com.unifacisa.tcc.service.dto.UserDTO userDTO43 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        user0.setActivationKey("LoggerVM{name='null', level='error.validation'}");
        java.lang.String str46 = user0.getActivationKey();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet47 = user0.getAuthorities();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(alunoArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str18, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(instant40);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str46, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertNotNull(authoritySet47);
    }

    @Test
    public void test1911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1911");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getSecret();
        java.lang.Long long4 = socialUserConnection0.getRank();
        java.lang.String str5 = socialUserConnection0.getProviderId();
        socialUserConnection0.setRank((java.lang.Long) 10L);
        java.lang.String str8 = socialUserConnection0.getImageURL();
        java.lang.Long long9 = socialUserConnection0.getExpireTime();
        java.lang.String str10 = socialUserConnection0.getImageURL();
        java.lang.String str11 = socialUserConnection0.getProviderUserId();
        socialUserConnection0.setSecret("LoggerVM{name='', level='null'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1912");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        java.lang.Boolean boolean17 = aluno15.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor18 = professor0.addAluno(aluno15);
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str20 = aluno19.getEmail();
        aluno19.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection23 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean24 = aluno19.equals((java.lang.Object) socialUserConnection23);
        socialUserConnection23.setRefreshToken("error.validation");
        socialUserConnection23.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean29 = aluno15.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str30 = aluno15.toString();
        java.lang.Boolean boolean31 = aluno15.isHabilitadoTcc();
        aluno15.setHabilitadoTcc((java.lang.Boolean) true);
        aluno15.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa37 = aluno15.segundoNome("");
        com.unifacisa.tcc.domain.Professor professor38 = aluno15.getProfessor();
        java.lang.Long long39 = aluno15.getMatricula();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str30, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(pessoa37);
        org.junit.Assert.assertNotNull(professor38);
        org.junit.Assert.assertNull(long39);
    }

    @Test
    public void test1913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1913");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        java.time.Instant instant11 = null;
        java.time.Instant instant13 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM21 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant11, "error.validation", instant13, (java.util.Set<java.lang.String>) strSet19);
        java.lang.String str22 = managedUserVM21.getFirstName();
        java.lang.String str23 = managedUserVM21.getPassword();
        java.util.Set<java.lang.String> strSet24 = managedUserVM21.getAuthorities();
        java.util.Set<java.lang.String> strSet25 = managedUserVM21.getAuthorities();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet26 = userMapper0.authoritiesFromStrings(strSet25);
        com.unifacisa.tcc.domain.User user28 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.User user29 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO30 = new com.unifacisa.tcc.service.dto.UserDTO(user29);
        java.lang.String str31 = user29.toString();
        java.time.Instant instant32 = user29.getCreatedDate();
        java.time.Instant instant33 = user29.getCreatedDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO34 = userMapper0.userToUserDTO(user29);
        com.unifacisa.tcc.service.dto.UserDTO userDTO35 = new com.unifacisa.tcc.service.dto.UserDTO(user29);
        user29.setFirstName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=2021-03-24T23:46:06.586Z, authorities=null}");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "error.concurrencyFailure" + "'", str23, "error.concurrencyFailure");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(authoritySet26);
        org.junit.Assert.assertNotNull(user28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str31, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant32);
        org.junit.Assert.assertNotNull(instant33);
        org.junit.Assert.assertNotNull(userDTO34);
    }

    @Test
    public void test1914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1914");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getPassword();
        java.lang.String str2 = managedUserVM0.toString();
        java.lang.String str3 = managedUserVM0.toString();
        com.unifacisa.tcc.domain.User user13 = new com.unifacisa.tcc.domain.User();
        user13.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str16 = user13.getLastName();
        java.time.Instant instant17 = user13.getLastModifiedDate();
        com.unifacisa.tcc.domain.User user19 = new com.unifacisa.tcc.domain.User();
        java.lang.String str20 = user19.getCreatedBy();
        java.lang.String str21 = user19.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user22 = new com.unifacisa.tcc.domain.User();
        user22.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant25 = user22.getLastModifiedDate();
        user19.setCreatedDate(instant25);
        java.time.Instant instant36 = null;
        java.time.Instant instant38 = null;
        java.time.Instant instant49 = null;
        java.time.Instant instant51 = null;
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet57 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet57, strArray56);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM59 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant49, "error.validation", instant51, (java.util.Set<java.lang.String>) strSet57);
        com.unifacisa.tcc.service.dto.UserDTO userDTO60 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant36, "", instant38, (java.util.Set<java.lang.String>) strSet57);
        com.unifacisa.tcc.service.dto.UserDTO userDTO61 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "LoggerVM{name='null', level='null'}", "error.concurrencyFailure", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", true, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "", "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", instant17, "", instant25, (java.util.Set<java.lang.String>) strSet57);
        managedUserVM0.setLastModifiedDate(instant17);
        managedUserVM0.setId((java.lang.Long) 0L);
        java.lang.String str65 = managedUserVM0.getLogin();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str2, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str3, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str16, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(instant25);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(str65);
    }

    @Test
    public void test1915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1915");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str1 = loggerVM0.getLevel();
        java.lang.String str2 = loggerVM0.getName();
        loggerVM0.setLevel("ManagedUserVM{} UserDTO{login='LoginVM{username='null', rememberMe=false}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str5 = loggerVM0.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test1916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1916");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getRefreshToken();
        java.lang.String str4 = socialUserConnection0.getUserId();
        java.lang.String str5 = socialUserConnection0.getAccessToken();
        java.lang.Long long6 = socialUserConnection0.getRank();
        java.lang.String str7 = socialUserConnection0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str7, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test1917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1917");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        java.lang.Boolean boolean17 = aluno15.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor18 = professor0.addAluno(aluno15);
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str20 = aluno19.getEmail();
        aluno19.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection23 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean24 = aluno19.equals((java.lang.Object) socialUserConnection23);
        socialUserConnection23.setRefreshToken("error.validation");
        socialUserConnection23.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean29 = aluno15.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str30 = aluno15.toString();
        com.unifacisa.tcc.domain.Aluno aluno32 = aluno15.habilitadoTcc((java.lang.Boolean) true);
        java.lang.String str33 = aluno15.toString();
        aluno15.setId((java.lang.Long) 100L);
        java.lang.Boolean boolean36 = aluno15.isHabilitadoTcc();
        java.lang.String str37 = aluno15.getEmail();
        com.unifacisa.tcc.domain.User user38 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO39 = new com.unifacisa.tcc.service.dto.UserDTO(user38);
        java.lang.String str40 = user38.getImageUrl();
        boolean boolean42 = user38.equals((java.lang.Object) (byte) -1);
        java.lang.String str43 = user38.getLastName();
        java.lang.String str44 = user38.getFirstName();
        java.lang.String str45 = user38.getLangKey();
        user38.setImageUrl("LoggerVM{name='null', level='error.validation'}");
        boolean boolean48 = aluno15.equals((java.lang.Object) user38);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa50 = aluno15.primeiroNome("LoginVM{username='null', rememberMe=null}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str30, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(aluno32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str33, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertEquals("'" + boolean36 + "' != '" + true + "'", boolean36, true);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(pessoa50);
    }

    @Test
    public void test1918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1918");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor3 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa5 = professor3.primeiroNome("error.concurrencyFailure");
        com.unifacisa.tcc.domain.Professor professor6 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str9 = aluno8.getEmail();
        aluno8.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str14 = aluno13.getEmail();
        aluno13.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray17 = new com.unifacisa.tcc.domain.Aluno[] { aluno7, aluno8, aluno12, aluno13 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet18 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet18, alunoArray17);
        professor6.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet18);
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        java.lang.Boolean boolean23 = aluno21.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor24 = professor6.addAluno(aluno21);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str26 = aluno25.getEmail();
        aluno25.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection29 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean30 = aluno25.equals((java.lang.Object) socialUserConnection29);
        socialUserConnection29.setRefreshToken("error.validation");
        socialUserConnection29.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean35 = aluno21.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str36 = aluno21.toString();
        java.lang.Boolean boolean37 = aluno21.isHabilitadoTcc();
        java.lang.String str38 = aluno21.toString();
        com.unifacisa.tcc.domain.Professor professor39 = professor3.removeAluno(aluno21);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa41 = professor39.primeiroNome("Professor{id=null, primeiroNome='error.concurrencyFailure', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa43 = pessoa41.numeroContato((java.lang.Long) 100L);
        pessoa43.setId((java.lang.Long) 100L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(professor3);
        org.junit.Assert.assertNotNull(pessoa5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(alunoArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(professor24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str36, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str38, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(pessoa41);
        org.junit.Assert.assertNotNull(pessoa43);
    }

    @Test
    public void test1919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1919");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.toString();
        com.unifacisa.tcc.domain.Professor professor2 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno4 = aluno0.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno4.primeiroNome("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor8 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str11 = aluno10.getEmail();
        aluno10.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        aluno15.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray19 = new com.unifacisa.tcc.domain.Aluno[] { aluno9, aluno10, aluno14, aluno15 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet20 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet20, alunoArray19);
        professor8.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet20);
        java.lang.String str23 = professor8.toString();
        com.unifacisa.tcc.domain.Professor professor25 = professor8.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor26 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str29 = aluno28.getEmail();
        aluno28.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str34 = aluno33.getEmail();
        aluno33.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray37 = new com.unifacisa.tcc.domain.Aluno[] { aluno27, aluno28, aluno32, aluno33 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet38 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet38, alunoArray37);
        professor26.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet38);
        com.unifacisa.tcc.domain.Professor professor41 = professor25.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet38);
        aluno7.setProfessor(professor41);
        com.unifacisa.tcc.domain.Professor professor44 = professor41.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa46 = professor41.numeroContato((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa48 = pessoa46.matricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa50 = pessoa46.primeiroNome("LoggerVM{name='null', level='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}'}");
        boolean boolean51 = pessoa6.equals((java.lang.Object) "LoggerVM{name='null', level='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}'}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str1, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(professor2);
        org.junit.Assert.assertNotNull(aluno4);
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(alunoArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str23, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor25);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(alunoArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(professor41);
        org.junit.Assert.assertNotNull(professor44);
        org.junit.Assert.assertNotNull(pessoa46);
        org.junit.Assert.assertNotNull(pessoa48);
        org.junit.Assert.assertNotNull(pessoa50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test1920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1920");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.toString();
        java.lang.Object obj2 = null;
        boolean boolean3 = authority0.equals(obj2);
        authority0.setName("Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}");
        com.unifacisa.tcc.domain.Authority authority6 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str7 = authority6.toString();
        java.lang.String str8 = authority6.toString();
        java.lang.String str9 = authority6.getName();
        authority6.setName("Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}");
        authority6.setName("User{login='null', firstName='null', lastName='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        boolean boolean14 = authority0.equals((java.lang.Object) "User{login='null', firstName='null', lastName='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Authority{name='null'}" + "'", str1, "Authority{name='null'}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Authority{name='null'}" + "'", str7, "Authority{name='null'}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Authority{name='null'}" + "'", str8, "Authority{name='null'}");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1921");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        loginVM0.setUsername("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.String str6 = loginVM0.getUsername();
        java.lang.String str7 = loginVM0.toString();
        java.lang.Boolean boolean8 = loginVM0.isRememberMe();
        loginVM0.setRememberMe((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str6, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=false}" + "'", str7, "LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=false}");
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + false + "'", boolean8, false);
    }

    @Test
    public void test1922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1922");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        java.lang.String str3 = persistentAuditEvent0.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = null;
        persistentAuditEvent0.setData(strMap4);
        com.unifacisa.tcc.domain.Professor professor16 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str19 = aluno18.getEmail();
        aluno18.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str24 = aluno23.getEmail();
        aluno23.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray27 = new com.unifacisa.tcc.domain.Aluno[] { aluno17, aluno18, aluno22, aluno23 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet28 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet28, alunoArray27);
        professor16.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet28);
        java.lang.String str31 = professor16.toString();
        com.unifacisa.tcc.domain.Professor professor33 = professor16.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet34 = professor16.getAlunos();
        com.unifacisa.tcc.domain.User user35 = new com.unifacisa.tcc.domain.User();
        java.lang.String str36 = user35.getCreatedBy();
        user35.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant39 = user35.getLastModifiedDate();
        boolean boolean40 = professor16.equals((java.lang.Object) instant39);
        com.unifacisa.tcc.domain.User user42 = new com.unifacisa.tcc.domain.User();
        java.lang.String str43 = user42.getCreatedBy();
        java.lang.String str44 = user42.getLangKey();
        java.time.Instant instant45 = user42.getCreatedDate();
        java.time.Instant instant56 = null;
        java.time.Instant instant58 = null;
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet64 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet64, strArray63);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM66 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant56, "error.validation", instant58, (java.util.Set<java.lang.String>) strSet64);
        java.lang.String str67 = managedUserVM66.getFirstName();
        java.lang.String str68 = managedUserVM66.getCreatedBy();
        java.util.Set<java.lang.String> strSet69 = managedUserVM66.getAuthorities();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM70 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) (-1L), "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoggerVM{name='null', level='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoggerVM{name='null', level='error.validation'}", true, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", instant39, "LoginVM{username='null', rememberMe=null}", instant45, strSet69);
        persistentAuditEvent0.setAuditEventDate(instant45);
        persistentAuditEvent0.setPrincipal("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='-1', diponibilidade='true'}");
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(alunoArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str31, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor33);
        org.junit.Assert.assertNotNull(alunoSet34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(instant39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(instant45);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(strSet69);
    }

    @Test
    public void test1923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1923");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        java.lang.Boolean boolean2 = loginVM0.isRememberMe();
        java.lang.String str3 = loginVM0.toString();
        java.lang.String str4 = loginVM0.getUsername();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str3, "LoginVM{username='null', rememberMe=null}");
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1924");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("Authority{name='Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}'}", "LoginVM{username='Authority{name='null'}', rememberMe=null}", "User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}'}", (java.lang.Long) 0L, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "LoggerVM{name='Authority{name='null'}', level='Authority{name='Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}'}'}", "Professor{id=null, primeiroNome='error.concurrencyFailure', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", "LoggerVM{name='', level='null'}", "LoggerVM{name='null', level='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}'}", "LoginVM{username='error.concurrencyFailure', rememberMe=null}", (java.lang.Long) 100L);
    }

    @Test
    public void test1925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1925");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        user0.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant4 = user0.getLastModifiedDate();
        user0.setLastName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str7 = user0.getLogin();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet8 = user0.getAuthorities();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper9 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user11 = userMapper9.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper12 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray13 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList14 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList14, userArray13);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList16 = userMapper12.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList14);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper17 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray18 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList19 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList19, userArray18);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList21 = userMapper17.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList19);
        java.util.List<com.unifacisa.tcc.domain.User> userList22 = userMapper12.userDTOsToUsers(userDTOList21);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper23 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray24 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList25 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList25, userArray24);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList27 = userMapper23.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList25);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper28 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray29 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList30 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList30, userArray29);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList32 = userMapper28.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList30);
        java.util.List<com.unifacisa.tcc.domain.User> userList33 = userMapper23.userDTOsToUsers(userDTOList32);
        java.util.List<com.unifacisa.tcc.domain.User> userList34 = userMapper12.userDTOsToUsers(userDTOList32);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList35 = userMapper9.usersToUserDTOs(userList34);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper36 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user38 = userMapper36.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper39 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray40 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList41 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList41, userArray40);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList43 = userMapper39.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList41);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList44 = userMapper36.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList41);
        java.time.Instant instant55 = null;
        java.time.Instant instant57 = null;
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet63 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet63, strArray62);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM65 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant55, "error.validation", instant57, (java.util.Set<java.lang.String>) strSet63);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet66 = userMapper36.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet63);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet67 = userMapper9.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet63);
        user0.setAuthorities(authoritySet67);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(instant4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(authoritySet8);
        org.junit.Assert.assertNotNull(user11);
        org.junit.Assert.assertNotNull(userArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(userDTOList16);
        org.junit.Assert.assertNotNull(userArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(userDTOList21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(userArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(userDTOList27);
        org.junit.Assert.assertNotNull(userArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(userDTOList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNotNull(userDTOList35);
        org.junit.Assert.assertNotNull(user38);
        org.junit.Assert.assertNotNull(userArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(userDTOList43);
        org.junit.Assert.assertNotNull(userDTOList44);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(authoritySet66);
        org.junit.Assert.assertNotNull(authoritySet67);
    }

    @Test
    public void test1926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1926");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.time.Instant instant2 = user0.getResetDate();
        java.lang.String str3 = user0.getImageUrl();
        user0.setLastModifiedBy("Authority{name='null'}");
        boolean boolean6 = user0.getActivated();
        org.junit.Assert.assertNull(instant2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1927");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.util.List<com.unifacisa.tcc.domain.User> userList10 = userMapper0.userDTOsToUsers(userDTOList9);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper11 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray12 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList13 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList13, userArray12);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList15 = userMapper11.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList13);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper16 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray17 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList18 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList18, userArray17);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList20 = userMapper16.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList18);
        java.util.List<com.unifacisa.tcc.domain.User> userList21 = userMapper11.userDTOsToUsers(userDTOList20);
        java.util.List<com.unifacisa.tcc.domain.User> userList22 = userMapper0.userDTOsToUsers(userDTOList20);
        com.unifacisa.tcc.domain.User user32 = new com.unifacisa.tcc.domain.User();
        user32.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str35 = user32.getLastName();
        java.time.Instant instant36 = user32.getLastModifiedDate();
        com.unifacisa.tcc.domain.User user38 = new com.unifacisa.tcc.domain.User();
        java.lang.String str39 = user38.getCreatedBy();
        java.lang.String str40 = user38.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user41 = new com.unifacisa.tcc.domain.User();
        user41.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant44 = user41.getLastModifiedDate();
        user38.setCreatedDate(instant44);
        java.time.Instant instant55 = null;
        java.time.Instant instant57 = null;
        java.time.Instant instant68 = null;
        java.time.Instant instant70 = null;
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet76 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet76, strArray75);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM78 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant68, "error.validation", instant70, (java.util.Set<java.lang.String>) strSet76);
        com.unifacisa.tcc.service.dto.UserDTO userDTO79 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant55, "", instant57, (java.util.Set<java.lang.String>) strSet76);
        com.unifacisa.tcc.service.dto.UserDTO userDTO80 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "LoggerVM{name='null', level='null'}", "error.concurrencyFailure", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", true, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "", "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", instant36, "", instant44, (java.util.Set<java.lang.String>) strSet76);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet81 = userMapper0.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet76);
        com.unifacisa.tcc.domain.User user83 = userMapper0.userFromId((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.User user85 = userMapper0.userFromId((java.lang.Long) 10L);
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(userDTOList15);
        org.junit.Assert.assertNotNull(userArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(userDTOList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str35, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(instant44);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(authoritySet81);
        org.junit.Assert.assertNotNull(user83);
        org.junit.Assert.assertNotNull(user85);
    }

    @Test
    public void test1928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1928");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setUserId("error.validation");
        java.lang.String str3 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setId((java.lang.Long) 1L);
        java.lang.String str6 = socialUserConnection0.getRefreshToken();
        java.lang.String str7 = socialUserConnection0.getUserId();
        java.lang.String str8 = socialUserConnection0.getImageURL();
        java.lang.Long long9 = socialUserConnection0.getExpireTime();
        socialUserConnection0.setId((java.lang.Long) 10L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "error.validation" + "'", str7, "error.validation");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(long9);
    }

    @Test
    public void test1929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1929");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        user0.setResetKey("LoginVM{username='null', rememberMe=null}");
        java.time.Instant instant8 = user0.getCreatedDate();
        java.lang.String str9 = user0.getResetKey();
        com.unifacisa.tcc.service.dto.UserDTO userDTO10 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str11 = user0.toString();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(instant8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str9, "LoginVM{username='null', rememberMe=null}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str11, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test1930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1930");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getAccessToken();
        java.lang.String str4 = socialUserConnection0.toString();
        socialUserConnection0.setProviderUserId("");
        java.lang.String str7 = socialUserConnection0.toString();
        java.lang.String str8 = socialUserConnection0.getAccessToken();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str4, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str7, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1931");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        java.lang.Boolean boolean2 = loginVM0.isRememberMe();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setPassword("hi!");
        java.lang.Boolean boolean7 = loginVM0.isRememberMe();
        java.lang.Boolean boolean8 = loginVM0.isRememberMe();
        loginVM0.setUsername("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        loginVM0.setPassword("Aluno{id=0, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='100', habilitadoTcc='false'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertEquals("'" + boolean7 + "' != '" + false + "'", boolean7, false);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + false + "'", boolean8, false);
    }

    @Test
    public void test1932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1932");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.toString();
        user0.setActivationKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        java.lang.String str5 = user0.getLogin();
        java.lang.String str6 = user0.getCreatedBy();
        java.lang.Long long7 = user0.getId();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str2, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(long7);
    }

    @Test
    public void test1933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1933");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        java.lang.Boolean boolean2 = professor0.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str13 = aluno12.getEmail();
        aluno12.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray16 = new com.unifacisa.tcc.domain.Aluno[] { aluno6, aluno7, aluno11, aluno12 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet17 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet17, alunoArray16);
        professor5.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet17);
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str21 = aluno20.getEmail();
        java.lang.Boolean boolean22 = aluno20.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor23 = professor5.addAluno(aluno20);
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection28 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean29 = aluno24.equals((java.lang.Object) socialUserConnection28);
        socialUserConnection28.setRefreshToken("error.validation");
        socialUserConnection28.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean34 = aluno20.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.domain.Professor professor35 = professor0.removeAluno(aluno20);
        com.unifacisa.tcc.domain.Professor professor36 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str37 = professor36.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor39 = professor36.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa41 = professor39.primeiroNome("error.concurrencyFailure");
        aluno20.setProfessor(professor39);
        java.lang.String str43 = professor39.toString();
        com.unifacisa.tcc.domain.User user44 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO45 = new com.unifacisa.tcc.service.dto.UserDTO(user44);
        java.time.Instant instant46 = user44.getResetDate();
        java.lang.String str47 = user44.getImageUrl();
        user44.setImageUrl("SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        com.unifacisa.tcc.domain.Professor professor50 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno51 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str53 = aluno52.getEmail();
        aluno52.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno56 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str58 = aluno57.getEmail();
        aluno57.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray61 = new com.unifacisa.tcc.domain.Aluno[] { aluno51, aluno52, aluno56, aluno57 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet62 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet62, alunoArray61);
        professor50.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet62);
        com.unifacisa.tcc.domain.Aluno aluno65 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str66 = aluno65.getEmail();
        java.lang.Boolean boolean67 = aluno65.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor68 = professor50.addAluno(aluno65);
        aluno65.setNumeroContato((java.lang.Long) 0L);
        aluno65.setHabilitadoTcc((java.lang.Boolean) true);
        boolean boolean73 = user44.equals((java.lang.Object) aluno65);
        com.unifacisa.tcc.domain.Professor professor74 = professor39.addAluno(aluno65);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(alunoArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(professor23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(pessoa41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Professor{id=null, primeiroNome='error.concurrencyFailure', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}" + "'", str43, "Professor{id=null, primeiroNome='error.concurrencyFailure', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNull(instant46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(alunoArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertNotNull(professor68);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(professor74);
    }

    @Test
    public void test1934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1934");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        professor17.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor17.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor24 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno31 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str32 = aluno31.getEmail();
        aluno31.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray35 = new com.unifacisa.tcc.domain.Aluno[] { aluno25, aluno26, aluno30, aluno31 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet36 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet36, alunoArray35);
        professor24.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet36);
        java.lang.String str39 = professor24.toString();
        java.lang.Long long40 = professor24.getMatricula();
        com.unifacisa.tcc.domain.Professor professor41 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str44 = aluno43.getEmail();
        aluno43.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno48 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str49 = aluno48.getEmail();
        aluno48.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray52 = new com.unifacisa.tcc.domain.Aluno[] { aluno42, aluno43, aluno47, aluno48 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet53 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet53, alunoArray52);
        professor41.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet53);
        java.lang.String str56 = professor41.toString();
        com.unifacisa.tcc.domain.Professor professor58 = professor41.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa60 = professor58.primeiroNome("");
        professor58.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor63 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno64 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno65 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str66 = aluno65.getEmail();
        aluno65.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno69 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno70 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str71 = aluno70.getEmail();
        aluno70.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray74 = new com.unifacisa.tcc.domain.Aluno[] { aluno64, aluno65, aluno69, aluno70 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet75 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet75, alunoArray74);
        professor63.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet75);
        professor58.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet75);
        com.unifacisa.tcc.domain.Professor professor79 = professor24.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet75);
        com.unifacisa.tcc.domain.Professor professor80 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno81 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno82 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str83 = aluno82.getEmail();
        aluno82.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno86 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno87 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str88 = aluno87.getEmail();
        aluno87.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray91 = new com.unifacisa.tcc.domain.Aluno[] { aluno81, aluno82, aluno86, aluno87 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet92 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet92, alunoArray91);
        professor80.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet92);
        professor79.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet92);
        com.unifacisa.tcc.domain.Professor professor96 = professor17.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet92);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet97 = professor96.getAlunos();
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet98 = professor96.getAlunos();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(alunoArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str39, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long40);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(alunoArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str56, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor58);
        org.junit.Assert.assertNotNull(pessoa60);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(alunoArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(professor79);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNotNull(alunoArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(professor96);
        org.junit.Assert.assertNotNull(alunoSet97);
        org.junit.Assert.assertNotNull(alunoSet98);
    }

    @Test
    public void test1935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1935");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.time.Instant instant2 = null;
        user0.setLastModifiedDate(instant2);
        user0.setResetKey("UserDTO{login='LoggerVM{name='null', level='null'}', firstName='error.concurrencyFailure', lastName='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', imageUrl='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', activated=true, langKey='', createdBy=Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}, createdDate=2021-03-24T23:46:14.824Z, lastModifiedBy='', lastModifiedDate=2021-03-24T23:46:14.824Z, authorities=[hi!, error.validation, ]}");
    }

    @Test
    public void test1936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1936");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor16 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str19 = aluno18.getEmail();
        aluno18.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str24 = aluno23.getEmail();
        aluno23.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray27 = new com.unifacisa.tcc.domain.Aluno[] { aluno17, aluno18, aluno22, aluno23 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet28 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet28, alunoArray27);
        professor16.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet28);
        com.unifacisa.tcc.domain.Professor professor31 = professor0.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet28);
        com.unifacisa.tcc.domain.Professor professor33 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa35 = professor0.matricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa37 = professor0.email("LoggerVM{name='null', level='ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}'}");
        professor0.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(alunoArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNotNull(professor33);
        org.junit.Assert.assertNotNull(pessoa35);
        org.junit.Assert.assertNotNull(pessoa37);
    }

    @Test
    public void test1937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1937");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant3 = user0.getLastModifiedDate();
        user0.setResetKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet6 = user0.getAuthorities();
        java.lang.String str7 = user0.toString();
        user0.setActivationKey("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}");
        org.junit.Assert.assertNotNull(instant3);
        org.junit.Assert.assertNotNull(authoritySet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str7, "User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test1938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1938");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray31 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno22, aluno26, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet32 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet32, alunoArray31);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str36 = aluno35.getEmail();
        java.lang.Boolean boolean37 = aluno35.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor38 = professor20.addAluno(aluno35);
        com.unifacisa.tcc.domain.Professor professor39 = aluno35.getProfessor();
        com.unifacisa.tcc.domain.Professor professor40 = aluno35.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        aluno41.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor45 = professor40.removeAluno(aluno41);
        aluno41.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor48 = professor17.removeAluno(aluno41);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa50 = aluno41.matricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa52 = pessoa50.primeiroNome("error.concurrencyFailure");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(alunoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(professor38);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(professor40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(professor45);
        org.junit.Assert.assertNotNull(professor48);
        org.junit.Assert.assertNotNull(pessoa50);
        org.junit.Assert.assertNotNull(pessoa52);
    }

    @Test
    public void test1939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1939");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("LoginVM{username='error.concurrencyFailure', rememberMe=null}", "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}", "User{login='null', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", (java.lang.Long) 1L, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "ManagedUserVM{} UserDTO{login='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", (java.lang.Long) 100L);
        socialUserConnection11.setAccessToken("LoginVM{username='error.concurrencyFailure', rememberMe=false}");
        socialUserConnection11.setProviderId("Authority{name='null'}");
        java.lang.String str16 = socialUserConnection11.getAccessToken();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "LoginVM{username='error.concurrencyFailure', rememberMe=false}" + "'", str16, "LoginVM{username='error.concurrencyFailure', rememberMe=false}");
    }

    @Test
    public void test1940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1940");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}", "ManagedUserVM{} UserDTO{login='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "LoggerVM{name='', level='null'}");
    }

    @Test
    public void test1941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1941");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.String str2 = persistentAuditEvent0.getPrincipal();
        persistentAuditEvent0.setAuditEventType("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent5 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.User user6 = new com.unifacisa.tcc.domain.User();
        java.lang.String str7 = user6.getCreatedBy();
        java.lang.String str8 = user6.getLangKey();
        java.time.Instant instant9 = user6.getCreatedDate();
        persistentAuditEvent5.setAuditEventDate(instant9);
        persistentAuditEvent0.setAuditEventDate(instant9);
        persistentAuditEvent0.setId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.User user14 = new com.unifacisa.tcc.domain.User();
        java.lang.String str15 = user14.getCreatedBy();
        java.lang.String str16 = user14.getLangKey();
        com.unifacisa.tcc.domain.Professor professor17 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str20 = aluno19.getEmail();
        aluno19.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray28 = new com.unifacisa.tcc.domain.Aluno[] { aluno18, aluno19, aluno23, aluno24 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet29 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet29, alunoArray28);
        professor17.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet29);
        java.lang.String str32 = professor17.toString();
        com.unifacisa.tcc.domain.Professor professor33 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str36 = aluno35.getEmail();
        aluno35.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str41 = aluno40.getEmail();
        aluno40.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray44 = new com.unifacisa.tcc.domain.Aluno[] { aluno34, aluno35, aluno39, aluno40 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet45 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet45, alunoArray44);
        professor33.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet45);
        com.unifacisa.tcc.domain.Professor professor48 = professor17.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet45);
        boolean boolean49 = user14.equals((java.lang.Object) professor17);
        java.lang.String str50 = user14.getLogin();
        user14.setId((java.lang.Long) 0L);
        user14.setImageUrl("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.User user55 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO56 = new com.unifacisa.tcc.service.dto.UserDTO(user55);
        java.lang.String str57 = user55.getImageUrl();
        boolean boolean59 = user55.equals((java.lang.Object) (byte) -1);
        java.lang.String str60 = user55.getLastName();
        user55.setResetKey("LoginVM{username='null', rememberMe=null}");
        java.time.Instant instant63 = user55.getCreatedDate();
        java.time.Instant instant64 = user55.getLastModifiedDate();
        user14.setLastModifiedDate(instant64);
        persistentAuditEvent0.setAuditEventDate(instant64);
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(instant9);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(alunoArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str32, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(alunoArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(professor48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(instant63);
        org.junit.Assert.assertNotNull(instant64);
    }

    @Test
    public void test1942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1942");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long1 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent2 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant3 = persistentAuditEvent2.getAuditEventDate();
        java.lang.Long long4 = persistentAuditEvent2.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent5 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = persistentAuditEvent5.getData();
        persistentAuditEvent2.setData(strMap6);
        persistentAuditEvent0.setData(strMap6);
        persistentAuditEvent0.setId((java.lang.Long) 0L);
        persistentAuditEvent0.setId((java.lang.Long) 1L);
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(instant3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(strMap6);
    }

    @Test
    public void test1943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1943");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str1 = loggerVM0.getName();
        loggerVM0.setLevel("error.validation");
        java.lang.String str4 = loggerVM0.getLevel();
        java.lang.String str5 = loggerVM0.toString();
        java.lang.String str6 = loggerVM0.toString();
        java.lang.String str7 = loggerVM0.getLevel();
        loggerVM0.setLevel("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "error.validation" + "'", str4, "error.validation");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str5, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str6, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "error.validation" + "'", str7, "error.validation");
    }

    @Test
    public void test1944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1944");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.toString();
        java.lang.Object obj2 = null;
        boolean boolean3 = authority0.equals(obj2);
        authority0.setName("Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}");
        java.lang.String str6 = authority0.toString();
        authority0.setName("LoggerVM{name='', level='error.validation'}");
        authority0.setName("Professor{id=null, primeiroNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='false'}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Authority{name='null'}" + "'", str1, "Authority{name='null'}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Authority{name='Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}'}" + "'", str6, "Authority{name='Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}'}");
    }

    @Test
    public void test1945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1945");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        java.lang.String str4 = user0.getLogin();
        com.unifacisa.tcc.domain.User user5 = new com.unifacisa.tcc.domain.User();
        user5.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant8 = user5.getLastModifiedDate();
        user0.setLastModifiedDate(instant8);
        java.lang.String str10 = user0.getActivationKey();
        user0.setPassword("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.lang.String str13 = user0.getActivationKey();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(instant8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test1946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1946");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        user0.setLastModifiedBy("");
        user0.setLastName("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.lang.String str8 = user0.getLastName();
        user0.setEmail("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        java.time.Instant instant21 = null;
        java.time.Instant instant23 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet29 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet29, strArray28);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM31 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant21, "error.validation", instant23, (java.util.Set<java.lang.String>) strSet29);
        java.lang.String str32 = managedUserVM31.getFirstName();
        java.lang.String str33 = managedUserVM31.getCreatedBy();
        java.util.Set<java.lang.String> strSet34 = managedUserVM31.getAuthorities();
        java.lang.String str35 = managedUserVM31.toString();
        java.lang.String str36 = managedUserVM31.getImageUrl();
        boolean boolean37 = user0.equals((java.lang.Object) managedUserVM31);
        com.unifacisa.tcc.domain.Authority authority38 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str39 = authority38.toString();
        java.lang.String str40 = authority38.toString();
        authority38.setName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM43 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str44 = loginVM43.getUsername();
        java.lang.Boolean boolean45 = loginVM43.isRememberMe();
        java.lang.String str46 = loginVM43.toString();
        java.lang.String str47 = loginVM43.getPassword();
        boolean boolean48 = authority38.equals((java.lang.Object) loginVM43);
        loginVM43.setRememberMe((java.lang.Boolean) true);
        boolean boolean51 = user0.equals((java.lang.Object) loginVM43);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str8, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str35, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Authority{name='null'}" + "'", str39, "Authority{name='null'}");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Authority{name='null'}" + "'", str40, "Authority{name='null'}");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str46, "LoginVM{username='null', rememberMe=null}");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test1947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1947");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM20 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant10, "error.validation", instant12, (java.util.Set<java.lang.String>) strSet18);
        java.lang.String str21 = managedUserVM20.getFirstName();
        java.lang.String str22 = managedUserVM20.toString();
        java.lang.String str23 = managedUserVM20.getEmail();
        java.util.Set<java.lang.String> strSet24 = managedUserVM20.getAuthorities();
        java.lang.String str25 = managedUserVM20.toString();
        java.lang.String str26 = managedUserVM20.toString();
        java.lang.String str27 = managedUserVM20.getLastModifiedBy();
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str22, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "error.validation" + "'", str23, "error.validation");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str25, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str26, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "error.validation" + "'", str27, "error.validation");
    }

    @Test
    public void test1948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1948");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.domain.User user6 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user8 = userMapper0.userFromId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.User user10 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user12 = userMapper0.userFromId((java.lang.Long) (-1L));
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.time.Instant instant35 = null;
        java.time.Instant instant37 = null;
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet43 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet43, strArray42);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM45 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant35, "error.validation", instant37, (java.util.Set<java.lang.String>) strSet43);
        com.unifacisa.tcc.service.dto.UserDTO userDTO46 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant22, "", instant24, (java.util.Set<java.lang.String>) strSet43);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet47 = userMapper0.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet43);
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(user6);
        org.junit.Assert.assertNotNull(user8);
        org.junit.Assert.assertNotNull(user10);
        org.junit.Assert.assertNotNull(user12);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(authoritySet47);
    }

    @Test
    public void test1949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1949");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList1 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList2 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList3 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM4 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str5 = loggerVM4.getName();
        loggerVM4.setLevel("error.validation");
        java.lang.String str8 = loggerVM4.getLevel();
        java.lang.String str9 = loggerVM4.toString();
        java.lang.String str10 = loggerVM4.toString();
        loggerVM4.setName("error.concurrencyFailure");
        java.lang.String str13 = loggerVM4.getName();
        logsResource0.changeLevel(loggerVM4);
        loggerVM4.setLevel("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        java.lang.String str17 = loggerVM4.toString();
        org.junit.Assert.assertNotNull(loggerVMList1);
        org.junit.Assert.assertNotNull(loggerVMList2);
        org.junit.Assert.assertNotNull(loggerVMList3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "error.validation" + "'", str8, "error.validation");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str9, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str10, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "error.concurrencyFailure" + "'", str13, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "LoggerVM{name='error.concurrencyFailure', level='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}'}" + "'", str17, "LoggerVM{name='error.concurrencyFailure', level='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}'}");
    }

    @Test
    public void test1950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1950");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setProviderId("");
        java.lang.String str4 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setProviderId("LoggerVM{name='null', level='error.validation'}");
        socialUserConnection0.setRefreshToken("Aluno{id=-1, primeiroNome='null', segundoNome='LoginVM{username='null', rememberMe=false}', matricula='0', email='null', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1951");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent3 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = persistentAuditEvent3.getData();
        persistentAuditEvent0.setData(strMap4);
        java.lang.Long long6 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setAuditEventType("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant9 = persistentAuditEvent0.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = persistentAuditEvent0.getData();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent11 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant12 = persistentAuditEvent11.getAuditEventDate();
        java.lang.Long long13 = persistentAuditEvent11.getId();
        java.lang.Long long14 = persistentAuditEvent11.getId();
        com.unifacisa.tcc.domain.User user15 = new com.unifacisa.tcc.domain.User();
        java.lang.String str16 = user15.getCreatedBy();
        java.lang.String str17 = user15.getLangKey();
        java.time.Instant instant18 = user15.getCreatedDate();
        persistentAuditEvent11.setAuditEventDate(instant18);
        java.lang.String str20 = persistentAuditEvent11.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = persistentAuditEvent11.getData();
        persistentAuditEvent0.setData(strMap21);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = persistentAuditEvent0.getData();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(instant9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(instant12);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNull(long14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(instant18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap23);
    }

    @Test
    public void test1952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1952");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM1 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str2 = loggerVM1.getName();
        loggerVM1.setLevel("error.validation");
        java.lang.String str5 = loggerVM1.getLevel();
        java.lang.String str6 = loggerVM1.toString();
        java.lang.String str7 = loggerVM1.toString();
        java.lang.String str8 = loggerVM1.toString();
        loggerVM1.setName("LoginVM{username='null', rememberMe=false}");
        logsResource0.changeLevel(loggerVM1);
        java.lang.String str12 = loggerVM1.getName();
        java.lang.String str13 = loggerVM1.getName();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "error.validation" + "'", str5, "error.validation");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str6, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str7, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str8, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str12, "LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str13, "LoginVM{username='null', rememberMe=false}");
    }

    @Test
    public void test1953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1953");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.time.Instant instant34 = userDTO33.getLastModifiedDate();
        userDTO33.setLogin("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        userDTO33.setId((java.lang.Long) 0L);
        java.lang.String str39 = userDTO33.getCreatedBy();
        java.time.Instant instant40 = userDTO33.getLastModifiedDate();
        java.lang.String str41 = userDTO33.getFirstName();
        java.lang.String str42 = userDTO33.toString();
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(instant34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "error.concurrencyFailure" + "'", str39, "error.concurrencyFailure");
        org.junit.Assert.assertNull(instant40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UserDTO{login='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str42, "UserDTO{login='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
    }

    @Test
    public void test1954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1954");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setUserId("error.validation");
        java.lang.String str3 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setId((java.lang.Long) 1L);
        java.lang.String str6 = socialUserConnection0.getRefreshToken();
        java.lang.String str7 = socialUserConnection0.getProviderUserId();
        java.lang.String str8 = socialUserConnection0.getAccessToken();
        socialUserConnection0.setProviderUserId("User{login='null', firstName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str11 = socialUserConnection0.getAccessToken();
        socialUserConnection0.setProfileURL("LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=false}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1955");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        java.lang.Long long20 = professor17.getNumeroContato();
        professor17.setNumeroContato((java.lang.Long) 100L);
        java.lang.String str23 = professor17.getEmail();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(long20);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test1956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1956");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant3 = user0.getLastModifiedDate();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet4 = null;
        user0.setAuthorities(authoritySet4);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent6 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.User user7 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO8 = new com.unifacisa.tcc.service.dto.UserDTO(user7);
        java.time.Instant instant9 = user7.getResetDate();
        java.lang.String str10 = user7.getResetKey();
        com.unifacisa.tcc.domain.User user21 = new com.unifacisa.tcc.domain.User();
        user21.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str24 = user21.getLastName();
        java.time.Instant instant25 = user21.getLastModifiedDate();
        com.unifacisa.tcc.domain.User user27 = new com.unifacisa.tcc.domain.User();
        user27.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str30 = user27.getLastName();
        java.time.Instant instant31 = user27.getLastModifiedDate();
        java.time.Instant instant41 = null;
        java.time.Instant instant43 = null;
        java.time.Instant instant54 = null;
        java.time.Instant instant56 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet62 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet62, strArray61);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM64 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant54, "error.validation", instant56, (java.util.Set<java.lang.String>) strSet62);
        com.unifacisa.tcc.service.dto.UserDTO userDTO65 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant41, "", instant43, (java.util.Set<java.lang.String>) strSet62);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM66 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) (-1L), "LoggerVM{name='null', level='error.validation'}", "Authority{name='null'}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", false, "LoginVM{username='null', rememberMe=false}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "LoggerVM{name='null', level='error.validation'}", instant25, "", instant31, (java.util.Set<java.lang.String>) strSet62);
        user7.setResetDate(instant25);
        persistentAuditEvent6.setAuditEventDate(instant25);
        user0.setLastModifiedDate(instant25);
        org.junit.Assert.assertNotNull(instant3);
        org.junit.Assert.assertNull(instant9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str24, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str30, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant31);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test1957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1957");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.time.Instant instant3 = user0.getLastModifiedDate();
        user0.setActivationKey("UserDTO{login='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        com.unifacisa.tcc.domain.User user6 = new com.unifacisa.tcc.domain.User();
        user6.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant9 = user6.getLastModifiedDate();
        user6.setResetKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet12 = user6.getAuthorities();
        com.unifacisa.tcc.service.dto.UserDTO userDTO13 = new com.unifacisa.tcc.service.dto.UserDTO(user6);
        java.util.Set<java.lang.String> strSet14 = userDTO13.getAuthorities();
        boolean boolean15 = user0.equals((java.lang.Object) strSet14);
        java.lang.Long long16 = user0.getId();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(instant3);
        org.junit.Assert.assertNotNull(instant9);
        org.junit.Assert.assertNotNull(authoritySet12);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(long16);
    }

    @Test
    public void test1958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1958");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.String str2 = persistentAuditEvent0.getPrincipal();
        persistentAuditEvent0.setAuditEventType("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent5 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.User user6 = new com.unifacisa.tcc.domain.User();
        java.lang.String str7 = user6.getCreatedBy();
        java.lang.String str8 = user6.getLangKey();
        java.time.Instant instant9 = user6.getCreatedDate();
        persistentAuditEvent5.setAuditEventDate(instant9);
        persistentAuditEvent0.setAuditEventDate(instant9);
        persistentAuditEvent0.setId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent14 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant15 = persistentAuditEvent14.getAuditEventDate();
        java.lang.Long long16 = persistentAuditEvent14.getId();
        java.lang.String str17 = persistentAuditEvent14.getAuditEventType();
        java.lang.String str18 = persistentAuditEvent14.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = persistentAuditEvent14.getData();
        persistentAuditEvent0.setData(strMap19);
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(instant9);
        org.junit.Assert.assertNull(instant15);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test1959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1959");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO4 = new com.unifacisa.tcc.service.dto.UserDTO(user3);
        java.lang.String str5 = user3.getImageUrl();
        boolean boolean7 = user3.equals((java.lang.Object) (byte) -1);
        java.lang.String str8 = user3.getLastName();
        java.lang.String str9 = user3.getFirstName();
        java.time.Instant instant10 = user3.getResetDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO11 = userMapper0.userToUserDTO(user3);
        boolean boolean12 = userDTO11.isActivated();
        java.lang.String str13 = userDTO11.getLastModifiedBy();
        java.lang.String str14 = userDTO11.getImageUrl();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(userDTO11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test1960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1960");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList1 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList2 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList3 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM4 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str5 = loggerVM4.getLevel();
        java.lang.String str6 = loggerVM4.getName();
        loggerVM4.setLevel("ManagedUserVM{} UserDTO{login='LoginVM{username='null', rememberMe=false}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        // The following exception was thrown during execution in test generation
        try {
            logsResource0.changeLevel(loggerVM4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: name argument cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(loggerVMList1);
        org.junit.Assert.assertNotNull(loggerVMList2);
        org.junit.Assert.assertNotNull(loggerVMList3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1961");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        java.lang.Boolean boolean2 = loginVM0.isRememberMe();
        java.lang.String str3 = loginVM0.toString();
        java.lang.String str4 = loginVM0.getPassword();
        java.lang.String str5 = loginVM0.toString();
        java.lang.String str6 = loginVM0.getPassword();
        loginVM0.setUsername("");
        java.lang.Boolean boolean9 = loginVM0.isRememberMe();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str3, "LoginVM{username='null', rememberMe=null}");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str5, "LoginVM{username='null', rememberMe=null}");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(boolean9);
    }

    @Test
    public void test1962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1962");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO4 = new com.unifacisa.tcc.service.dto.UserDTO(user3);
        java.lang.String str5 = user3.getImageUrl();
        boolean boolean7 = user3.equals((java.lang.Object) (byte) -1);
        java.lang.String str8 = user3.getLastName();
        java.lang.String str9 = user3.getFirstName();
        java.time.Instant instant10 = user3.getResetDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO11 = userMapper0.userToUserDTO(user3);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper12 = new com.unifacisa.tcc.service.mapper.UserMapper();
        java.time.Instant instant23 = null;
        java.time.Instant instant25 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet31 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet31, strArray30);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM33 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant23, "error.validation", instant25, (java.util.Set<java.lang.String>) strSet31);
        java.lang.String str34 = managedUserVM33.getFirstName();
        java.lang.String str35 = managedUserVM33.getPassword();
        java.util.Set<java.lang.String> strSet36 = managedUserVM33.getAuthorities();
        java.util.Set<java.lang.String> strSet37 = managedUserVM33.getAuthorities();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet38 = userMapper12.authoritiesFromStrings(strSet37);
        com.unifacisa.tcc.domain.User user40 = userMapper12.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper41 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray42 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList43 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList43, userArray42);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList45 = userMapper41.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList43);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper46 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray47 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList48 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList48, userArray47);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList50 = userMapper46.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList48);
        java.util.List<com.unifacisa.tcc.domain.User> userList51 = userMapper41.userDTOsToUsers(userDTOList50);
        java.util.List<com.unifacisa.tcc.domain.User> userList52 = userMapper12.userDTOsToUsers(userDTOList50);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper53 = new com.unifacisa.tcc.service.mapper.UserMapper();
        java.time.Instant instant64 = null;
        java.time.Instant instant66 = null;
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet72 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet72, strArray71);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM74 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant64, "error.validation", instant66, (java.util.Set<java.lang.String>) strSet72);
        java.lang.String str75 = managedUserVM74.getFirstName();
        java.lang.String str76 = managedUserVM74.getPassword();
        java.util.Set<java.lang.String> strSet77 = managedUserVM74.getAuthorities();
        java.util.Set<java.lang.String> strSet78 = managedUserVM74.getAuthorities();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet79 = userMapper53.authoritiesFromStrings(strSet78);
        com.unifacisa.tcc.domain.User user81 = userMapper53.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper82 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray83 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList84 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList84, userArray83);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList86 = userMapper82.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList84);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper87 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray88 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList89 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList89, userArray88);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList91 = userMapper87.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList89);
        java.util.List<com.unifacisa.tcc.domain.User> userList92 = userMapper82.userDTOsToUsers(userDTOList91);
        java.util.List<com.unifacisa.tcc.domain.User> userList93 = userMapper53.userDTOsToUsers(userDTOList91);
        java.util.List<com.unifacisa.tcc.domain.User> userList94 = userMapper12.userDTOsToUsers(userDTOList91);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList95 = userMapper0.usersToUserDTOs(userList94);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(userDTO11);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "error.concurrencyFailure" + "'", str35, "error.concurrencyFailure");
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNotNull(authoritySet38);
        org.junit.Assert.assertNotNull(user40);
        org.junit.Assert.assertNotNull(userArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(userDTOList45);
        org.junit.Assert.assertNotNull(userArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(userDTOList50);
        org.junit.Assert.assertNotNull(userList51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "error.concurrencyFailure" + "'", str76, "error.concurrencyFailure");
        org.junit.Assert.assertNotNull(strSet77);
        org.junit.Assert.assertNotNull(strSet78);
        org.junit.Assert.assertNotNull(authoritySet79);
        org.junit.Assert.assertNotNull(user81);
        org.junit.Assert.assertNotNull(userArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(userDTOList86);
        org.junit.Assert.assertNotNull(userArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(userDTOList91);
        org.junit.Assert.assertNotNull(userList92);
        org.junit.Assert.assertNotNull(userList93);
        org.junit.Assert.assertNotNull(userList94);
        org.junit.Assert.assertNotNull(userDTOList95);
    }

    @Test
    public void test1963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1963");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        user3.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant6 = user3.getLastModifiedDate();
        user0.setCreatedDate(instant6);
        java.lang.String str8 = user0.toString();
        java.time.Instant instant9 = user0.getCreatedDate();
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM10 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM10.setKey("error.concurrencyFailure");
        java.lang.String str13 = keyAndPasswordVM10.getNewPassword();
        keyAndPasswordVM10.setNewPassword("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        keyAndPasswordVM10.setNewPassword("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        boolean boolean18 = user0.equals((java.lang.Object) keyAndPasswordVM10);
        java.lang.String str19 = keyAndPasswordVM10.getKey();
        keyAndPasswordVM10.setKey("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', refreshToken='error.validation', expireTime=null}");
        java.lang.String str22 = keyAndPasswordVM10.getNewPassword();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str8, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "error.concurrencyFailure" + "'", str19, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}" + "'", str22, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
    }

    @Test
    public void test1964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1964");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        java.lang.Boolean boolean17 = aluno15.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor18 = professor0.addAluno(aluno15);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa20 = aluno15.primeiroNome("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.Long long21 = pessoa20.getNumeroContato();
        java.lang.String str22 = pessoa20.getPrimeiroNome();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNotNull(pessoa20);
        org.junit.Assert.assertNull(long21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str22, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test1965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1965");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getSecret();
        java.lang.Long long4 = socialUserConnection0.getRank();
        java.lang.String str5 = socialUserConnection0.getProviderId();
        socialUserConnection0.setUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.Long long8 = socialUserConnection0.getExpireTime();
        java.lang.String str9 = socialUserConnection0.toString();
        java.lang.Long long10 = socialUserConnection0.getId();
        java.lang.String str11 = socialUserConnection0.getAccessToken();
        java.lang.String str12 = socialUserConnection0.getProviderUserId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str9, "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test1966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1966");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        user0.setCreatedBy("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str5 = user0.toString();
        com.unifacisa.tcc.domain.User user6 = new com.unifacisa.tcc.domain.User();
        java.lang.String str7 = user6.getCreatedBy();
        java.lang.String str8 = user6.getLastModifiedBy();
        user6.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        java.lang.String str12 = user11.getCreatedBy();
        user11.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO15 = new com.unifacisa.tcc.service.dto.UserDTO(user11);
        java.time.Instant instant16 = userDTO15.getLastModifiedDate();
        user6.setCreatedDate(instant16);
        user0.setResetDate(instant16);
        java.lang.String str19 = user0.getLastModifiedBy();
        java.lang.String str20 = user0.getLastModifiedBy();
        user0.setLastModifiedBy("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='0', habilitadoTcc='false'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str5, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(instant16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test1967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1967");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        java.lang.String str4 = user0.getLogin();
        com.unifacisa.tcc.domain.User user5 = new com.unifacisa.tcc.domain.User();
        user5.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant8 = user5.getLastModifiedDate();
        user0.setLastModifiedDate(instant8);
        java.lang.String str10 = user0.getLogin();
        user0.setLastName("");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper13 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray14 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList15 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList15, userArray14);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList17 = userMapper13.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList15);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper18 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray19 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList20 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList20, userArray19);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList22 = userMapper18.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList20);
        java.util.List<com.unifacisa.tcc.domain.User> userList23 = userMapper13.userDTOsToUsers(userDTOList22);
        com.unifacisa.tcc.domain.User user25 = userMapper13.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO26 = new com.unifacisa.tcc.service.dto.UserDTO(user25);
        java.time.Instant instant27 = userDTO26.getLastModifiedDate();
        user0.setLastModifiedDate(instant27);
        com.unifacisa.tcc.service.dto.UserDTO userDTO29 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str30 = user0.getLogin();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(instant8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(userArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(userDTOList17);
        org.junit.Assert.assertNotNull(userArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(userDTOList22);
        org.junit.Assert.assertNotNull(userList23);
        org.junit.Assert.assertNotNull(user25);
        org.junit.Assert.assertNotNull(instant27);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test1968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1968");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setUserId("error.validation");
        java.lang.String str3 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setId((java.lang.Long) 1L);
        java.lang.String str6 = socialUserConnection0.getRefreshToken();
        java.lang.String str7 = socialUserConnection0.getUserId();
        socialUserConnection0.setId((java.lang.Long) 0L);
        socialUserConnection0.setProviderId("User{login='null', firstName='null', lastName='null', email='null', imageUrl='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "error.validation" + "'", str7, "error.validation");
    }

    @Test
    public void test1969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1969");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        socialUserConnection0.setId((java.lang.Long) (-1L));
        java.lang.String str7 = socialUserConnection0.getImageURL();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1970");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getAccessToken();
        java.lang.String str4 = socialUserConnection0.getProviderId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1971");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        java.lang.Boolean boolean2 = professor0.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str13 = aluno12.getEmail();
        aluno12.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray16 = new com.unifacisa.tcc.domain.Aluno[] { aluno6, aluno7, aluno11, aluno12 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet17 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet17, alunoArray16);
        professor5.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet17);
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str21 = aluno20.getEmail();
        java.lang.Boolean boolean22 = aluno20.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor23 = professor5.addAluno(aluno20);
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection28 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean29 = aluno24.equals((java.lang.Object) socialUserConnection28);
        socialUserConnection28.setRefreshToken("error.validation");
        socialUserConnection28.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean34 = aluno20.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.domain.Professor professor35 = professor0.removeAluno(aluno20);
        com.unifacisa.tcc.domain.Professor professor36 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str37 = professor36.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor39 = professor36.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa41 = professor39.primeiroNome("error.concurrencyFailure");
        aluno20.setProfessor(professor39);
        com.unifacisa.tcc.domain.Professor professor43 = aluno20.getProfessor();
        com.unifacisa.tcc.domain.Professor professor44 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str45 = professor44.getPrimeiroNome();
        java.lang.Boolean boolean46 = professor44.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa48 = professor44.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor49 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno51 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str52 = aluno51.getEmail();
        aluno51.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno56 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str57 = aluno56.getEmail();
        aluno56.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray60 = new com.unifacisa.tcc.domain.Aluno[] { aluno50, aluno51, aluno55, aluno56 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet61 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet61, alunoArray60);
        professor49.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet61);
        java.lang.String str64 = professor49.toString();
        com.unifacisa.tcc.domain.Professor professor66 = professor49.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa68 = professor66.primeiroNome("");
        professor66.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor71 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno72 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno73 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str74 = aluno73.getEmail();
        aluno73.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno77 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno78 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str79 = aluno78.getEmail();
        aluno78.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray82 = new com.unifacisa.tcc.domain.Aluno[] { aluno72, aluno73, aluno77, aluno78 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet83 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet83, alunoArray82);
        professor71.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet83);
        professor66.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet83);
        com.unifacisa.tcc.domain.Professor professor87 = professor44.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet83);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa89 = professor44.primeiroNome("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str90 = professor44.getSegundoNome();
        aluno20.setProfessor(professor44);
        professor44.setSegundoNome("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='Authority{name='null'}', activationKey='null'}");
        java.lang.String str94 = professor44.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(alunoArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(professor23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(pessoa41);
        org.junit.Assert.assertNotNull(professor43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(pessoa48);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(alunoArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str64, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor66);
        org.junit.Assert.assertNotNull(pessoa68);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(alunoArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(professor87);
        org.junit.Assert.assertNotNull(pessoa89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='Authority{name='null'}', activationKey='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str94, "Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='Authority{name='null'}', activationKey='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test1972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1972");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str12 = aluno11.getEmail();
        aluno11.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray15 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno6, aluno10, aluno11 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet16 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet16, alunoArray15);
        professor4.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        java.lang.String str19 = professor4.toString();
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray31 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno22, aluno26, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet32 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet32, alunoArray31);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Professor professor35 = professor4.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Aluno aluno36 = aluno0.professor(professor35);
        com.unifacisa.tcc.domain.Aluno aluno38 = aluno0.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa40 = aluno0.numeroContato((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.Aluno aluno42 = aluno0.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor43 = aluno42.getProfessor();
        aluno42.setMatricula((java.lang.Long) 1L);
        aluno42.setHabilitadoTcc((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(alunoArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str19, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(alunoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNotNull(aluno36);
        org.junit.Assert.assertNotNull(aluno38);
        org.junit.Assert.assertNotNull(pessoa40);
        org.junit.Assert.assertNotNull(aluno42);
        org.junit.Assert.assertNotNull(professor43);
    }

    @Test
    public void test1973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1973");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        user0.setCreatedBy("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str5 = user0.toString();
        com.unifacisa.tcc.domain.User user6 = new com.unifacisa.tcc.domain.User();
        java.lang.String str7 = user6.getCreatedBy();
        java.lang.String str8 = user6.getLastModifiedBy();
        user6.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        java.lang.String str12 = user11.getCreatedBy();
        user11.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO15 = new com.unifacisa.tcc.service.dto.UserDTO(user11);
        java.time.Instant instant16 = userDTO15.getLastModifiedDate();
        user6.setCreatedDate(instant16);
        user0.setResetDate(instant16);
        java.lang.String str19 = user0.getLastModifiedBy();
        user0.setImageUrl("LoggerVM{name='null', level='SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}'}");
        java.time.Instant instant22 = user0.getLastModifiedDate();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str5, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(instant16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(instant22);
    }

    @Test
    public void test1974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1974");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str3 = user0.getLastModifiedBy();
        user0.setImageUrl("ManagedUserVM{} UserDTO{login='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str6 = user0.getActivationKey();
        java.lang.String str7 = user0.getFirstName();
        java.lang.String str8 = user0.getResetKey();
        user0.setResetKey("LoggerVM{name='', level='error.validation'}");
        java.lang.String str11 = user0.getLastModifiedBy();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1975");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        persistentAuditEvent0.setId((java.lang.Long) (-1L));
        java.time.Instant instant4 = persistentAuditEvent0.getAuditEventDate();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(instant4);
    }

    @Test
    public void test1976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1976");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setPassword("Authority{name='null'}");
        loginVM0.setUsername("Authority{name='null'}");
        java.lang.String str6 = loginVM0.toString();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.Boolean boolean9 = loginVM0.isRememberMe();
        loginVM0.setRememberMe((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "LoginVM{username='Authority{name='null'}', rememberMe=null}" + "'", str6, "LoginVM{username='Authority{name='null'}', rememberMe=null}");
        org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + false + "'", boolean9, false);
    }

    @Test
    public void test1977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1977");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM20 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant10, "error.validation", instant12, (java.util.Set<java.lang.String>) strSet18);
        java.lang.String str21 = managedUserVM20.getFirstName();
        java.lang.String str22 = managedUserVM20.getPassword();
        java.util.Set<java.lang.String> strSet23 = managedUserVM20.getAuthorities();
        java.lang.String str24 = managedUserVM20.toString();
        java.lang.String str25 = managedUserVM20.getPassword();
        java.lang.String str26 = managedUserVM20.getPassword();
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "error.concurrencyFailure" + "'", str22, "error.concurrencyFailure");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str24, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "error.concurrencyFailure" + "'", str25, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "error.concurrencyFailure" + "'", str26, "error.concurrencyFailure");
    }

    @Test
    public void test1978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1978");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLangKey();
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str6 = aluno5.getEmail();
        aluno5.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str11 = aluno10.getEmail();
        aluno10.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray14 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno5, aluno9, aluno10 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet15 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet15, alunoArray14);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet15);
        java.lang.String str18 = professor3.toString();
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        com.unifacisa.tcc.domain.Professor professor34 = professor3.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        boolean boolean35 = user0.equals((java.lang.Object) professor3);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent36 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.User user37 = new com.unifacisa.tcc.domain.User();
        java.lang.String str38 = user37.getCreatedBy();
        java.lang.String str39 = user37.getLangKey();
        java.time.Instant instant40 = user37.getCreatedDate();
        persistentAuditEvent36.setAuditEventDate(instant40);
        user0.setCreatedDate(instant40);
        com.unifacisa.tcc.service.dto.UserDTO userDTO43 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str44 = user0.getFirstName();
        java.lang.String str45 = user0.getLastName();
        java.lang.String str46 = user0.getLogin();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(alunoArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str18, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(instant40);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str46);
    }

    @Test
    public void test1979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1979");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.toString();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper2 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user4 = userMapper2.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor15 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno16 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str18 = aluno17.getEmail();
        aluno17.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray26 = new com.unifacisa.tcc.domain.Aluno[] { aluno16, aluno17, aluno21, aluno22 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet27 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet27, alunoArray26);
        professor15.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet27);
        java.lang.String str30 = professor15.toString();
        com.unifacisa.tcc.domain.Professor professor32 = professor15.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet33 = professor15.getAlunos();
        com.unifacisa.tcc.domain.User user34 = new com.unifacisa.tcc.domain.User();
        java.lang.String str35 = user34.getCreatedBy();
        user34.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant38 = user34.getLastModifiedDate();
        boolean boolean39 = professor15.equals((java.lang.Object) instant38);
        com.unifacisa.tcc.domain.User user41 = new com.unifacisa.tcc.domain.User();
        java.lang.String str42 = user41.getCreatedBy();
        java.lang.String str43 = user41.getLangKey();
        java.time.Instant instant44 = user41.getCreatedDate();
        java.time.Instant instant55 = null;
        java.time.Instant instant57 = null;
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet63 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet63, strArray62);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM65 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant55, "error.validation", instant57, (java.util.Set<java.lang.String>) strSet63);
        java.lang.String str66 = managedUserVM65.getFirstName();
        java.lang.String str67 = managedUserVM65.getCreatedBy();
        java.util.Set<java.lang.String> strSet68 = managedUserVM65.getAuthorities();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM69 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) (-1L), "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoggerVM{name='null', level='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoggerVM{name='null', level='error.validation'}", true, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", instant38, "LoginVM{username='null', rememberMe=null}", instant44, strSet68);
        user4.setResetDate(instant38);
        boolean boolean71 = authority0.equals((java.lang.Object) instant38);
        com.unifacisa.tcc.domain.Professor professor72 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str73 = professor72.getPrimeiroNome();
        boolean boolean74 = authority0.equals((java.lang.Object) str73);
        authority0.setName("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        java.lang.String str77 = authority0.getName();
        com.unifacisa.tcc.domain.User user78 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO79 = new com.unifacisa.tcc.service.dto.UserDTO(user78);
        java.lang.String str80 = user78.getImageUrl();
        boolean boolean82 = user78.equals((java.lang.Object) (byte) -1);
        java.lang.String str83 = user78.getLastName();
        java.lang.String str84 = user78.getFirstName();
        java.time.Instant instant85 = user78.getResetDate();
        java.lang.String str86 = user78.getLogin();
        user78.setLangKey("hi!");
        boolean boolean89 = authority0.equals((java.lang.Object) "hi!");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Authority{name='null'}" + "'", str1, "Authority{name='null'}");
        org.junit.Assert.assertNotNull(user4);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(alunoArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str30, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor32);
        org.junit.Assert.assertNotNull(alunoSet33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(instant38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(instant44);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNotNull(strSet68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}" + "'", str77, "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNull(instant85);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test1980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1980");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        com.unifacisa.tcc.domain.Aluno aluno7 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        java.lang.String str8 = aluno7.getPrimeiroNome();
        aluno7.setHabilitadoTcc((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(aluno7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1981");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        socialUserConnection0.setId((java.lang.Long) (-1L));
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        socialUserConnection0.setDisplayName("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long11 = socialUserConnection0.getRank();
        socialUserConnection0.setAccessToken("LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long11);
    }

    @Test
    public void test1982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1982");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        java.lang.Boolean boolean2 = loginVM0.isRememberMe();
        java.lang.String str3 = loginVM0.getUsername();
        java.lang.Boolean boolean4 = loginVM0.isRememberMe();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(boolean4);
    }

    @Test
    public void test1983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1983");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        professor17.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor22 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno23, aluno24, aluno28, aluno29 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor22.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        professor17.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor39 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        aluno41.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str47 = aluno46.getEmail();
        aluno46.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray50 = new com.unifacisa.tcc.domain.Aluno[] { aluno40, aluno41, aluno45, aluno46 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet51 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet51, alunoArray50);
        professor39.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet51);
        aluno38.setProfessor(professor39);
        com.unifacisa.tcc.domain.Professor professor55 = professor17.removeAluno(aluno38);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa57 = professor55.matricula((java.lang.Long) 1L);
        java.lang.String str58 = pessoa57.getSegundoNome();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(alunoArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNotNull(pessoa57);
        org.junit.Assert.assertNull(str58);
    }

    @Test
    public void test1984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1984");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        loginVM0.setUsername("error.concurrencyFailure");
        java.lang.Boolean boolean3 = loginVM0.isRememberMe();
        java.lang.String str4 = loginVM0.toString();
        java.lang.String str5 = loginVM0.getUsername();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setUsername("LoginVM{username='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', rememberMe=false}");
        java.lang.Boolean boolean10 = loginVM0.isRememberMe();
        java.lang.String str11 = loginVM0.toString();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "LoginVM{username='error.concurrencyFailure', rememberMe=null}" + "'", str4, "LoginVM{username='error.concurrencyFailure', rememberMe=null}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "error.concurrencyFailure" + "'", str5, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + boolean10 + "' != '" + false + "'", boolean10, false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LoginVM{username='LoginVM{username='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', rememberMe=false}', rememberMe=false}" + "'", str11, "LoginVM{username='LoginVM{username='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', rememberMe=false}', rememberMe=false}");
    }

    @Test
    public void test1985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1985");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper3 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray4 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList5 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList5, userArray4);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList7 = userMapper3.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList5);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList8 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList5);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper9 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray10 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList11 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList11, userArray10);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList13 = userMapper9.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList11);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper14 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray15 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList16 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList16, userArray15);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList18 = userMapper14.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList16);
        java.util.List<com.unifacisa.tcc.domain.User> userList19 = userMapper9.userDTOsToUsers(userDTOList18);
        com.unifacisa.tcc.domain.User user21 = userMapper9.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper22 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray23 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList24 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList24, userArray23);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList26 = userMapper22.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList24);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper27 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray28 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList29 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList29, userArray28);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList31 = userMapper27.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList29);
        java.util.List<com.unifacisa.tcc.domain.User> userList32 = userMapper22.userDTOsToUsers(userDTOList31);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper33 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray34 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList35 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList35, userArray34);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList37 = userMapper33.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList35);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper38 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray39 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList40 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList40, userArray39);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList42 = userMapper38.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList40);
        java.util.List<com.unifacisa.tcc.domain.User> userList43 = userMapper33.userDTOsToUsers(userDTOList42);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper44 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray45 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList46 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList46, userArray45);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList48 = userMapper44.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList46);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper49 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray50 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList51 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList51, userArray50);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList53 = userMapper49.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList51);
        java.util.List<com.unifacisa.tcc.domain.User> userList54 = userMapper44.userDTOsToUsers(userDTOList53);
        java.util.List<com.unifacisa.tcc.domain.User> userList55 = userMapper33.userDTOsToUsers(userDTOList53);
        java.util.List<com.unifacisa.tcc.domain.User> userList56 = userMapper22.userDTOsToUsers(userDTOList53);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList57 = userMapper9.usersToUserDTOs(userList56);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList58 = userMapper0.usersToUserDTOs(userList56);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper59 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray60 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList61 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList61, userArray60);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList63 = userMapper59.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList61);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper64 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray65 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList66 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList66, userArray65);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList68 = userMapper64.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList66);
        java.util.List<com.unifacisa.tcc.domain.User> userList69 = userMapper59.userDTOsToUsers(userDTOList68);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper70 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray71 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList72 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList72, userArray71);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList74 = userMapper70.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList72);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper75 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray76 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList77 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList77, userArray76);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList79 = userMapper75.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList77);
        java.util.List<com.unifacisa.tcc.domain.User> userList80 = userMapper70.userDTOsToUsers(userDTOList79);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper81 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray82 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList83 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList83, userArray82);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList85 = userMapper81.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList83);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper86 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray87 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList88 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList88, userArray87);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList90 = userMapper86.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList88);
        java.util.List<com.unifacisa.tcc.domain.User> userList91 = userMapper81.userDTOsToUsers(userDTOList90);
        java.util.List<com.unifacisa.tcc.domain.User> userList92 = userMapper70.userDTOsToUsers(userDTOList90);
        java.util.List<com.unifacisa.tcc.domain.User> userList93 = userMapper59.userDTOsToUsers(userDTOList90);
        java.util.List<com.unifacisa.tcc.domain.User> userList94 = userMapper0.userDTOsToUsers(userDTOList90);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(userDTOList7);
        org.junit.Assert.assertNotNull(userDTOList8);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(userDTOList13);
        org.junit.Assert.assertNotNull(userArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(userDTOList18);
        org.junit.Assert.assertNotNull(userList19);
        org.junit.Assert.assertNotNull(user21);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(userDTOList26);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(userDTOList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(userDTOList37);
        org.junit.Assert.assertNotNull(userArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(userDTOList42);
        org.junit.Assert.assertNotNull(userList43);
        org.junit.Assert.assertNotNull(userArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(userDTOList48);
        org.junit.Assert.assertNotNull(userArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(userDTOList53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(userList55);
        org.junit.Assert.assertNotNull(userList56);
        org.junit.Assert.assertNotNull(userDTOList57);
        org.junit.Assert.assertNotNull(userDTOList58);
        org.junit.Assert.assertNotNull(userArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(userDTOList63);
        org.junit.Assert.assertNotNull(userArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(userDTOList68);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(userArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(userDTOList74);
        org.junit.Assert.assertNotNull(userArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(userDTOList79);
        org.junit.Assert.assertNotNull(userList80);
        org.junit.Assert.assertNotNull(userArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(userDTOList85);
        org.junit.Assert.assertNotNull(userArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(userDTOList90);
        org.junit.Assert.assertNotNull(userList91);
        org.junit.Assert.assertNotNull(userList92);
        org.junit.Assert.assertNotNull(userList93);
        org.junit.Assert.assertNotNull(userList94);
    }

    @Test
    public void test1986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1986");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setUserId("error.validation");
        java.lang.String str3 = socialUserConnection0.getProfileURL();
        java.lang.Long long4 = socialUserConnection0.getId();
        java.lang.String str5 = socialUserConnection0.getProviderUserId();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test1987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1987");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        java.lang.String str3 = persistentAuditEvent0.getAuditEventType();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent4 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.User user5 = new com.unifacisa.tcc.domain.User();
        java.lang.String str6 = user5.getCreatedBy();
        java.lang.String str7 = user5.getLangKey();
        java.time.Instant instant8 = user5.getCreatedDate();
        persistentAuditEvent4.setAuditEventDate(instant8);
        persistentAuditEvent0.setAuditEventDate(instant8);
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO12 = new com.unifacisa.tcc.service.dto.UserDTO(user11);
        java.lang.String str13 = user11.getImageUrl();
        boolean boolean15 = user11.equals((java.lang.Object) (byte) -1);
        java.lang.String str16 = user11.getLastName();
        java.time.Instant instant17 = user11.getCreatedDate();
        persistentAuditEvent0.setAuditEventDate(instant17);
        java.lang.Long long19 = persistentAuditEvent0.getId();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(instant8);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(instant17);
        org.junit.Assert.assertNull(long19);
    }

    @Test
    public void test1988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1988");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "LoggerVM{name='null', level='error.validation'}", "Authority{name=''}");
        java.lang.String str4 = fieldErrorVM3.getField();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str4, "LoggerVM{name='null', level='error.validation'}");
    }

    @Test
    public void test1989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1989");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "SocialUserConnection{id=-1, userId=null, providerId='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}', providerUserId='null', rank=null, displayName='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='Authority{name='null'}', refreshToken='null', expireTime=0}", "LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=true}", (java.lang.Long) 100L, "User{login='null', firstName='null', lastName='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='-1', diponibilidade='true'}", "SocialUserConnection{id=1, userId=error.validation, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}", "", "LoginVM{username='error.concurrencyFailure', rememberMe=null}", (java.lang.Long) (-1L));
        socialUserConnection11.setProviderId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='0', habilitadoTcc='false'}");
    }

    @Test
    public void test1990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1990");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.time.Instant instant2 = user0.getResetDate();
        user0.setLangKey("LoginVM{username='null', rememberMe=false}");
        user0.setImageUrl("LoggerVM{name='', level='error.validation'}");
        java.lang.String str7 = user0.toString();
        org.junit.Assert.assertNull(instant2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='LoggerVM{name='', level='error.validation'}', activated='false', langKey='LoginVM{username='null', rememberMe=false}', activationKey='null'}" + "'", str7, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='LoggerVM{name='', level='error.validation'}', activated='false', langKey='LoginVM{username='null', rememberMe=false}', activationKey='null'}");
    }

    @Test
    public void test1991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1991");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        java.lang.Boolean boolean17 = aluno15.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor18 = professor0.addAluno(aluno15);
        com.unifacisa.tcc.domain.Professor professor19 = aluno15.getProfessor();
        com.unifacisa.tcc.domain.Professor professor20 = aluno15.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno22 = aluno15.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor23 = null;
        com.unifacisa.tcc.domain.Aluno aluno24 = aluno15.professor(professor23);
        com.unifacisa.tcc.domain.Aluno aluno26 = aluno15.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa28 = aluno15.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='1', habilitadoTcc='null'}");
        aluno15.setSegundoNome("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=100}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNotNull(professor19);
        org.junit.Assert.assertNotNull(professor20);
        org.junit.Assert.assertNotNull(aluno22);
        org.junit.Assert.assertNotNull(aluno24);
        org.junit.Assert.assertNotNull(aluno26);
        org.junit.Assert.assertNotNull(pessoa28);
    }

    @Test
    public void test1992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1992");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setUserId("error.validation");
        java.lang.String str3 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setSecret("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setId((java.lang.Long) (-1L));
        socialUserConnection0.setProfileURL("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        java.lang.String str10 = socialUserConnection0.getDisplayName();
        java.lang.String str11 = socialUserConnection0.toString();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "SocialUserConnection{id=-1, userId=error.validation, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}', imageURL='null', accessToken='null', secret='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', refreshToken='null', expireTime=null}" + "'", str11, "SocialUserConnection{id=-1, userId=error.validation, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}', imageURL='null', accessToken='null', secret='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test1993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1993");
        com.unifacisa.tcc.service.dto.UserDTO userDTO0 = new com.unifacisa.tcc.service.dto.UserDTO();
        java.lang.String str1 = userDTO0.getLogin();
        java.lang.String str2 = userDTO0.getLastModifiedBy();
        java.time.Instant instant3 = userDTO0.getCreatedDate();
        java.lang.Long long4 = userDTO0.getId();
        java.lang.String str5 = userDTO0.getLastName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(instant3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test1994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1994");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setHabilitadoTcc((java.lang.Boolean) true);
        java.lang.String str3 = aluno0.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str3, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
    }

    @Test
    public void test1995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1995");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long1 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setAuditEventType("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Long long4 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.User user5 = new com.unifacisa.tcc.domain.User();
        java.lang.String str6 = user5.getCreatedBy();
        user5.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant9 = user5.getLastModifiedDate();
        persistentAuditEvent0.setAuditEventDate(instant9);
        java.util.Map<java.lang.String, java.lang.String> strMap11 = persistentAuditEvent0.getData();
        persistentAuditEvent0.setId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.User user14 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO15 = new com.unifacisa.tcc.service.dto.UserDTO(user14);
        java.lang.String str16 = user14.getImageUrl();
        java.lang.String str17 = user14.getEmail();
        java.lang.String str18 = user14.getLogin();
        com.unifacisa.tcc.service.dto.UserDTO userDTO19 = new com.unifacisa.tcc.service.dto.UserDTO(user14);
        java.lang.Long long20 = user14.getId();
        user14.setCreatedBy("error.validation");
        com.unifacisa.tcc.domain.User user23 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO24 = new com.unifacisa.tcc.service.dto.UserDTO(user23);
        java.lang.String str25 = user23.getImageUrl();
        java.lang.String str26 = user23.getLangKey();
        user23.setLastModifiedBy("");
        user23.setLastModifiedBy("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.time.Instant instant31 = user23.getCreatedDate();
        user14.setResetDate(instant31);
        persistentAuditEvent0.setAuditEventDate(instant31);
        java.util.Map<java.lang.String, java.lang.String> strMap34 = persistentAuditEvent0.getData();
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(instant9);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(long20);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(instant31);
        org.junit.Assert.assertNotNull(strMap34);
    }

    @Test
    public void test1996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1996");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getPassword();
        java.lang.String str2 = managedUserVM0.toString();
        java.lang.String str3 = managedUserVM0.getPassword();
        java.time.Instant instant4 = managedUserVM0.getLastModifiedDate();
        java.time.Instant instant25 = null;
        com.unifacisa.tcc.domain.User user27 = new com.unifacisa.tcc.domain.User();
        java.lang.String str28 = user27.getCreatedBy();
        user27.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO31 = new com.unifacisa.tcc.service.dto.UserDTO(user27);
        java.time.Instant instant32 = userDTO31.getLastModifiedDate();
        java.time.Instant instant43 = null;
        java.time.Instant instant45 = null;
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet51 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet51, strArray50);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM53 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant43, "error.validation", instant45, (java.util.Set<java.lang.String>) strSet51);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM54 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}", "User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "User{login='null', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", false, "Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}", "LoginVM{username='null', rememberMe=false}", "error.validation", instant25, "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", instant32, (java.util.Set<java.lang.String>) strSet51);
        com.unifacisa.tcc.domain.User user56 = new com.unifacisa.tcc.domain.User();
        java.lang.String str57 = user56.getCreatedBy();
        java.lang.String str58 = user56.getLastModifiedBy();
        user56.setResetKey("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str61 = user56.getEmail();
        java.time.Instant instant62 = user56.getLastModifiedDate();
        java.lang.String[] strArray86 = new java.lang.String[] { "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "LoggerVM{name='null', level='null'}", "Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}", "ManagedUserVM{} UserDTO{login='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "SocialUserConnection{id=1, userId=error.validation, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "LoginVM{username='null', rememberMe=false}", "User{login='null', firstName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "hi!", "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}", "User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" };
        java.util.LinkedHashSet<java.lang.String> strSet87 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet87, strArray86);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM89 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 0L, "LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=false}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "", true, "Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}", "", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", instant25, "LoginVM{username='null', rememberMe=null}", instant62, (java.util.Set<java.lang.String>) strSet87);
        managedUserVM0.setLastModifiedDate(instant25);
        java.lang.String str91 = managedUserVM0.toString();
        java.lang.String str92 = managedUserVM0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str2, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(instant32);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(instant62);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str91, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str92, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test1997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1997");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO4 = new com.unifacisa.tcc.service.dto.UserDTO(user3);
        java.lang.String str5 = user3.getImageUrl();
        boolean boolean7 = user3.equals((java.lang.Object) (byte) -1);
        java.lang.String str8 = user3.getLastName();
        user3.setResetKey("LoginVM{username='null', rememberMe=null}");
        java.time.Instant instant11 = user3.getCreatedDate();
        user0.setCreatedDate(instant11);
        java.lang.String str13 = user0.getLangKey();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(instant11);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test1998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1998");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.util.List<com.unifacisa.tcc.domain.User> userList10 = userMapper0.userDTOsToUsers(userDTOList9);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper11 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray12 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList13 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList13, userArray12);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList15 = userMapper11.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList13);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper16 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray17 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList18 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList18, userArray17);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList20 = userMapper16.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList18);
        java.util.List<com.unifacisa.tcc.domain.User> userList21 = userMapper11.userDTOsToUsers(userDTOList20);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper22 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray23 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList24 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList24, userArray23);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList26 = userMapper22.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList24);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper27 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray28 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList29 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList29, userArray28);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList31 = userMapper27.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList29);
        java.util.List<com.unifacisa.tcc.domain.User> userList32 = userMapper22.userDTOsToUsers(userDTOList31);
        java.util.List<com.unifacisa.tcc.domain.User> userList33 = userMapper11.userDTOsToUsers(userDTOList31);
        java.util.List<com.unifacisa.tcc.domain.User> userList34 = userMapper0.userDTOsToUsers(userDTOList31);
        com.unifacisa.tcc.domain.User user35 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO36 = new com.unifacisa.tcc.service.dto.UserDTO(user35);
        java.lang.String str37 = user35.getImageUrl();
        boolean boolean39 = user35.equals((java.lang.Object) (byte) -1);
        java.lang.String str40 = user35.getLastName();
        java.lang.String str41 = user35.getFirstName();
        java.time.Instant instant42 = user35.getResetDate();
        java.lang.String str43 = user35.getLogin();
        java.lang.String str44 = user35.getPassword();
        com.unifacisa.tcc.service.dto.UserDTO userDTO45 = userMapper0.userToUserDTO(user35);
        com.unifacisa.tcc.domain.User user47 = userMapper0.userFromId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.User user48 = new com.unifacisa.tcc.domain.User();
        java.lang.String str49 = user48.getCreatedBy();
        java.lang.String str50 = user48.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user51 = new com.unifacisa.tcc.domain.User();
        user51.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant54 = user51.getLastModifiedDate();
        user48.setCreatedDate(instant54);
        java.lang.String str56 = user48.getEmail();
        java.time.Instant instant57 = user48.getCreatedDate();
        user48.setImageUrl("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO60 = userMapper0.userToUserDTO(user48);
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(userDTOList15);
        org.junit.Assert.assertNotNull(userArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(userDTOList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(userDTOList26);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(userDTOList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(instant42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(userDTO45);
        org.junit.Assert.assertNotNull(user47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(instant54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(instant57);
        org.junit.Assert.assertNotNull(userDTO60);
    }

    @Test
    public void test1999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1999");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant3 = user0.getLastModifiedDate();
        user0.setResetKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet6 = user0.getAuthorities();
        com.unifacisa.tcc.service.dto.UserDTO userDTO7 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        com.unifacisa.tcc.domain.User user17 = new com.unifacisa.tcc.domain.User();
        user17.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str20 = user17.getLastName();
        java.time.Instant instant21 = user17.getLastModifiedDate();
        com.unifacisa.tcc.domain.User user23 = new com.unifacisa.tcc.domain.User();
        java.lang.String str24 = user23.getCreatedBy();
        java.lang.String str25 = user23.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user26 = new com.unifacisa.tcc.domain.User();
        user26.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant29 = user26.getLastModifiedDate();
        user23.setCreatedDate(instant29);
        java.time.Instant instant40 = null;
        java.time.Instant instant42 = null;
        java.time.Instant instant53 = null;
        java.time.Instant instant55 = null;
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet61 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet61, strArray60);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM63 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant53, "error.validation", instant55, (java.util.Set<java.lang.String>) strSet61);
        com.unifacisa.tcc.service.dto.UserDTO userDTO64 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant40, "", instant42, (java.util.Set<java.lang.String>) strSet61);
        com.unifacisa.tcc.service.dto.UserDTO userDTO65 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "LoggerVM{name='null', level='null'}", "error.concurrencyFailure", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", true, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "", "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", instant21, "", instant29, (java.util.Set<java.lang.String>) strSet61);
        java.util.Set<java.lang.String> strSet66 = userDTO65.getAuthorities();
        java.time.Instant instant67 = userDTO65.getLastModifiedDate();
        java.time.Instant instant68 = userDTO65.getCreatedDate();
        user0.setResetDate(instant68);
        org.junit.Assert.assertNotNull(instant3);
        org.junit.Assert.assertNotNull(authoritySet6);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str20, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant21);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(instant29);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strSet66);
        org.junit.Assert.assertNotNull(instant67);
        org.junit.Assert.assertNotNull(instant68);
    }

    @Test
    public void test2000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test2000");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor18 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str21 = aluno20.getEmail();
        aluno20.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str26 = aluno25.getEmail();
        aluno25.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray29 = new com.unifacisa.tcc.domain.Aluno[] { aluno19, aluno20, aluno24, aluno25 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet30 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet30, alunoArray29);
        professor18.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet30);
        java.lang.String str33 = professor18.toString();
        com.unifacisa.tcc.domain.Professor professor35 = professor18.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet36 = professor18.getAlunos();
        professor17.setAlunos(alunoSet36);
        professor17.setSegundoNome("LoginVM{username='null', rememberMe=false}");
        java.lang.String str40 = professor17.getPrimeiroNome();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(alunoArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str33, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNotNull(alunoSet36);
        org.junit.Assert.assertNull(str40);
    }
}
