/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 04 03:58:00 GMT 2021
 */

package com.graphhopper.storage;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.graphhopper.routing.ev.BooleanEncodedValue;
import com.graphhopper.routing.util.FlagEncoder;
import com.graphhopper.routing.weighting.Weighting;
import com.graphhopper.storage.RoutingCHEdgeIteratorStateImpl;
import com.graphhopper.util.EdgeIteratorState;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RoutingCHEdgeIteratorStateImpl_ESTest extends RoutingCHEdgeIteratorStateImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn((BooleanEncodedValue) null).when(flagEncoder0).getAccessEnc();
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(flagEncoder0).when(weighting0).getFlagEncoder();
      RoutingCHEdgeIteratorStateImpl routingCHEdgeIteratorStateImpl0 = new RoutingCHEdgeIteratorStateImpl((EdgeIteratorState) null, weighting0);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertNotNull(routingCHEdgeIteratorStateImpl0);
      
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        routingCHEdgeIteratorStateImpl0.getOrigEdge();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.storage.RoutingCHEdgeIteratorStateImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      doReturn((-1), (-1)).when(edgeIteratorState0).getAdjNode();
      doReturn((-1), (-1)).when(edgeIteratorState0).getBaseNode();
      doReturn((-86), 41).when(edgeIteratorState0).getEdge();
      doReturn(false, false).when(edgeIteratorState0).getReverse(any(com.graphhopper.routing.ev.BooleanEncodedValue.class));
      doReturn("s[pqy4dKv7`lH6n_", "&V/ (YM2!@7+G", "c(,=@gQe", "", "3u]C").when(edgeIteratorState0).toString();
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn((BooleanEncodedValue) null).when(flagEncoder0).getAccessEnc();
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(1386.0, (-1676.9941051031367)).when(weighting0).calcEdgeWeight(any(com.graphhopper.util.EdgeIteratorState.class) , anyBoolean());
      doReturn(flagEncoder0).when(weighting0).getFlagEncoder();
      RoutingCHEdgeIteratorStateImpl routingCHEdgeIteratorStateImpl0 = new RoutingCHEdgeIteratorStateImpl(edgeIteratorState0, weighting0);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertNotNull(routingCHEdgeIteratorStateImpl0);
      
      int int0 = routingCHEdgeIteratorStateImpl0.getOrigEdge();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertEquals((-86), int0);
      
      double double0 = routingCHEdgeIteratorStateImpl0.getWeight(true);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertEquals(1386.0, double0, 0.01);
      
      int int1 = routingCHEdgeIteratorStateImpl0.getOrigEdge();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertFalse(int1 == int0);
      assertEquals(41, int1);
      
      double double1 = routingCHEdgeIteratorStateImpl0.getOrigEdgeWeight(true, true);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertNotEquals(double1, double0, 0.01);
      assertEquals((-1676.9941051031367), double1, 0.01);
      
      // Undeclared exception!
      try { 
        routingCHEdgeIteratorStateImpl0.getSkippedEdge2();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.graphhopper.util.EdgeIteratorState$MockitoMock$998329240 cannot be cast to com.graphhopper.util.CHEdgeIteratorState
         //
         verifyException("com.graphhopper.storage.RoutingCHEdgeIteratorStateImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn((BooleanEncodedValue) null).when(flagEncoder0).getAccessEnc();
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(flagEncoder0).when(weighting0).getFlagEncoder();
      RoutingCHEdgeIteratorStateImpl routingCHEdgeIteratorStateImpl0 = new RoutingCHEdgeIteratorStateImpl((EdgeIteratorState) null, weighting0);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertNotNull(routingCHEdgeIteratorStateImpl0);
      
      // Undeclared exception!
      try { 
        routingCHEdgeIteratorStateImpl0.getWeight(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.storage.RoutingCHEdgeIteratorStateImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(edgeIteratorState0).get(any(com.graphhopper.routing.ev.BooleanEncodedValue.class));
      doReturn((-915), 0).when(edgeIteratorState0).getAdjNode();
      doReturn((-1)).when(edgeIteratorState0).getBaseNode();
      doReturn(100).when(edgeIteratorState0).getEdge();
      doReturn("k:JMRd{Vw", "Wy[e'h.V\"laEt4Vl>", "Wy[e'h.V\"laEt4Vl>", "k:JMRd{Vw", "}sg4:%lC7{PSn]Fx").when(edgeIteratorState0).toString();
      BooleanEncodedValue booleanEncodedValue0 = mock(BooleanEncodedValue.class, new ViolatedAssumptionAnswer());
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn(booleanEncodedValue0).when(flagEncoder0).getAccessEnc();
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(flagEncoder0).when(weighting0).getFlagEncoder();
      RoutingCHEdgeIteratorStateImpl routingCHEdgeIteratorStateImpl0 = new RoutingCHEdgeIteratorStateImpl(edgeIteratorState0, weighting0);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertNotNull(routingCHEdgeIteratorStateImpl0);
      
      int int0 = routingCHEdgeIteratorStateImpl0.getEdge();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertEquals(100, int0);
      
      int int1 = routingCHEdgeIteratorStateImpl0.getAdjNode();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertFalse(int1 == int0);
      assertEquals((-915), int1);
      
      double double0 = routingCHEdgeIteratorStateImpl0.getWeight(false);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
      
      // Undeclared exception!
      try { 
        routingCHEdgeIteratorStateImpl0.getSkippedEdge1();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.graphhopper.util.EdgeIteratorState$MockitoMock$998329240 cannot be cast to com.graphhopper.util.CHEdgeIteratorState
         //
         verifyException("com.graphhopper.storage.RoutingCHEdgeIteratorStateImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(edgeIteratorState0).get(any(com.graphhopper.routing.ev.BooleanEncodedValue.class));
      doReturn(2).when(edgeIteratorState0).getAdjNode();
      doReturn(2, (-2541)).when(edgeIteratorState0).getBaseNode();
      doReturn((-1), 0).when(edgeIteratorState0).getEdge();
      doReturn((-1527)).when(edgeIteratorState0).getOrigEdgeFirst();
      doReturn((-2541), 2).when(edgeIteratorState0).getOrigEdgeLast();
      doReturn("\"9\"s=`v*8v[?J%", "\"9\"s=`v*8v[?J%", "\"9\"s=`v*8v[?J%", "\"9\"s=`v*8v[?J%", "").when(edgeIteratorState0).toString();
      BooleanEncodedValue booleanEncodedValue0 = mock(BooleanEncodedValue.class, new ViolatedAssumptionAnswer());
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn(booleanEncodedValue0).when(flagEncoder0).getAccessEnc();
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(weighting0).calcEdgeWeight(any(com.graphhopper.util.EdgeIteratorState.class) , anyBoolean());
      doReturn(flagEncoder0).when(weighting0).getFlagEncoder();
      RoutingCHEdgeIteratorStateImpl routingCHEdgeIteratorStateImpl0 = new RoutingCHEdgeIteratorStateImpl(edgeIteratorState0, weighting0);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertNotNull(routingCHEdgeIteratorStateImpl0);
      
      int int0 = routingCHEdgeIteratorStateImpl0.getEdge();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertEquals((-1), int0);
      
      double double0 = routingCHEdgeIteratorStateImpl0.getWeight(false);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertEquals(0.0, double0, 0.01);
      
      int int1 = routingCHEdgeIteratorStateImpl0.getOrigEdge();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertFalse(int1 == int0);
      assertEquals(0, int1);
      
      int int2 = routingCHEdgeIteratorStateImpl0.getOrigEdgeFirst();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals((-1527), int2);
      
      int int3 = routingCHEdgeIteratorStateImpl0.getBaseNode();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertFalse(int3 == int0);
      assertFalse(int3 == int2);
      assertFalse(int3 == int1);
      assertEquals((-2541), int3);
      
      int int4 = routingCHEdgeIteratorStateImpl0.getOrigEdgeLast();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertFalse(int4 == int2);
      assertTrue(int4 == int3);
      assertFalse(int4 == int0);
      assertFalse(int4 == int1);
      assertEquals((-2541), int4);
      
      int int5 = routingCHEdgeIteratorStateImpl0.getOrigEdgeLast();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertFalse(int5 == int2);
      assertFalse(int5 == int4);
      assertFalse(int5 == int0);
      assertFalse(int5 == int3);
      assertFalse(int5 == int1);
      assertEquals(2, int5);
      
      // Undeclared exception!
      try { 
        routingCHEdgeIteratorStateImpl0.getSkippedEdge1();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.graphhopper.util.EdgeIteratorState$MockitoMock$998329240 cannot be cast to com.graphhopper.util.CHEdgeIteratorState
         //
         verifyException("com.graphhopper.storage.RoutingCHEdgeIteratorStateImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn((BooleanEncodedValue) null).when(flagEncoder0).getAccessEnc();
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(flagEncoder0).when(weighting0).getFlagEncoder();
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(edgeIteratorState0).toString();
      RoutingCHEdgeIteratorStateImpl routingCHEdgeIteratorStateImpl0 = new RoutingCHEdgeIteratorStateImpl(edgeIteratorState0, weighting0);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertNotNull(routingCHEdgeIteratorStateImpl0);
      
      boolean boolean0 = routingCHEdgeIteratorStateImpl0.isShortcut();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertFalse(boolean0);
      
      // Undeclared exception!
      try { 
        routingCHEdgeIteratorStateImpl0.getSkippedEdge1();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.graphhopper.util.EdgeIteratorState$MockitoMock$998329240 cannot be cast to com.graphhopper.util.CHEdgeIteratorState
         //
         verifyException("com.graphhopper.storage.RoutingCHEdgeIteratorStateImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(edgeIteratorState0).get(any(com.graphhopper.routing.ev.BooleanEncodedValue.class));
      doReturn((-497)).when(edgeIteratorState0).getAdjNode();
      doReturn((-497)).when(edgeIteratorState0).getBaseNode();
      doReturn((-497)).when(edgeIteratorState0).getEdge();
      doReturn("", "", "si", "si", "eB=E&Jm").when(edgeIteratorState0).toString();
      BooleanEncodedValue booleanEncodedValue0 = mock(BooleanEncodedValue.class, new ViolatedAssumptionAnswer());
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn(booleanEncodedValue0).when(flagEncoder0).getAccessEnc();
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn((double)(-497)).when(weighting0).calcEdgeWeight(any(com.graphhopper.util.EdgeIteratorState.class) , anyBoolean());
      doReturn(flagEncoder0).when(weighting0).getFlagEncoder();
      RoutingCHEdgeIteratorStateImpl routingCHEdgeIteratorStateImpl0 = new RoutingCHEdgeIteratorStateImpl(edgeIteratorState0, weighting0);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertNotNull(routingCHEdgeIteratorStateImpl0);
      
      int int0 = routingCHEdgeIteratorStateImpl0.getEdge();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertEquals((-497), int0);
      
      double double0 = routingCHEdgeIteratorStateImpl0.getWeight(false);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertEquals((-497.0), double0, 0.01);
      
      // Undeclared exception!
      try { 
        routingCHEdgeIteratorStateImpl0.getSkippedEdge1();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.graphhopper.util.EdgeIteratorState$MockitoMock$998329240 cannot be cast to com.graphhopper.util.CHEdgeIteratorState
         //
         verifyException("com.graphhopper.storage.RoutingCHEdgeIteratorStateImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(edgeIteratorState0).get(any(com.graphhopper.routing.ev.BooleanEncodedValue.class));
      doReturn((-497)).when(edgeIteratorState0).getAdjNode();
      doReturn((-199), (-199)).when(edgeIteratorState0).getBaseNode();
      doReturn((-260)).when(edgeIteratorState0).getEdge();
      doReturn((-1680)).when(edgeIteratorState0).getOrigEdgeFirst();
      doReturn((-199), (-199)).when(edgeIteratorState0).getOrigEdgeLast();
      doReturn(";1P\"dQ/pE#a`PbIdw", "-P", "com.graphhopper.storage.RoutingCHEdgeIteratorStateImpl", "-P", "com.graphhopper.storage.RoutingCHEdgeIteratorStateImpl").when(edgeIteratorState0).toString();
      BooleanEncodedValue booleanEncodedValue0 = mock(BooleanEncodedValue.class, new ViolatedAssumptionAnswer());
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn(booleanEncodedValue0).when(flagEncoder0).getAccessEnc();
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(300.0).when(weighting0).calcEdgeWeight(any(com.graphhopper.util.EdgeIteratorState.class) , anyBoolean());
      doReturn(flagEncoder0).when(weighting0).getFlagEncoder();
      RoutingCHEdgeIteratorStateImpl routingCHEdgeIteratorStateImpl0 = new RoutingCHEdgeIteratorStateImpl(edgeIteratorState0, weighting0);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertNotNull(routingCHEdgeIteratorStateImpl0);
      
      double double0 = routingCHEdgeIteratorStateImpl0.getWeight(false);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertEquals(300.0, double0, 0.01);
      
      int int0 = routingCHEdgeIteratorStateImpl0.getOrigEdge();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertEquals((-260), int0);
      
      int int1 = routingCHEdgeIteratorStateImpl0.getOrigEdgeFirst();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertFalse(int1 == int0);
      assertEquals((-1680), int1);
      
      int int2 = routingCHEdgeIteratorStateImpl0.getBaseNode();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertEquals((-199), int2);
      
      int int3 = routingCHEdgeIteratorStateImpl0.getOrigEdgeLast();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertFalse(int3 == int0);
      assertFalse(int3 == int1);
      assertTrue(int3 == int2);
      assertEquals((-199), int3);
      
      int int4 = routingCHEdgeIteratorStateImpl0.getOrigEdgeLast();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertFalse(int4 == int0);
      assertTrue(int4 == int3);
      assertFalse(int4 == int1);
      assertTrue(int4 == int2);
      assertEquals((-199), int4);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn((BooleanEncodedValue) null).when(flagEncoder0).getAccessEnc();
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(flagEncoder0).when(weighting0).getFlagEncoder();
      RoutingCHEdgeIteratorStateImpl routingCHEdgeIteratorStateImpl0 = new RoutingCHEdgeIteratorStateImpl((EdgeIteratorState) null, weighting0);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertNotNull(routingCHEdgeIteratorStateImpl0);
      
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        routingCHEdgeIteratorStateImpl0.getSkippedEdge2();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.storage.RoutingCHEdgeIteratorStateImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(edgeIteratorState0).get(any(com.graphhopper.routing.ev.BooleanEncodedValue.class));
      doReturn(0).when(edgeIteratorState0).getAdjNode();
      doReturn(376).when(edgeIteratorState0).getBaseNode();
      doReturn(61).when(edgeIteratorState0).getEdge();
      doReturn((String) null, "", " has a node ", (String) null, (String) null).when(edgeIteratorState0).toString();
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn((BooleanEncodedValue) null).when(flagEncoder0).getAccessEnc();
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn((double)61).when(weighting0).calcEdgeWeight(any(com.graphhopper.util.EdgeIteratorState.class) , anyBoolean());
      doReturn(flagEncoder0).when(weighting0).getFlagEncoder();
      RoutingCHEdgeIteratorStateImpl routingCHEdgeIteratorStateImpl0 = new RoutingCHEdgeIteratorStateImpl(edgeIteratorState0, weighting0);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertNotNull(routingCHEdgeIteratorStateImpl0);
      
      int int0 = routingCHEdgeIteratorStateImpl0.getEdge();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertEquals(61, int0);
      
      double double0 = routingCHEdgeIteratorStateImpl0.getWeight(false);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertEquals(61.0, double0, 0.01);
      
      // Undeclared exception!
      try { 
        routingCHEdgeIteratorStateImpl0.getSkippedEdge1();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.graphhopper.util.EdgeIteratorState$MockitoMock$998329240 cannot be cast to com.graphhopper.util.CHEdgeIteratorState
         //
         verifyException("com.graphhopper.storage.RoutingCHEdgeIteratorStateImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(edgeIteratorState0).get(any(com.graphhopper.routing.ev.BooleanEncodedValue.class));
      doReturn(40).when(edgeIteratorState0).getAdjNode();
      doReturn((-915)).when(edgeIteratorState0).getBaseNode();
      doReturn((-915)).when(edgeIteratorState0).getEdge();
      doReturn("+7", "^)>m", "^)>m", "^)>m", (String) null).when(edgeIteratorState0).toString();
      BooleanEncodedValue booleanEncodedValue0 = mock(BooleanEncodedValue.class, new ViolatedAssumptionAnswer());
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn(booleanEncodedValue0).when(flagEncoder0).getAccessEnc();
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(flagEncoder0).when(weighting0).getFlagEncoder();
      RoutingCHEdgeIteratorStateImpl routingCHEdgeIteratorStateImpl0 = new RoutingCHEdgeIteratorStateImpl(edgeIteratorState0, weighting0);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertNotNull(routingCHEdgeIteratorStateImpl0);
      
      int int0 = routingCHEdgeIteratorStateImpl0.getEdge();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertEquals((-915), int0);
      
      double double0 = routingCHEdgeIteratorStateImpl0.getWeight(false);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
      
      // Undeclared exception!
      try { 
        routingCHEdgeIteratorStateImpl0.getSkippedEdge1();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.graphhopper.util.EdgeIteratorState$MockitoMock$998329240 cannot be cast to com.graphhopper.util.CHEdgeIteratorState
         //
         verifyException("com.graphhopper.storage.RoutingCHEdgeIteratorStateImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(edgeIteratorState0).get(any(com.graphhopper.routing.ev.BooleanEncodedValue.class));
      doReturn(0, 0, 0, 0).when(edgeIteratorState0).getAdjNode();
      doReturn(0, 0, 0).when(edgeIteratorState0).getBaseNode();
      doReturn(0, 0).when(edgeIteratorState0).getEdge();
      doReturn(0).when(edgeIteratorState0).getOrigEdgeFirst();
      doReturn(0).when(edgeIteratorState0).getOrigEdgeLast();
      doReturn(false).when(edgeIteratorState0).getReverse(any(com.graphhopper.routing.ev.BooleanEncodedValue.class));
      doReturn((String) null, (String) null, (String) null, (String) null, (String) null).when(edgeIteratorState0).toString();
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn((BooleanEncodedValue) null).when(flagEncoder0).getAccessEnc();
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(weighting0).calcEdgeWeight(any(com.graphhopper.util.EdgeIteratorState.class) , anyBoolean());
      doReturn(flagEncoder0).when(weighting0).getFlagEncoder();
      RoutingCHEdgeIteratorStateImpl routingCHEdgeIteratorStateImpl0 = new RoutingCHEdgeIteratorStateImpl(edgeIteratorState0, weighting0);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertNotNull(routingCHEdgeIteratorStateImpl0);
      
      double double0 = routingCHEdgeIteratorStateImpl0.getWeight(true);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertEquals(0.0, double0, 0.01);
      
      int int0 = routingCHEdgeIteratorStateImpl0.getOrigEdgeLast();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertEquals(0, int0);
      
      int int1 = routingCHEdgeIteratorStateImpl0.getEdge();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertTrue(int1 == int0);
      assertEquals(0, int1);
      
      double double1 = routingCHEdgeIteratorStateImpl0.getOrigEdgeWeight(false, false);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertEquals(double1, double0, 0.01);
      assertEquals(0.0, double1, 0.01);
      
      int int2 = routingCHEdgeIteratorStateImpl0.getOrigEdge();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertTrue(int2 == int1);
      assertTrue(int2 == int0);
      assertEquals(0, int2);
      
      double double2 = routingCHEdgeIteratorStateImpl0.getWeight(false);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertEquals(double2, double1, 0.01);
      assertEquals(double2, double0, 0.01);
      assertEquals(0.0, double2, 0.01);
      
      int int3 = routingCHEdgeIteratorStateImpl0.getOrigEdgeFirst();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertTrue(int3 == int2);
      assertTrue(int3 == int1);
      assertTrue(int3 == int0);
      assertEquals(0, int3);
      
      int int4 = routingCHEdgeIteratorStateImpl0.getAdjNode();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertTrue(int4 == int0);
      assertTrue(int4 == int2);
      assertTrue(int4 == int1);
      assertTrue(int4 == int3);
      assertEquals(0, int4);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn((BooleanEncodedValue) null).when(flagEncoder0).getAccessEnc();
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(flagEncoder0).when(weighting0).getFlagEncoder();
      RoutingCHEdgeIteratorStateImpl routingCHEdgeIteratorStateImpl0 = new RoutingCHEdgeIteratorStateImpl((EdgeIteratorState) null, weighting0);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertNotNull(routingCHEdgeIteratorStateImpl0);
      
      // Undeclared exception!
      try { 
        routingCHEdgeIteratorStateImpl0.getAdjNode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.storage.RoutingCHEdgeIteratorStateImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(edgeIteratorState0).get(any(com.graphhopper.routing.ev.BooleanEncodedValue.class));
      doReturn((-1527)).when(edgeIteratorState0).getAdjNode();
      doReturn((-1527)).when(edgeIteratorState0).getBaseNode();
      doReturn((-1527)).when(edgeIteratorState0).getEdge();
      doReturn("", "Base edge can only be obtained for original edges, was: ", "9Q^-<=A/V\")`G$DH3|", "", "setReverse(StringEncodedValue, String)").when(edgeIteratorState0).toString();
      BooleanEncodedValue booleanEncodedValue0 = mock(BooleanEncodedValue.class, new ViolatedAssumptionAnswer());
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn(booleanEncodedValue0).when(flagEncoder0).getAccessEnc();
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(536870.911).when(weighting0).calcEdgeWeight(any(com.graphhopper.util.EdgeIteratorState.class) , anyBoolean());
      doReturn(flagEncoder0).when(weighting0).getFlagEncoder();
      RoutingCHEdgeIteratorStateImpl routingCHEdgeIteratorStateImpl0 = new RoutingCHEdgeIteratorStateImpl(edgeIteratorState0, weighting0);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertNotNull(routingCHEdgeIteratorStateImpl0);
      
      int int0 = routingCHEdgeIteratorStateImpl0.getEdge();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertEquals((-1527), int0);
      
      double double0 = routingCHEdgeIteratorStateImpl0.getWeight(false);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertEquals(536870.911, double0, 0.01);
      
      // Undeclared exception!
      try { 
        routingCHEdgeIteratorStateImpl0.getSkippedEdge1();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.graphhopper.util.EdgeIteratorState$MockitoMock$998329240 cannot be cast to com.graphhopper.util.CHEdgeIteratorState
         //
         verifyException("com.graphhopper.storage.RoutingCHEdgeIteratorStateImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn((BooleanEncodedValue) null).when(flagEncoder0).getAccessEnc();
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(flagEncoder0).when(weighting0).getFlagEncoder();
      RoutingCHEdgeIteratorStateImpl routingCHEdgeIteratorStateImpl0 = new RoutingCHEdgeIteratorStateImpl((EdgeIteratorState) null, weighting0);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertNotNull(routingCHEdgeIteratorStateImpl0);
      
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        routingCHEdgeIteratorStateImpl0.getOrigEdgeFirst();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.storage.RoutingCHEdgeIteratorStateImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn((BooleanEncodedValue) null).when(flagEncoder0).getAccessEnc();
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(flagEncoder0).when(weighting0).getFlagEncoder();
      RoutingCHEdgeIteratorStateImpl routingCHEdgeIteratorStateImpl0 = new RoutingCHEdgeIteratorStateImpl((EdgeIteratorState) null, weighting0);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertNotNull(routingCHEdgeIteratorStateImpl0);
      
      // Undeclared exception!
      try { 
        routingCHEdgeIteratorStateImpl0.getBaseNode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.storage.RoutingCHEdgeIteratorStateImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(edgeIteratorState0).getEdge();
      doReturn((String) null, (String) null, (String) null).when(edgeIteratorState0).toString();
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn((BooleanEncodedValue) null).when(flagEncoder0).getAccessEnc();
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(flagEncoder0).when(weighting0).getFlagEncoder();
      RoutingCHEdgeIteratorStateImpl routingCHEdgeIteratorStateImpl0 = new RoutingCHEdgeIteratorStateImpl(edgeIteratorState0, weighting0);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertNotNull(routingCHEdgeIteratorStateImpl0);
      
      int int0 = routingCHEdgeIteratorStateImpl0.getOrigEdge();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertEquals(0, int0);
      
      // Undeclared exception!
      try { 
        routingCHEdgeIteratorStateImpl0.getSkippedEdge1();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.graphhopper.util.EdgeIteratorState$MockitoMock$998329240 cannot be cast to com.graphhopper.util.CHEdgeIteratorState
         //
         verifyException("com.graphhopper.storage.RoutingCHEdgeIteratorStateImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      doReturn(702, 376, 702, 376, 0).when(edgeIteratorState0).getAdjNode();
      doReturn(376, 40, (-1)).when(edgeIteratorState0).getBaseNode();
      doReturn(702).when(edgeIteratorState0).getEdge();
      doReturn(15, 41).when(edgeIteratorState0).getOrigEdgeFirst();
      doReturn(0).when(edgeIteratorState0).getOrigEdgeLast();
      doReturn(true, true).when(edgeIteratorState0).getReverse(any(com.graphhopper.routing.ev.BooleanEncodedValue.class));
      doReturn((String) null, "nodes_ch_", "", (String) null, (String) null).when(edgeIteratorState0).toString();
      BooleanEncodedValue booleanEncodedValue0 = mock(BooleanEncodedValue.class, new ViolatedAssumptionAnswer());
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn(booleanEncodedValue0).when(flagEncoder0).getAccessEnc();
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn((double)0, 414.983).when(weighting0).calcEdgeWeight(any(com.graphhopper.util.EdgeIteratorState.class) , anyBoolean());
      doReturn(flagEncoder0).when(weighting0).getFlagEncoder();
      RoutingCHEdgeIteratorStateImpl routingCHEdgeIteratorStateImpl0 = new RoutingCHEdgeIteratorStateImpl(edgeIteratorState0, weighting0);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertNotNull(routingCHEdgeIteratorStateImpl0);
      
      int int0 = routingCHEdgeIteratorStateImpl0.getAdjNode();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertEquals(702, int0);
      
      int int1 = routingCHEdgeIteratorStateImpl0.getOrigEdge();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertTrue(int1 == int0);
      assertEquals(702, int1);
      
      int int2 = routingCHEdgeIteratorStateImpl0.getAdjNode();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertEquals(376, int2);
      
      boolean boolean0 = true;
      int int3 = routingCHEdgeIteratorStateImpl0.getBaseNode();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertTrue(int3 == int2);
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      assertEquals(376, int3);
      
      double double0 = routingCHEdgeIteratorStateImpl0.getOrigEdgeWeight(true, true);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertEquals(0.0, double0, 0.01);
      
      int int4 = routingCHEdgeIteratorStateImpl0.getOrigEdgeFirst();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertFalse(int4 == int1);
      assertFalse(int4 == int0);
      assertFalse(int4 == int3);
      assertFalse(int4 == int2);
      assertEquals(15, int4);
      
      double double1 = routingCHEdgeIteratorStateImpl0.getOrigEdgeWeight(true, true);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertNotEquals(double1, double0, 0.01);
      assertEquals(414.983, double1, 0.01);
      
      int int5 = routingCHEdgeIteratorStateImpl0.getOrigEdgeFirst();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertFalse(int5 == int0);
      assertFalse(int5 == int1);
      assertFalse(int5 == int3);
      assertFalse(int5 == int4);
      assertFalse(int5 == int2);
      assertEquals(41, int5);
      
      int int6 = routingCHEdgeIteratorStateImpl0.getOrigEdgeLast();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertFalse(int6 == int3);
      assertFalse(int6 == int2);
      assertFalse(int6 == int5);
      assertFalse(int6 == int4);
      assertFalse(int6 == int1);
      assertFalse(int6 == int0);
      assertEquals(0, int6);
      
      int int7 = routingCHEdgeIteratorStateImpl0.getAdjNode();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertFalse(int7 == int4);
      assertTrue(int7 == int6);
      assertFalse(int7 == int1);
      assertFalse(int7 == int0);
      assertFalse(int7 == int3);
      assertFalse(int7 == int5);
      assertFalse(int7 == int2);
      assertEquals(0, int7);
      
      // Undeclared exception!
      try { 
        routingCHEdgeIteratorStateImpl0.getSkippedEdge2();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.graphhopper.util.EdgeIteratorState$MockitoMock$998329240 cannot be cast to com.graphhopper.util.CHEdgeIteratorState
         //
         verifyException("com.graphhopper.storage.RoutingCHEdgeIteratorStateImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0, 0).when(edgeIteratorState0).getAdjNode();
      doReturn(0, 0, 0, 0).when(edgeIteratorState0).getBaseNode();
      doReturn(0).when(edgeIteratorState0).getEdge();
      doReturn(0, 0).when(edgeIteratorState0).getOrigEdgeFirst();
      doReturn(0).when(edgeIteratorState0).getOrigEdgeLast();
      doReturn(false, false, false).when(edgeIteratorState0).getReverse(any(com.graphhopper.routing.ev.BooleanEncodedValue.class));
      doReturn((String) null, (String) null, (String) null, (String) null, (String) null).when(edgeIteratorState0).toString();
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn((BooleanEncodedValue) null).when(flagEncoder0).getAccessEnc();
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0).when(weighting0).calcEdgeWeight(any(com.graphhopper.util.EdgeIteratorState.class) , anyBoolean());
      doReturn(flagEncoder0).when(weighting0).getFlagEncoder();
      RoutingCHEdgeIteratorStateImpl routingCHEdgeIteratorStateImpl0 = new RoutingCHEdgeIteratorStateImpl(edgeIteratorState0, weighting0);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertNotNull(routingCHEdgeIteratorStateImpl0);
      
      int int0 = routingCHEdgeIteratorStateImpl0.getAdjNode();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertEquals(0, int0);
      
      int int1 = routingCHEdgeIteratorStateImpl0.getOrigEdge();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertTrue(int1 == int0);
      assertEquals(0, int1);
      
      int int2 = routingCHEdgeIteratorStateImpl0.getAdjNode();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertTrue(int2 == int0);
      assertTrue(int2 == int1);
      assertEquals(0, int2);
      
      boolean boolean0 = true;
      int int3 = routingCHEdgeIteratorStateImpl0.getBaseNode();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertTrue(int3 == int1);
      assertTrue(int3 == int0);
      assertTrue(int3 == int2);
      assertEquals(0, int3);
      
      double double0 = routingCHEdgeIteratorStateImpl0.getOrigEdgeWeight(true, true);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertEquals(0.0, double0, 0.01);
      
      double double1 = routingCHEdgeIteratorStateImpl0.getWeight(true);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertEquals(double1, double0, 0.01);
      assertEquals(0.0, double1, 0.01);
      
      int int4 = routingCHEdgeIteratorStateImpl0.getOrigEdgeFirst();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertTrue(int4 == int1);
      assertTrue(int4 == int2);
      assertTrue(int4 == int3);
      assertTrue(int4 == int0);
      assertEquals(0, int4);
      
      double double2 = routingCHEdgeIteratorStateImpl0.getOrigEdgeWeight(true, true);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertEquals(double2, double0, 0.01);
      assertEquals(double2, double1, 0.01);
      assertEquals(0.0, double2, 0.01);
      
      int int5 = routingCHEdgeIteratorStateImpl0.getOrigEdgeFirst();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertTrue(int5 == int1);
      assertTrue(int5 == int4);
      assertTrue(int5 == int3);
      assertTrue(int5 == int0);
      assertTrue(int5 == int2);
      assertEquals(0, int5);
      
      int int6 = routingCHEdgeIteratorStateImpl0.getOrigEdgeLast();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertTrue(int6 == int4);
      assertTrue(int6 == int1);
      assertTrue(int6 == int2);
      assertTrue(int6 == int0);
      assertTrue(int6 == int5);
      assertTrue(int6 == int3);
      assertEquals(0, int6);
      
      int int7 = routingCHEdgeIteratorStateImpl0.getAdjNode();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertTrue(int7 == int6);
      assertTrue(int7 == int5);
      assertTrue(int7 == int2);
      assertTrue(int7 == int4);
      assertTrue(int7 == int3);
      assertTrue(int7 == int1);
      assertTrue(int7 == int0);
      assertEquals(0, int7);
      
      // Undeclared exception!
      try { 
        routingCHEdgeIteratorStateImpl0.getSkippedEdge2();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.graphhopper.util.EdgeIteratorState$MockitoMock$998329240 cannot be cast to com.graphhopper.util.CHEdgeIteratorState
         //
         verifyException("com.graphhopper.storage.RoutingCHEdgeIteratorStateImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(edgeIteratorState0).getAdjNode();
      doReturn(0, 0).when(edgeIteratorState0).getBaseNode();
      doReturn(0).when(edgeIteratorState0).getOrigEdgeFirst();
      doReturn(false).when(edgeIteratorState0).getReverse(any(com.graphhopper.routing.ev.BooleanEncodedValue.class));
      doReturn((String) null, (String) null, (String) null, (String) null, (String) null).when(edgeIteratorState0).toString();
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn((BooleanEncodedValue) null).when(flagEncoder0).getAccessEnc();
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(weighting0).calcEdgeWeight(any(com.graphhopper.util.EdgeIteratorState.class) , anyBoolean());
      doReturn(flagEncoder0).when(weighting0).getFlagEncoder();
      RoutingCHEdgeIteratorStateImpl routingCHEdgeIteratorStateImpl0 = new RoutingCHEdgeIteratorStateImpl(edgeIteratorState0, weighting0);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertNotNull(routingCHEdgeIteratorStateImpl0);
      
      double double0 = routingCHEdgeIteratorStateImpl0.getOrigEdgeWeight(true, true);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertEquals(0.0, double0, 0.01);
      
      int int0 = routingCHEdgeIteratorStateImpl0.getBaseNode();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertEquals(0, int0);
      
      int int1 = routingCHEdgeIteratorStateImpl0.getOrigEdgeFirst();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertTrue(int1 == int0);
      assertEquals(0, int1);
      
      // Undeclared exception!
      try { 
        routingCHEdgeIteratorStateImpl0.getSkippedEdge2();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.graphhopper.util.EdgeIteratorState$MockitoMock$998329240 cannot be cast to com.graphhopper.util.CHEdgeIteratorState
         //
         verifyException("com.graphhopper.storage.RoutingCHEdgeIteratorStateImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(edgeIteratorState0).getAdjNode();
      doReturn(0).when(edgeIteratorState0).getOrigEdgeFirst();
      doReturn((String) null, (String) null, (String) null, (String) null).when(edgeIteratorState0).toString();
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn((BooleanEncodedValue) null).when(flagEncoder0).getAccessEnc();
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(flagEncoder0).when(weighting0).getFlagEncoder();
      RoutingCHEdgeIteratorStateImpl routingCHEdgeIteratorStateImpl0 = new RoutingCHEdgeIteratorStateImpl(edgeIteratorState0, weighting0);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertNotNull(routingCHEdgeIteratorStateImpl0);
      
      int int0 = routingCHEdgeIteratorStateImpl0.getOrigEdgeFirst();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertEquals(0, int0);
      
      int int1 = routingCHEdgeIteratorStateImpl0.getAdjNode();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertTrue(int1 == int0);
      assertEquals(0, int1);
      
      EdgeIteratorState edgeIteratorState1 = routingCHEdgeIteratorStateImpl0.edgeState();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertSame(edgeIteratorState1, edgeIteratorState0);
      assertNotNull(edgeIteratorState1);
      
      boolean boolean0 = false;
      boolean boolean1 = true;
      // Undeclared exception!
      try { 
        routingCHEdgeIteratorStateImpl0.getSkippedEdge1();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.graphhopper.util.EdgeIteratorState$MockitoMock$998329240 cannot be cast to com.graphhopper.util.CHEdgeIteratorState
         //
         verifyException("com.graphhopper.storage.RoutingCHEdgeIteratorStateImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(edgeIteratorState0).getEdge();
      doReturn((String) null, (String) null, (String) null).when(edgeIteratorState0).toString();
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn((BooleanEncodedValue) null).when(flagEncoder0).getAccessEnc();
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(flagEncoder0).when(weighting0).getFlagEncoder();
      RoutingCHEdgeIteratorStateImpl routingCHEdgeIteratorStateImpl0 = new RoutingCHEdgeIteratorStateImpl(edgeIteratorState0, weighting0);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertNotNull(routingCHEdgeIteratorStateImpl0);
      
      EdgeIteratorState edgeIteratorState1 = routingCHEdgeIteratorStateImpl0.edgeState();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertSame(edgeIteratorState1, edgeIteratorState0);
      assertNotNull(edgeIteratorState1);
      
      int int0 = routingCHEdgeIteratorStateImpl0.getOrigEdge();
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(edgeIteratorState0).get(any(com.graphhopper.routing.ev.BooleanEncodedValue.class));
      doReturn(0).when(edgeIteratorState0).getAdjNode();
      doReturn(0, 0).when(edgeIteratorState0).getBaseNode();
      doReturn(0).when(edgeIteratorState0).getEdge();
      doReturn(0).when(edgeIteratorState0).getOrigEdgeFirst();
      doReturn(0, 0).when(edgeIteratorState0).getOrigEdgeLast();
      doReturn((String) null, (String) null, (String) null, (String) null, (String) null).when(edgeIteratorState0).toString();
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn((BooleanEncodedValue) null).when(flagEncoder0).getAccessEnc();
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(weighting0).calcEdgeWeight(any(com.graphhopper.util.EdgeIteratorState.class) , anyBoolean());
      doReturn(flagEncoder0).when(weighting0).getFlagEncoder();
      RoutingCHEdgeIteratorStateImpl routingCHEdgeIteratorStateImpl0 = new RoutingCHEdgeIteratorStateImpl(edgeIteratorState0, weighting0);
      double double0 = routingCHEdgeIteratorStateImpl0.getWeight(false);
      assertEquals(0.0, double0, 0.01);
      
      int int0 = routingCHEdgeIteratorStateImpl0.getOrigEdge();
      assertEquals(0, int0);
      
      routingCHEdgeIteratorStateImpl0.getOrigEdgeFirst();
      routingCHEdgeIteratorStateImpl0.getBaseNode();
      routingCHEdgeIteratorStateImpl0.getOrigEdgeLast();
      int int1 = routingCHEdgeIteratorStateImpl0.getOrigEdgeLast();
      assertTrue(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn((FlagEncoder) null).when(weighting0).getFlagEncoder();
      RoutingCHEdgeIteratorStateImpl routingCHEdgeIteratorStateImpl0 = null;
      try {
        routingCHEdgeIteratorStateImpl0 = new RoutingCHEdgeIteratorStateImpl((EdgeIteratorState) null, weighting0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.storage.RoutingCHEdgeIteratorStateImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      doReturn(662).when(edgeIteratorState0).getAdjNode();
      doReturn(0).when(edgeIteratorState0).getEdge();
      doReturn("/(|:.^`Z>2(p4XTC2", (String) null, (String) null, (String) null, (String) null).when(edgeIteratorState0).toString();
      BooleanEncodedValue booleanEncodedValue0 = mock(BooleanEncodedValue.class, new ViolatedAssumptionAnswer());
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn(booleanEncodedValue0).when(flagEncoder0).getAccessEnc();
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(flagEncoder0).when(weighting0).getFlagEncoder();
      RoutingCHEdgeIteratorStateImpl routingCHEdgeIteratorStateImpl0 = new RoutingCHEdgeIteratorStateImpl(edgeIteratorState0, weighting0);
      routingCHEdgeIteratorStateImpl0.getOrigEdge();
      routingCHEdgeIteratorStateImpl0.getAdjNode();
      routingCHEdgeIteratorStateImpl0.isShortcut();
      // Undeclared exception!
      try { 
        routingCHEdgeIteratorStateImpl0.getSkippedEdge1();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.graphhopper.util.EdgeIteratorState$MockitoMock$998329240 cannot be cast to com.graphhopper.util.CHEdgeIteratorState
         //
         verifyException("com.graphhopper.storage.RoutingCHEdgeIteratorStateImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      doReturn((-497)).when(edgeIteratorState0).getAdjNode();
      doReturn((-199), (-199)).when(edgeIteratorState0).getBaseNode();
      doReturn((-260)).when(edgeIteratorState0).getEdge();
      doReturn((-1680)).when(edgeIteratorState0).getOrigEdgeFirst();
      doReturn((-199), (-199)).when(edgeIteratorState0).getOrigEdgeLast();
      doReturn(false).when(edgeIteratorState0).getReverse(any(com.graphhopper.routing.ev.BooleanEncodedValue.class));
      doReturn(";1P\"dQ/pE#a`PbIdw", "-P", "com.graphhopper.storage.RoutingCHEdgeIteratorStateImpl", "-P", "com.graphhopper.storage.RoutingCHEdgeIteratorStateImpl").when(edgeIteratorState0).toString();
      BooleanEncodedValue booleanEncodedValue0 = mock(BooleanEncodedValue.class, new ViolatedAssumptionAnswer());
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn(booleanEncodedValue0).when(flagEncoder0).getAccessEnc();
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(flagEncoder0).when(weighting0).getFlagEncoder();
      RoutingCHEdgeIteratorStateImpl routingCHEdgeIteratorStateImpl0 = new RoutingCHEdgeIteratorStateImpl(edgeIteratorState0, weighting0);
      routingCHEdgeIteratorStateImpl0.getWeight(true);
      routingCHEdgeIteratorStateImpl0.getOrigEdge();
      routingCHEdgeIteratorStateImpl0.getOrigEdgeFirst();
      routingCHEdgeIteratorStateImpl0.getBaseNode();
      routingCHEdgeIteratorStateImpl0.getOrigEdgeLast();
      routingCHEdgeIteratorStateImpl0.getOrigEdgeLast();
      EdgeIteratorState edgeIteratorState1 = routingCHEdgeIteratorStateImpl0.edgeState();
      assertSame(edgeIteratorState1, edgeIteratorState0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      doReturn("403y<`#h2").when(edgeIteratorState0).toString();
      BooleanEncodedValue booleanEncodedValue0 = mock(BooleanEncodedValue.class, new ViolatedAssumptionAnswer());
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn(booleanEncodedValue0).when(flagEncoder0).getAccessEnc();
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(flagEncoder0).when(weighting0).getFlagEncoder();
      RoutingCHEdgeIteratorStateImpl routingCHEdgeIteratorStateImpl0 = new RoutingCHEdgeIteratorStateImpl(edgeIteratorState0, weighting0);
      // Undeclared exception!
      try { 
        routingCHEdgeIteratorStateImpl0.getSkippedEdge2();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.graphhopper.util.EdgeIteratorState$MockitoMock$998329240 cannot be cast to com.graphhopper.util.CHEdgeIteratorState
         //
         verifyException("com.graphhopper.storage.RoutingCHEdgeIteratorStateImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      doReturn(true, false).when(edgeIteratorState0).get(any(com.graphhopper.routing.ev.BooleanEncodedValue.class));
      doReturn(5560, 0).when(edgeIteratorState0).getAdjNode();
      doReturn((-199), 5560, 0).when(edgeIteratorState0).getBaseNode();
      doReturn((-199)).when(edgeIteratorState0).getEdge();
      doReturn((-1)).when(edgeIteratorState0).getOrigEdgeFirst();
      doReturn(1095, 2157).when(edgeIteratorState0).getOrigEdgeLast();
      doReturn((String) null, "", (String) null, "", (String) null).when(edgeIteratorState0).toString();
      BooleanEncodedValue booleanEncodedValue0 = mock(BooleanEncodedValue.class, new ViolatedAssumptionAnswer());
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn(booleanEncodedValue0).when(flagEncoder0).getAccessEnc();
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(1765.471790499264).when(weighting0).calcEdgeWeight(any(com.graphhopper.util.EdgeIteratorState.class) , anyBoolean());
      doReturn(flagEncoder0).when(weighting0).getFlagEncoder();
      RoutingCHEdgeIteratorStateImpl routingCHEdgeIteratorStateImpl0 = new RoutingCHEdgeIteratorStateImpl(edgeIteratorState0, weighting0);
      assertFalse(routingCHEdgeIteratorStateImpl0.isShortcut());
      
      double double0 = routingCHEdgeIteratorStateImpl0.getWeight(false);
      assertEquals(1765.471790499264, double0, 0.01);
      
      int int0 = routingCHEdgeIteratorStateImpl0.getOrigEdge();
      assertEquals((-199), int0);
      
      routingCHEdgeIteratorStateImpl0.getOrigEdgeFirst();
      routingCHEdgeIteratorStateImpl0.getBaseNode();
      routingCHEdgeIteratorStateImpl0.getOrigEdgeLast();
      routingCHEdgeIteratorStateImpl0.getOrigEdgeLast();
      double double1 = routingCHEdgeIteratorStateImpl0.getOrigEdgeWeight(false, false);
      assertEquals(0.0, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(edgeIteratorState0).get(any(com.graphhopper.routing.ev.BooleanEncodedValue.class));
      doReturn(0).when(edgeIteratorState0).getAdjNode();
      doReturn(0).when(edgeIteratorState0).getBaseNode();
      doReturn(0).when(edgeIteratorState0).getEdge();
      doReturn((String) null, (String) null, (String) null, (String) null, (String) null).when(edgeIteratorState0).toString();
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn((BooleanEncodedValue) null).when(flagEncoder0).getAccessEnc();
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(weighting0).calcEdgeWeight(any(com.graphhopper.util.EdgeIteratorState.class) , anyBoolean());
      doReturn(flagEncoder0).when(weighting0).getFlagEncoder();
      RoutingCHEdgeIteratorStateImpl routingCHEdgeIteratorStateImpl0 = new RoutingCHEdgeIteratorStateImpl(edgeIteratorState0, weighting0);
      routingCHEdgeIteratorStateImpl0.getEdge();
      routingCHEdgeIteratorStateImpl0.getWeight(false);
      // Undeclared exception!
      try { 
        routingCHEdgeIteratorStateImpl0.getSkippedEdge1();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.graphhopper.util.EdgeIteratorState$MockitoMock$998329240 cannot be cast to com.graphhopper.util.CHEdgeIteratorState
         //
         verifyException("com.graphhopper.storage.RoutingCHEdgeIteratorStateImpl", e);
      }
  }
}
