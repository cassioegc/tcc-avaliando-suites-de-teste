/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Sun Apr 04 03:29:26 GMT 2021
 */

package com.graphhopper.routing;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class DefaultWeightingFactory_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.graphhopper.routing.DefaultWeightingFactory"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "BR"); 
    java.lang.System.setProperty("user.dir", "/home/cassioegc/tcc/graphhopper.reader-osm/core"); 
    java.lang.System.setProperty("user.home", "/home/cassioegc"); 
    java.lang.System.setProperty("user.language", "pt"); 
    java.lang.System.setProperty("user.name", "cassioegc"); 
    java.lang.System.setProperty("user.timezone", ""); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(DefaultWeightingFactory_ESTest_scaffolding.class.getClassLoader() ,
      "com.graphhopper.reader.OSMTurnRelation",
      "com.graphhopper.routing.util.RacingBikeFlagEncoder",
      "org.locationtech.jts.geom.CoordinateFilter",
      "com.graphhopper.reader.osm.OSMInput",
      "org.codehaus.janino.Java$ArrayAccessExpression",
      "org.codehaus.janino.Java$TryStatement$LocalVariableDeclaratorResource",
      "org.codehaus.janino.Java$Lvalue",
      "org.codehaus.janino.Java$ConditionalExpression",
      "com.graphhopper.search.StringIndex",
      "com.graphhopper.routing.util.EncodingManager",
      "org.codehaus.janino.Java$LocalVariableAccess",
      "com.carrotsearch.hppc.IntArrayList",
      "com.graphhopper.routing.util.MotorcycleFlagEncoder",
      "com.carrotsearch.hppc.predicates.ObjectPredicate",
      "com.carrotsearch.hppc.IntObjectHashMap$KeysContainer",
      "org.codehaus.commons.compiler.WarningHandler",
      "com.graphhopper.coll.GHIntLongHashMap",
      "org.locationtech.jts.geom.MultiLineString",
      "com.carrotsearch.hppc.IntIndexedContainer",
      "org.codehaus.janino.Java$Located",
      "com.graphhopper.reader.ReaderRelation$Member",
      "org.codehaus.janino.Java$CatchParameter",
      "org.codehaus.janino.Scanner",
      "org.codehaus.janino.Java$LambdaBody",
      "com.graphhopper.util.shapes.Shape",
      "org.codehaus.janino.TokenType",
      "org.codehaus.janino.Java$ProvidesModuleDirective",
      "com.graphhopper.coll.GHLongHashSet",
      "com.graphhopper.routing.util.AllCHEdgesIterator",
      "org.codehaus.janino.Java$QualifiedThisReference",
      "com.graphhopper.json.Statement",
      "org.codehaus.janino.Java$ThisReference",
      "com.carrotsearch.hppc.IntLookupContainer",
      "com.carrotsearch.hppc.LongArrayList",
      "com.graphhopper.storage.BaseGraph$EdgeIteratorImpl",
      "org.codehaus.janino.Java$AbstractCompilationUnit$StaticImportOnDemandDeclaration",
      "com.graphhopper.storage.BaseGraph$AllEdgeIterator",
      "org.locationtech.jts.geom.LinearRing",
      "com.graphhopper.routing.ev.EncodedValue$InitializerConfig",
      "org.codehaus.janino.Visitor$ElementValueVisitor",
      "com.carrotsearch.hppc.BitMixer",
      "com.carrotsearch.hppc.ObjectContainer",
      "org.codehaus.janino.Java$PackageMemberTypeDeclaration",
      "com.graphhopper.config.Profile",
      "com.graphhopper.routing.util.TraversalMode",
      "com.graphhopper.storage.Graph",
      "org.codehaus.janino.Java$DocCommentable",
      "com.graphhopper.reader.osm.OSMReader",
      "org.codehaus.janino.Java$Atom",
      "com.graphhopper.util.PointAccess",
      "com.graphhopper.routing.util.parsers.OSMRoadClassLinkParser",
      "org.codehaus.janino.Java$MemberInterfaceDeclaration",
      "org.codehaus.janino.Java$AccessModifier",
      "com.graphhopper.reader.dem.GMTEDProvider",
      "org.codehaus.janino.Java$BreakStatement",
      "com.carrotsearch.hppc.LongLookupContainer",
      "com.graphhopper.storage.CHConfig",
      "com.graphhopper.storage.StorableProperties",
      "com.graphhopper.routing.weighting.AvoidEdgesWeighting",
      "org.locationtech.jts.geom.impl.CoordinateArraySequence",
      "com.graphhopper.coll.GHLongIntBTree$ReturnValue",
      "com.graphhopper.routing.util.parsers.OSMFootNetworkTagParser",
      "org.codehaus.janino.Java$ModuleDirective",
      "com.carrotsearch.hppc.IntObjectHashMap",
      "org.codehaus.janino.Java$SuperclassMethodInvocation",
      "org.locationtech.jts.geom.MultiPoint",
      "com.graphhopper.routing.ch.PrepareEncoder",
      "org.codehaus.janino.Java$AbstractTypeBodyDeclaration",
      "com.carrotsearch.hppc.predicates.LongLongPredicate",
      "org.codehaus.janino.Java$NewAnonymousClassInstance",
      "org.codehaus.janino.Java$ModularCompilationUnit",
      "com.graphhopper.routing.ev.DefaultEncodedValueFactory",
      "com.graphhopper.storage.Directory",
      "com.graphhopper.routing.ev.Roundabout",
      "com.graphhopper.routing.weighting.custom.CustomModelParser",
      "com.graphhopper.reader.dem.ElevationProvider",
      "org.codehaus.janino.Java$LocalVariableDeclarationStatement",
      "com.graphhopper.reader.ReaderElement",
      "org.codehaus.janino.Java$EnumDeclaration",
      "org.codehaus.janino.Java$ArrayLength",
      "com.graphhopper.storage.GHNodeAccess",
      "org.codehaus.janino.Java$LambdaParameters",
      "com.graphhopper.util.Helper",
      "org.codehaus.janino.Java$Scope",
      "org.codehaus.janino.Java$FieldAccessExpression",
      "org.codehaus.janino.Java$LocalVariable",
      "org.codehaus.janino.Visitor$LambdaParametersVisitor",
      "org.codehaus.janino.Java$ClassInstanceCreationReference",
      "org.codehaus.janino.Java$SynchronizedStatement",
      "com.graphhopper.routing.util.WheelchairFlagEncoder",
      "org.locationtech.jts.geom.util.GeometryEditor$GeometryEditorOperation",
      "com.graphhopper.routing.weighting.TurnCostProvider",
      "org.locationtech.jts.geom.Polygon",
      "org.locationtech.jts.geom.Geometry",
      "org.codehaus.janino.IClass$IMember",
      "org.locationtech.jts.geom.MultiPolygon",
      "com.graphhopper.routing.util.parsers.OSMMaxSpeedParser",
      "org.codehaus.janino.Java$NullLiteral",
      "com.graphhopper.reader.ReaderWay",
      "com.graphhopper.routing.util.HikeFlagEncoder",
      "com.carrotsearch.hppc.ObjectIntMap",
      "org.codehaus.janino.Java$Assignment",
      "com.graphhopper.util.GHUtility",
      "org.codehaus.janino.Java$PackageMemberClassDeclaration",
      "org.codehaus.janino.SimpleCompiler$2",
      "org.codehaus.janino.Java$ExpressionStatement",
      "org.codehaus.janino.Java$ClassDeclaration",
      "com.carrotsearch.hppc.IntObjectAssociativeContainer",
      "com.graphhopper.routing.ev.RoadAccess",
      "com.graphhopper.routing.ev.FootNetwork",
      "com.carrotsearch.hppc.procedures.IntObjectProcedure",
      "com.graphhopper.storage.CHGraph",
      "com.graphhopper.storage.IntsRef",
      "com.graphhopper.routing.util.FerrySpeedCalculator",
      "org.codehaus.janino.Java$Rvalue$2",
      "com.graphhopper.routing.util.CarFlagEncoder",
      "com.carrotsearch.hppc.LongSet",
      "org.codehaus.janino.Java$ElementValuePair",
      "com.graphhopper.storage.TurnCostStorage",
      "com.graphhopper.routing.weighting.Weighting",
      "com.graphhopper.routing.util.EncodingManager$AcceptWay",
      "com.carrotsearch.hppc.ObjectLookupContainer",
      "org.codehaus.commons.compiler.Location",
      "org.codehaus.janino.Java$Invocation",
      "org.codehaus.janino.Java$ConstructorInvocation",
      "org.codehaus.janino.Java$NewArray",
      "org.codehaus.janino.Java$SuperclassFieldAccessExpression",
      "org.codehaus.janino.Visitor$RvalueVisitor",
      "com.graphhopper.json.Statement$Keyword",
      "org.codehaus.janino.Java$StringLiteral",
      "com.graphhopper.routing.util.parsers.TurnCostParser$ExternalInternalMap",
      "org.codehaus.janino.Visitor$TypeVisitor",
      "com.graphhopper.reader.PillarInfo",
      "org.codehaus.janino.Java$IfStatement",
      "com.graphhopper.storage.DAType$MemRef",
      "org.codehaus.janino.Java$Package",
      "com.graphhopper.util.shapes.BBox",
      "com.graphhopper.json.Statement$Op",
      "org.codehaus.janino.Java$AnnotationTypeDeclaration",
      "com.carrotsearch.hppc.ArraySizingStrategy",
      "com.graphhopper.reader.osm.conditional.ConditionalOSMTagInspector",
      "org.codehaus.janino.Java$FormalLambdaParameters",
      "org.codehaus.janino.Java$MarkerAnnotation",
      "org.codehaus.janino.Java$SwitchStatement",
      "com.graphhopper.storage.GraphEdgeIdFinder$1",
      "com.graphhopper.routing.weighting.AbstractAdjustedWeighting",
      "com.carrotsearch.hppc.procedures.ObjectIntProcedure",
      "com.carrotsearch.hppc.LongIndexedContainer",
      "com.graphhopper.routing.ev.BikeNetwork",
      "org.locationtech.jts.geom.GeometryFilter",
      "com.graphhopper.routing.util.AllEdgesIterator",
      "com.graphhopper.util.CHEdgeExplorer",
      "com.graphhopper.storage.CHGraphImpl",
      "com.graphhopper.routing.ev.EncodedValueFactory",
      "com.graphhopper.routing.util.EdgeFilter",
      "com.graphhopper.storage.RAMDataAccess",
      "org.locationtech.jts.geom.IntersectionMatrix",
      "com.graphhopper.routing.weighting.custom.CustomModelParser$3",
      "org.codehaus.janino.Java$ArrayCreationReference",
      "com.graphhopper.routing.weighting.custom.CustomModelParser$1",
      "org.codehaus.janino.Java$WhileStatement",
      "org.codehaus.janino.Java$NewInitializedArray",
      "org.codehaus.janino.Java$BlockStatement",
      "com.graphhopper.routing.ev.RoadClass",
      "org.codehaus.janino.util.Annotatable",
      "com.carrotsearch.hppc.procedures.LongLongProcedure",
      "org.locationtech.jts.geom.impl.PackedCoordinateSequence",
      "com.graphhopper.routing.ev.EnumEncodedValue",
      "org.locationtech.jts.geom.impl.CoordinateArraySequenceFactory",
      "com.graphhopper.routing.util.parsers.OSMRoadEnvironmentParser",
      "com.graphhopper.routing.util.FootFlagEncoder",
      "org.codehaus.janino.Java$NormalAnnotation",
      "org.codehaus.janino.Java$UsesModuleDirective",
      "com.graphhopper.routing.util.PriorityCode",
      "org.codehaus.janino.Java$AlternateConstructorInvocation",
      "org.codehaus.janino.Java$UnaryOperation",
      "com.graphhopper.routing.util.parsers.TagParserFactory",
      "com.graphhopper.routing.ev.UnsignedDecimalEncodedValue",
      "com.graphhopper.reader.osm.conditional.DateRange",
      "com.graphhopper.routing.weighting.custom.CustomWeighting",
      "org.codehaus.janino.Java$BreakableStatement",
      "com.graphhopper.coll.LongIntMap",
      "org.codehaus.janino.SimpleCompiler",
      "org.locationtech.jts.geom.CoordinateSequence",
      "org.codehaus.janino.Java$NewClassInstance",
      "com.graphhopper.util.DistanceCalc",
      "org.codehaus.janino.Java$MethodReference",
      "org.codehaus.janino.Java$MemberEnumDeclaration",
      "com.graphhopper.routing.util.parsers.TagParser",
      "com.graphhopper.util.GHUtility$DisabledEdgeIterator",
      "com.graphhopper.routing.weighting.DefaultTurnCostProvider",
      "com.graphhopper.routing.weighting.TurnCostProvider$1",
      "org.codehaus.janino.Visitor$ModifierVisitor",
      "org.codehaus.janino.Java$FunctionDeclarator$FormalParameters",
      "com.graphhopper.routing.ev.StringEncodedValue",
      "org.codehaus.janino.Java$TryStatement",
      "org.codehaus.janino.Java$BinaryOperation",
      "org.locationtech.jts.geom.Point",
      "com.graphhopper.reader.OSMTurnRelation$Type",
      "com.graphhopper.util.PointList",
      "com.carrotsearch.hppc.LongLongHashMap",
      "org.codehaus.janino.Java$LambdaExpression",
      "org.codehaus.commons.compiler.ICookable",
      "org.codehaus.commons.compiler.InternalCompilerException",
      "com.graphhopper.util.shapes.Circle",
      "org.codehaus.janino.Java$Literal",
      "org.codehaus.janino.Java$VariableDeclarator",
      "org.codehaus.janino.Java$ReturnStatement",
      "org.codehaus.janino.Java$MethodDeclarator",
      "org.codehaus.janino.Java$ContinueStatement",
      "com.graphhopper.reader.osm.conditional.ConditionalValueParser",
      "org.locationtech.jts.geom.impl.PackedCoordinateSequence$Float",
      "com.graphhopper.routing.weighting.custom.CustomProfile",
      "com.graphhopper.util.BitUtil",
      "com.graphhopper.routing.ev.SimpleBooleanEncodedValue",
      "org.codehaus.commons.compiler.CompileException",
      "com.graphhopper.storage.Storable",
      "org.codehaus.janino.Java$Modifier",
      "org.locationtech.jts.algorithm.RectangleLineIntersector",
      "com.carrotsearch.hppc.ObjectIntAssociativeContainer",
      "org.codehaus.janino.Visitor$ModuleDirectiveVisitor",
      "org.locationtech.jts.geom.GeometryFactory",
      "com.graphhopper.storage.InternalGraphEventListener",
      "com.carrotsearch.hppc.Preallocable",
      "com.graphhopper.storage.RAMDirectory",
      "com.carrotsearch.hppc.IntHashSet",
      "com.carrotsearch.hppc.predicates.IntPredicate",
      "com.graphhopper.routing.weighting.custom.CustomWeighting$Parameters",
      "org.locationtech.jts.geom.Polygonal",
      "com.carrotsearch.hppc.IntLongMap",
      "com.carrotsearch.hppc.IntObjectMap",
      "org.codehaus.janino.Visitor$AbstractCompilationUnitVisitor",
      "org.locationtech.jts.geom.CoordinateSequenceFactory",
      "com.graphhopper.routing.util.parsers.OSMRoadAccessParser$1",
      "org.codehaus.janino.Java$IntegerLiteral",
      "org.locationtech.jts.geom.Envelope",
      "org.codehaus.janino.Visitor$LambdaBodyVisitor",
      "com.graphhopper.reader.dem.AbstractTiffElevationProvider",
      "org.codehaus.janino.Visitor$ConstructorInvocationVisitor",
      "org.codehaus.janino.Java$AbstractCompilationUnit$TypeImportOnDemandDeclaration",
      "org.codehaus.janino.Java$AbstractCompilationUnit$ImportDeclaration",
      "org.codehaus.janino.Java$ElementValueArrayInitializer",
      "org.codehaus.janino.Java$Locatable",
      "org.codehaus.janino.Java$Located$1",
      "com.graphhopper.storage.GHDirectory",
      "com.graphhopper.storage.BaseGraph$EdgeIteratorStateImpl",
      "org.locationtech.jts.algorithm.LineIntersector",
      "org.codehaus.janino.Java$ForEachStatement",
      "com.graphhopper.storage.GraphHopperStorage",
      "com.graphhopper.util.EdgeExplorer",
      "org.locationtech.jts.geom.DefaultCoordinateSequenceFactory",
      "com.graphhopper.storage.index.LocationIndex$Visitor",
      "org.codehaus.janino.Java$MethodInvocation",
      "com.graphhopper.util.ProgressListener",
      "org.codehaus.janino.Java",
      "org.codehaus.janino.Java$ParameterAccess",
      "org.codehaus.janino.Java$PackageMemberEnumDeclaration",
      "org.codehaus.janino.Java$ElementValue",
      "com.graphhopper.util.EdgeIteratorState$1",
      "org.codehaus.janino.Java$ArrayInitializerOrRvalue",
      "org.codehaus.janino.Java$PackageDeclaration",
      "org.codehaus.janino.Java$Annotation",
      "com.graphhopper.routing.util.parsers.OSMRoadClassParser",
      "org.codehaus.commons.compiler.Cookable",
      "com.graphhopper.reader.dem.AbstractElevationProvider",
      "com.graphhopper.routing.util.parsers.OSMBikeNetworkTagParser",
      "com.graphhopper.routing.ev.RoadEnvironment",
      "org.locationtech.jts.geom.Geometry$1",
      "org.codehaus.janino.Java$Cast",
      "org.codehaus.janino.Java$Type",
      "org.codehaus.janino.Java$SuperConstructorInvocation",
      "org.codehaus.janino.Java$PrimitiveType",
      "org.codehaus.janino.IClass$IField",
      "com.graphhopper.routing.weighting.FastestWeighting",
      "com.graphhopper.reader.dem.ElevationProvider$1",
      "org.codehaus.commons.compiler.ISimpleCompiler",
      "org.codehaus.janino.Java$ReferenceType",
      "com.graphhopper.routing.util.DefaultEdgeFilter",
      "org.codehaus.janino.Java$NamedTypeDeclaration",
      "org.codehaus.janino.Java$MemberClassDeclaration",
      "org.codehaus.janino.Java$ExpressionLambdaBody",
      "com.graphhopper.routing.weighting.ShortFastestWeighting",
      "com.graphhopper.storage.RoutingCHGraphImpl",
      "com.graphhopper.routing.ev.EncodedValue",
      "org.codehaus.janino.Java$LocalClassDeclarationStatement",
      "com.graphhopper.storage.GraphStorage",
      "com.graphhopper.util.DouglasPeucker",
      "org.locationtech.jts.geom.Lineal",
      "org.codehaus.janino.Java$CharacterLiteral",
      "com.graphhopper.storage.NodeAccess",
      "com.graphhopper.routing.weighting.QueryGraphWeighting",
      "org.codehaus.janino.Java$FunctionDeclarator",
      "org.codehaus.janino.Java$Initializer",
      "org.codehaus.janino.Java$OpensModuleDirective",
      "org.codehaus.commons.compiler.LocatedException",
      "org.codehaus.janino.Java$FloatingPointLiteral",
      "org.codehaus.janino.Java$Rvalue",
      "com.graphhopper.util.BitUtilLittle",
      "com.carrotsearch.hppc.procedures.IntLongProcedure",
      "com.graphhopper.storage.RoutingCHEdgeIterator",
      "org.codehaus.janino.Java$Block",
      "com.graphhopper.util.shapes.GHPoint3D",
      "org.locationtech.jts.geom.GeometryComponentFilter",
      "com.graphhopper.routing.ev.IntEncodedValue",
      "org.codehaus.janino.Java$ExportsModuleDirective",
      "com.graphhopper.coll.GHLongIntBTree",
      "org.codehaus.janino.Java$ForStatement",
      "com.graphhopper.routing.util.parsers.OSMGetOffBikeParser",
      "com.graphhopper.routing.ev.DecimalEncodedValue",
      "com.graphhopper.routing.weighting.AbstractWeighting",
      "com.graphhopper.util.ShallowImmutablePointList",
      "org.codehaus.janino.Java$FunctionDeclarator$FormalParameter",
      "org.codehaus.janino.Access",
      "org.codehaus.janino.Java$SwitchStatement$SwitchBlockStatementGroup",
      "org.codehaus.janino.Java$TypeParameter",
      "org.codehaus.janino.Java$BlockLambdaBody",
      "com.graphhopper.storage.RoutingCHEdgeIteratorState",
      "org.codehaus.janino.Java$FieldAccess",
      "org.locationtech.jts.geom.impl.PackedCoordinateSequence$Double",
      "com.graphhopper.routing.WeightingFactory",
      "com.carrotsearch.hppc.IntContainer",
      "com.graphhopper.util.PointList$1",
      "org.codehaus.janino.Java$ClassLiteral",
      "com.graphhopper.util.Downloader",
      "org.locationtech.jts.geom.PrecisionModel",
      "org.codehaus.janino.Java$LocalClassDeclaration",
      "com.graphhopper.storage.index.Snap",
      "org.codehaus.janino.Java$AbstractTypeDeclaration",
      "com.graphhopper.routing.ev.RouteNetwork",
      "org.codehaus.janino.Java$CompilationUnit",
      "com.carrotsearch.hppc.predicates.LongPredicate",
      "com.graphhopper.storage.RoutingCHEdgeExplorer",
      "com.graphhopper.storage.BaseGraph",
      "com.graphhopper.storage.MMapDirectory",
      "org.codehaus.janino.Java$IdentifierLambdaParameters",
      "org.codehaus.janino.Java$RequiresModuleDirective",
      "org.codehaus.janino.Java$RvalueMemberType",
      "com.carrotsearch.hppc.LongContainer",
      "com.carrotsearch.hppc.IntLongHashMap",
      "org.codehaus.janino.Visitor$FunctionDeclaratorVisitor",
      "com.graphhopper.util.BitUtilBig",
      "org.codehaus.janino.Java$NamedClassDeclaration",
      "com.graphhopper.reader.osm.conditional.DateRangeParser",
      "org.codehaus.janino.util.AutoIndentWriter",
      "com.graphhopper.storage.RAMIntDataAccess",
      "com.graphhopper.util.CHEdgeIterator",
      "org.codehaus.janino.Java$TypeArgument",
      "com.graphhopper.routing.ev.EncodedValueLookup",
      "com.graphhopper.routing.ev.MaxSpeed",
      "org.codehaus.janino.Java$InterfaceDeclaration",
      "com.graphhopper.routing.ev.UnsignedIntEncodedValue",
      "com.graphhopper.routing.util.EncodingManager$Access",
      "com.carrotsearch.hppc.HashOrderMixing$1",
      "com.carrotsearch.hppc.HashOrderMixing$2",
      "com.carrotsearch.hppc.AbstractIntCollection",
      "org.codehaus.janino.Java$SimpleConstant",
      "com.graphhopper.storage.DAType",
      "com.graphhopper.routing.util.parsers.OSMRoundaboutParser",
      "org.codehaus.janino.Java$ThrowStatement",
      "org.codehaus.janino.Java$AbstractCompilationUnit$SingleTypeImportDeclaration",
      "com.graphhopper.storage.DataAccess",
      "com.graphhopper.reader.ReaderNode",
      "org.codehaus.janino.util.DeepCopier",
      "org.codehaus.janino.Visitor$AtomVisitor",
      "com.graphhopper.routing.weighting.ShortestWeighting",
      "org.locationtech.jts.geom.util.GeometryMapper$MapOp",
      "org.codehaus.janino.Visitor$TypeDeclarationVisitor",
      "com.carrotsearch.hppc.LongCollection",
      "com.graphhopper.search.StringIndex$1",
      "com.carrotsearch.hppc.predicates.IntObjectPredicate",
      "org.locationtech.jts.geom.Coordinate",
      "org.codehaus.janino.Java$Statement",
      "com.graphhopper.routing.util.AbstractFlagEncoder",
      "org.codehaus.janino.Unparser",
      "com.graphhopper.util.DistancePlaneProjection",
      "com.carrotsearch.hppc.ObjectCollection",
      "org.locationtech.jts.algorithm.RobustLineIntersector",
      "org.codehaus.janino.Java$EmptyStatement",
      "org.codehaus.janino.Visitor$ImportVisitor",
      "org.codehaus.janino.Visitor$LvalueVisitor",
      "org.codehaus.janino.Java$AnonymousClassDeclaration",
      "com.graphhopper.storage.AbstractDataAccess",
      "com.graphhopper.storage.index.Snap$Position",
      "org.codehaus.janino.Visitor$AnnotationVisitor",
      "org.codehaus.janino.Java$InferredLambdaParameters",
      "org.codehaus.janino.Java$PackageMemberAnnotationTypeDeclaration",
      "com.carrotsearch.hppc.procedures.LongProcedure",
      "com.graphhopper.reader.ReaderRelation",
      "com.graphhopper.routing.weighting.PriorityWeighting",
      "org.locationtech.jts.geom.PrecisionModel$Type",
      "org.codehaus.janino.Java$PackageMemberInterfaceDeclaration",
      "com.graphhopper.reader.osm.conditional.ConditionalValueParser$ConditionState",
      "org.codehaus.janino.Java$LabeledStatement",
      "com.carrotsearch.hppc.procedures.IntProcedure",
      "com.graphhopper.routing.util.DefaultFlagEncoderFactory",
      "com.graphhopper.storage.RoutingCHGraph",
      "com.carrotsearch.hppc.LongLongAssociativeContainer",
      "org.codehaus.janino.Visitor$TypeBodyDeclarationVisitor",
      "org.codehaus.janino.Java$MemberAnnotationTypeDeclaration",
      "com.graphhopper.routing.util.parsers.RelationTagParser",
      "org.codehaus.janino.Visitor$BlockStatementVisitor",
      "com.carrotsearch.hppc.HashOrderMixing",
      "org.codehaus.janino.Visitor$TryStatementResourceVisitor",
      "com.carrotsearch.hppc.IntLongAssociativeContainer",
      "org.codehaus.janino.Java$InnerClassDeclaration",
      "com.carrotsearch.hppc.LongLongHashMap$KeysContainer",
      "com.carrotsearch.hppc.IntLongHashMap$KeysContainer",
      "com.carrotsearch.hppc.predicates.IntLongPredicate",
      "com.graphhopper.routing.util.FlagEncoder",
      "org.codehaus.janino.Java$ContinuableStatement",
      "com.graphhopper.util.shapes.Polygon",
      "org.codehaus.janino.ClassLoaderIClassLoader",
      "com.carrotsearch.hppc.IntStack",
      "com.carrotsearch.hppc.HashContainers",
      "org.codehaus.janino.Visitor$TypeArgumentVisitor",
      "com.graphhopper.storage.index.LocationIndex",
      "org.codehaus.janino.Java$TryStatement$VariableAccessResource",
      "com.carrotsearch.hppc.predicates.ObjectIntPredicate",
      "com.graphhopper.routing.ev.BooleanEncodedValue",
      "com.graphhopper.coll.GHIntHashSet",
      "com.graphhopper.reader.ConditionalTagInspector",
      "com.graphhopper.storage.MMapDataAccess",
      "org.codehaus.janino.Java$DoStatement",
      "com.graphhopper.routing.util.TransportationMode",
      "org.locationtech.jts.geom.GeometryCollection",
      "org.codehaus.janino.Java$CatchClause",
      "com.carrotsearch.hppc.BoundedProportionalArraySizingStrategy",
      "org.codehaus.janino.Java$ParenthesizedExpression",
      "com.graphhopper.coll.GHIntObjectHashMap",
      "com.graphhopper.routing.util.Car4WDFlagEncoder",
      "com.graphhopper.util.shapes.GHPoint",
      "com.carrotsearch.hppc.BitUtil",
      "com.graphhopper.storage.GraphHopperStorage$1",
      "com.graphhopper.routing.ev.GetOffBike",
      "org.codehaus.janino.Java$TryStatement$Resource",
      "com.graphhopper.routing.weighting.CurvatureWeighting",
      "org.codehaus.janino.Java$Instanceof",
      "org.codehaus.janino.Java$AmbiguousName",
      "com.carrotsearch.hppc.HashOrderMixingStrategy",
      "com.graphhopper.coll.GHLongIntBTree$BTreeEntry",
      "org.codehaus.janino.Java$AbstractCompilationUnit$SingleStaticImportDeclaration",
      "com.graphhopper.routing.util.parsers.TurnCostParser",
      "org.codehaus.janino.Java$BooleanRvalue",
      "org.codehaus.janino.Java$AssertStatement",
      "com.graphhopper.storage.GraphEdgeIdFinder$BlockArea",
      "org.codehaus.janino.Java$SimpleType",
      "com.graphhopper.routing.util.parsers.helpers.OSMValueExtractor",
      "org.codehaus.janino.Java$ArrayInitializer",
      "org.locationtech.jts.geom.Puntal",
      "org.codehaus.janino.Java$ArrayType",
      "com.carrotsearch.hppc.BufferAllocationException",
      "org.codehaus.janino.IClassLoader",
      "org.codehaus.janino.Java$ConstructorDeclarator",
      "org.codehaus.commons.compiler.ErrorHandler",
      "com.graphhopper.routing.util.BikeFlagEncoder",
      "com.carrotsearch.hppc.AbstractLongCollection",
      "com.graphhopper.util.EdgeIteratorState",
      "com.graphhopper.coll.GHLongLongHashMap",
      "com.graphhopper.util.CHEdgeIteratorState",
      "org.codehaus.janino.Java$MemberTypeDeclaration",
      "com.graphhopper.util.PMap",
      "com.graphhopper.routing.util.FlagEncoderFactory",
      "com.graphhopper.util.EdgeIterator",
      "com.graphhopper.routing.util.Bike2WeightFlagEncoder",
      "org.codehaus.janino.Java$TypeDeclaration",
      "org.codehaus.janino.Java$FieldDeclaration",
      "com.graphhopper.routing.util.EncodingManager$Builder",
      "org.locationtech.jts.geom.CoordinateSequenceFilter",
      "com.graphhopper.reader.osm.conditional.ConditionalParser",
      "org.codehaus.janino.util.ClassFile",
      "com.graphhopper.reader.osm.conditional.ParsedCalendar",
      "com.graphhopper.routing.weighting.custom.CustomWeighting$EdgeToDoubleMapping",
      "com.graphhopper.storage.TurnCostStorage$TurnRelationIterator",
      "org.codehaus.janino.Java$Crement",
      "com.graphhopper.routing.DefaultWeightingFactory",
      "com.graphhopper.util.GHUtility$DisabledNodeAccess",
      "org.codehaus.janino.Java$TypeBodyDeclaration",
      "com.graphhopper.routing.util.MountainBikeFlagEncoder",
      "org.codehaus.janino.Java$AbstractCompilationUnit",
      "org.codehaus.janino.Java$Annotatable",
      "com.graphhopper.routing.util.parsers.OSMRoadAccessParser",
      "com.carrotsearch.hppc.procedures.ObjectProcedure",
      "com.graphhopper.routing.weighting.BlockAreaWeighting",
      "org.codehaus.janino.Java$BooleanLiteral",
      "com.graphhopper.routing.util.BikeCommonFlagEncoder",
      "org.codehaus.janino.Java$AbstractAnnotation",
      "com.carrotsearch.hppc.IntSet",
      "com.graphhopper.util.CustomModel",
      "com.carrotsearch.hppc.IntCollection",
      "org.codehaus.janino.Java$Wildcard",
      "org.codehaus.janino.Java$SingleElementAnnotation",
      "com.graphhopper.routing.ch.NodeOrderingProvider",
      "org.locationtech.jts.geom.LineString",
      "com.graphhopper.storage.GraphEdgeIdFinder",
      "org.codehaus.janino.Java$EnumConstant",
      "com.graphhopper.util.DistanceCalcEarth",
      "org.codehaus.janino.Java$AbstractClassDeclaration",
      "com.carrotsearch.hppc.LongLongMap",
      "org.locationtech.jts.geom.CoordinateSequenceComparator",
      "com.graphhopper.util.FetchMode",
      "com.carrotsearch.hppc.LongHashSet"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(DefaultWeightingFactory_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.graphhopper.routing.DefaultWeightingFactory",
      "com.graphhopper.routing.weighting.TurnCostProvider$1",
      "com.graphhopper.routing.weighting.TurnCostProvider",
      "com.graphhopper.json.Statement$Keyword",
      "com.graphhopper.json.Statement$Op",
      "com.graphhopper.routing.weighting.custom.CustomModelParser$1",
      "com.graphhopper.routing.weighting.custom.CustomModelParser",
      "org.codehaus.janino.TokenType",
      "com.graphhopper.routing.util.EncodingManager",
      "org.codehaus.janino.Unparser",
      "com.graphhopper.routing.weighting.custom.CustomModelParser$3",
      "com.graphhopper.routing.ev.DefaultEncodedValueFactory",
      "com.graphhopper.routing.util.DefaultFlagEncoderFactory",
      "com.graphhopper.storage.GHDirectory",
      "com.graphhopper.storage.RAMDirectory",
      "com.graphhopper.storage.DAType",
      "com.graphhopper.util.Helper",
      "com.graphhopper.storage.StorableProperties",
      "com.graphhopper.storage.AbstractDataAccess",
      "com.graphhopper.storage.RAMDataAccess",
      "com.graphhopper.util.BitUtilLittle",
      "com.graphhopper.util.BitUtilBig",
      "com.graphhopper.util.BitUtil",
      "com.graphhopper.storage.MMapDirectory",
      "com.graphhopper.routing.util.EncodingManager$Builder",
      "com.graphhopper.routing.ev.EncodedValue$InitializerConfig",
      "com.graphhopper.routing.util.parsers.OSMRoundaboutParser",
      "com.graphhopper.routing.ev.Roundabout",
      "com.graphhopper.routing.ev.UnsignedIntEncodedValue",
      "com.graphhopper.routing.ev.SimpleBooleanEncodedValue",
      "com.graphhopper.routing.util.parsers.OSMRoadClassParser",
      "com.graphhopper.routing.ev.EnumEncodedValue",
      "com.graphhopper.routing.ev.RoadClass",
      "com.graphhopper.routing.util.parsers.OSMRoadClassLinkParser",
      "com.graphhopper.routing.util.parsers.OSMRoadEnvironmentParser",
      "com.graphhopper.routing.ev.RoadEnvironment",
      "com.graphhopper.routing.util.parsers.OSMMaxSpeedParser",
      "com.graphhopper.routing.ev.MaxSpeed",
      "com.graphhopper.routing.ev.UnsignedDecimalEncodedValue",
      "com.graphhopper.routing.util.parsers.OSMRoadAccessParser",
      "com.graphhopper.routing.ev.RoadAccess",
      "com.graphhopper.routing.util.TransportationMode",
      "com.graphhopper.routing.util.parsers.OSMRoadAccessParser$1",
      "com.graphhopper.reader.osm.conditional.DateRangeParser",
      "com.graphhopper.storage.GraphHopperStorage",
      "com.graphhopper.storage.GraphHopperStorage$1",
      "com.graphhopper.storage.BaseGraph",
      "com.graphhopper.search.StringIndex",
      "com.graphhopper.search.StringIndex$1",
      "com.graphhopper.storage.RAMIntDataAccess",
      "com.graphhopper.util.shapes.BBox",
      "com.graphhopper.storage.GHNodeAccess",
      "com.graphhopper.storage.TurnCostStorage",
      "com.graphhopper.util.PMap",
      "com.graphhopper.routing.util.AbstractFlagEncoder",
      "com.graphhopper.routing.util.BikeCommonFlagEncoder",
      "com.graphhopper.routing.util.BikeFlagEncoder",
      "com.graphhopper.routing.util.Bike2WeightFlagEncoder",
      "com.graphhopper.routing.ev.RouteNetwork",
      "com.graphhopper.routing.util.PriorityCode",
      "com.graphhopper.config.Profile",
      "com.graphhopper.routing.weighting.custom.CustomProfile",
      "com.graphhopper.storage.MMapDataAccess",
      "com.graphhopper.routing.util.FootFlagEncoder",
      "com.graphhopper.routing.util.WheelchairFlagEncoder",
      "com.graphhopper.routing.util.HikeFlagEncoder",
      "com.graphhopper.routing.weighting.AbstractWeighting",
      "com.graphhopper.routing.weighting.ShortestWeighting",
      "com.graphhopper.routing.util.CarFlagEncoder",
      "com.graphhopper.routing.util.MotorcycleFlagEncoder",
      "com.graphhopper.routing.weighting.FastestWeighting",
      "com.graphhopper.util.CustomModel",
      "com.graphhopper.routing.util.Car4WDFlagEncoder",
      "com.graphhopper.routing.util.MountainBikeFlagEncoder",
      "com.graphhopper.routing.util.RacingBikeFlagEncoder",
      "com.graphhopper.routing.weighting.PriorityWeighting",
      "com.graphhopper.routing.weighting.CurvatureWeighting",
      "com.graphhopper.routing.ev.BikeNetwork",
      "com.graphhopper.routing.ev.FootNetwork",
      "com.graphhopper.routing.weighting.AbstractAdjustedWeighting",
      "com.graphhopper.routing.weighting.AvoidEdgesWeighting",
      "com.graphhopper.reader.ReaderElement",
      "com.graphhopper.reader.ReaderRelation",
      "com.graphhopper.reader.ReaderWay",
      "com.carrotsearch.hppc.AbstractLongCollection",
      "com.carrotsearch.hppc.LongArrayList",
      "com.carrotsearch.hppc.BoundedProportionalArraySizingStrategy",
      "com.graphhopper.routing.util.EncodingManager$AcceptWay",
      "com.graphhopper.routing.util.FerrySpeedCalculator",
      "com.graphhopper.reader.osm.conditional.ConditionalOSMTagInspector",
      "com.graphhopper.reader.osm.conditional.ConditionalParser",
      "com.graphhopper.routing.util.parsers.OSMBikeNetworkTagParser",
      "com.graphhopper.routing.util.parsers.OSMGetOffBikeParser",
      "com.graphhopper.routing.ev.GetOffBike",
      "com.graphhopper.routing.util.parsers.OSMFootNetworkTagParser",
      "com.graphhopper.storage.IntsRef",
      "com.graphhopper.util.GHUtility",
      "com.graphhopper.storage.BaseGraph$EdgeIteratorStateImpl",
      "com.graphhopper.storage.BaseGraph$AllEdgeIterator",
      "com.carrotsearch.hppc.AbstractIntCollection",
      "com.carrotsearch.hppc.IntArrayList",
      "com.carrotsearch.hppc.IntStack",
      "com.graphhopper.routing.weighting.ShortFastestWeighting",
      "com.graphhopper.storage.CHConfig",
      "com.graphhopper.reader.osm.OSMReader",
      "com.graphhopper.util.DistanceCalcEarth",
      "com.graphhopper.util.DouglasPeucker",
      "com.graphhopper.util.DistancePlaneProjection",
      "com.carrotsearch.hppc.LongHashSet",
      "com.graphhopper.coll.GHLongHashSet",
      "com.carrotsearch.hppc.IntObjectHashMap",
      "com.carrotsearch.hppc.HashOrderMixing$1",
      "com.carrotsearch.hppc.HashOrderMixing",
      "com.carrotsearch.hppc.HashOrderMixing$2",
      "com.graphhopper.coll.GHIntObjectHashMap",
      "com.carrotsearch.hppc.HashContainers",
      "com.carrotsearch.hppc.BitUtil",
      "com.carrotsearch.hppc.BitMixer",
      "com.graphhopper.reader.dem.ElevationProvider$1",
      "com.graphhopper.reader.dem.ElevationProvider",
      "com.graphhopper.coll.GHLongIntBTree",
      "com.graphhopper.coll.GHLongIntBTree$BTreeEntry",
      "com.carrotsearch.hppc.LongLongHashMap",
      "com.graphhopper.coll.GHLongLongHashMap",
      "com.graphhopper.reader.PillarInfo",
      "com.carrotsearch.hppc.IntLongHashMap",
      "com.graphhopper.coll.GHIntLongHashMap",
      "com.graphhopper.storage.CHGraphImpl",
      "com.graphhopper.routing.ch.PrepareEncoder",
      "com.graphhopper.reader.ReaderNode",
      "com.graphhopper.routing.util.EdgeFilter",
      "com.graphhopper.storage.BaseGraph$EdgeIteratorImpl",
      "com.graphhopper.reader.OSMTurnRelation",
      "com.graphhopper.routing.weighting.QueryGraphWeighting",
      "com.graphhopper.util.GHUtility$DisabledEdgeIterator",
      "org.locationtech.jts.geom.GeometryFactory",
      "org.locationtech.jts.geom.Geometry$1",
      "org.locationtech.jts.geom.Geometry",
      "org.locationtech.jts.geom.Polygon",
      "com.graphhopper.routing.util.DefaultEdgeFilter",
      "com.graphhopper.util.EdgeIteratorState$1",
      "com.graphhopper.util.EdgeIteratorState",
      "com.graphhopper.routing.util.parsers.helpers.OSMValueExtractor",
      "com.graphhopper.reader.dem.AbstractElevationProvider",
      "com.graphhopper.reader.dem.AbstractTiffElevationProvider",
      "com.graphhopper.reader.dem.GMTEDProvider",
      "com.graphhopper.util.Downloader",
      "org.locationtech.jts.geom.PrecisionModel$Type",
      "org.locationtech.jts.geom.PrecisionModel",
      "org.locationtech.jts.geom.impl.CoordinateArraySequenceFactory",
      "org.locationtech.jts.geom.GeometryCollection",
      "org.locationtech.jts.geom.MultiPolygon",
      "com.graphhopper.json.Statement",
      "org.locationtech.jts.geom.DefaultCoordinateSequenceFactory",
      "com.graphhopper.routing.weighting.DefaultTurnCostProvider",
      "com.graphhopper.routing.ev.StringEncodedValue",
      "org.locationtech.jts.geom.impl.PackedCoordinateSequence",
      "org.locationtech.jts.geom.impl.PackedCoordinateSequence$Float",
      "com.graphhopper.storage.GraphEdgeIdFinder$BlockArea",
      "com.graphhopper.storage.RoutingCHGraphImpl",
      "com.graphhopper.util.PointList$1",
      "com.graphhopper.util.PointList",
      "com.graphhopper.util.ShallowImmutablePointList",
      "org.locationtech.jts.geom.impl.CoordinateArraySequence",
      "org.locationtech.jts.geom.LineString",
      "org.locationtech.jts.geom.LinearRing",
      "com.graphhopper.routing.weighting.BlockAreaWeighting",
      "org.locationtech.jts.geom.impl.PackedCoordinateSequence$Double"
    );
  }
}
