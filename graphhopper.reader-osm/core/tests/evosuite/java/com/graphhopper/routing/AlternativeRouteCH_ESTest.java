/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 04 02:36:33 GMT 2021
 */

package com.graphhopper.routing;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.graphhopper.routing.AlternativeRouteCH;
import com.graphhopper.routing.Path;
import com.graphhopper.routing.util.EncodingManager;
import com.graphhopper.storage.GraphHopperStorage;
import com.graphhopper.storage.MMapDirectory;
import com.graphhopper.storage.RoutingCHGraph;
import com.graphhopper.util.PMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AlternativeRouteCH_ESTest extends AlternativeRouteCH_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AlternativeRouteCH.PotentialAlternativeInfo alternativeRouteCH_PotentialAlternativeInfo0 = new AlternativeRouteCH.PotentialAlternativeInfo();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MMapDirectory mMapDirectory0 = new MMapDirectory("");
      EncodingManager encodingManager0 = EncodingManager.create("");
      GraphHopperStorage graphHopperStorage0 = new GraphHopperStorage(mMapDirectory0, encodingManager0, false);
      Path path0 = new Path(graphHopperStorage0);
      AlternativeRouteCH.AlternativeInfo alternativeRouteCH_AlternativeInfo0 = new AlternativeRouteCH.AlternativeInfo(path0, (-1.0));
      String string0 = alternativeRouteCH_AlternativeInfo0.toString();
      assertEquals("AlternativeInfo{shareWeight=-1.0, path=[]}", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MMapDirectory mMapDirectory0 = new MMapDirectory("");
      EncodingManager encodingManager0 = EncodingManager.create("");
      GraphHopperStorage graphHopperStorage0 = new GraphHopperStorage(mMapDirectory0, encodingManager0, false);
      Path path0 = new Path(graphHopperStorage0);
      AlternativeRouteCH.AlternativeInfo alternativeRouteCH_AlternativeInfo0 = new AlternativeRouteCH.AlternativeInfo(path0, (-1.0));
      Path path1 = alternativeRouteCH_AlternativeInfo0.getPath();
      assertEquals(0.0, path1.getDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PMap pMap0 = new PMap();
      AlternativeRouteCH alternativeRouteCH0 = null;
      try {
        alternativeRouteCH0 = new AlternativeRouteCH((RoutingCHGraph) null, pMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.AbstractBidirCHAlgo", e);
      }
  }
}
