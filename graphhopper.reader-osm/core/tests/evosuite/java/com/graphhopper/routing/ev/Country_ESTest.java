/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 04 05:10:11 GMT 2021
 */

package com.graphhopper.routing.ev;

import org.junit.Test;
import static org.junit.Assert.*;
import com.graphhopper.routing.ev.Country;
import com.graphhopper.routing.ev.EnumEncodedValue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Country_ESTest extends Country_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Country country0 = Country.find("deu");
      assertEquals(Country.DEU, country0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Country[] countryArray0 = Country.values();
      assertEquals(3, countryArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Country country0 = Country.valueOf("DEU");
      assertEquals("deu", country0.toString());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Country country0 = Country.find("AUT");
      assertEquals(Country.AUT, country0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Country country0 = Country.find("");
      assertEquals(Country.DEFAULT, country0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Country country0 = Country.find((String) null);
      assertEquals(Country.DEFAULT, country0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Country country0 = Country.find("but");
      String string0 = country0.toString();
      assertEquals("default", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      EnumEncodedValue<Country> enumEncodedValue0 = Country.create();
      assertEquals("country", enumEncodedValue0.getName());
  }
}
