/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 04 04:22:51 GMT 2021
 */

package com.graphhopper.routing.lm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.graphhopper.routing.lm.LandmarkSuggestion;
import com.graphhopper.storage.index.LocationIndex;
import com.graphhopper.util.shapes.BBox;
import java.io.FileNotFoundException;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LandmarkSuggestion_ESTest extends LandmarkSuggestion_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BBox bBox0 = mock(BBox.class, new ViolatedAssumptionAnswer());
      LandmarkSuggestion landmarkSuggestion0 = new LandmarkSuggestion((List<Integer>) null, bBox0);
      List<Integer> list0 = landmarkSuggestion0.getNodeIds();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LandmarkSuggestion landmarkSuggestion0 = new LandmarkSuggestion((List<Integer>) null, (BBox) null);
      BBox bBox0 = landmarkSuggestion0.getBox();
      assertNull(bBox0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BBox bBox0 = new BBox((-1354.0), 155.667659, (-4296.98906249732), 155.667659, 1.0, (-1354.0), true);
      LandmarkSuggestion landmarkSuggestion0 = new LandmarkSuggestion((List<Integer>) null, bBox0);
      BBox bBox1 = landmarkSuggestion0.getBox();
      assertSame(bBox0, bBox1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("4(jtazFaFMC");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "only_left_turn");
      LocationIndex locationIndex0 = mock(LocationIndex.class, new ViolatedAssumptionAnswer());
      LandmarkSuggestion landmarkSuggestion0 = LandmarkSuggestion.readLandmarks("4(jtazFaFMC", locationIndex0);
      BBox bBox0 = landmarkSuggestion0.getBox();
      assertEquals(Double.NaN, bBox0.minEle, 0.01);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LocationIndex locationIndex0 = mock(LocationIndex.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        LandmarkSuggestion.readLandmarks((String) null, locationIndex0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      try { 
        LandmarkSuggestion.readLandmarks("0QrRD3jl:UILW", (LocationIndex) null);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("8Qm3UnU");
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      LocationIndex locationIndex0 = mock(LocationIndex.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        LandmarkSuggestion.readLandmarks("8Qm3UnU", locationIndex0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot parse point '\u0000'
         //
         verifyException("com.graphhopper.util.shapes.GHPoint", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("4(jtazFaFMC");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "only_left_turn");
      LocationIndex locationIndex0 = mock(LocationIndex.class, new ViolatedAssumptionAnswer());
      LandmarkSuggestion landmarkSuggestion0 = LandmarkSuggestion.readLandmarks("4(jtazFaFMC", locationIndex0);
      List<Integer> list0 = landmarkSuggestion0.getNodeIds();
      assertEquals(0, list0.size());
  }
}
