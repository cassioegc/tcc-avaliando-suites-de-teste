/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 04 04:43:00 GMT 2021
 */

package com.graphhopper.routing.ch;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.graphhopper.routing.ch.EdgeBasedShortcutInserter;
import com.graphhopper.routing.util.AllCHEdgesIterator;
import com.graphhopper.storage.CHGraph;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EdgeBasedShortcutInserter_ESTest extends EdgeBasedShortcutInserter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CHGraph cHGraph0 = mock(CHGraph.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(cHGraph0).getOriginalEdges();
      doReturn(0).when(cHGraph0).shortcutEdgeBased(anyInt() , anyInt() , anyInt() , anyDouble() , anyInt() , anyInt() , anyInt() , anyInt());
      EdgeBasedShortcutInserter edgeBasedShortcutInserter0 = new EdgeBasedShortcutInserter(cHGraph0);
      assertEquals(0, edgeBasedShortcutInserter0.finishContractingNode());
      assertNotNull(edgeBasedShortcutInserter0);
      
      edgeBasedShortcutInserter0.addShortcut(0, 0, 1, 1, 0, 0, 0, 1, false);
      assertEquals(1, edgeBasedShortcutInserter0.finishContractingNode());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CHGraph cHGraph0 = mock(CHGraph.class, new ViolatedAssumptionAnswer());
      doReturn((-746)).when(cHGraph0).getOriginalEdges();
      doReturn(2799).when(cHGraph0).shortcutEdgeBased(anyInt() , anyInt() , anyInt() , anyDouble() , anyInt() , anyInt() , anyInt() , anyInt());
      EdgeBasedShortcutInserter edgeBasedShortcutInserter0 = new EdgeBasedShortcutInserter(cHGraph0);
      assertEquals(0, edgeBasedShortcutInserter0.finishContractingNode());
      assertNotNull(edgeBasedShortcutInserter0);
      
      edgeBasedShortcutInserter0.addShortcut((-600), (-600), (-738), 0, (-738), (-738), 1178, 88.810234988597, true);
      assertEquals(1, edgeBasedShortcutInserter0.finishContractingNode());
      
      int int0 = edgeBasedShortcutInserter0.finishContractingNode();
      assertEquals(1, int0);
      assertEquals(1, edgeBasedShortcutInserter0.finishContractingNode());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CHGraph cHGraph0 = mock(CHGraph.class, new ViolatedAssumptionAnswer());
      doReturn((AllCHEdgesIterator) null).when(cHGraph0).getAllEdges();
      doReturn(0).when(cHGraph0).getOriginalEdges();
      EdgeBasedShortcutInserter edgeBasedShortcutInserter0 = new EdgeBasedShortcutInserter(cHGraph0);
      assertEquals(0, edgeBasedShortcutInserter0.finishContractingNode());
      assertNotNull(edgeBasedShortcutInserter0);
      
      // Undeclared exception!
      try { 
        edgeBasedShortcutInserter0.finishContraction();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.ch.EdgeBasedShortcutInserter", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CHGraph cHGraph0 = mock(CHGraph.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(cHGraph0).getOriginalEdges();
      doReturn(0).when(cHGraph0).shortcutEdgeBased(anyInt() , anyInt() , anyInt() , anyDouble() , anyInt() , anyInt() , anyInt() , anyInt());
      EdgeBasedShortcutInserter edgeBasedShortcutInserter0 = new EdgeBasedShortcutInserter(cHGraph0);
      assertEquals(0, edgeBasedShortcutInserter0.finishContractingNode());
      assertNotNull(edgeBasedShortcutInserter0);
      
      // Undeclared exception!
      try { 
        edgeBasedShortcutInserter0.addShortcut(2147483644, 3, 3, (-1758), 2147483644, 3, 0, 171.1256317534485, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Java array size exceeded (current length: 10, elements: 0, expected additions: 2147483645)
         //
         verifyException("com.carrotsearch.hppc.BoundedProportionalArraySizingStrategy", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      EdgeBasedShortcutInserter edgeBasedShortcutInserter0 = null;
      try {
        edgeBasedShortcutInserter0 = new EdgeBasedShortcutInserter((CHGraph) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.ch.EdgeBasedShortcutInserter", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      AllCHEdgesIterator allCHEdgesIterator0 = mock(AllCHEdgesIterator.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(allCHEdgesIterator0).isShortcut();
      doReturn(true, true, false).when(allCHEdgesIterator0).next();
      CHGraph cHGraph0 = mock(CHGraph.class, new ViolatedAssumptionAnswer());
      doReturn(allCHEdgesIterator0).when(cHGraph0).getAllEdges();
      doReturn(1560).when(cHGraph0).getOriginalEdges();
      EdgeBasedShortcutInserter edgeBasedShortcutInserter0 = new EdgeBasedShortcutInserter(cHGraph0);
      edgeBasedShortcutInserter0.finishContraction();
      assertEquals(0, edgeBasedShortcutInserter0.finishContractingNode());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CHGraph cHGraph0 = mock(CHGraph.class, new ViolatedAssumptionAnswer());
      doReturn(1560).when(cHGraph0).getOriginalEdges();
      doReturn(0).when(cHGraph0).shortcutEdgeBased(anyInt() , anyInt() , anyInt() , anyDouble() , anyInt() , anyInt() , anyInt() , anyInt());
      EdgeBasedShortcutInserter edgeBasedShortcutInserter0 = new EdgeBasedShortcutInserter(cHGraph0);
      int int0 = edgeBasedShortcutInserter0.finishContractingNode();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        edgeBasedShortcutInserter0.addShortcut(int0, int0, int0, int0, int0, int0, int0, int0, boolean0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1560
         //
         verifyException("com.carrotsearch.hppc.IntArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      CHGraph cHGraph0 = mock(CHGraph.class, new ViolatedAssumptionAnswer());
      doReturn(1560).when(cHGraph0).getOriginalEdges();
      EdgeBasedShortcutInserter edgeBasedShortcutInserter0 = new EdgeBasedShortcutInserter(cHGraph0);
      edgeBasedShortcutInserter0.startContractingNode();
      assertEquals(0, edgeBasedShortcutInserter0.finishContractingNode());
  }
}
