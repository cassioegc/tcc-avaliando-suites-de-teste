/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 04 02:00:07 GMT 2021
 */

package com.graphhopper.routing.weighting.custom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.graphhopper.json.Statement;
import com.graphhopper.routing.util.Bike2WeightFlagEncoder;
import com.graphhopper.routing.util.BikeFlagEncoder;
import com.graphhopper.routing.util.CarFlagEncoder;
import com.graphhopper.routing.util.FootFlagEncoder;
import com.graphhopper.routing.util.HikeFlagEncoder;
import com.graphhopper.routing.util.MountainBikeFlagEncoder;
import com.graphhopper.routing.util.WheelchairFlagEncoder;
import com.graphhopper.routing.weighting.custom.ExpressionVisitor;
import com.graphhopper.util.PMap;
import java.time.ZoneId;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Set;
import java.util.Stack;
import org.codehaus.commons.compiler.Location;
import org.codehaus.janino.IClass;
import org.codehaus.janino.Java;
import org.codehaus.janino.UnitCompiler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ExpressionVisitor_ESTest extends ExpressionVisitor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      PMap pMap0 = new PMap(hashMap0);
      MountainBikeFlagEncoder mountainBikeFlagEncoder0 = new MountainBikeFlagEncoder(pMap0);
      ExpressionVisitor.ParseResult expressionVisitor_ParseResult0 = ExpressionVisitor.parseExpression("yv3p1", (ExpressionVisitor.NameValidator) null, mountainBikeFlagEncoder0);
      ExpressionVisitor expressionVisitor0 = new ExpressionVisitor(expressionVisitor_ParseResult0, (ExpressionVisitor.NameValidator) null, mountainBikeFlagEncoder0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "_network";
      Java.AmbiguousName java_AmbiguousName0 = new Java.AmbiguousName((Location) null, stringArray0, 7);
      try { 
        expressionVisitor0.visitRvalue(java_AmbiguousName0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.codehaus.janino.Java", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        ExpressionVisitor.toEncodedValueClassName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      LinkedList<Statement> linkedList0 = new LinkedList<Statement>();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      PMap pMap0 = new PMap(hashMap0);
      BikeFlagEncoder bikeFlagEncoder0 = new BikeFlagEncoder(pMap0);
      // Undeclared exception!
      try { 
        ExpressionVisitor.parseExpressions((StringBuilder) null, (ExpressionVisitor.NameValidator) null, "", set0, linkedList0, bikeFlagEncoder0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.weighting.custom.ExpressionVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Bike2WeightFlagEncoder bike2WeightFlagEncoder0 = new Bike2WeightFlagEncoder();
      ExpressionVisitor.ParseResult expressionVisitor_ParseResult0 = ExpressionVisitor.parseExpression("K%/rBTJe$S_", (ExpressionVisitor.NameValidator) null, bike2WeightFlagEncoder0);
      ExpressionVisitor expressionVisitor0 = new ExpressionVisitor(expressionVisitor_ParseResult0, (ExpressionVisitor.NameValidator) null, bike2WeightFlagEncoder0);
      // Undeclared exception!
      try { 
        expressionVisitor0.isValidIdentifier("{F=|9qQOv5i\"w:");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.weighting.custom.ExpressionVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PMap pMap0 = new PMap("User-Agent");
      BikeFlagEncoder bikeFlagEncoder0 = new BikeFlagEncoder(pMap0);
      ExpressionVisitor expressionVisitor0 = new ExpressionVisitor((ExpressionVisitor.ParseResult) null, (ExpressionVisitor.NameValidator) null, bikeFlagEncoder0);
      Location location0 = new Location((String) null, 148, 148);
      Java.UnaryOperation java_UnaryOperation0 = new Java.UnaryOperation(location0, "h", (Java.Rvalue) null);
      Boolean boolean0 = expressionVisitor0.visitRvalue(java_UnaryOperation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "";
      PMap pMap0 = PMap.read(stringArray0);
      MountainBikeFlagEncoder mountainBikeFlagEncoder0 = new MountainBikeFlagEncoder(pMap0);
      ExpressionVisitor.ParseResult expressionVisitor_ParseResult0 = ExpressionVisitor.parseExpression("", (ExpressionVisitor.NameValidator) null, mountainBikeFlagEncoder0);
      ExpressionVisitor expressionVisitor0 = new ExpressionVisitor(expressionVisitor_ParseResult0, (ExpressionVisitor.NameValidator) null, mountainBikeFlagEncoder0);
      Location location0 = new Location("", (-535), (-535));
      IClass iClass0 = IClass.BYTE;
      Java.SimpleType java_SimpleType0 = new Java.SimpleType(location0, iClass0);
      Boolean boolean0 = expressionVisitor0.visitType(java_SimpleType0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CarFlagEncoder carFlagEncoder0 = new CarFlagEncoder(0, 1856.95467622153, (-3057));
      ExpressionVisitor.ParseResult expressionVisitor_ParseResult0 = ExpressionVisitor.parseExpression((String) null, (ExpressionVisitor.NameValidator) null, carFlagEncoder0);
      ExpressionVisitor expressionVisitor0 = new ExpressionVisitor(expressionVisitor_ParseResult0, (ExpressionVisitor.NameValidator) null, carFlagEncoder0);
      ExpressionVisitor.Replacement expressionVisitor_Replacement0 = expressionVisitor0.new Replacement((-699), 5703, "?N<`mgYdD-PjuxQ");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = ExpressionVisitor.toEncodedValueClassName("&3pmclO97Tv3H_network");
      assertEquals("RouteNetwork", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        ExpressionVisitor.toEncodedValueClassName("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot be empty
         //
         verifyException("com.graphhopper.routing.weighting.custom.ExpressionVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = ExpressionVisitor.toEncodedValueClassName("!oE*p");
      assertEquals("!oE*p", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Stack<Statement> stack0 = new Stack<Statement>();
      Statement.Op statement_Op0 = Statement.Op.MULTIPLY;
      Statement statement0 = Statement.ElseIf("org.locationtech.jts.algorithm.LineIntersector", statement_Op0, 0L);
      LinkedList<Statement> linkedList0 = new LinkedList<Statement>(stack0);
      linkedList0.add(statement0);
      PMap pMap0 = new PMap("!oE*p");
      WheelchairFlagEncoder wheelchairFlagEncoder0 = new WheelchairFlagEncoder(pMap0);
      // Undeclared exception!
      try { 
        ExpressionVisitor.parseExpressions(stringBuilder0, (ExpressionVisitor.NameValidator) null, "org.locationtech.jts.algorithm.LineIntersector", set0, linkedList0, wheelchairFlagEncoder0, "!oE*p");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // org.locationtech.jts.algorithm.LineIntersector invalid expression \"org.locationtech.jts.algorithm.LineIntersector\": identifier java.lang.String@0000000022.locationtech.jts.algorithm.LineIntersector invalid
         //
         verifyException("com.graphhopper.routing.weighting.custom.ExpressionVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Stack<Statement> stack0 = new Stack<Statement>();
      Statement.Op statement_Op0 = Statement.Op.MULTIPLY;
      Statement statement0 = Statement.Else(statement_Op0, (-1485.804));
      stack0.add(statement0);
      LinkedList<Statement> linkedList0 = new LinkedList<Statement>(stack0);
      PMap pMap0 = new PMap("!oE*p");
      WheelchairFlagEncoder wheelchairFlagEncoder0 = new WheelchairFlagEncoder(pMap0);
      ExpressionVisitor.parseExpressions(stringBuilder0, (ExpressionVisitor.NameValidator) null, "org.locationtech.jts.algorithm.LineIntersector", set0, linkedList0, wheelchairFlagEncoder0, "!oE*p");
      assertEquals("else {value *= -1485.804; }\n!oE*p", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BikeFlagEncoder bikeFlagEncoder0 = new BikeFlagEncoder();
      ExpressionVisitor.ParseResult expressionVisitor_ParseResult0 = ExpressionVisitor.parseExpression("lo54E!8^sH=S=xm,", (ExpressionVisitor.NameValidator) null, bikeFlagEncoder0);
      ExpressionVisitor expressionVisitor0 = new ExpressionVisitor(expressionVisitor_ParseResult0, (ExpressionVisitor.NameValidator) null, bikeFlagEncoder0);
      Location location0 = new Location("swing_gate", 2, 1);
      Java.SimpleConstant java_SimpleConstant0 = new Java.SimpleConstant(location0, (short) (-1449));
      Java.BinaryOperation java_BinaryOperation0 = new Java.BinaryOperation(location0, java_SimpleConstant0, "", java_SimpleConstant0);
      Boolean boolean0 = expressionVisitor0.visitRvalue(java_BinaryOperation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CarFlagEncoder carFlagEncoder0 = new CarFlagEncoder((-11), (-11), (-32770489));
      ExpressionVisitor.ParseResult expressionVisitor_ParseResult0 = ExpressionVisitor.parseExpression("b%RbV", (ExpressionVisitor.NameValidator) null, carFlagEncoder0);
      assertNotNull(expressionVisitor_ParseResult0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ExpressionVisitor.ParseResult expressionVisitor_ParseResult0 = new ExpressionVisitor.ParseResult();
      HikeFlagEncoder hikeFlagEncoder0 = new HikeFlagEncoder();
      ExpressionVisitor expressionVisitor0 = new ExpressionVisitor(expressionVisitor_ParseResult0, (ExpressionVisitor.NameValidator) null, hikeFlagEncoder0);
      Location location0 = new Location("i6", 3517, 6);
      Java.SimpleConstant java_SimpleConstant0 = new Java.SimpleConstant(location0, (double) 3517);
      IClass iClass0 = IClass.INT;
      UnitCompiler.SimpleIField unitCompiler_SimpleIField0 = new UnitCompiler.SimpleIField(iClass0, ":conditional", iClass0);
      Java.FieldAccess java_FieldAccess0 = new Java.FieldAccess(location0, java_SimpleConstant0, unitCompiler_SimpleIField0);
      Boolean boolean0 = expressionVisitor0.visitRvalue(java_FieldAccess0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ExpressionVisitor.ParseResult expressionVisitor_ParseResult0 = new ExpressionVisitor.ParseResult();
      HikeFlagEncoder hikeFlagEncoder0 = new HikeFlagEncoder();
      ExpressionVisitor expressionVisitor0 = new ExpressionVisitor(expressionVisitor_ParseResult0, (ExpressionVisitor.NameValidator) null, hikeFlagEncoder0);
      Location location0 = new Location("i6", 3517, 6);
      Java.SimpleConstant java_SimpleConstant0 = new Java.SimpleConstant(location0, (double) 3517);
      IClass iClass0 = IClass.INT;
      UnitCompiler.SimpleIField unitCompiler_SimpleIField0 = new UnitCompiler.SimpleIField(iClass0, ":conditional", iClass0);
      Java.FieldAccess java_FieldAccess0 = new Java.FieldAccess(location0, java_SimpleConstant0, unitCompiler_SimpleIField0);
      Java.Rvalue[] java_RvalueArray0 = new Java.Rvalue[5];
      Java.MethodInvocation java_MethodInvocation0 = new Java.MethodInvocation(location0, java_FieldAccess0, "YN\"|T;s+[wcl#TA", java_RvalueArray0);
      Boolean boolean0 = expressionVisitor0.visitRvalue(java_MethodInvocation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ExpressionVisitor.ParseResult expressionVisitor_ParseResult0 = new ExpressionVisitor.ParseResult();
      FootFlagEncoder footFlagEncoder0 = new FootFlagEncoder();
      ExpressionVisitor expressionVisitor0 = new ExpressionVisitor(expressionVisitor_ParseResult0, (ExpressionVisitor.NameValidator) null, footFlagEncoder0);
      Location location0 = Location.NOWHERE;
      Java.SimpleConstant java_SimpleConstant0 = new Java.SimpleConstant(location0, "(~#v#JsCx$Md'SG");
      Java.UnaryOperation java_UnaryOperation0 = new Java.UnaryOperation(location0, "Fx", java_SimpleConstant0);
      Java.ParenthesizedExpression java_ParenthesizedExpression0 = new Java.ParenthesizedExpression(location0, java_UnaryOperation0);
      Boolean boolean0 = expressionVisitor0.visitRvalue(java_ParenthesizedExpression0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Stack<Statement> stack0 = new Stack<Statement>();
      Statement.Op statement_Op0 = Statement.Op.MULTIPLY;
      Statement statement0 = Statement.If("!oE*p", statement_Op0, (-1485.804));
      LinkedList<Statement> linkedList0 = new LinkedList<Statement>(stack0);
      linkedList0.add(statement0);
      PMap pMap0 = new PMap("!oE*p");
      WheelchairFlagEncoder wheelchairFlagEncoder0 = new WheelchairFlagEncoder(pMap0);
      // Undeclared exception!
      try { 
        ExpressionVisitor.parseExpressions(stringBuilder0, (ExpressionVisitor.NameValidator) null, "org.locationtech.jts.algorithm.LineIntersector", set0, linkedList0, wheelchairFlagEncoder0, "!oE*p");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // org.locationtech.jts.algorithm.LineIntersector invalid expression \"!oE*p\"
         //
         verifyException("com.graphhopper.routing.weighting.custom.ExpressionVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ExpressionVisitor.ParseResult expressionVisitor_ParseResult0 = new ExpressionVisitor.ParseResult();
      FootFlagEncoder footFlagEncoder0 = new FootFlagEncoder();
      ExpressionVisitor expressionVisitor0 = new ExpressionVisitor(expressionVisitor_ParseResult0, (ExpressionVisitor.NameValidator) null, footFlagEncoder0);
      Location location0 = Location.NOWHERE;
      Java.StringLiteral java_StringLiteral0 = new Java.StringLiteral(location0, "fx");
      Boolean boolean0 = expressionVisitor0.visitRvalue(java_StringLiteral0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      PMap pMap0 = new PMap(hashMap0);
      MountainBikeFlagEncoder mountainBikeFlagEncoder0 = new MountainBikeFlagEncoder(pMap0);
      ExpressionVisitor.ParseResult expressionVisitor_ParseResult0 = ExpressionVisitor.parseExpression("yv3p1", (ExpressionVisitor.NameValidator) null, mountainBikeFlagEncoder0);
      ExpressionVisitor expressionVisitor0 = new ExpressionVisitor(expressionVisitor_ParseResult0, (ExpressionVisitor.NameValidator) null, mountainBikeFlagEncoder0);
      String[] stringArray0 = new String[5];
      Java.AmbiguousName java_AmbiguousName0 = new Java.AmbiguousName((Location) null, stringArray0, 7);
      try { 
        expressionVisitor0.visitRvalue(java_AmbiguousName0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CarFlagEncoder carFlagEncoder0 = new CarFlagEncoder((-11), (-11), (-32770489));
      ExpressionVisitor.ParseResult expressionVisitor_ParseResult0 = ExpressionVisitor.parseExpression("UTF-8", (ExpressionVisitor.NameValidator) null, carFlagEncoder0);
      assertNotNull(expressionVisitor_ParseResult0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BikeFlagEncoder bikeFlagEncoder0 = new BikeFlagEncoder();
      ExpressionVisitor.ParseResult expressionVisitor_ParseResult0 = ExpressionVisitor.parseExpression("lo54E!8^sH=S=xm,", (ExpressionVisitor.NameValidator) null, bikeFlagEncoder0);
      ExpressionVisitor expressionVisitor0 = new ExpressionVisitor(expressionVisitor_ParseResult0, (ExpressionVisitor.NameValidator) null, bikeFlagEncoder0);
      Location location0 = new Location("swing_gate", 2, 1);
      Java.Package java_Package0 = new Java.Package(location0, "");
      Boolean boolean0 = expressionVisitor0.visitPackage(java_Package0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ExpressionVisitor.ParseResult expressionVisitor_ParseResult0 = new ExpressionVisitor.ParseResult();
      HikeFlagEncoder hikeFlagEncoder0 = new HikeFlagEncoder();
      ExpressionVisitor expressionVisitor0 = new ExpressionVisitor(expressionVisitor_ParseResult0, (ExpressionVisitor.NameValidator) null, hikeFlagEncoder0);
      Location location0 = new Location("i6", 3517, 6);
      Java.SimpleConstant java_SimpleConstant0 = new Java.SimpleConstant(location0, (double) 3517);
      IClass iClass0 = IClass.INT;
      UnitCompiler.SimpleIField unitCompiler_SimpleIField0 = new UnitCompiler.SimpleIField(iClass0, ":conditional", iClass0);
      Java.FieldAccess java_FieldAccess0 = new Java.FieldAccess(location0, java_SimpleConstant0, unitCompiler_SimpleIField0);
      Java.Rvalue[] java_RvalueArray0 = new Java.Rvalue[5];
      java_RvalueArray0[0] = (Java.Rvalue) java_FieldAccess0;
      java_RvalueArray0[1] = (Java.Rvalue) java_SimpleConstant0;
      java_RvalueArray0[2] = (Java.Rvalue) java_SimpleConstant0;
      java_RvalueArray0[3] = (Java.Rvalue) java_SimpleConstant0;
      java_RvalueArray0[4] = (Java.Rvalue) java_SimpleConstant0;
      Java.MethodInvocation java_MethodInvocation0 = new Java.MethodInvocation(location0, java_FieldAccess0, "YN\"|T;s+[wcl#TA", java_RvalueArray0);
      Java.SuperConstructorInvocation java_SuperConstructorInvocation0 = new Java.SuperConstructorInvocation(location0, java_MethodInvocation0, java_MethodInvocation0.arguments);
      Boolean boolean0 = expressionVisitor0.visitConstructorInvocation(java_SuperConstructorInvocation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CarFlagEncoder carFlagEncoder0 = new CarFlagEncoder((-726), 0L, (-726));
      ExpressionVisitor.ParseResult expressionVisitor_ParseResult0 = ExpressionVisitor.parseExpression("in_", (ExpressionVisitor.NameValidator) null, carFlagEncoder0);
      assertNotNull(expressionVisitor_ParseResult0);
  }
}
