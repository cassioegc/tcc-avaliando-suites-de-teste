/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 04 05:31:51 GMT 2021
 */

package com.graphhopper.routing.util.parsers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.graphhopper.reader.ReaderWay;
import com.graphhopper.routing.ev.EncodedValue;
import com.graphhopper.routing.ev.EncodedValueLookup;
import com.graphhopper.routing.util.parsers.OSMTrackTypeParser;
import com.graphhopper.storage.IntsRef;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OSMTrackTypeParser_ESTest extends OSMTrackTypeParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      OSMTrackTypeParser oSMTrackTypeParser0 = new OSMTrackTypeParser();
      ReaderWay readerWay0 = mock(ReaderWay.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(readerWay0).getTag(anyString());
      IntsRef intsRef0 = oSMTrackTypeParser0.handleWayTags((IntsRef) null, readerWay0, false, (IntsRef) null);
      assertNull(intsRef0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OSMTrackTypeParser oSMTrackTypeParser0 = new OSMTrackTypeParser();
      IntsRef intsRef0 = mock(IntsRef.class, new ViolatedAssumptionAnswer());
      ReaderWay readerWay0 = null;
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        oSMTrackTypeParser0.handleWayTags(intsRef0, (ReaderWay) null, false, intsRef0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.util.parsers.OSMTrackTypeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      OSMTrackTypeParser oSMTrackTypeParser0 = new OSMTrackTypeParser();
      OSMTrackTypeParser oSMTrackTypeParser1 = new OSMTrackTypeParser();
      IntsRef intsRef0 = mock(IntsRef.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, (String) null, (String) null, (String) null).when(intsRef0).toString();
      ReaderWay readerWay0 = mock(ReaderWay.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(readerWay0).getTag(anyString());
      IntsRef intsRef1 = mock(IntsRef.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(intsRef1).toString();
      ReaderWay readerWay1 = mock(ReaderWay.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(readerWay1).getTag(anyString());
      IntsRef intsRef2 = oSMTrackTypeParser1.handleWayTags(intsRef1, readerWay1, false, intsRef1);
      ReaderWay readerWay2 = mock(ReaderWay.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(readerWay2).getTag(anyString());
      IntsRef intsRef3 = oSMTrackTypeParser0.handleWayTags(intsRef2, readerWay2, false, intsRef2);
      IntsRef intsRef4 = oSMTrackTypeParser1.handleWayTags(intsRef0, readerWay0, false, intsRef0);
      ReaderWay readerWay3 = mock(ReaderWay.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(readerWay3).getTag(anyString());
      oSMTrackTypeParser0.handleWayTags(intsRef4, readerWay3, false, intsRef4);
      ReaderWay readerWay4 = mock(ReaderWay.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = true;
      IntsRef intsRef5 = oSMTrackTypeParser0.handleWayTags(intsRef4, readerWay4, true, intsRef4);
      ReaderWay readerWay5 = mock(ReaderWay.class, new ViolatedAssumptionAnswer());
      boolean boolean1 = true;
      IntsRef intsRef6 = oSMTrackTypeParser1.handleWayTags(intsRef5, readerWay5, true, intsRef3);
      ReaderWay readerWay6 = mock(ReaderWay.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(readerWay6).getTag(anyString());
      oSMTrackTypeParser1.handleWayTags((IntsRef) null, readerWay6, false, intsRef4);
      ReaderWay readerWay7 = mock(ReaderWay.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(readerWay7).getTag(anyString());
      oSMTrackTypeParser0.handleWayTags((IntsRef) null, readerWay7, false, (IntsRef) null);
      ReaderWay readerWay8 = mock(ReaderWay.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(readerWay8).getTag(anyString());
      oSMTrackTypeParser0.handleWayTags(intsRef4, readerWay8, false, intsRef6);
      EncodedValueLookup encodedValueLookup0 = mock(EncodedValueLookup.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        oSMTrackTypeParser1.createEncodedValues(encodedValueLookup0, (List<EncodedValue>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.util.parsers.OSMTrackTypeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      OSMTrackTypeParser oSMTrackTypeParser0 = new OSMTrackTypeParser();
      ReaderWay readerWay0 = mock(ReaderWay.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(readerWay0).getTag(anyString());
      IntsRef intsRef0 = oSMTrackTypeParser0.handleWayTags((IntsRef) null, readerWay0, false, (IntsRef) null);
      assertNull(intsRef0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      OSMTrackTypeParser oSMTrackTypeParser0 = new OSMTrackTypeParser();
      // Undeclared exception!
      try { 
        oSMTrackTypeParser0.handleWayTags((IntsRef) null, (ReaderWay) null, false, (IntsRef) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.util.parsers.OSMTrackTypeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      OSMTrackTypeParser oSMTrackTypeParser0 = new OSMTrackTypeParser();
      EncodedValueLookup encodedValueLookup0 = mock(EncodedValueLookup.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        oSMTrackTypeParser0.createEncodedValues(encodedValueLookup0, (List<EncodedValue>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.util.parsers.OSMTrackTypeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      OSMTrackTypeParser oSMTrackTypeParser0 = new OSMTrackTypeParser();
      IntsRef intsRef0 = mock(IntsRef.class, new ViolatedAssumptionAnswer());
      doReturn("Use lower case for EncodedValues: ", "Use lower case for EncodedValues: ").when(intsRef0).toString();
      ReaderWay readerWay0 = mock(ReaderWay.class, new ViolatedAssumptionAnswer());
      doReturn("").when(readerWay0).getTag(anyString());
      boolean boolean0 = false;
      IntsRef intsRef1 = oSMTrackTypeParser0.handleWayTags(intsRef0, readerWay0, false, intsRef0);
      ReaderWay readerWay1 = mock(ReaderWay.class, new ViolatedAssumptionAnswer());
      doReturn("2h-FlMUqJ5d3").when(readerWay1).getTag(anyString());
      oSMTrackTypeParser0.handleWayTags(intsRef1, readerWay1, false, intsRef1);
      EncodedValueLookup encodedValueLookup0 = mock(EncodedValueLookup.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        oSMTrackTypeParser0.createEncodedValues(encodedValueLookup0, (List<EncodedValue>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.util.parsers.OSMTrackTypeParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      OSMTrackTypeParser oSMTrackTypeParser0 = new OSMTrackTypeParser();
      IntsRef intsRef0 = mock(IntsRef.class, new ViolatedAssumptionAnswer());
      doReturn("XgE]39nDnoD", "XgE]39nDnoD", "XgE]39nDnoD", "XgE]39nDnoD").when(intsRef0).toString();
      ReaderWay readerWay0 = mock(ReaderWay.class, new ViolatedAssumptionAnswer());
      doReturn("XgE]39nDnoD").when(readerWay0).getTag(anyString());
      IntsRef intsRef1 = oSMTrackTypeParser0.handleWayTags(intsRef0, readerWay0, false, intsRef0);
      ReaderWay readerWay1 = mock(ReaderWay.class, new ViolatedAssumptionAnswer());
      doReturn("XgE]39nDnoD").when(readerWay1).getTag(anyString());
      IntsRef intsRef2 = oSMTrackTypeParser0.handleWayTags(intsRef1, readerWay1, false, intsRef1);
      ReaderWay readerWay2 = mock(ReaderWay.class, new ViolatedAssumptionAnswer());
      doReturn("?l").when(readerWay2).getTag(anyString());
      IntsRef intsRef3 = oSMTrackTypeParser0.handleWayTags(intsRef2, readerWay2, false, intsRef1);
      ReaderWay readerWay3 = mock(ReaderWay.class, new ViolatedAssumptionAnswer());
      doReturn("?l").when(readerWay3).getTag(anyString());
      IntsRef intsRef4 = oSMTrackTypeParser0.handleWayTags(intsRef3, readerWay3, false, intsRef3);
      assertSame(intsRef3, intsRef4);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      OSMTrackTypeParser oSMTrackTypeParser0 = new OSMTrackTypeParser();
      IntsRef intsRef0 = mock(IntsRef.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(intsRef0).toString();
      ReaderWay readerWay0 = mock(ReaderWay.class, new ViolatedAssumptionAnswer());
      IntsRef intsRef1 = oSMTrackTypeParser0.handleWayTags(intsRef0, readerWay0, true, intsRef0);
      ReaderWay readerWay1 = mock(ReaderWay.class, new ViolatedAssumptionAnswer());
      IntsRef intsRef2 = oSMTrackTypeParser0.handleWayTags(intsRef1, readerWay1, true, (IntsRef) null);
      assertSame(intsRef2, intsRef1);
  }
}
