/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 04 03:07:39 GMT 2021
 */

package com.graphhopper.routing.ch;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.graphhopper.routing.ch.CHPreparationGraph;
import com.graphhopper.routing.ch.NodeBasedNodeContractor;
import com.graphhopper.util.PMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NodeBasedNodeContractor_ESTest extends NodeBasedNodeContractor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CHPreparationGraph cHPreparationGraph0 = CHPreparationGraph.nodeBased(0, 95);
      PMap pMap0 = new PMap();
      NodeBasedNodeContractor nodeBasedNodeContractor0 = new NodeBasedNodeContractor(cHPreparationGraph0, (NodeBasedNodeContractor.ShortcutHandler) null, pMap0);
      // Undeclared exception!
      try { 
        nodeBasedNodeContractor0.contractNode(95);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.ch.NodeBasedNodeContractor", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CHPreparationGraph cHPreparationGraph0 = CHPreparationGraph.nodeBased(0, 95);
      cHPreparationGraph0.prepareForContraction();
      PMap pMap0 = new PMap();
      NodeBasedNodeContractor nodeBasedNodeContractor0 = new NodeBasedNodeContractor(cHPreparationGraph0, (NodeBasedNodeContractor.ShortcutHandler) null, pMap0);
      nodeBasedNodeContractor0.initFromGraph();
      nodeBasedNodeContractor0.close();
      assertEquals(0L, nodeBasedNodeContractor0.getAddedShortcutsCount());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CHPreparationGraph cHPreparationGraph0 = CHPreparationGraph.nodeBased(0, 95);
      cHPreparationGraph0.prepareForContraction();
      PMap pMap0 = new PMap();
      NodeBasedNodeContractor nodeBasedNodeContractor0 = new NodeBasedNodeContractor(cHPreparationGraph0, (NodeBasedNodeContractor.ShortcutHandler) null, pMap0);
      nodeBasedNodeContractor0.initFromGraph();
      String string0 = nodeBasedNodeContractor0.getStatisticsString();
      assertEquals("meanDegree: 0.00, dijkstras:          0, mem:        0MB", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CHPreparationGraph cHPreparationGraph0 = CHPreparationGraph.nodeBased(0, 89);
      PMap pMap0 = new PMap();
      NodeBasedNodeContractor nodeBasedNodeContractor0 = new NodeBasedNodeContractor(cHPreparationGraph0, (NodeBasedNodeContractor.ShortcutHandler) null, pMap0);
      // Undeclared exception!
      try { 
        nodeBasedNodeContractor0.prepareContraction();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("com.graphhopper.routing.ch.NodeBasedNodeContractor", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PMap pMap0 = new PMap(0);
      NodeBasedNodeContractor nodeBasedNodeContractor0 = new NodeBasedNodeContractor((CHPreparationGraph) null, (NodeBasedNodeContractor.ShortcutHandler) null, pMap0);
      // Undeclared exception!
      try { 
        nodeBasedNodeContractor0.initFromGraph();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.ch.NodeBasedNodeContractor", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CHPreparationGraph cHPreparationGraph0 = CHPreparationGraph.nodeBased(0, 95);
      cHPreparationGraph0.prepareForContraction();
      PMap pMap0 = new PMap();
      NodeBasedNodeContractor nodeBasedNodeContractor0 = new NodeBasedNodeContractor(cHPreparationGraph0, (NodeBasedNodeContractor.ShortcutHandler) null, pMap0);
      nodeBasedNodeContractor0.initFromGraph();
      // Undeclared exception!
      try { 
        nodeBasedNodeContractor0.contractNode(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.graphhopper.routing.ch.CHPreparationGraph$PrepareGraphEdgeExplorerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CHPreparationGraph cHPreparationGraph0 = CHPreparationGraph.edgeBased(813, 813, (CHPreparationGraph.TurnCostFunction) null);
      cHPreparationGraph0.prepareForContraction();
      PMap pMap0 = new PMap("#S[C%o=ee'L`.FEnGN");
      NodeBasedNodeContractor nodeBasedNodeContractor0 = new NodeBasedNodeContractor(cHPreparationGraph0, (NodeBasedNodeContractor.ShortcutHandler) null, pMap0);
      // Undeclared exception!
      try { 
        nodeBasedNodeContractor0.close();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.ch.NodeBasedNodeContractor", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CHPreparationGraph cHPreparationGraph0 = CHPreparationGraph.nodeBased(0, 95);
      cHPreparationGraph0.prepareForContraction();
      PMap pMap0 = new PMap();
      NodeBasedNodeContractor nodeBasedNodeContractor0 = new NodeBasedNodeContractor(cHPreparationGraph0, (NodeBasedNodeContractor.ShortcutHandler) null, pMap0);
      nodeBasedNodeContractor0.initFromGraph();
      // Undeclared exception!
      try { 
        nodeBasedNodeContractor0.calculatePriority(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.graphhopper.routing.ch.CHPreparationGraph$PrepareGraphEdgeExplorerImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CHPreparationGraph cHPreparationGraph0 = CHPreparationGraph.edgeBased(1777, 1777, (CHPreparationGraph.TurnCostFunction) null);
      NodeBasedNodeContractor nodeBasedNodeContractor0 = null;
      try {
        nodeBasedNodeContractor0 = new NodeBasedNodeContractor(cHPreparationGraph0, (NodeBasedNodeContractor.ShortcutHandler) null, (PMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.ch.NodeBasedNodeContractor", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NodeBasedNodeContractor.Params nodeBasedNodeContractor_Params0 = new NodeBasedNodeContractor.Params();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CHPreparationGraph cHPreparationGraph0 = CHPreparationGraph.nodeBased(0, 95);
      PMap pMap0 = new PMap();
      NodeBasedNodeContractor nodeBasedNodeContractor0 = new NodeBasedNodeContractor(cHPreparationGraph0, (NodeBasedNodeContractor.ShortcutHandler) null, pMap0);
      // Undeclared exception!
      try { 
        nodeBasedNodeContractor0.calculatePriority(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.ch.NodeBasedNodeContractor", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CHPreparationGraph cHPreparationGraph0 = CHPreparationGraph.nodeBased(18, 18);
      PMap pMap0 = new PMap();
      NodeBasedNodeContractor nodeBasedNodeContractor0 = new NodeBasedNodeContractor(cHPreparationGraph0, (NodeBasedNodeContractor.ShortcutHandler) null, pMap0);
      float float0 = nodeBasedNodeContractor0.getDijkstraSeconds();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PMap pMap0 = new PMap(0);
      NodeBasedNodeContractor nodeBasedNodeContractor0 = new NodeBasedNodeContractor((CHPreparationGraph) null, (NodeBasedNodeContractor.ShortcutHandler) null, pMap0);
      long long0 = nodeBasedNodeContractor0.getAddedShortcutsCount();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CHPreparationGraph cHPreparationGraph0 = CHPreparationGraph.nodeBased(8, 8);
      PMap pMap0 = new PMap(8);
      NodeBasedNodeContractor nodeBasedNodeContractor0 = new NodeBasedNodeContractor(cHPreparationGraph0, (NodeBasedNodeContractor.ShortcutHandler) null, pMap0);
      // Undeclared exception!
      try { 
        nodeBasedNodeContractor0.finishContraction();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.ch.NodeBasedNodeContractor", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CHPreparationGraph cHPreparationGraph0 = CHPreparationGraph.edgeBased(800, 800, (CHPreparationGraph.TurnCostFunction) null);
      PMap pMap0 = new PMap("H#)\"JpM4J}[fMz");
      NodeBasedNodeContractor nodeBasedNodeContractor0 = new NodeBasedNodeContractor(cHPreparationGraph0, (NodeBasedNodeContractor.ShortcutHandler) null, pMap0);
      // Undeclared exception!
      try { 
        nodeBasedNodeContractor0.close();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // You need to call prepareForContraction() before calling this method
         //
         verifyException("com.graphhopper.routing.ch.CHPreparationGraph", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CHPreparationGraph cHPreparationGraph0 = CHPreparationGraph.nodeBased(0, 95);
      PMap pMap0 = new PMap();
      NodeBasedNodeContractor nodeBasedNodeContractor0 = new NodeBasedNodeContractor(cHPreparationGraph0, (NodeBasedNodeContractor.ShortcutHandler) null, pMap0);
      // Undeclared exception!
      try { 
        nodeBasedNodeContractor0.initFromGraph();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // You need to call prepareForContraction() before calling this method
         //
         verifyException("com.graphhopper.routing.ch.CHPreparationGraph", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CHPreparationGraph cHPreparationGraph0 = CHPreparationGraph.nodeBased(0, 95);
      PMap pMap0 = new PMap();
      NodeBasedNodeContractor nodeBasedNodeContractor0 = new NodeBasedNodeContractor(cHPreparationGraph0, (NodeBasedNodeContractor.ShortcutHandler) null, pMap0);
      long long0 = nodeBasedNodeContractor0.getDijkstraCount();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CHPreparationGraph cHPreparationGraph0 = CHPreparationGraph.nodeBased(41, 41);
      PMap pMap0 = new PMap(41);
      NodeBasedNodeContractor nodeBasedNodeContractor0 = new NodeBasedNodeContractor(cHPreparationGraph0, (NodeBasedNodeContractor.ShortcutHandler) null, pMap0);
      // Undeclared exception!
      try { 
        nodeBasedNodeContractor0.getStatisticsString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.ch.NodeBasedNodeContractor", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CHPreparationGraph cHPreparationGraph0 = CHPreparationGraph.nodeBased(18, 18);
      PMap pMap0 = new PMap();
      NodeBasedNodeContractor nodeBasedNodeContractor0 = new NodeBasedNodeContractor(cHPreparationGraph0, (NodeBasedNodeContractor.ShortcutHandler) null, pMap0);
      nodeBasedNodeContractor0.prepareContraction();
      // Undeclared exception!
      try { 
        nodeBasedNodeContractor0.contractNode(18);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.ch.NodeBasedNodeContractor", e);
      }
  }
}
