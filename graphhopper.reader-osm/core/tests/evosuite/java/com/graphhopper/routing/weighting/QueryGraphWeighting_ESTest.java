/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 04 04:01:07 GMT 2021
 */

package com.graphhopper.routing.weighting;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.carrotsearch.hppc.IntArrayList;
import com.graphhopper.routing.ev.BooleanEncodedValue;
import com.graphhopper.routing.util.FlagEncoder;
import com.graphhopper.routing.weighting.QueryGraphWeighting;
import com.graphhopper.routing.weighting.Weighting;
import com.graphhopper.util.EdgeIteratorState;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class QueryGraphWeighting_ESTest extends QueryGraphWeighting_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn((BooleanEncodedValue) null).when(flagEncoder0).getAccessEnc();
      doReturn((String) null, (String) null).when(flagEncoder0).toString();
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn((-90.0)).when(weighting0).calcTurnWeight(anyInt() , anyInt() , anyInt());
      doReturn(flagEncoder0).when(weighting0).getFlagEncoder();
      IntArrayList intArrayList0 = mock(IntArrayList.class, new ViolatedAssumptionAnswer());
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting(weighting0, 30, 679, (IntArrayList) null);
      assertNull(queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertNotNull(queryGraphWeighting0);
      
      FlagEncoder flagEncoder1 = queryGraphWeighting0.getFlagEncoder();
      assertNull(queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertEquals(0, flagEncoder1.getVersion());
      assertNull(flagEncoder1.getTransportationMode());
      assertFalse(flagEncoder1.supportsTurnCosts());
      assertEquals(0.0, flagEncoder1.getMaxSpeed(), 0.01);
      assertFalse(flagEncoder1.isRegistered());
      assertNotNull(flagEncoder1);
      assertSame(flagEncoder1, flagEncoder0);
      
      Weighting weighting1 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(weighting1).calcEdgeWeight(any(com.graphhopper.util.EdgeIteratorState.class) , anyBoolean());
      doReturn(0.0).when(weighting1).calcTurnWeight(anyInt() , anyInt() , anyInt());
      doReturn(flagEncoder1).when(weighting1).getFlagEncoder();
      QueryGraphWeighting queryGraphWeighting1 = new QueryGraphWeighting(weighting1, 4, 4, (IntArrayList) null);
      assertNull(queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertEquals(0, flagEncoder1.getVersion());
      assertNull(flagEncoder1.getTransportationMode());
      assertFalse(flagEncoder1.supportsTurnCosts());
      assertEquals(0.0, flagEncoder1.getMaxSpeed(), 0.01);
      assertFalse(flagEncoder1.isRegistered());
      assertNull(queryGraphWeighting1.toString());
      assertFalse(queryGraphWeighting1.hasTurnCosts());
      assertNull(queryGraphWeighting1.getName());
      assertNotNull(queryGraphWeighting1);
      assertFalse(queryGraphWeighting1.equals((Object)queryGraphWeighting0));
      
      int int0 = 0;
      int int1 = 0;
      long long0 = queryGraphWeighting1.calcTurnMillis(0, 0, 0);
      assertNull(queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertEquals(0, flagEncoder1.getVersion());
      assertNull(flagEncoder1.getTransportationMode());
      assertFalse(flagEncoder1.supportsTurnCosts());
      assertEquals(0.0, flagEncoder1.getMaxSpeed(), 0.01);
      assertFalse(flagEncoder1.isRegistered());
      assertNull(queryGraphWeighting1.toString());
      assertFalse(queryGraphWeighting1.hasTurnCosts());
      assertNull(queryGraphWeighting1.getName());
      assertEquals(0L, long0);
      assertFalse(queryGraphWeighting0.equals((Object)queryGraphWeighting1));
      assertFalse(queryGraphWeighting1.equals((Object)queryGraphWeighting0));
      assertNotSame(queryGraphWeighting0, queryGraphWeighting1);
      assertSame(flagEncoder1, flagEncoder0);
      assertNotSame(queryGraphWeighting1, queryGraphWeighting0);
      
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      double double0 = queryGraphWeighting0.calcTurnWeight(0, (-1503), 0);
      assertNull(queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertEquals((-90.0), double0, 0.01);
      assertFalse(queryGraphWeighting0.equals((Object)queryGraphWeighting1));
      assertNotSame(queryGraphWeighting0, queryGraphWeighting1);
      
      double double1 = queryGraphWeighting1.calcEdgeWeight(edgeIteratorState0, false);
      assertNull(queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertEquals(0, flagEncoder1.getVersion());
      assertNull(flagEncoder1.getTransportationMode());
      assertFalse(flagEncoder1.supportsTurnCosts());
      assertEquals(0.0, flagEncoder1.getMaxSpeed(), 0.01);
      assertFalse(flagEncoder1.isRegistered());
      assertNull(queryGraphWeighting1.toString());
      assertFalse(queryGraphWeighting1.hasTurnCosts());
      assertNull(queryGraphWeighting1.getName());
      assertEquals(0.0, double1, 0.01);
      assertFalse(queryGraphWeighting0.equals((Object)queryGraphWeighting1));
      assertFalse(queryGraphWeighting1.equals((Object)queryGraphWeighting0));
      assertNotEquals(double1, double0, 0.01);
      assertNotSame(queryGraphWeighting0, queryGraphWeighting1);
      assertSame(flagEncoder1, flagEncoder0);
      assertNotSame(queryGraphWeighting1, queryGraphWeighting0);
      
      QueryGraphWeighting queryGraphWeighting2 = new QueryGraphWeighting(queryGraphWeighting1, 4, 4, (IntArrayList) null);
      assertNull(queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertEquals(0, flagEncoder1.getVersion());
      assertNull(flagEncoder1.getTransportationMode());
      assertFalse(flagEncoder1.supportsTurnCosts());
      assertEquals(0.0, flagEncoder1.getMaxSpeed(), 0.01);
      assertFalse(flagEncoder1.isRegistered());
      assertNull(queryGraphWeighting1.toString());
      assertFalse(queryGraphWeighting1.hasTurnCosts());
      assertNull(queryGraphWeighting1.getName());
      assertFalse(queryGraphWeighting2.hasTurnCosts());
      assertNull(queryGraphWeighting2.toString());
      assertNull(queryGraphWeighting2.getName());
      assertNotNull(queryGraphWeighting2);
      assertFalse(queryGraphWeighting0.equals((Object)queryGraphWeighting1));
      assertFalse(queryGraphWeighting1.equals((Object)queryGraphWeighting0));
      assertFalse(queryGraphWeighting2.equals((Object)queryGraphWeighting0));
      assertFalse(queryGraphWeighting2.equals((Object)queryGraphWeighting1));
      
      EdgeIteratorState edgeIteratorState1 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(edgeIteratorState1).get(any(com.graphhopper.routing.ev.BooleanEncodedValue.class));
      boolean boolean0 = false;
      double double2 = queryGraphWeighting1.calcEdgeWeightWithAccess(edgeIteratorState1, false);
      assertNull(queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertEquals(0, flagEncoder1.getVersion());
      assertNull(flagEncoder1.getTransportationMode());
      assertFalse(flagEncoder1.supportsTurnCosts());
      assertEquals(0.0, flagEncoder1.getMaxSpeed(), 0.01);
      assertFalse(flagEncoder1.isRegistered());
      assertNull(queryGraphWeighting1.toString());
      assertFalse(queryGraphWeighting1.hasTurnCosts());
      assertNull(queryGraphWeighting1.getName());
      assertEquals(Double.POSITIVE_INFINITY, double2, 0.01);
      assertNotEquals(double2, double1, 0.01);
      assertNotEquals(double2, double0, 0.01);
      assertFalse(queryGraphWeighting0.equals((Object)queryGraphWeighting1));
      assertFalse(queryGraphWeighting0.equals((Object)queryGraphWeighting2));
      assertFalse(queryGraphWeighting1.equals((Object)queryGraphWeighting0));
      assertFalse(queryGraphWeighting1.equals((Object)queryGraphWeighting2));
      assertNotSame(queryGraphWeighting0, queryGraphWeighting1);
      assertNotSame(queryGraphWeighting0, queryGraphWeighting2);
      assertSame(flagEncoder1, flagEncoder0);
      assertNotSame(queryGraphWeighting1, queryGraphWeighting0);
      assertNotSame(queryGraphWeighting1, queryGraphWeighting2);
      
      // Undeclared exception!
      try { 
        queryGraphWeighting2.calcTurnWeight(4, 2, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.weighting.QueryGraphWeighting", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(110.0).when(weighting0).calcTurnWeight(anyInt() , anyInt() , anyInt());
      doReturn((FlagEncoder) null).when(weighting0).getFlagEncoder();
      doReturn((-1195.0)).when(weighting0).getMinWeight(anyDouble());
      IntArrayList intArrayList0 = mock(IntArrayList.class, new ViolatedAssumptionAnswer());
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting(weighting0, 210, 1967, (IntArrayList) null);
      assertNull(queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertNotNull(queryGraphWeighting0);
      
      FlagEncoder flagEncoder0 = queryGraphWeighting0.getFlagEncoder();
      assertNull(queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertNull(flagEncoder0);
      
      Weighting weighting1 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn((-1195.0)).when(weighting1).calcEdgeWeight(any(com.graphhopper.util.EdgeIteratorState.class) , anyBoolean());
      doReturn((FlagEncoder) null).when(weighting1).getFlagEncoder();
      int int0 = 4;
      QueryGraphWeighting queryGraphWeighting1 = new QueryGraphWeighting(weighting1, 4, 4, (IntArrayList) null);
      assertNull(queryGraphWeighting1.toString());
      assertFalse(queryGraphWeighting1.hasTurnCosts());
      assertNull(queryGraphWeighting1.getName());
      assertNotNull(queryGraphWeighting1);
      assertFalse(queryGraphWeighting1.equals((Object)queryGraphWeighting0));
      
      int int1 = 0;
      int int2 = (-1);
      long long0 = queryGraphWeighting1.calcTurnMillis(0, (-1), (-1));
      assertNull(queryGraphWeighting1.toString());
      assertFalse(queryGraphWeighting1.hasTurnCosts());
      assertNull(queryGraphWeighting1.getName());
      assertEquals(0L, long0);
      assertFalse(queryGraphWeighting1.equals((Object)queryGraphWeighting0));
      assertNotSame(queryGraphWeighting1, queryGraphWeighting0);
      
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      double double0 = queryGraphWeighting0.getMinWeight((-1));
      assertNull(queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertEquals((-1195.0), double0, 0.01);
      assertFalse(queryGraphWeighting0.equals((Object)queryGraphWeighting1));
      assertNotSame(queryGraphWeighting0, queryGraphWeighting1);
      
      double double1 = queryGraphWeighting1.calcEdgeWeight(edgeIteratorState0, false);
      assertNull(queryGraphWeighting1.toString());
      assertFalse(queryGraphWeighting1.hasTurnCosts());
      assertNull(queryGraphWeighting1.getName());
      assertEquals((-1195.0), double1, 0.01);
      assertFalse(queryGraphWeighting1.equals((Object)queryGraphWeighting0));
      assertEquals(double1, double0, 0.01);
      assertNotSame(queryGraphWeighting1, queryGraphWeighting0);
      
      QueryGraphWeighting queryGraphWeighting2 = new QueryGraphWeighting(queryGraphWeighting1, 4, 4, (IntArrayList) null);
      assertNull(queryGraphWeighting1.toString());
      assertFalse(queryGraphWeighting1.hasTurnCosts());
      assertNull(queryGraphWeighting1.getName());
      assertFalse(queryGraphWeighting2.hasTurnCosts());
      assertNull(queryGraphWeighting2.toString());
      assertNull(queryGraphWeighting2.getName());
      assertNotNull(queryGraphWeighting2);
      assertFalse(queryGraphWeighting1.equals((Object)queryGraphWeighting0));
      assertFalse(queryGraphWeighting2.equals((Object)queryGraphWeighting1));
      assertFalse(queryGraphWeighting2.equals((Object)queryGraphWeighting0));
      
      int int3 = 2;
      int int4 = 1797;
      long long1 = queryGraphWeighting0.calcTurnMillis(1797, 31, 0);
      assertNull(queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertEquals(110000L, long1);
      assertFalse(long1 == long0);
      assertFalse(queryGraphWeighting0.equals((Object)queryGraphWeighting2));
      assertFalse(queryGraphWeighting0.equals((Object)queryGraphWeighting1));
      assertNotSame(queryGraphWeighting0, queryGraphWeighting2);
      assertNotSame(queryGraphWeighting0, queryGraphWeighting1);
      
      EdgeIteratorState edgeIteratorState1 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = false;
      EdgeIteratorState edgeIteratorState2 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        queryGraphWeighting2.calcEdgeWeightWithAccess(edgeIteratorState2, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.weighting.Weighting", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn((BooleanEncodedValue) null).when(flagEncoder0).getAccessEnc();
      doReturn((String) null).when(flagEncoder0).toString();
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(weighting0).calcEdgeMillis(any(com.graphhopper.util.EdgeIteratorState.class) , anyBoolean());
      doReturn(flagEncoder0).when(weighting0).getFlagEncoder();
      doReturn("com.graphhopper.routing.weighting.QueryGraphWeighting").when(weighting0).getName();
      doReturn(true, false).when(weighting0).hasTurnCosts();
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting(weighting0, (-1), 1, (IntArrayList) null);
      assertEquals("com.graphhopper.routing.weighting.QueryGraphWeighting", queryGraphWeighting0.toString());
      assertEquals("com.graphhopper.routing.weighting.QueryGraphWeighting", queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNotNull(queryGraphWeighting0);
      
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      EdgeIteratorState edgeIteratorState1 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(edgeIteratorState1).get(any(com.graphhopper.routing.ev.BooleanEncodedValue.class));
      double double0 = queryGraphWeighting0.calcEdgeWeightWithAccess(edgeIteratorState1, false);
      assertEquals("com.graphhopper.routing.weighting.QueryGraphWeighting", queryGraphWeighting0.toString());
      assertEquals("com.graphhopper.routing.weighting.QueryGraphWeighting", queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
      
      long long0 = queryGraphWeighting0.calcEdgeMillis(edgeIteratorState0, false);
      assertEquals("com.graphhopper.routing.weighting.QueryGraphWeighting", queryGraphWeighting0.toString());
      assertEquals("com.graphhopper.routing.weighting.QueryGraphWeighting", queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertEquals(0L, long0);
      
      boolean boolean0 = queryGraphWeighting0.hasTurnCosts();
      assertEquals("com.graphhopper.routing.weighting.QueryGraphWeighting", queryGraphWeighting0.toString());
      assertEquals("com.graphhopper.routing.weighting.QueryGraphWeighting", queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertFalse(boolean0);
      
      String string0 = queryGraphWeighting0.toString();
      assertEquals("com.graphhopper.routing.weighting.QueryGraphWeighting", queryGraphWeighting0.toString());
      assertEquals("com.graphhopper.routing.weighting.QueryGraphWeighting", queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertEquals("com.graphhopper.routing.weighting.QueryGraphWeighting", string0);
      assertNotNull(string0);
      
      boolean boolean1 = queryGraphWeighting0.hasTurnCosts();
      assertEquals("com.graphhopper.routing.weighting.QueryGraphWeighting", queryGraphWeighting0.toString());
      assertEquals("com.graphhopper.routing.weighting.QueryGraphWeighting", queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      double double1 = queryGraphWeighting0.calcTurnWeight(2, 2, (-451));
      assertEquals("com.graphhopper.routing.weighting.QueryGraphWeighting", queryGraphWeighting0.toString());
      assertEquals("com.graphhopper.routing.weighting.QueryGraphWeighting", queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertEquals(0.0, double1, 0.01);
      assertNotEquals(double1, double0, 0.01);
      
      EdgeIteratorState edgeIteratorState2 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(2442L).when(weighting0).calcEdgeMillis(any(com.graphhopper.util.EdgeIteratorState.class) , anyBoolean());
      doReturn("lPSUoNWB0AT&:*e/]5").when(weighting0).getName();
      doReturn(false).when(weighting0).hasTurnCosts();
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting(weighting0, (-1), 1, (IntArrayList) null);
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertEquals("lPSUoNWB0AT&:*e/]5", queryGraphWeighting0.getName());
      assertEquals("lPSUoNWB0AT&:*e/]5", queryGraphWeighting0.toString());
      assertNotNull(queryGraphWeighting0);
      
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      long long0 = queryGraphWeighting0.calcEdgeMillis(edgeIteratorState0, false);
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertEquals("lPSUoNWB0AT&:*e/]5", queryGraphWeighting0.getName());
      assertEquals("lPSUoNWB0AT&:*e/]5", queryGraphWeighting0.toString());
      assertEquals(2442L, long0);
      
      boolean boolean0 = queryGraphWeighting0.hasTurnCosts();
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertEquals("lPSUoNWB0AT&:*e/]5", queryGraphWeighting0.getName());
      assertEquals("lPSUoNWB0AT&:*e/]5", queryGraphWeighting0.toString());
      assertFalse(boolean0);
      
      String string0 = queryGraphWeighting0.toString();
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertEquals("lPSUoNWB0AT&:*e/]5", queryGraphWeighting0.getName());
      assertEquals("lPSUoNWB0AT&:*e/]5", queryGraphWeighting0.toString());
      assertEquals("lPSUoNWB0AT&:*e/]5", string0);
      assertNotNull(string0);
      
      double double0 = queryGraphWeighting0.calcTurnWeight(2, 2, (-451));
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertEquals("lPSUoNWB0AT&:*e/]5", queryGraphWeighting0.getName());
      assertEquals("lPSUoNWB0AT&:*e/]5", queryGraphWeighting0.toString());
      assertEquals(0.0, double0, 0.01);
      
      EdgeIteratorState edgeIteratorState1 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn((-79.527505481)).when(weighting0).calcEdgeWeight(any(com.graphhopper.util.EdgeIteratorState.class) , anyBoolean());
      doReturn((-4438.976280457885)).when(weighting0).calcTurnWeight(anyInt() , anyInt() , anyInt());
      int int0 = 4;
      IntArrayList intArrayList0 = null;
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting(weighting0, 4, 4, (IntArrayList) null);
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.getName());
      assertNull(queryGraphWeighting0.toString());
      assertNotNull(queryGraphWeighting0);
      
      int int1 = 0;
      int int2 = 0;
      long long0 = queryGraphWeighting0.calcTurnMillis(0, 0, 0);
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.getName());
      assertNull(queryGraphWeighting0.toString());
      assertEquals((-4438976L), long0);
      
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      double double0 = queryGraphWeighting0.calcEdgeWeight(edgeIteratorState0, false);
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.getName());
      assertNull(queryGraphWeighting0.toString());
      assertEquals((-79.527505481), double0, 0.01);
      
      // Undeclared exception!
      try { 
        queryGraphWeighting0.calcTurnMillis(2822, 1, 88);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.weighting.QueryGraphWeighting", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn((-700L), 0L).when(weighting0).calcEdgeMillis(any(com.graphhopper.util.EdgeIteratorState.class) , anyBoolean());
      doReturn("", (String) null).when(weighting0).getName();
      IntArrayList intArrayList0 = mock(IntArrayList.class, new ViolatedAssumptionAnswer());
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting(weighting0, 0, 0, (IntArrayList) null);
      assertNull(queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertNotNull(queryGraphWeighting0);
      
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      EdgeIteratorState edgeIteratorState1 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      long long0 = queryGraphWeighting0.calcEdgeMillis(edgeIteratorState1, false);
      assertNull(queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertEquals((-700L), long0);
      
      long long1 = queryGraphWeighting0.calcEdgeMillis(edgeIteratorState0, false);
      assertNull(queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertEquals(0L, long1);
      assertFalse(long1 == long0);
      
      String string0 = queryGraphWeighting0.getName();
      assertNull(queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertNull(string0);
      
      String string1 = queryGraphWeighting0.toString();
      assertNull(queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertNull(string1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(1556L, 0L).when(weighting0).calcEdgeMillis(any(com.graphhopper.util.EdgeIteratorState.class) , anyBoolean());
      doReturn((double)1556L).when(weighting0).getMinWeight(anyDouble());
      IntArrayList intArrayList0 = mock(IntArrayList.class, new ViolatedAssumptionAnswer());
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting(weighting0, (-2539), (-2539), (IntArrayList) null);
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.getName());
      assertNull(queryGraphWeighting0.toString());
      assertNotNull(queryGraphWeighting0);
      
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      long long0 = queryGraphWeighting0.calcTurnMillis(1647, 1647, 514);
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.getName());
      assertNull(queryGraphWeighting0.toString());
      assertEquals(0L, long0);
      
      long long1 = queryGraphWeighting0.calcTurnMillis(600, (-1645), 2213);
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.getName());
      assertNull(queryGraphWeighting0.toString());
      assertEquals(0L, long1);
      assertTrue(long1 == long0);
      
      long long2 = queryGraphWeighting0.calcEdgeMillis(edgeIteratorState0, false);
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.getName());
      assertNull(queryGraphWeighting0.toString());
      assertEquals(1556L, long2);
      assertFalse(long2 == long0);
      assertFalse(long2 == long1);
      
      double double0 = queryGraphWeighting0.getMinWeight((-2539));
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.getName());
      assertNull(queryGraphWeighting0.toString());
      assertEquals(1556.0, double0, 0.01);
      
      EdgeIteratorState edgeIteratorState1 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      long long3 = queryGraphWeighting0.calcEdgeMillis(edgeIteratorState1, false);
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.getName());
      assertNull(queryGraphWeighting0.toString());
      assertEquals(1556L, long3);
      assertTrue(long3 == long2);
      assertFalse(long3 == long0);
      assertFalse(long3 == long1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(weighting0).calcEdgeWeight(any(com.graphhopper.util.EdgeIteratorState.class) , anyBoolean());
      doReturn((FlagEncoder) null).when(weighting0).getFlagEncoder();
      doReturn((String) null).when(weighting0).getName();
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting(weighting0, (-2571), 15, (IntArrayList) null);
      assertNull(queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertNotNull(queryGraphWeighting0);
      
      long long0 = queryGraphWeighting0.calcTurnMillis(2924, (-845), (-1198));
      assertNull(queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertEquals(0L, long0);
      
      long long1 = queryGraphWeighting0.calcTurnMillis((-2571), 15, 2554);
      assertNull(queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertEquals(0L, long1);
      assertTrue(long1 == long0);
      
      long long2 = queryGraphWeighting0.calcTurnMillis((-980), 15, 2924);
      assertNull(queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertEquals(0L, long2);
      assertTrue(long2 == long0);
      assertTrue(long2 == long1);
      
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      double double0 = queryGraphWeighting0.calcEdgeWeight(edgeIteratorState0, true);
      assertNull(queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertEquals(0.0, double0, 0.01);
      
      EdgeIteratorState edgeIteratorState1 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      double double1 = queryGraphWeighting0.calcEdgeWeight(edgeIteratorState1, true);
      assertNull(queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertEquals(0.0, double1, 0.01);
      assertEquals(double1, double0, 0.01);
      
      String string0 = queryGraphWeighting0.getName();
      assertNull(queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertNull(string0);
      
      double double2 = queryGraphWeighting0.calcTurnWeight(0, 2924, 0);
      assertNull(queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertEquals(Double.POSITIVE_INFINITY, double2, 0.01);
      assertNotEquals(double2, double0, 0.01);
      assertNotEquals(double2, double1, 0.01);
      
      FlagEncoder flagEncoder0 = queryGraphWeighting0.getFlagEncoder();
      assertNull(queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertNull(flagEncoder0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(flagEncoder0).toString();
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(1375L).when(weighting0).calcEdgeMillis(any(com.graphhopper.util.EdgeIteratorState.class) , anyBoolean());
      doReturn(1000.0).when(weighting0).calcEdgeWeight(any(com.graphhopper.util.EdgeIteratorState.class) , anyBoolean());
      doReturn(flagEncoder0).when(weighting0).getFlagEncoder();
      doReturn("").when(weighting0).getName();
      IntArrayList intArrayList0 = mock(IntArrayList.class, new ViolatedAssumptionAnswer());
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting(weighting0, 100, 100, (IntArrayList) null);
      assertEquals("", queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertEquals("", queryGraphWeighting0.toString());
      assertNotNull(queryGraphWeighting0);
      
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      long long0 = queryGraphWeighting0.calcEdgeMillis(edgeIteratorState0, false);
      assertEquals("", queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertEquals("", queryGraphWeighting0.toString());
      assertEquals(1375L, long0);
      
      EdgeIteratorState edgeIteratorState1 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      double double0 = queryGraphWeighting0.calcEdgeWeight(edgeIteratorState1, true);
      assertEquals("", queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertEquals("", queryGraphWeighting0.toString());
      assertEquals(1000.0, double0, 0.01);
      
      FlagEncoder flagEncoder1 = queryGraphWeighting0.getFlagEncoder();
      assertEquals("", queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertEquals("", queryGraphWeighting0.toString());
      assertFalse(flagEncoder1.supportsTurnCosts());
      assertEquals(0.0, flagEncoder1.getMaxSpeed(), 0.01);
      assertFalse(flagEncoder1.isRegistered());
      assertEquals(0, flagEncoder1.getVersion());
      assertNull(flagEncoder1.getTransportationMode());
      assertNotNull(flagEncoder1);
      assertSame(flagEncoder1, flagEncoder0);
      
      String string0 = queryGraphWeighting0.toString();
      assertEquals("", queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertEquals("", queryGraphWeighting0.toString());
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn("").when(weighting0).getName();
      int int0 = 31;
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting(weighting0, 5, 31, (IntArrayList) null);
      assertEquals("", queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertEquals("", queryGraphWeighting0.toString());
      assertNotNull(queryGraphWeighting0);
      
      String string0 = queryGraphWeighting0.getName();
      assertEquals("", queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertEquals("", queryGraphWeighting0.toString());
      assertEquals("", string0);
      assertNotNull(string0);
      
      int int1 = (-1747);
      long long0 = queryGraphWeighting0.calcTurnMillis((-2005), 5, 31);
      assertEquals("", queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertEquals("", queryGraphWeighting0.toString());
      assertEquals(0L, long0);
      
      // Undeclared exception!
      try { 
        queryGraphWeighting0.calcTurnMillis(5, (-1747), 1886);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.weighting.QueryGraphWeighting", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn((-936.556964), (-936.556964)).when(weighting0).calcEdgeWeight(any(com.graphhopper.util.EdgeIteratorState.class) , anyBoolean());
      doReturn("TqOPGVPE/,eOQlE", "", "TqOPGVPE/,eOQlE").when(weighting0).getName();
      IntArrayList intArrayList0 = mock(IntArrayList.class, new ViolatedAssumptionAnswer());
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting(weighting0, 1, 1, (IntArrayList) null);
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertEquals("TqOPGVPE/,eOQlE", queryGraphWeighting0.toString());
      assertEquals("TqOPGVPE/,eOQlE", queryGraphWeighting0.getName());
      assertNotNull(queryGraphWeighting0);
      
      double double0 = queryGraphWeighting0.calcEdgeWeight((EdgeIteratorState) null, true);
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertEquals("TqOPGVPE/,eOQlE", queryGraphWeighting0.toString());
      assertEquals("TqOPGVPE/,eOQlE", queryGraphWeighting0.getName());
      assertEquals((-936.556964), double0, 0.01);
      
      double double1 = queryGraphWeighting0.calcEdgeWeight((EdgeIteratorState) null, true);
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertEquals("TqOPGVPE/,eOQlE", queryGraphWeighting0.toString());
      assertEquals("TqOPGVPE/,eOQlE", queryGraphWeighting0.getName());
      assertEquals((-936.556964), double1, 0.01);
      assertEquals(double1, double0, 0.01);
      
      String string0 = queryGraphWeighting0.getName();
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertEquals("TqOPGVPE/,eOQlE", queryGraphWeighting0.toString());
      assertEquals("TqOPGVPE/,eOQlE", queryGraphWeighting0.getName());
      assertEquals("TqOPGVPE/,eOQlE", string0);
      assertNotNull(string0);
      
      String string1 = queryGraphWeighting0.toString();
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertEquals("TqOPGVPE/,eOQlE", queryGraphWeighting0.toString());
      assertEquals("TqOPGVPE/,eOQlE", queryGraphWeighting0.getName());
      assertEquals("TqOPGVPE/,eOQlE", string1);
      assertNotNull(string1);
      
      String string2 = queryGraphWeighting0.getName();
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertEquals("TqOPGVPE/,eOQlE", queryGraphWeighting0.toString());
      assertEquals("TqOPGVPE/,eOQlE", queryGraphWeighting0.getName());
      assertEquals("TqOPGVPE/,eOQlE", string2);
      assertNotNull(string2);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(weighting0).calcEdgeMillis(any(com.graphhopper.util.EdgeIteratorState.class) , anyBoolean());
      IntArrayList intArrayList0 = mock(IntArrayList.class, new ViolatedAssumptionAnswer());
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting(weighting0, 2, 2, (IntArrayList) null);
      assertNull(queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertNotNull(queryGraphWeighting0);
      
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      long long0 = queryGraphWeighting0.calcEdgeMillis(edgeIteratorState0, true);
      assertNull(queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertEquals(0L, long0);
      
      int int0 = 0;
      // Undeclared exception!
      try { 
        queryGraphWeighting0.calcTurnWeight(0, 0, 8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.weighting.QueryGraphWeighting", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(weighting0).calcTurnWeight(anyInt() , anyInt() , anyInt());
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting(weighting0, (-226), 2421, (IntArrayList) null);
      assertNull(queryGraphWeighting0.toString());
      assertNull(queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNotNull(queryGraphWeighting0);
      
      double double0 = queryGraphWeighting0.calcTurnWeight(40, (-1240), 0);
      assertNull(queryGraphWeighting0.toString());
      assertNull(queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertEquals(0.0, double0, 0.01);
      
      // Undeclared exception!
      try { 
        queryGraphWeighting0.calcTurnWeight(2421, (-2829), 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.weighting.QueryGraphWeighting", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      IntArrayList intArrayList0 = mock(IntArrayList.class, new ViolatedAssumptionAnswer());
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting(weighting0, 2676, 600, (IntArrayList) null);
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.getName());
      assertNull(queryGraphWeighting0.toString());
      assertNotNull(queryGraphWeighting0);
      
      // Undeclared exception!
      try { 
        queryGraphWeighting0.calcTurnMillis(180, 155, 1993);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.weighting.QueryGraphWeighting", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = 1;
      IntArrayList intArrayList0 = mock(IntArrayList.class, new ViolatedAssumptionAnswer());
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting((Weighting) null, (-756), 1, (IntArrayList) null);
      assertNotNull(queryGraphWeighting0);
      
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      EdgeIteratorState edgeIteratorState1 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        queryGraphWeighting0.calcEdgeWeight(edgeIteratorState1, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.weighting.QueryGraphWeighting", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn((FlagEncoder) null).when(weighting0).getFlagEncoder();
      IntArrayList intArrayList0 = mock(IntArrayList.class, new ViolatedAssumptionAnswer());
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting(weighting0, (-757), 0, (IntArrayList) null);
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertNull(queryGraphWeighting0.getName());
      assertNotNull(queryGraphWeighting0);
      
      FlagEncoder flagEncoder0 = queryGraphWeighting0.getFlagEncoder();
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertNull(queryGraphWeighting0.getName());
      assertNull(flagEncoder0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = 140;
      IntArrayList intArrayList0 = mock(IntArrayList.class, new ViolatedAssumptionAnswer());
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting((Weighting) null, 140, 140, (IntArrayList) null);
      assertNotNull(queryGraphWeighting0);
      
      // Undeclared exception!
      try { 
        queryGraphWeighting0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.weighting.QueryGraphWeighting", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(weighting0).calcEdgeWeight(any(com.graphhopper.util.EdgeIteratorState.class) , anyBoolean());
      doReturn(0.0).when(weighting0).getMinWeight(anyDouble());
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting(weighting0, 1016, 0, (IntArrayList) null);
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertNull(queryGraphWeighting0.getName());
      assertNotNull(queryGraphWeighting0);
      
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      double double0 = queryGraphWeighting0.calcEdgeWeight(edgeIteratorState0, false);
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertNull(queryGraphWeighting0.getName());
      assertEquals(0.0, double0, 0.01);
      
      double double1 = queryGraphWeighting0.calcTurnWeight(1016, 2565, (-843));
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertNull(queryGraphWeighting0.getName());
      assertEquals(0.0, double1, 0.01);
      assertEquals(double1, double0, 0.01);
      
      double double2 = queryGraphWeighting0.getMinWeight(1016);
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertNull(queryGraphWeighting0.getName());
      assertEquals(0.0, double2, 0.01);
      assertEquals(double2, double1, 0.01);
      assertEquals(double2, double0, 0.01);
      
      // Undeclared exception!
      try { 
        queryGraphWeighting0.calcTurnWeight(3, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.weighting.QueryGraphWeighting", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = 0;
      IntArrayList intArrayList0 = mock(IntArrayList.class, new ViolatedAssumptionAnswer());
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting((Weighting) null, 2, 0, (IntArrayList) null);
      assertNotNull(queryGraphWeighting0);
      
      // Undeclared exception!
      try { 
        queryGraphWeighting0.hasTurnCosts();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.weighting.QueryGraphWeighting", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(weighting0).calcTurnWeight(anyInt() , anyInt() , anyInt());
      doReturn((String) null).when(weighting0).getName();
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting(weighting0, 3335, 3335, (IntArrayList) null);
      assertNull(queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertNotNull(queryGraphWeighting0);
      
      long long0 = queryGraphWeighting0.calcTurnMillis(7, 1, 7);
      assertNull(queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertEquals(0L, long0);
      
      String string0 = queryGraphWeighting0.toString();
      assertNull(queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(weighting0).calcEdgeMillis(any(com.graphhopper.util.EdgeIteratorState.class) , anyBoolean());
      doReturn((String) null).when(weighting0).getName();
      IntArrayList intArrayList0 = mock(IntArrayList.class, new ViolatedAssumptionAnswer());
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting(weighting0, 0, 0, (IntArrayList) null);
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.getName());
      assertNull(queryGraphWeighting0.toString());
      assertNotNull(queryGraphWeighting0);
      
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      long long0 = queryGraphWeighting0.calcEdgeMillis(edgeIteratorState0, false);
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.getName());
      assertNull(queryGraphWeighting0.toString());
      assertEquals(0L, long0);
      
      String string0 = queryGraphWeighting0.getName();
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.getName());
      assertNull(queryGraphWeighting0.toString());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(weighting0).getName();
      IntArrayList intArrayList0 = mock(IntArrayList.class, new ViolatedAssumptionAnswer());
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting(weighting0, 9, 0, (IntArrayList) null);
      assertNull(queryGraphWeighting0.toString());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.getName());
      assertNotNull(queryGraphWeighting0);
      
      String string0 = queryGraphWeighting0.toString();
      assertNull(queryGraphWeighting0.toString());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.getName());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      int int0 = 2013;
      int int1 = (-708);
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting(weighting0, 2013, (-708), (IntArrayList) null);
      assertNull(queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertNotNull(queryGraphWeighting0);
      
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = true;
      int int2 = (-264);
      int int3 = (-351);
      // Undeclared exception!
      try { 
        queryGraphWeighting0.calcTurnMillis(335, (-264), 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.weighting.QueryGraphWeighting", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(weighting0).calcEdgeWeight(any(com.graphhopper.util.EdgeIteratorState.class) , anyBoolean());
      doReturn((String) null).when(weighting0).getName();
      IntArrayList intArrayList0 = mock(IntArrayList.class, new ViolatedAssumptionAnswer());
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting(weighting0, 44, 44, (IntArrayList) null);
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.getName());
      assertNull(queryGraphWeighting0.toString());
      assertNotNull(queryGraphWeighting0);
      
      double double0 = queryGraphWeighting0.calcTurnWeight((-1908), (-2), (-2));
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.getName());
      assertNull(queryGraphWeighting0.toString());
      assertEquals(0.0, double0, 0.01);
      
      String string0 = queryGraphWeighting0.getName();
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.getName());
      assertNull(queryGraphWeighting0.toString());
      assertNull(string0);
      
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      double double1 = queryGraphWeighting0.calcEdgeWeight(edgeIteratorState0, true);
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.getName());
      assertNull(queryGraphWeighting0.toString());
      assertEquals(0.0, double1, 0.01);
      assertEquals(double1, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      IntArrayList intArrayList0 = mock(IntArrayList.class, new ViolatedAssumptionAnswer());
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting(weighting0, 743, 743, (IntArrayList) null);
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertNull(queryGraphWeighting0.getName());
      assertNotNull(queryGraphWeighting0);
      
      double double0 = queryGraphWeighting0.calcTurnWeight(1973, 743, 1);
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertNull(queryGraphWeighting0.getName());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      IntArrayList intArrayList0 = mock(IntArrayList.class, new ViolatedAssumptionAnswer());
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting((Weighting) null, 0, 0, (IntArrayList) null);
      assertNotNull(queryGraphWeighting0);
      
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      double double0 = queryGraphWeighting0.calcTurnWeight(0, 0, 0);
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
      
      EdgeIteratorState edgeIteratorState1 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = false;
      EdgeIteratorState edgeIteratorState2 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        queryGraphWeighting0.calcEdgeMillis(edgeIteratorState2, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.weighting.QueryGraphWeighting", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int int0 = (-1);
      IntArrayList intArrayList0 = mock(IntArrayList.class, new ViolatedAssumptionAnswer());
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting((Weighting) null, (-1), (-1), (IntArrayList) null);
      assertNotNull(queryGraphWeighting0);
      
      double double0 = queryGraphWeighting0.calcTurnWeight(2, (-1859), (-1));
      assertEquals(0.0, double0, 0.01);
      
      int int1 = (-2843);
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      EdgeIteratorState edgeIteratorState1 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        queryGraphWeighting0.calcEdgeWeight(edgeIteratorState1, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.weighting.QueryGraphWeighting", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      IntArrayList intArrayList0 = mock(IntArrayList.class, new ViolatedAssumptionAnswer());
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting((Weighting) null, 0, (-945), (IntArrayList) null);
      assertNotNull(queryGraphWeighting0);
      
      // Undeclared exception!
      try { 
        queryGraphWeighting0.calcTurnWeight(1201, (-945), 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.weighting.QueryGraphWeighting", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(weighting0).calcEdgeMillis(any(com.graphhopper.util.EdgeIteratorState.class) , anyBoolean());
      doReturn(0.0).when(weighting0).calcEdgeWeight(any(com.graphhopper.util.EdgeIteratorState.class) , anyBoolean());
      doReturn((String) null).when(weighting0).getName();
      IntArrayList intArrayList0 = mock(IntArrayList.class, new ViolatedAssumptionAnswer());
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting(weighting0, 73, 73, (IntArrayList) null);
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertNull(queryGraphWeighting0.getName());
      assertNotNull(queryGraphWeighting0);
      
      long long0 = queryGraphWeighting0.calcTurnMillis(71, 1513, 73);
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertNull(queryGraphWeighting0.getName());
      assertEquals(0L, long0);
      
      double double0 = queryGraphWeighting0.calcEdgeWeight((EdgeIteratorState) null, false);
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertNull(queryGraphWeighting0.getName());
      assertEquals(0.0, double0, 0.01);
      
      String string0 = queryGraphWeighting0.toString();
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertNull(queryGraphWeighting0.getName());
      assertNull(string0);
      
      long long1 = queryGraphWeighting0.calcEdgeMillis((EdgeIteratorState) null, false);
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertNull(queryGraphWeighting0.getName());
      assertEquals(0L, long1);
      assertTrue(long1 == long0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = 848;
      IntArrayList intArrayList0 = mock(IntArrayList.class, new ViolatedAssumptionAnswer());
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting((Weighting) null, 848, (-651), (IntArrayList) null);
      assertNotNull(queryGraphWeighting0);
      
      int int1 = (-1342);
      long long0 = queryGraphWeighting0.calcTurnMillis((-1342), 5, 848);
      assertEquals(0L, long0);
      
      int int2 = 0;
      // Undeclared exception!
      try { 
        queryGraphWeighting0.calcTurnMillis(5, (-1342), 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.weighting.QueryGraphWeighting", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(weighting0).getName();
      IntArrayList intArrayList0 = mock(IntArrayList.class, new ViolatedAssumptionAnswer());
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting(weighting0, (-794), (-794), (IntArrayList) null);
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.getName());
      assertNull(queryGraphWeighting0.toString());
      assertNotNull(queryGraphWeighting0);
      
      String string0 = queryGraphWeighting0.getName();
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.getName());
      assertNull(queryGraphWeighting0.toString());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn((FlagEncoder) null).when(weighting0).getFlagEncoder();
      IntArrayList intArrayList0 = mock(IntArrayList.class, new ViolatedAssumptionAnswer());
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting(weighting0, 2704, 2704, (IntArrayList) null);
      assertNull(queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertNotNull(queryGraphWeighting0);
      
      FlagEncoder flagEncoder0 = queryGraphWeighting0.getFlagEncoder();
      assertNull(queryGraphWeighting0.getName());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertNull(flagEncoder0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(weighting0).getMinWeight(anyDouble());
      IntArrayList intArrayList0 = mock(IntArrayList.class, new ViolatedAssumptionAnswer());
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting(weighting0, 1, 1, (IntArrayList) null);
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.getName());
      assertNull(queryGraphWeighting0.toString());
      assertNotNull(queryGraphWeighting0);
      
      double double0 = queryGraphWeighting0.getMinWeight((-417.9479));
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.getName());
      assertNull(queryGraphWeighting0.toString());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      IntArrayList intArrayList0 = mock(IntArrayList.class, new ViolatedAssumptionAnswer());
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting((Weighting) null, 625, 625, (IntArrayList) null);
      assertNotNull(queryGraphWeighting0);
      
      int int0 = 0;
      long long0 = queryGraphWeighting0.calcTurnMillis(180, 625, 0);
      assertEquals(0L, long0);
      
      // Undeclared exception!
      try { 
        queryGraphWeighting0.getName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.weighting.QueryGraphWeighting", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      int int0 = 0;
      IntArrayList intArrayList0 = mock(IntArrayList.class, new ViolatedAssumptionAnswer());
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting((Weighting) null, 0, 0, (IntArrayList) null);
      assertNotNull(queryGraphWeighting0);
      
      // Undeclared exception!
      try { 
        queryGraphWeighting0.calcEdgeMillis((EdgeIteratorState) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.weighting.QueryGraphWeighting", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      IntArrayList intArrayList0 = mock(IntArrayList.class, new ViolatedAssumptionAnswer());
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting((Weighting) null, 0, 91, (IntArrayList) null);
      assertNotNull(queryGraphWeighting0);
      
      // Undeclared exception!
      try { 
        queryGraphWeighting0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.weighting.QueryGraphWeighting", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      IntArrayList intArrayList0 = mock(IntArrayList.class, new ViolatedAssumptionAnswer());
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting((Weighting) null, (-3129), (-3129), (IntArrayList) null);
      assertNotNull(queryGraphWeighting0);
      
      // Undeclared exception!
      try { 
        queryGraphWeighting0.getFlagEncoder();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.weighting.QueryGraphWeighting", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      IntArrayList intArrayList0 = mock(IntArrayList.class, new ViolatedAssumptionAnswer());
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting((Weighting) null, 996, 0, (IntArrayList) null);
      assertNotNull(queryGraphWeighting0);
      
      // Undeclared exception!
      try { 
        queryGraphWeighting0.getMinWeight(996);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.weighting.QueryGraphWeighting", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(weighting0).calcEdgeMillis(any(com.graphhopper.util.EdgeIteratorState.class) , anyBoolean());
      IntArrayList intArrayList0 = mock(IntArrayList.class, new ViolatedAssumptionAnswer());
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting(weighting0, 2, 2, (IntArrayList) null);
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.getName());
      assertNull(queryGraphWeighting0.toString());
      assertNotNull(queryGraphWeighting0);
      
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      long long0 = queryGraphWeighting0.calcEdgeMillis(edgeIteratorState0, true);
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.getName());
      assertNull(queryGraphWeighting0.toString());
      assertEquals(0L, long0);
      
      int int0 = 0;
      // Undeclared exception!
      try { 
        queryGraphWeighting0.calcTurnWeight(0, 0, 8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.weighting.QueryGraphWeighting", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn((FlagEncoder) null).when(weighting0).getFlagEncoder();
      IntArrayList intArrayList0 = mock(IntArrayList.class, new ViolatedAssumptionAnswer());
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting(weighting0, 0, 0, (IntArrayList) null);
      assertNull(queryGraphWeighting0.toString());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.getName());
      assertNotNull(queryGraphWeighting0);
      
      FlagEncoder flagEncoder0 = queryGraphWeighting0.getFlagEncoder();
      assertNull(queryGraphWeighting0.toString());
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.getName());
      assertNull(flagEncoder0);
      
      Weighting weighting1 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn((FlagEncoder) null).when(weighting1).getFlagEncoder();
      int int0 = (-668);
      IntArrayList intArrayList1 = mock(IntArrayList.class, new ViolatedAssumptionAnswer());
      QueryGraphWeighting queryGraphWeighting1 = new QueryGraphWeighting(weighting1, (-668), (-668), (IntArrayList) null);
      assertNull(queryGraphWeighting1.getName());
      assertFalse(queryGraphWeighting1.hasTurnCosts());
      assertNull(queryGraphWeighting1.toString());
      assertNotNull(queryGraphWeighting1);
      assertFalse(queryGraphWeighting1.equals((Object)queryGraphWeighting0));
      
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      int int1 = 0;
      long long0 = queryGraphWeighting1.calcTurnMillis(0, (-668), 1342);
      assertNull(queryGraphWeighting1.getName());
      assertFalse(queryGraphWeighting1.hasTurnCosts());
      assertNull(queryGraphWeighting1.toString());
      assertEquals(0L, long0);
      assertFalse(queryGraphWeighting1.equals((Object)queryGraphWeighting0));
      assertNotSame(queryGraphWeighting1, queryGraphWeighting0);
      
      double double0 = queryGraphWeighting1.calcTurnWeight(0, (-668), (-2493));
      assertNull(queryGraphWeighting1.getName());
      assertFalse(queryGraphWeighting1.hasTurnCosts());
      assertNull(queryGraphWeighting1.toString());
      assertEquals(0.0, double0, 0.01);
      assertFalse(queryGraphWeighting1.equals((Object)queryGraphWeighting0));
      assertNotSame(queryGraphWeighting1, queryGraphWeighting0);
      
      boolean boolean0 = false;
      EdgeIteratorState edgeIteratorState1 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        queryGraphWeighting1.calcEdgeWeightWithAccess(edgeIteratorState1, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.weighting.Weighting", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(0L, 0L).when(weighting0).calcEdgeMillis(any(com.graphhopper.util.EdgeIteratorState.class) , anyBoolean());
      doReturn(0.0).when(weighting0).calcEdgeWeight(any(com.graphhopper.util.EdgeIteratorState.class) , anyBoolean());
      doReturn(false).when(weighting0).hasTurnCosts();
      IntArrayList intArrayList0 = mock(IntArrayList.class, new ViolatedAssumptionAnswer());
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting(weighting0, 1, 0, (IntArrayList) null);
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertNull(queryGraphWeighting0.getName());
      assertNotNull(queryGraphWeighting0);
      
      EdgeIteratorState edgeIteratorState0 = null;
      long long0 = queryGraphWeighting0.calcEdgeMillis((EdgeIteratorState) null, true);
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertNull(queryGraphWeighting0.getName());
      assertEquals(0L, long0);
      
      EdgeIteratorState edgeIteratorState1 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = true;
      EdgeIteratorState edgeIteratorState2 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      long long1 = queryGraphWeighting0.calcEdgeMillis(edgeIteratorState2, false);
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertNull(queryGraphWeighting0.getName());
      assertEquals(0L, long1);
      assertTrue(long1 == long0);
      
      double double0 = queryGraphWeighting0.calcEdgeWeight(edgeIteratorState1, true);
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertNull(queryGraphWeighting0.getName());
      assertEquals(0.0, double0, 0.01);
      
      boolean boolean1 = queryGraphWeighting0.hasTurnCosts();
      assertFalse(queryGraphWeighting0.hasTurnCosts());
      assertNull(queryGraphWeighting0.toString());
      assertNull(queryGraphWeighting0.getName());
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      // Undeclared exception!
      try { 
        queryGraphWeighting0.calcTurnMillis(0, (-1264), 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.weighting.QueryGraphWeighting", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      IntArrayList intArrayList0 = mock(IntArrayList.class, new ViolatedAssumptionAnswer());
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting(weighting0, 1, 1, (IntArrayList) null);
      long long0 = queryGraphWeighting0.calcTurnMillis(2, 1, 2);
      assertEquals(9223372036854775807L, long0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn("WW\"K&nKu44>-'~").when(weighting0).getName();
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting(weighting0, (-3076), (-1), (IntArrayList) null);
      QueryGraphWeighting queryGraphWeighting1 = new QueryGraphWeighting(queryGraphWeighting0, 0, 0, (IntArrayList) null);
      queryGraphWeighting0.calcTurnWeight((-1685), 1352, 10);
      queryGraphWeighting1.calcTurnWeight(0, (-3076), (-3076));
      long long0 = queryGraphWeighting1.calcTurnMillis((-1), 0, 1187);
      assertEquals(0L, long0);
      
      queryGraphWeighting1.getName();
      double double0 = queryGraphWeighting1.calcTurnWeight((-1), 0, 0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn((BooleanEncodedValue) null).when(flagEncoder0).getAccessEnc();
      doReturn((String) null, (String) null).when(flagEncoder0).toString();
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn((-1195.0)).when(weighting0).calcTurnWeight(anyInt() , anyInt() , anyInt());
      doReturn(flagEncoder0).when(weighting0).getFlagEncoder();
      doReturn(1.7976931348623157E308).when(weighting0).getMinWeight(anyDouble());
      IntArrayList intArrayList0 = mock(IntArrayList.class, new ViolatedAssumptionAnswer());
      QueryGraphWeighting queryGraphWeighting0 = new QueryGraphWeighting(weighting0, 210, 1967, (IntArrayList) null);
      FlagEncoder flagEncoder1 = queryGraphWeighting0.getFlagEncoder();
      Weighting weighting1 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(weighting1).calcEdgeMillis(any(com.graphhopper.util.EdgeIteratorState.class) , anyBoolean());
      doReturn((-1195.0)).when(weighting1).calcEdgeWeight(any(com.graphhopper.util.EdgeIteratorState.class) , anyBoolean());
      doReturn(0.0).when(weighting1).calcTurnWeight(anyInt() , anyInt() , anyInt());
      doReturn(flagEncoder1).when(weighting1).getFlagEncoder();
      doReturn((String) null).when(weighting1).getName();
      QueryGraphWeighting queryGraphWeighting1 = new QueryGraphWeighting(weighting1, 4, 4, (IntArrayList) null);
      queryGraphWeighting1.calcTurnMillis(0, (-1), (-1));
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      queryGraphWeighting0.getMinWeight((-1));
      queryGraphWeighting1.calcEdgeWeight(edgeIteratorState0, false);
      QueryGraphWeighting queryGraphWeighting2 = new QueryGraphWeighting(queryGraphWeighting1, 4, 4, (IntArrayList) null);
      queryGraphWeighting0.calcTurnMillis(1797, 31, 0);
      EdgeIteratorState edgeIteratorState1 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(edgeIteratorState1).get(any(com.graphhopper.routing.ev.BooleanEncodedValue.class));
      queryGraphWeighting1.calcEdgeWeightWithAccess(edgeIteratorState1, false);
      queryGraphWeighting2.calcTurnWeight(4, 2, (-1));
      queryGraphWeighting2.toString();
      EdgeIteratorState edgeIteratorState2 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      queryGraphWeighting2.calcEdgeMillis(edgeIteratorState2, false);
      queryGraphWeighting2.calcTurnMillis(0, (-1), 0);
      queryGraphWeighting1.calcTurnWeight((-1774), 8, 1797);
  }
}
