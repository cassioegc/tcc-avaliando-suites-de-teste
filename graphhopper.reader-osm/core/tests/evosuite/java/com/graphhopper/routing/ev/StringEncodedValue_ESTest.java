/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 04 03:56:19 GMT 2021
 */

package com.graphhopper.routing.ev;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.graphhopper.routing.ev.EncodedValue;
import com.graphhopper.routing.ev.StringEncodedValue;
import com.graphhopper.storage.IntsRef;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StringEncodedValue_ESTest extends StringEncodedValue_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringEncodedValue stringEncodedValue0 = new StringEncodedValue("c", 487);
      stringEncodedValue0.bwdMask = 0;
      stringEncodedValue0.bwdMask = (-71);
      IntsRef intsRef0 = mock(IntsRef.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        stringEncodedValue0.setString(false, intsRef0, "c");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // EncodedValue c not initialized
         //
         verifyException("com.graphhopper.routing.ev.UnsignedIntEncodedValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringEncodedValue stringEncodedValue0 = new StringEncodedValue("c", 487);
      stringEncodedValue0.maxValue = 511;
      int int0 = stringEncodedValue0.getVersion();
      assertEquals((-734307078), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringEncodedValue stringEncodedValue0 = new StringEncodedValue("c", 487);
      EncodedValue.InitializerConfig encodedValue_InitializerConfig0 = mock(EncodedValue.InitializerConfig.class, new ViolatedAssumptionAnswer());
      stringEncodedValue0.init(encodedValue_InitializerConfig0);
      IntsRef intsRef0 = mock(IntsRef.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        stringEncodedValue0.setString(false, intsRef0, "c");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.ev.UnsignedIntEncodedValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringEncodedValue stringEncodedValue0 = new StringEncodedValue("fc1t", 3580);
      stringEncodedValue0.fwdMask = 32;
      // Undeclared exception!
      try { 
        stringEncodedValue0.setString(true, (IntsRef) null, "fc1t");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fc1t value too large for encoding: 1, maxValue:0
         //
         verifyException("com.graphhopper.routing.ev.UnsignedIntEncodedValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringEncodedValue stringEncodedValue0 = new StringEncodedValue("c", 16);
      IntsRef intsRef0 = mock(IntsRef.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        stringEncodedValue0.getString(true, intsRef0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.ev.UnsignedIntEncodedValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringEncodedValue stringEncodedValue0 = null;
      try {
        stringEncodedValue0 = new StringEncodedValue((String) null, 63, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.util.EncodingManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringEncodedValue stringEncodedValue0 = null;
      try {
        stringEncodedValue0 = new StringEncodedValue("", (-3086), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // EncodedValue name wasn't valid: . Use lower case letters, underscore and numbers only.
         //
         verifyException("com.graphhopper.routing.ev.UnsignedIntEncodedValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringEncodedValue stringEncodedValue0 = null;
      try {
        stringEncodedValue0 = new StringEncodedValue((String) null, (-2422), (List<String>) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.util.EncodingManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringEncodedValue stringEncodedValue0 = null;
      try {
        stringEncodedValue0 = new StringEncodedValue("", (-534), (List<String>) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // EncodedValue name wasn't valid: . Use lower case letters, underscore and numbers only.
         //
         verifyException("com.graphhopper.routing.ev.UnsignedIntEncodedValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringEncodedValue stringEncodedValue0 = null;
      try {
        stringEncodedValue0 = new StringEncodedValue((String) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.util.EncodingManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringEncodedValue stringEncodedValue0 = null;
      try {
        stringEncodedValue0 = new StringEncodedValue("&5 <47", 6);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // EncodedValue name wasn't valid: &5 <47. Use lower case letters, underscore and numbers only.
         //
         verifyException("com.graphhopper.routing.ev.UnsignedIntEncodedValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringEncodedValue stringEncodedValue0 = new StringEncodedValue("c", 487, false);
      assertEquals("c", stringEncodedValue0.getName());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringEncodedValue stringEncodedValue0 = new StringEncodedValue("c", 16);
      List<String> list0 = stringEncodedValue0.getValues();
      boolean boolean0 = stringEncodedValue0.equals(list0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringEncodedValue stringEncodedValue0 = new StringEncodedValue("fc1t", 3580);
      // Undeclared exception!
      try { 
        stringEncodedValue0.setString(true, (IntsRef) null, (String) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // EncodedValue fc1t not initialized
         //
         verifyException("com.graphhopper.routing.ev.UnsignedIntEncodedValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringEncodedValue stringEncodedValue0 = new StringEncodedValue("c", 16);
      int int0 = stringEncodedValue0.indexOf("c");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringEncodedValue stringEncodedValue0 = new StringEncodedValue("c", 16);
      List<String> list0 = stringEncodedValue0.getValues();
      StringEncodedValue stringEncodedValue1 = new StringEncodedValue("c", 16, list0, true);
      assertEquals("c", stringEncodedValue1.getName());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringEncodedValue stringEncodedValue0 = new StringEncodedValue("c", 487);
      int int0 = stringEncodedValue0.getVersion();
      assertEquals(1816065945, int0);
  }
}
