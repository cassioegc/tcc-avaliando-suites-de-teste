/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 04 06:01:34 GMT 2021
 */

package com.graphhopper.routing.ch;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.graphhopper.routing.ch.NodeBasedCHBidirPathExtractor;
import com.graphhopper.routing.weighting.Weighting;
import com.graphhopper.storage.Graph;
import com.graphhopper.storage.NodeAccess;
import com.graphhopper.storage.RoutingCHEdgeIteratorState;
import com.graphhopper.storage.RoutingCHGraph;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NodeBasedCHBidirPathExtractor_ESTest extends NodeBasedCHBidirPathExtractor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Graph graph0 = mock(Graph.class, new ViolatedAssumptionAnswer());
      doReturn((NodeAccess) null).when(graph0).getNodeAccess();
      RoutingCHGraph routingCHGraph0 = mock(RoutingCHGraph.class, new ViolatedAssumptionAnswer());
      doReturn(graph0).when(routingCHGraph0).getBaseGraph();
      doReturn((RoutingCHEdgeIteratorState) null).when(routingCHGraph0).getEdgeIteratorState(anyInt() , anyInt());
      doReturn((Weighting) null).when(routingCHGraph0).getWeighting();
      NodeBasedCHBidirPathExtractor nodeBasedCHBidirPathExtractor0 = new NodeBasedCHBidirPathExtractor(routingCHGraph0);
      // Undeclared exception!
      try { 
        nodeBasedCHBidirPathExtractor0.onEdge((-230), 1674, false, 1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Edge with id: -230 does not exist or does not touch node 1674
         //
         verifyException("com.graphhopper.routing.ch.ShortcutUnpacker", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NodeAccess nodeAccess0 = mock(NodeAccess.class, new ViolatedAssumptionAnswer());
      Graph graph0 = mock(Graph.class, new ViolatedAssumptionAnswer());
      doReturn(nodeAccess0).when(graph0).getNodeAccess();
      RoutingCHEdgeIteratorState routingCHEdgeIteratorState0 = mock(RoutingCHEdgeIteratorState.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(routingCHEdgeIteratorState0).getAdjNode();
      doReturn(0).when(routingCHEdgeIteratorState0).getOrigEdge();
      doReturn(false).when(routingCHEdgeIteratorState0).isShortcut();
      RoutingCHGraph routingCHGraph0 = mock(RoutingCHGraph.class, new ViolatedAssumptionAnswer());
      doReturn(graph0, (Graph) null).when(routingCHGraph0).getBaseGraph();
      doReturn(routingCHEdgeIteratorState0).when(routingCHGraph0).getEdgeIteratorState(anyInt() , anyInt());
      doReturn((Weighting) null).when(routingCHGraph0).getWeighting();
      NodeBasedCHBidirPathExtractor nodeBasedCHBidirPathExtractor0 = new NodeBasedCHBidirPathExtractor(routingCHGraph0);
      // Undeclared exception!
      try { 
        nodeBasedCHBidirPathExtractor0.onEdge(3286, (-1862), true, 3286);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.ch.ShortcutUnpacker", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RoutingCHGraph routingCHGraph0 = mock(RoutingCHGraph.class, new ViolatedAssumptionAnswer());
      doReturn((Graph) null).when(routingCHGraph0).getBaseGraph();
      doReturn((Weighting) null).when(routingCHGraph0).getWeighting();
      NodeBasedCHBidirPathExtractor nodeBasedCHBidirPathExtractor0 = null;
      try {
        nodeBasedCHBidirPathExtractor0 = new NodeBasedCHBidirPathExtractor(routingCHGraph0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.Path", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Graph graph0 = mock(Graph.class, new ViolatedAssumptionAnswer());
      doReturn((NodeAccess) null).when(graph0).getNodeAccess();
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      RoutingCHGraph routingCHGraph0 = mock(RoutingCHGraph.class, new ViolatedAssumptionAnswer());
      doReturn(graph0).when(routingCHGraph0).getBaseGraph();
      doReturn((RoutingCHEdgeIteratorState) null).when(routingCHGraph0).getEdgeIteratorState(anyInt() , anyInt());
      doReturn(weighting0).when(routingCHGraph0).getWeighting();
      NodeBasedCHBidirPathExtractor nodeBasedCHBidirPathExtractor0 = new NodeBasedCHBidirPathExtractor(routingCHGraph0);
      // Undeclared exception!
      try { 
        nodeBasedCHBidirPathExtractor0.onEdge(0, (-2440), true, (-2440));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Edge with id: 0 does not exist or does not touch node -2440
         //
         verifyException("com.graphhopper.routing.ch.ShortcutUnpacker", e);
      }
  }
}
