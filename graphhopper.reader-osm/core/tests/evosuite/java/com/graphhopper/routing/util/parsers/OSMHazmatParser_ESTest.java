/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 04 05:57:54 GMT 2021
 */

package com.graphhopper.routing.util.parsers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.graphhopper.reader.ReaderWay;
import com.graphhopper.routing.ev.EncodedValue;
import com.graphhopper.routing.ev.EncodedValueLookup;
import com.graphhopper.routing.util.parsers.OSMHazmatParser;
import com.graphhopper.storage.IntsRef;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OSMHazmatParser_ESTest extends OSMHazmatParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      OSMHazmatParser oSMHazmatParser0 = new OSMHazmatParser();
      IntsRef intsRef0 = mock(IntsRef.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(intsRef0).toString();
      ReaderWay readerWay0 = mock(ReaderWay.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(readerWay0).hasTag(anyString() , (String) any());
      IntsRef intsRef1 = mock(IntsRef.class, new ViolatedAssumptionAnswer());
      IntsRef intsRef2 = oSMHazmatParser0.handleWayTags(intsRef0, readerWay0, false, intsRef1);
      assertNotSame(intsRef2, intsRef1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OSMHazmatParser oSMHazmatParser0 = new OSMHazmatParser();
      IntsRef intsRef0 = mock(IntsRef.class, new ViolatedAssumptionAnswer());
      ReaderWay readerWay0 = mock(ReaderWay.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(readerWay0).hasTag(anyString() , (String) any());
      IntsRef intsRef1 = mock(IntsRef.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        oSMHazmatParser0.handleWayTags(intsRef0, readerWay0, true, intsRef1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // EncodedValue hazmat not initialized
         //
         verifyException("com.graphhopper.routing.ev.UnsignedIntEncodedValue", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      OSMHazmatParser oSMHazmatParser0 = new OSMHazmatParser();
      ReaderWay readerWay0 = mock(ReaderWay.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(readerWay0).hasTag(anyString() , (String) any());
      IntsRef intsRef0 = oSMHazmatParser0.handleWayTags((IntsRef) null, readerWay0, true, (IntsRef) null);
      assertNull(intsRef0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      OSMHazmatParser oSMHazmatParser0 = new OSMHazmatParser();
      IntsRef intsRef0 = mock(IntsRef.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(intsRef0).toString();
      ReaderWay readerWay0 = mock(ReaderWay.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(readerWay0).hasTag(anyString() , (String) any());
      IntsRef intsRef1 = oSMHazmatParser0.handleWayTags(intsRef0, readerWay0, false, intsRef0);
      // Undeclared exception!
      try { 
        oSMHazmatParser0.handleWayTags(intsRef1, (ReaderWay) null, false, intsRef1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.util.parsers.OSMHazmatParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      OSMHazmatParser oSMHazmatParser0 = new OSMHazmatParser();
      EncodedValueLookup encodedValueLookup0 = mock(EncodedValueLookup.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        oSMHazmatParser0.createEncodedValues(encodedValueLookup0, (List<EncodedValue>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.util.parsers.OSMHazmatParser", e);
      }
  }
}
