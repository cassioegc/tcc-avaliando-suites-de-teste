/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 04 06:13:11 GMT 2021
 */

package com.graphhopper.routing.querygraph;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.carrotsearch.hppc.IntArrayList;
import com.graphhopper.routing.querygraph.QueryOverlay;
import com.graphhopper.routing.querygraph.VirtualEdgeIteratorState;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class QueryOverlay_ESTest extends QueryOverlay_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      QueryOverlay queryOverlay0 = new QueryOverlay(2147483615, true);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = 83;
      int int1 = 1751;
      QueryOverlay.EdgeChanges queryOverlay_EdgeChanges0 = new QueryOverlay.EdgeChanges(83, 1751);
      queryOverlay_EdgeChanges0.getAdditionalEdges();
      QueryOverlay queryOverlay0 = new QueryOverlay(0, true);
      VirtualEdgeIteratorState virtualEdgeIteratorState0 = null;
      queryOverlay0.addVirtualEdge((VirtualEdgeIteratorState) null);
      queryOverlay0.getVirtualEdges();
      queryOverlay0.getVirtualEdges();
      // Undeclared exception!
      try { 
        queryOverlay0.getVirtualEdge(4);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 4, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      QueryOverlay.EdgeChanges queryOverlay_EdgeChanges0 = new QueryOverlay.EdgeChanges(0, 0);
      queryOverlay_EdgeChanges0.getAdditionalEdges();
      QueryOverlay queryOverlay0 = new QueryOverlay(0, false);
      queryOverlay0.addVirtualEdge((VirtualEdgeIteratorState) null);
      queryOverlay0.getClosestEdges();
      queryOverlay0.getVirtualEdge(0);
      queryOverlay0.getVirtualNodes();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      QueryOverlay queryOverlay0 = new QueryOverlay(0, false);
      queryOverlay0.getVirtualNodes();
      VirtualEdgeIteratorState virtualEdgeIteratorState0 = null;
      queryOverlay0.addVirtualEdge((VirtualEdgeIteratorState) null);
      queryOverlay0.addVirtualEdge((VirtualEdgeIteratorState) null);
      queryOverlay0.getNumVirtualEdges();
      queryOverlay0.getVirtualNodes();
      int int0 = 15;
      // Undeclared exception!
      try { 
        queryOverlay0.getVirtualEdge(15);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 15, Size: 2
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      QueryOverlay queryOverlay0 = new QueryOverlay(0, true);
      queryOverlay0.getVirtualNodes();
      int int0 = 254;
      // Undeclared exception!
      try { 
        queryOverlay0.getVirtualEdge((-221));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      QueryOverlay queryOverlay0 = new QueryOverlay(0, true);
      queryOverlay0.getVirtualNodes();
      queryOverlay0.getNumVirtualEdges();
      QueryOverlay.EdgeChanges queryOverlay_EdgeChanges0 = null;
      try {
        queryOverlay_EdgeChanges0 = new QueryOverlay.EdgeChanges((-1829), 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -1829
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      QueryOverlay queryOverlay0 = new QueryOverlay(0, false);
      queryOverlay0.getNumVirtualEdges();
      queryOverlay0.getVirtualNodes();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      QueryOverlay.EdgeChanges queryOverlay_EdgeChanges0 = new QueryOverlay.EdgeChanges(4, 4);
      queryOverlay_EdgeChanges0.getRemovedEdges();
      QueryOverlay queryOverlay0 = null;
      try {
        queryOverlay0 = new QueryOverlay((-350), false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.util.PointList", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      QueryOverlay queryOverlay0 = new QueryOverlay(0, false);
      queryOverlay0.addVirtualEdge((VirtualEdgeIteratorState) null);
      // Undeclared exception!
      try { 
        queryOverlay0.getVirtualEdge((-2426));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      QueryOverlay queryOverlay0 = new QueryOverlay(692, false);
      // Undeclared exception!
      try { 
        queryOverlay0.getVirtualEdge(93);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 93, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      QueryOverlay queryOverlay0 = new QueryOverlay(32, false);
      // Undeclared exception!
      try { 
        queryOverlay0.getVirtualEdge(32);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 32, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = 977;
      QueryOverlay queryOverlay0 = new QueryOverlay(977, true);
      queryOverlay0.addVirtualEdge((VirtualEdgeIteratorState) null);
      // Undeclared exception!
      try { 
        queryOverlay0.getVirtualEdge(977);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 977, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      QueryOverlay.EdgeChanges queryOverlay_EdgeChanges0 = new QueryOverlay.EdgeChanges(321, 1);
      queryOverlay_EdgeChanges0.getAdditionalEdges();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      QueryOverlay queryOverlay0 = new QueryOverlay(0, true);
      queryOverlay0.getVirtualEdges();
      QueryOverlay.EdgeChanges queryOverlay_EdgeChanges0 = new QueryOverlay.EdgeChanges(0, (-2217));
      queryOverlay_EdgeChanges0.getRemovedEdges();
      queryOverlay_EdgeChanges0.getAdditionalEdges();
      queryOverlay0.getEdgeChangesAtRealNodes();
      queryOverlay0.getClosestEdges();
  }
}
