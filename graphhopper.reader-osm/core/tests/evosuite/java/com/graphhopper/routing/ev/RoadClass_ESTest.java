/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 04 05:04:45 GMT 2021
 */

package com.graphhopper.routing.ev;

import org.junit.Test;
import static org.junit.Assert.*;
import com.graphhopper.routing.ev.RoadClass;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RoadClass_ESTest extends RoadClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RoadClass roadClass0 = RoadClass.find("other");
      assertEquals(RoadClass.OTHER, roadClass0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RoadClass[] roadClassArray0 = RoadClass.values();
      assertEquals(20, roadClassArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RoadClass roadClass0 = RoadClass.valueOf("LIVING_STREET");
      assertEquals("living_street", roadClass0.toString());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RoadClass roadClass0 = RoadClass.find("U+>Z^");
      assertEquals(RoadClass.OTHER, roadClass0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      RoadClass roadClass0 = RoadClass.find("");
      assertEquals(RoadClass.OTHER, roadClass0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      RoadClass roadClass0 = RoadClass.find("LIVING_STREET");
      assertEquals(RoadClass.LIVING_STREET, roadClass0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      RoadClass roadClass0 = RoadClass.find((String) null);
      assertEquals(RoadClass.OTHER, roadClass0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      RoadClass roadClass0 = RoadClass.TRACK;
      String string0 = roadClass0.toString();
      assertEquals("track", string0);
  }
}
