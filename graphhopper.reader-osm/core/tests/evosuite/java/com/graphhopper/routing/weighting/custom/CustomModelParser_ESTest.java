/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 04 01:48:11 GMT 2021
 */

package com.graphhopper.routing.weighting.custom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.graphhopper.json.Statement;
import com.graphhopper.routing.ev.DecimalEncodedValue;
import com.graphhopper.routing.ev.EncodedValueLookup;
import com.graphhopper.routing.util.CarFlagEncoder;
import com.graphhopper.routing.util.FlagEncoder;
import com.graphhopper.routing.util.RacingBikeFlagEncoder;
import com.graphhopper.routing.util.WheelchairFlagEncoder;
import com.graphhopper.routing.weighting.TurnCostProvider;
import com.graphhopper.routing.weighting.custom.CustomModelParser;
import com.graphhopper.util.CustomModel;
import com.graphhopper.util.PMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CustomModelParser_ESTest extends CustomModelParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CustomModel customModel0 = new CustomModel();
      Statement.Op statement_Op0 = Statement.Op.LIMIT;
      Statement statement0 = Statement.Else(statement_Op0, 0.005);
      customModel0.addToSpeed(statement0);
      double double0 = CustomModelParser.findMaxSpeed(customModel0, 1011.69686660436);
      assertEquals(0.005, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CustomModel customModel0 = new CustomModel();
      double double0 = CustomModelParser.findMaxSpeed(customModel0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CustomModel customModel0 = new CustomModel();
      double double0 = CustomModelParser.findMaxSpeed(customModel0, (-233.58582));
      assertEquals((-233.58582), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        CustomModelParser.isValidVariableName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        CustomModelParser.findMaxSpeed((CustomModel) null, 614.3798502605);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.weighting.custom.CustomModelParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        CustomModelParser.createWeightingParameters((CustomModel) null, (EncodedValueLookup) null, 2096.94299, (DecimalEncodedValue) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.weighting.custom.CustomModelParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RacingBikeFlagEncoder racingBikeFlagEncoder0 = new RacingBikeFlagEncoder();
      TurnCostProvider turnCostProvider0 = TurnCostProvider.NO_TURN_COST_PROVIDER;
      CustomModel customModel0 = new CustomModel();
      // Undeclared exception!
      try { 
        CustomModelParser.createWeighting(racingBikeFlagEncoder0, racingBikeFlagEncoder0, turnCostProvider0, customModel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // FlagEncoder com.graphhopper.routing.util.RacingBikeFlagEncoder@0000000001 not yet initialized
         //
         verifyException("com.graphhopper.routing.util.AbstractFlagEncoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CustomModel customModel0 = new CustomModel();
      Statement.Op statement_Op0 = Statement.Op.LIMIT;
      Statement statement0 = Statement.Else(statement_Op0, (-556.53));
      customModel0.addToSpeed(statement0);
      // Undeclared exception!
      try { 
        CustomModelParser.findMaxSpeed(customModel0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // speed is always limited to 0. This must not be but results from {\"else\": \"null\", \"limit_to\": -556.53}
         //
         verifyException("com.graphhopper.routing.weighting.custom.CustomModelParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CustomModel customModel0 = new CustomModel();
      Statement.Op statement_Op0 = Statement.Op.LIMIT;
      Statement statement0 = Statement.ElseIf("custom_model", statement_Op0, 1939.0);
      customModel0.addToSpeed(statement0);
      double double0 = CustomModelParser.findMaxSpeed(customModel0, 1939.0);
      assertEquals(1939.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CustomModel customModel0 = new CustomModel();
      Statement.Op statement_Op0 = Statement.Op.LIMIT;
      Statement statement0 = Statement.ElseIf("custom_model", statement_Op0, 1939.0);
      customModel0.addToSpeed(statement0);
      // Undeclared exception!
      try { 
        CustomModelParser.findMaxSpeed(customModel0, (-2031.9629102));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Can never apply 'limit_to': 1939.0 because maximum vehicle speed is -2031.9629102
         //
         verifyException("com.graphhopper.routing.weighting.custom.CustomModelParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CustomModel customModel0 = new CustomModel();
      Statement.Op statement_Op0 = Statement.Op.MULTIPLY;
      Statement statement0 = Statement.ElseIf("custom_model", statement_Op0, 1530.084924017178);
      customModel0.addToSpeed(statement0);
      double double0 = CustomModelParser.findMaxSpeed(customModel0, 3515.8468268608344);
      assertEquals(3515.8468268608344, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CustomModel customModel0 = new CustomModel();
      Statement.Op statement_Op0 = Statement.Op.LIMIT;
      Statement statement0 = Statement.If("f}hI", statement_Op0, 1.2);
      customModel0.addToSpeed(statement0);
      double double0 = CustomModelParser.findMaxSpeed(customModel0, 1.2);
      assertEquals(1.2, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      boolean boolean0 = CustomModelParser.isValidVariableName("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      boolean boolean0 = CustomModelParser.isValidVariableName("in_Int");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CustomModel customModel0 = new CustomModel();
      Statement.Op statement_Op0 = Statement.Op.MULTIPLY;
      Statement statement0 = Statement.ElseIf("custom_model", statement_Op0, 1530.084924017178);
      customModel0.addToSpeed(statement0);
      PMap pMap0 = new PMap();
      CarFlagEncoder carFlagEncoder0 = new CarFlagEncoder(pMap0);
      // Undeclared exception!
      try { 
        CustomModelParser.createWeightingParameters(customModel0, carFlagEncoder0, 2541.650685, (DecimalEncodedValue) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot compile expression: in 'speed' entry,  invalid expression \"custom_model\"
         //
         verifyException("com.graphhopper.routing.weighting.custom.CustomModelParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CustomModel customModel0 = new CustomModel();
      customModel0.internal();
      WheelchairFlagEncoder wheelchairFlagEncoder0 = new WheelchairFlagEncoder();
      // Undeclared exception!
      try { 
        CustomModelParser.createWeightingParameters(customModel0, wheelchairFlagEncoder0, 1081.71839345348, (DecimalEncodedValue) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot compile expression, in source: File 'source', Line 1, Column 50: A class \"java.lang.String@0000000835.graphhopper.routing.weighting.custom.CustomWeightingHelper\" could not be found
         //
         verifyException("com.graphhopper.routing.weighting.custom.CustomModelParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      WheelchairFlagEncoder wheelchairFlagEncoder0 = new WheelchairFlagEncoder();
      TurnCostProvider turnCostProvider0 = TurnCostProvider.NO_TURN_COST_PROVIDER;
      // Undeclared exception!
      try { 
        CustomModelParser.createWeighting(wheelchairFlagEncoder0, wheelchairFlagEncoder0, turnCostProvider0, (CustomModel) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // CustomModel cannot be null
         //
         verifyException("com.graphhopper.routing.weighting.custom.CustomModelParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TurnCostProvider turnCostProvider0 = TurnCostProvider.NO_TURN_COST_PROVIDER;
      CustomModel customModel0 = new CustomModel();
      // Undeclared exception!
      try { 
        CustomModelParser.createWeighting((FlagEncoder) null, (EncodedValueLookup) null, turnCostProvider0, customModel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.weighting.custom.CustomModelParser", e);
      }
  }
}
