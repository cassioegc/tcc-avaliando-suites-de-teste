/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 04 06:44:50 GMT 2021
 */

package com.graphhopper.routing.weighting;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.graphhopper.routing.ev.BooleanEncodedValue;
import com.graphhopper.routing.ev.DecimalEncodedValue;
import com.graphhopper.routing.util.FlagEncoder;
import com.graphhopper.routing.weighting.ShortestWeighting;
import com.graphhopper.routing.weighting.TurnCostProvider;
import com.graphhopper.util.EdgeIteratorState;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ShortestWeighting_ESTest extends ShortestWeighting_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BooleanEncodedValue booleanEncodedValue0 = mock(BooleanEncodedValue.class, new ViolatedAssumptionAnswer());
      DecimalEncodedValue decimalEncodedValue0 = mock(DecimalEncodedValue.class, new ViolatedAssumptionAnswer());
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn(booleanEncodedValue0).when(flagEncoder0).getAccessEnc();
      doReturn(decimalEncodedValue0).when(flagEncoder0).getAverageSpeedEnc();
      doReturn(true).when(flagEncoder0).isRegistered();
      ShortestWeighting shortestWeighting0 = new ShortestWeighting(flagEncoder0);
      double double0 = shortestWeighting0.getMinWeight((-5520.55));
      assertEquals((-5520.55), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BooleanEncodedValue booleanEncodedValue0 = mock(BooleanEncodedValue.class, new ViolatedAssumptionAnswer());
      DecimalEncodedValue decimalEncodedValue0 = mock(DecimalEncodedValue.class, new ViolatedAssumptionAnswer());
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn(booleanEncodedValue0).when(flagEncoder0).getAccessEnc();
      doReturn(decimalEncodedValue0).when(flagEncoder0).getAverageSpeedEnc();
      doReturn(true).when(flagEncoder0).isRegistered();
      ShortestWeighting shortestWeighting0 = new ShortestWeighting(flagEncoder0);
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(edgeIteratorState0).getDistance();
      double double0 = shortestWeighting0.calcEdgeWeight(edgeIteratorState0, true);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BooleanEncodedValue booleanEncodedValue0 = mock(BooleanEncodedValue.class, new ViolatedAssumptionAnswer());
      DecimalEncodedValue decimalEncodedValue0 = mock(DecimalEncodedValue.class, new ViolatedAssumptionAnswer());
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn(booleanEncodedValue0).when(flagEncoder0).getAccessEnc();
      doReturn(decimalEncodedValue0).when(flagEncoder0).getAverageSpeedEnc();
      doReturn(true).when(flagEncoder0).isRegistered();
      ShortestWeighting shortestWeighting0 = new ShortestWeighting(flagEncoder0);
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      doReturn((double)(-313)).when(edgeIteratorState0).getDistance();
      double double0 = shortestWeighting0.calcEdgeWeight(edgeIteratorState0, false);
      assertEquals((-313.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn((BooleanEncodedValue) null).when(flagEncoder0).getAccessEnc();
      doReturn((DecimalEncodedValue) null).when(flagEncoder0).getAverageSpeedEnc();
      doReturn(true).when(flagEncoder0).isRegistered();
      ShortestWeighting shortestWeighting0 = new ShortestWeighting(flagEncoder0);
      // Undeclared exception!
      try { 
        shortestWeighting0.calcEdgeWeight((EdgeIteratorState) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.weighting.ShortestWeighting", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TurnCostProvider turnCostProvider0 = mock(TurnCostProvider.class, new ViolatedAssumptionAnswer());
      ShortestWeighting shortestWeighting0 = null;
      try {
        shortestWeighting0 = new ShortestWeighting((FlagEncoder) null, turnCostProvider0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.weighting.AbstractWeighting", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(flagEncoder0).isRegistered();
      doReturn((String) null).when(flagEncoder0).toString();
      TurnCostProvider turnCostProvider0 = mock(TurnCostProvider.class, new ViolatedAssumptionAnswer());
      ShortestWeighting shortestWeighting0 = null;
      try {
        shortestWeighting0 = new ShortestWeighting(flagEncoder0, turnCostProvider0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Make sure you add the FlagEncoder null to an EncodingManager before using it elsewhere
         //
         verifyException("com.graphhopper.routing.weighting.AbstractWeighting", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ShortestWeighting shortestWeighting0 = null;
      try {
        shortestWeighting0 = new ShortestWeighting((FlagEncoder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.routing.weighting.AbstractWeighting", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(flagEncoder0).isRegistered();
      doReturn((String) null).when(flagEncoder0).toString();
      ShortestWeighting shortestWeighting0 = null;
      try {
        shortestWeighting0 = new ShortestWeighting(flagEncoder0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Make sure you add the FlagEncoder null to an EncodingManager before using it elsewhere
         //
         verifyException("com.graphhopper.routing.weighting.AbstractWeighting", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BooleanEncodedValue booleanEncodedValue0 = mock(BooleanEncodedValue.class, new ViolatedAssumptionAnswer());
      DecimalEncodedValue decimalEncodedValue0 = mock(DecimalEncodedValue.class, new ViolatedAssumptionAnswer());
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn(booleanEncodedValue0).when(flagEncoder0).getAccessEnc();
      doReturn(decimalEncodedValue0).when(flagEncoder0).getAverageSpeedEnc();
      doReturn(true).when(flagEncoder0).isRegistered();
      ShortestWeighting shortestWeighting0 = new ShortestWeighting(flagEncoder0);
      String string0 = shortestWeighting0.getName();
      assertEquals("shortest", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn((BooleanEncodedValue) null).when(flagEncoder0).getAccessEnc();
      doReturn((DecimalEncodedValue) null).when(flagEncoder0).getAverageSpeedEnc();
      doReturn(true).when(flagEncoder0).isRegistered();
      TurnCostProvider turnCostProvider0 = mock(TurnCostProvider.class, new ViolatedAssumptionAnswer());
      ShortestWeighting shortestWeighting0 = new ShortestWeighting(flagEncoder0, turnCostProvider0);
      double double0 = shortestWeighting0.getMinWeight(50.0);
      assertEquals(50.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BooleanEncodedValue booleanEncodedValue0 = mock(BooleanEncodedValue.class, new ViolatedAssumptionAnswer());
      DecimalEncodedValue decimalEncodedValue0 = mock(DecimalEncodedValue.class, new ViolatedAssumptionAnswer());
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn(booleanEncodedValue0).when(flagEncoder0).getAccessEnc();
      doReturn(decimalEncodedValue0).when(flagEncoder0).getAverageSpeedEnc();
      doReturn(true).when(flagEncoder0).isRegistered();
      ShortestWeighting shortestWeighting0 = new ShortestWeighting(flagEncoder0);
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      doReturn(1.0).when(edgeIteratorState0).getDistance();
      double double0 = shortestWeighting0.calcEdgeWeight(edgeIteratorState0, false);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BooleanEncodedValue booleanEncodedValue0 = mock(BooleanEncodedValue.class, new ViolatedAssumptionAnswer());
      DecimalEncodedValue decimalEncodedValue0 = mock(DecimalEncodedValue.class, new ViolatedAssumptionAnswer());
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn(booleanEncodedValue0).when(flagEncoder0).getAccessEnc();
      doReturn(decimalEncodedValue0).when(flagEncoder0).getAverageSpeedEnc();
      doReturn(true).when(flagEncoder0).isRegistered();
      ShortestWeighting shortestWeighting0 = new ShortestWeighting(flagEncoder0);
      double double0 = shortestWeighting0.getMinWeight(0);
      assertEquals(0.0, double0, 0.01);
  }
}
