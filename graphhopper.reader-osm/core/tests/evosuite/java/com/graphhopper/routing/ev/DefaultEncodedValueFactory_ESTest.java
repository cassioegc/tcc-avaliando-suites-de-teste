/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 04 02:50:52 GMT 2021
 */

package com.graphhopper.routing.ev;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.graphhopper.routing.ev.DefaultEncodedValueFactory;
import com.graphhopper.routing.ev.EncodedValue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DefaultEncodedValueFactory_ESTest extends DefaultEncodedValueFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultEncodedValueFactory defaultEncodedValueFactory0 = new DefaultEncodedValueFactory();
      // Undeclared exception!
      try { 
        defaultEncodedValueFactory0.create("gWc!a2\"T8W`N|IW");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // DefaultEncodedValueFactory cannot find EncodedValue gWc!a2\"T8W`N
         //
         verifyException("com.graphhopper.routing.ev.DefaultEncodedValueFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultEncodedValueFactory defaultEncodedValueFactory0 = new DefaultEncodedValueFactory();
      // Undeclared exception!
      try { 
        defaultEncodedValueFactory0.create("|");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.graphhopper.routing.ev.DefaultEncodedValueFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultEncodedValueFactory defaultEncodedValueFactory0 = new DefaultEncodedValueFactory();
      EncodedValue encodedValue0 = defaultEncodedValueFactory0.create("hazmat_water");
      assertEquals("hazmat_water", encodedValue0.getName());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultEncodedValueFactory defaultEncodedValueFactory0 = new DefaultEncodedValueFactory();
      EncodedValue encodedValue0 = defaultEncodedValueFactory0.create("hazmat_tunnel");
      assertEquals("hazmat_tunnel", encodedValue0.getName());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultEncodedValueFactory defaultEncodedValueFactory0 = new DefaultEncodedValueFactory();
      EncodedValue encodedValue0 = defaultEncodedValueFactory0.create("hazmat");
      assertEquals("hazmat", encodedValue0.getName());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultEncodedValueFactory defaultEncodedValueFactory0 = new DefaultEncodedValueFactory();
      EncodedValue encodedValue0 = defaultEncodedValueFactory0.create("foot_network");
      assertEquals("foot_network", encodedValue0.getName());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultEncodedValueFactory defaultEncodedValueFactory0 = new DefaultEncodedValueFactory();
      EncodedValue encodedValue0 = defaultEncodedValueFactory0.create("bike_network");
      assertEquals("bike_network", encodedValue0.getName());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultEncodedValueFactory defaultEncodedValueFactory0 = new DefaultEncodedValueFactory();
      EncodedValue encodedValue0 = defaultEncodedValueFactory0.create("track_type");
      assertEquals("track_type", encodedValue0.getName());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultEncodedValueFactory defaultEncodedValueFactory0 = new DefaultEncodedValueFactory();
      EncodedValue encodedValue0 = defaultEncodedValueFactory0.create("toll");
      assertEquals("toll", encodedValue0.getName());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultEncodedValueFactory defaultEncodedValueFactory0 = new DefaultEncodedValueFactory();
      EncodedValue encodedValue0 = defaultEncodedValueFactory0.create("surface");
      assertEquals("surface", encodedValue0.getName());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultEncodedValueFactory defaultEncodedValueFactory0 = new DefaultEncodedValueFactory();
      EncodedValue encodedValue0 = defaultEncodedValueFactory0.create("max_width");
      assertFalse(encodedValue0.isStoreTwoDirections());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultEncodedValueFactory defaultEncodedValueFactory0 = new DefaultEncodedValueFactory();
      EncodedValue encodedValue0 = defaultEncodedValueFactory0.create("road_access");
      assertEquals("road_access", encodedValue0.getName());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultEncodedValueFactory defaultEncodedValueFactory0 = new DefaultEncodedValueFactory();
      EncodedValue encodedValue0 = defaultEncodedValueFactory0.create("road_environment");
      assertEquals("road_environment", encodedValue0.getName());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultEncodedValueFactory defaultEncodedValueFactory0 = new DefaultEncodedValueFactory();
      EncodedValue encodedValue0 = defaultEncodedValueFactory0.create("road_class_link");
      assertEquals("road_class_link", encodedValue0.getName());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultEncodedValueFactory defaultEncodedValueFactory0 = new DefaultEncodedValueFactory();
      EncodedValue encodedValue0 = defaultEncodedValueFactory0.create("road_class");
      assertEquals("road_class", encodedValue0.getName());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultEncodedValueFactory defaultEncodedValueFactory0 = new DefaultEncodedValueFactory();
      EncodedValue encodedValue0 = defaultEncodedValueFactory0.create("get_off_bike");
      assertEquals("get_off_bike", encodedValue0.getName());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultEncodedValueFactory defaultEncodedValueFactory0 = new DefaultEncodedValueFactory();
      EncodedValue encodedValue0 = defaultEncodedValueFactory0.create("roundabout");
      assertEquals(282434964, encodedValue0.getVersion());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DefaultEncodedValueFactory defaultEncodedValueFactory0 = new DefaultEncodedValueFactory();
      // Undeclared exception!
      try { 
        defaultEncodedValueFactory0.create("|%x}h&#2^");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // To load EncodedValue a name is required. |%x}h&#2^
         //
         verifyException("com.graphhopper.routing.ev.DefaultEncodedValueFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultEncodedValueFactory defaultEncodedValueFactory0 = new DefaultEncodedValueFactory();
      // Undeclared exception!
      try { 
        defaultEncodedValueFactory0.create((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No string provided to load EncodedValue
         //
         verifyException("com.graphhopper.routing.ev.DefaultEncodedValueFactory", e);
      }
  }
}
