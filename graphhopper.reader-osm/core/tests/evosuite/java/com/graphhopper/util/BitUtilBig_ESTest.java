/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 04 04:14:58 GMT 2021
 */

package com.graphhopper.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.graphhopper.storage.IntsRef;
import com.graphhopper.util.BitUtil;
import com.graphhopper.util.BitUtilBig;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BitUtilBig_ESTest extends BitUtilBig_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BitUtilBig bitUtilBig0 = new BitUtilBig();
      bitUtilBig0.fromDouble(0.0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)88;
      bitUtilBig0.fromFloat(0.0F);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-57);
      byteArray0[5] = (byte)87;
      byteArray0[6] = (byte)2;
      byteArray0[7] = (byte)102;
      byteArray0[8] = (byte)0;
      bitUtilBig0.toBitString(byteArray0);
      bitUtilBig0.fromShort((short)4);
      bitUtilBig0.toLong(16, 101);
      bitUtilBig0.toBitString(byteArray0);
      bitUtilBig0.fromBitString("010110000000000000000000000000001100011101010111000000100110011000000000");
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BitUtilBig bitUtilBig0 = (BitUtilBig)BitUtil.BIG;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)60;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-25);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)62;
      bitUtilBig0.toInt(byteArray0, 0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BitUtilBig bitUtilBig0 = (BitUtilBig)BitUtil.BIG;
      // Undeclared exception!
      try { 
        bitUtilBig0.toLong((byte[]) null, (-391));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.util.BitUtilBig", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BitUtilBig bitUtilBig0 = new BitUtilBig();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-48);
      byteArray0[1] = (byte) (-50);
      byteArray0[2] = (byte) (-30);
      byteArray0[3] = (byte) (-111);
      byteArray0[4] = (byte)127;
      bitUtilBig0.toShort(byteArray0, 0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BitUtilBig bitUtilBig0 = new BitUtilBig();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-77);
      byteArray0[1] = (byte)79;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-7);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)91;
      byteArray0[6] = (byte)24;
      byteArray0[7] = (byte) (-38);
      bitUtilBig0.fromLong(byteArray0, (long) (byte)0, 0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BitUtilBig bitUtilBig0 = (BitUtilBig)BitUtil.BIG;
      byte[] byteArray0 = null;
      int int0 = (-64);
      // Undeclared exception!
      try { 
        bitUtilBig0.toShort((byte[]) null, (-64));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.util.BitUtilBig", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BitUtilBig bitUtilBig0 = (BitUtilBig)BitUtil.BIG;
      bitUtilBig0.fromDouble((double) 255);
      bitUtilBig0.fromDouble((-983.19424));
      bitUtilBig0.toLong(255, (-106));
      BitUtilBig bitUtilBig1 = (BitUtilBig)BitUtil.BIG;
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BitUtilBig bitUtilBig0 = (BitUtilBig)BitUtil.BIG;
      bitUtilBig0.toLong(8, 8);
      BitUtilBig bitUtilBig1 = new BitUtilBig();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-19);
      // Undeclared exception!
      try { 
        bitUtilBig1.fromShort(byteArray0, (short) (byte) (-19), 8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("com.graphhopper.util.BitUtilBig", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BitUtilBig bitUtilBig0 = (BitUtilBig)BitUtil.BIG;
      bitUtilBig0.toLong((-2882), (-2882));
      BitUtilBig bitUtilBig1 = (BitUtilBig)BitUtil.BIG;
      bitUtilBig1.toLong((-2882), 0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BitUtilBig bitUtilBig0 = new BitUtilBig();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-10);
      byteArray0[1] = (byte) (-83);
      byteArray0[2] = (byte)24;
      byteArray0[3] = (byte)4;
      // Undeclared exception!
      try { 
        bitUtilBig0.fromShort(byteArray0, (short) (byte)4, (int) (byte)4);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("com.graphhopper.util.BitUtilBig", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BitUtilBig bitUtilBig0 = (BitUtilBig)BitUtil.BIG;
      byte[] byteArray0 = null;
      int int0 = 0;
      // Undeclared exception!
      try { 
        bitUtilBig0.fromLong((byte[]) null, 1142L, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.util.BitUtilBig", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BitUtilBig bitUtilBig0 = (BitUtilBig)BitUtil.BIG;
      bitUtilBig0.toString();
      BitUtilBig bitUtilBig1 = (BitUtilBig)BitUtil.BIG;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-53);
      byteArray0[1] = (byte)8;
      byteArray0[2] = (byte)36;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)54;
      byteArray0[5] = (byte) (-114);
      byteArray0[6] = (byte) (-1);
      bitUtilBig1.fromInt(byteArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BitUtilBig bitUtilBig0 = new BitUtilBig();
      byte[] byteArray0 = new byte[2];
      bitUtilBig0.toBitString(0L, 2946);
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)0;
      bitUtilBig0.toShort(byteArray0, 0);
      bitUtilBig0.fromShort(byteArray0, (short) (byte)13, 0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BitUtilBig bitUtilBig0 = (BitUtilBig)BitUtil.BIG;
      byte[] byteArray0 = null;
      short short0 = (short)1617;
      int int0 = 16;
      // Undeclared exception!
      try { 
        bitUtilBig0.fromShort((byte[]) null, (short)1617, 16);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.util.BitUtilBig", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BitUtilBig bitUtilBig0 = new BitUtilBig();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)47;
      byteArray0[1] = (byte)0;
      // Undeclared exception!
      try { 
        bitUtilBig0.fromShort(byteArray0, (short) (byte)47, (int) (byte)47);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 47
         //
         verifyException("com.graphhopper.util.BitUtilBig", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BitUtilBig bitUtilBig0 = (BitUtilBig)BitUtil.BIG;
      byte[] byteArray0 = null;
      // Undeclared exception!
      try { 
        bitUtilBig0.toBitString((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.util.BitUtilBig", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BitUtilBig bitUtilBig0 = (BitUtilBig)BitUtil.BIG;
      // Undeclared exception!
      try { 
        bitUtilBig0.toInt((byte[]) null, (-951));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.util.BitUtilBig", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BitUtilBig bitUtilBig0 = (BitUtilBig)BitUtil.BIG;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)24;
      byteArray0[2] = (byte)66;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-113);
      // Undeclared exception!
      try { 
        bitUtilBig0.toShort(byteArray0, (int) (byte)66);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 66
         //
         verifyException("com.graphhopper.util.BitUtilBig", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BitUtilBig bitUtilBig0 = new BitUtilBig();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-103);
      byteArray0[6] = (byte)119;
      byteArray0[7] = (byte) (-31);
      byteArray0[8] = (byte)0;
      // Undeclared exception!
      try { 
        bitUtilBig0.fromInt(byteArray0, (int) (byte)0, (int) (byte) (-103));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -103
         //
         verifyException("com.graphhopper.util.BitUtilBig", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BitUtilBig bitUtilBig0 = (BitUtilBig)BitUtil.BIG;
      byte[] byteArray0 = null;
      int int0 = (-423);
      // Undeclared exception!
      try { 
        bitUtilBig0.fromInt((byte[]) null, 0, (-423));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.util.BitUtilBig", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BitUtilBig bitUtilBig0 = new BitUtilBig();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-5);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)29;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)76;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-106);
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)100;
      // Undeclared exception!
      try { 
        bitUtilBig0.toInt(byteArray0, 226);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 226
         //
         verifyException("com.graphhopper.util.BitUtilBig", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BitUtilBig bitUtilBig0 = (BitUtilBig)BitUtil.BIG;
      // Undeclared exception!
      try { 
        bitUtilBig0.fromBitString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.util.BitUtilBig", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BitUtilBig bitUtilBig0 = (BitUtilBig)BitUtil.BIG;
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)0;
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      bitUtilBig0.toShort(byteArray0, (int) (byte)0);
      BitUtilBig bitUtilBig1 = (BitUtilBig)BitUtil.BIG;
      bitUtilBig1.toLong((int) (short)0, (int) (byte)0);
      BitUtilBig bitUtilBig2 = new BitUtilBig();
      bitUtilBig2.toString();
      // Undeclared exception!
      try { 
        bitUtilBig2.toLong(byteArray0, (int) (byte)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.graphhopper.util.BitUtilBig", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BitUtilBig bitUtilBig0 = new BitUtilBig();
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        bitUtilBig0.fromLong(byteArray0, (-747L), 56);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 56
         //
         verifyException("com.graphhopper.util.BitUtilBig", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BitUtilBig bitUtilBig0 = new BitUtilBig();
      bitUtilBig0.toString();
      byte[] byteArray0 = bitUtilBig0.fromBitString("com.graphhopper.util.BitUtil");
      // Undeclared exception!
      try { 
        bitUtilBig0.toShort(byteArray0, (-738));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -738
         //
         verifyException("com.graphhopper.util.BitUtilBig", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BitUtilBig bitUtilBig0 = new BitUtilBig();
      bitUtilBig0.toLong(0, 0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-84);
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte) (-98);
      byteArray0[3] = (byte)29;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)92;
      byteArray0[7] = (byte)24;
      bitUtilBig0.toLong(byteArray0, 0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BitUtilBig bitUtilBig0 = new BitUtilBig();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)79;
      byteArray0[1] = (byte)30;
      byteArray0[2] = (byte)16;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)42;
      byteArray0[5] = (byte)7;
      byteArray0[6] = (byte)2;
      byteArray0[7] = (byte)0;
      bitUtilBig0.toLong(byteArray0, 0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BitUtilBig bitUtilBig0 = new BitUtilBig();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)49;
      byteArray0[1] = (byte) (-128);
      byteArray0[2] = (byte)101;
      byteArray0[3] = (byte)65;
      byteArray0[4] = (byte)103;
      // Undeclared exception!
      try { 
        bitUtilBig0.toLong(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("com.graphhopper.util.BitUtilBig", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BitUtilBig bitUtilBig0 = new BitUtilBig();
      byte[] byteArray0 = bitUtilBig0.fromFloat((-3328.2F));
      byte[] byteArray1 = new byte[2];
      byte byte0 = (byte) (-12);
      byteArray1[0] = (byte) (-12);
      bitUtilBig0.toInt(byteArray0);
      byteArray1[1] = (byte) (-2);
      int int0 = 2720;
      // Undeclared exception!
      try { 
        bitUtilBig0.toLastBitString(2720, (byte) (-12));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BitUtilBig bitUtilBig0 = new BitUtilBig();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-73);
      // Undeclared exception!
      try { 
        bitUtilBig0.toInt(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.graphhopper.util.BitUtilBig", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BitUtilBig bitUtilBig0 = (BitUtilBig)BitUtil.BIG;
      byte[] byteArray0 = bitUtilBig0.fromBitString("");
      BitUtilBig bitUtilBig1 = (BitUtilBig)BitUtil.BIG;
      // Undeclared exception!
      try { 
        bitUtilBig1.toLong(byteArray0, (-2324));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2324
         //
         verifyException("com.graphhopper.util.BitUtilBig", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BitUtilBig bitUtilBig0 = (BitUtilBig)BitUtil.BIG;
      byte[] byteArray0 = new byte[9];
      byte byte0 = (byte)0;
      byteArray0[0] = (byte)0;
      byte byte1 = (byte) (-19);
      byteArray0[1] = (byte) (-19);
      byte byte2 = (byte)40;
      byteArray0[2] = (byte)40;
      byte byte3 = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)80;
      byte byte4 = (byte) (-13);
      byteArray0[6] = (byte) (-13);
      byteArray0[7] = (byte)40;
      byteArray0[8] = (byte) (-81);
      // Undeclared exception!
      try { 
        bitUtilBig0.fromLong(byteArray0, (long) (byte)40, (int) (byte) (-19));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -19
         //
         verifyException("com.graphhopper.util.BitUtilBig", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BitUtilBig bitUtilBig0 = (BitUtilBig)BitUtil.BIG;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte) (-112);
      byteArray0[2] = (byte) (-66);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)78;
      // Undeclared exception!
      try { 
        bitUtilBig0.toLong(byteArray0, 341);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 341
         //
         verifyException("com.graphhopper.util.BitUtilBig", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BitUtilBig bitUtilBig0 = new BitUtilBig();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)16;
      byteArray0[1] = (byte)0;
      bitUtilBig0.toBitString(byteArray0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BitUtilBig bitUtilBig0 = (BitUtilBig)BitUtil.BIG;
      bitUtilBig0.toLong(255, 0);
      BitUtilBig bitUtilBig1 = new BitUtilBig();
      byte[] byteArray0 = new byte[0];
      bitUtilBig1.toBitString(byteArray0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      BitUtilBig bitUtilBig0 = new BitUtilBig();
      byte[] byteArray0 = bitUtilBig0.fromLong(0L);
      bitUtilBig0.toShort(byteArray0);
      // Undeclared exception!
      try { 
        bitUtilBig0.toBitString((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.util.BitUtilBig", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      BitUtilBig bitUtilBig0 = (BitUtilBig)BitUtil.BIG;
      bitUtilBig0.fromBitString("B^4cDAbW%O");
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      BitUtilBig bitUtilBig0 = new BitUtilBig();
      bitUtilBig0.fromDouble(3082.6634);
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)3;
      byteArray0[1] = (byte)0;
      bitUtilBig0.toLong((int) (byte)0, (int) (byte)0);
      // Undeclared exception!
      try { 
        bitUtilBig0.toLong(byteArray0, 40);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 40
         //
         verifyException("com.graphhopper.util.BitUtilBig", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      BitUtilBig bitUtilBig0 = new BitUtilBig();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)88;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[0] = (byte)0;
      byteArray0[4] = (byte) (-57);
      byteArray0[5] = (byte)87;
      byteArray0[6] = (byte)2;
      byteArray0[7] = (byte)102;
      byteArray0[8] = (byte)0;
      bitUtilBig0.toBitString(byteArray0);
      bitUtilBig0.fromBitString("000000000000000000000000000000001100011101010111000000100110011000000000");
      bitUtilBig0.toString();
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      BitUtilBig bitUtilBig0 = new BitUtilBig();
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)56;
      byteArray0[2] = (byte) (-97);
      bitUtilBig0.toFloat(byteArray0);
      byteArray0[3] = (byte)0;
      bitUtilBig0.toInt(byteArray0);
      byteArray0[4] = (byte)16;
      bitUtilBig0.toInt(byteArray0);
      byteArray0[5] = (byte)84;
      byteArray0[6] = (byte)32;
      byteArray0[7] = (byte)56;
      byteArray0[8] = (byte)16;
      bitUtilBig0.toInt(byteArray0);
      bitUtilBig0.fromInt(byteArray0, (-370));
      bitUtilBig0.fromBitString("");
      // Undeclared exception!
      try { 
        bitUtilBig0.fromInt(byteArray0, (int) (byte)32, (int) (byte) (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.graphhopper.util.BitUtilBig", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      BitUtilBig bitUtilBig0 = new BitUtilBig();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)54;
      byteArray0[3] = (byte) (-1);
      byteArray0[5] = (byte) (-15);
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte) (-108);
      bitUtilBig0.toLong(byteArray0, 0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      BitUtilBig bitUtilBig0 = new BitUtilBig();
      BitUtilBig bitUtilBig1 = (BitUtilBig)BitUtil.BIG;
      byte[] byteArray0 = bitUtilBig1.fromBitString("w^!fDm);|Msiwl.)");
      BitUtilBig bitUtilBig2 = (BitUtilBig)BitUtil.BIG;
      int int0 = 0;
      // Undeclared exception!
      try { 
        bitUtilBig2.fromLong(byteArray0, 1192L, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.graphhopper.util.BitUtilBig", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      BitUtilBig bitUtilBig0 = new BitUtilBig();
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)93;
      byteArray0[2] = (byte) (-128);
      short short0 = bitUtilBig0.toShort(byteArray0);
      assertEquals((short)93, short0);
      
      bitUtilBig0.fromShort((short) (-880));
      byte[] byteArray1 = bitUtilBig0.fromBitString(" ;!2");
      assertArrayEquals(new byte[] {(byte) (-16)}, byteArray1);
  }
}
