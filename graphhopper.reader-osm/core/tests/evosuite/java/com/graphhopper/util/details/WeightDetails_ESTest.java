/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 04 06:05:06 GMT 2021
 */

package com.graphhopper.util.details;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.graphhopper.routing.ev.BooleanEncodedValue;
import com.graphhopper.routing.util.FlagEncoder;
import com.graphhopper.routing.weighting.Weighting;
import com.graphhopper.util.EdgeIteratorState;
import com.graphhopper.util.details.WeightDetails;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class WeightDetails_ESTest extends WeightDetails_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FlagEncoder flagEncoder0 = mock(FlagEncoder.class, new ViolatedAssumptionAnswer());
      doReturn((BooleanEncodedValue) null).when(flagEncoder0).getAccessEnc();
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn(flagEncoder0).when(weighting0).getFlagEncoder();
      WeightDetails weightDetails0 = new WeightDetails(weighting0);
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(edgeIteratorState0).get(any(com.graphhopper.routing.ev.BooleanEncodedValue.class));
      doReturn(0).when(edgeIteratorState0).getAdjNode();
      doReturn(0).when(edgeIteratorState0).getBaseNode();
      doReturn((-1691), 670).when(edgeIteratorState0).getEdge();
      doReturn(false).when(edgeIteratorState0).getReverse(any(com.graphhopper.routing.ev.BooleanEncodedValue.class));
      boolean boolean0 = weightDetails0.isEdgeDifferentToLastEdge(edgeIteratorState0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      doReturn((FlagEncoder) null).when(weighting0).getFlagEncoder();
      WeightDetails weightDetails0 = new WeightDetails(weighting0);
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(edgeIteratorState0).getEdge();
      // Undeclared exception!
      try { 
        weightDetails0.isEdgeDifferentToLastEdge(edgeIteratorState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.util.GHUtility", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      WeightDetails weightDetails0 = new WeightDetails(weighting0);
      Object object0 = weightDetails0.getCurrentValue();
      assertEquals(Double.NaN, object0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Weighting weighting0 = mock(Weighting.class, new ViolatedAssumptionAnswer());
      WeightDetails weightDetails0 = new WeightDetails(weighting0);
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      doReturn((-1)).when(edgeIteratorState0).getEdge();
      boolean boolean0 = weightDetails0.isEdgeDifferentToLastEdge(edgeIteratorState0);
      assertFalse(boolean0);
  }
}
