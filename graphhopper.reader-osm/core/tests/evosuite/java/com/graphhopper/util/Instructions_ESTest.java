/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 04 03:39:22 GMT 2021
 */

package com.graphhopper.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.graphhopper.util.Instruction;
import com.graphhopper.util.InstructionList;
import com.graphhopper.util.Instructions;
import com.graphhopper.util.PointList;
import com.graphhopper.util.Translation;
import com.graphhopper.util.TranslationMap;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.locationtech.jts.geom.CoordinateSequence;
import org.locationtech.jts.geom.GeometryFactory;
import org.locationtech.jts.geom.LinearRing;
import org.locationtech.jts.geom.impl.CoordinateArraySequence;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Instructions_ESTest extends Instructions_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Locale locale0 = new Locale("problem with node ");
      TranslationMap.TranslationHashMap translationMap_TranslationHashMap0 = new TranslationMap.TranslationHashMap(locale0);
      InstructionList instructionList0 = new InstructionList(0, translationMap_TranslationHashMap0);
      PointList pointList0 = PointList.EMPTY;
      Instruction instruction0 = new Instruction((-4345), "", pointList0);
      instructionList0.add(instruction0);
      // Undeclared exception!
      try { 
        Instructions.find(instructionList0, 0, 0, 0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // cannot access EMPTY PointList
         //
         verifyException("com.graphhopper.util.PointList$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        Instructions.find((InstructionList) null, 0.0, 315.1587680671, 295.44);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.util.Instructions", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      InstructionList instructionList0 = new InstructionList(17, (Translation) null);
      Instruction instruction0 = Instructions.find(instructionList0, 17, (-13.756545), 17);
      assertNull(instruction0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      InstructionList instructionList0 = new InstructionList(0, (Translation) null);
      CoordinateArraySequence coordinateArraySequence0 = new CoordinateArraySequence((CoordinateSequence) null);
      GeometryFactory geometryFactory0 = new GeometryFactory();
      LinearRing linearRing0 = new LinearRing(coordinateArraySequence0, geometryFactory0);
      PointList pointList0 = PointList.fromLineString(linearRing0);
      Instruction instruction0 = new Instruction(0, "[av+#hd#6fr${\"AIn", pointList0);
      instructionList0.add(instruction0);
      // Undeclared exception!
      try { 
        Instructions.find(instructionList0, 1080.3636, 2362.0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Tried to access PointList with too big index! index:0, size:0
         //
         verifyException("com.graphhopper.util.PointList", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Instructions instructions0 = new Instructions();
  }
}
