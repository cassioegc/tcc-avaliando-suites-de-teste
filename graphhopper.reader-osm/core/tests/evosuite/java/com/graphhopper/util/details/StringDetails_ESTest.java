/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 04 06:06:29 GMT 2021
 */

package com.graphhopper.util.details;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.graphhopper.routing.ev.StringEncodedValue;
import com.graphhopper.util.EdgeIteratorState;
import com.graphhopper.util.details.StringDetails;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StringDetails_ESTest extends StringDetails_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StringEncodedValue stringEncodedValue0 = mock(StringEncodedValue.class, new ViolatedAssumptionAnswer());
      StringDetails stringDetails0 = new StringDetails("com.graphhopper.util.details.StringDetails", stringEncodedValue0);
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      doReturn(" ---").when(edgeIteratorState0).get(any(com.graphhopper.routing.ev.StringEncodedValue.class));
      stringDetails0.isEdgeDifferentToLastEdge(edgeIteratorState0);
      Object object0 = stringDetails0.getCurrentValue();
      assertEquals(" ---", object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StringEncodedValue stringEncodedValue0 = mock(StringEncodedValue.class, new ViolatedAssumptionAnswer());
      StringDetails stringDetails0 = new StringDetails("com.graphhopper.util.details.StringDetails", stringEncodedValue0);
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      doReturn("").when(edgeIteratorState0).get(any(com.graphhopper.routing.ev.StringEncodedValue.class));
      stringDetails0.isEdgeDifferentToLastEdge(edgeIteratorState0);
      EdgeIteratorState edgeIteratorState1 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      doReturn("").when(edgeIteratorState1).get(any(com.graphhopper.routing.ev.StringEncodedValue.class));
      boolean boolean0 = stringDetails0.isEdgeDifferentToLastEdge(edgeIteratorState1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      StringEncodedValue stringEncodedValue0 = mock(StringEncodedValue.class, new ViolatedAssumptionAnswer());
      StringDetails stringDetails0 = new StringDetails("com.graphhopper.util.details.StringDetails", stringEncodedValue0);
      Object object0 = stringDetails0.getCurrentValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      StringEncodedValue stringEncodedValue0 = mock(StringEncodedValue.class, new ViolatedAssumptionAnswer());
      StringDetails stringDetails0 = new StringDetails("(#)oCr!+", stringEncodedValue0);
      // Undeclared exception!
      try { 
        stringDetails0.isEdgeDifferentToLastEdge((EdgeIteratorState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.util.details.StringDetails", e);
      }
  }
}
