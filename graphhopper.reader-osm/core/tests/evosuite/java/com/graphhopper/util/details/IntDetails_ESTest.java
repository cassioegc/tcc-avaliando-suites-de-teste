/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 04 05:50:14 GMT 2021
 */

package com.graphhopper.util.details;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.graphhopper.routing.ev.IntEncodedValue;
import com.graphhopper.util.EdgeIteratorState;
import com.graphhopper.util.details.IntDetails;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IntDetails_ESTest extends IntDetails_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IntEncodedValue intEncodedValue0 = mock(IntEncodedValue.class, new ViolatedAssumptionAnswer());
      IntDetails intDetails0 = new IntDetails("com.graphhopper.util.details.IntDetails", intEncodedValue0);
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      doReturn((-703)).when(edgeIteratorState0).get(any(com.graphhopper.routing.ev.IntEncodedValue.class));
      boolean boolean0 = intDetails0.isEdgeDifferentToLastEdge(edgeIteratorState0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IntEncodedValue intEncodedValue0 = mock(IntEncodedValue.class, new ViolatedAssumptionAnswer());
      IntDetails intDetails0 = new IntDetails("Z<LD/5;37+j +\"", intEncodedValue0);
      Object object0 = intDetails0.getCurrentValue();
      assertEquals((-1), object0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IntEncodedValue intEncodedValue0 = mock(IntEncodedValue.class, new ViolatedAssumptionAnswer());
      IntDetails intDetails0 = new IntDetails("Z<LD/5;37+j +\"", intEncodedValue0);
      // Undeclared exception!
      try { 
        intDetails0.isEdgeDifferentToLastEdge((EdgeIteratorState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.util.details.IntDetails", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IntEncodedValue intEncodedValue0 = mock(IntEncodedValue.class, new ViolatedAssumptionAnswer());
      IntDetails intDetails0 = new IntDetails("TrW0SxAlT[F'?1wo", intEncodedValue0);
      EdgeIteratorState edgeIteratorState0 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      doReturn(3227).when(edgeIteratorState0).get(any(com.graphhopper.routing.ev.IntEncodedValue.class));
      boolean boolean0 = intDetails0.isEdgeDifferentToLastEdge(edgeIteratorState0);
      EdgeIteratorState edgeIteratorState1 = mock(EdgeIteratorState.class, new ViolatedAssumptionAnswer());
      doReturn(3227).when(edgeIteratorState1).get(any(com.graphhopper.routing.ev.IntEncodedValue.class));
      boolean boolean1 = intDetails0.isEdgeDifferentToLastEdge(edgeIteratorState1);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }
}
