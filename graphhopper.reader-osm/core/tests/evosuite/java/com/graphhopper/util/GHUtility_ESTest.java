/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 04 01:16:39 GMT 2021
 */

package com.graphhopper.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.carrotsearch.hppc.IntArrayDeque;
import com.carrotsearch.hppc.IntArrayList;
import com.carrotsearch.hppc.IntStack;
import com.graphhopper.routing.ev.BooleanEncodedValue;
import com.graphhopper.routing.ev.DecimalEncodedValue;
import com.graphhopper.routing.ev.EnumEncodedValue;
import com.graphhopper.routing.ev.IntEncodedValue;
import com.graphhopper.routing.ev.SimpleBooleanEncodedValue;
import com.graphhopper.routing.ev.StringEncodedValue;
import com.graphhopper.routing.util.AllEdgesIterator;
import com.graphhopper.routing.util.Bike2WeightFlagEncoder;
import com.graphhopper.routing.util.BikeFlagEncoder;
import com.graphhopper.routing.util.DefaultEdgeFilter;
import com.graphhopper.routing.util.DefaultFlagEncoderFactory;
import com.graphhopper.routing.util.EdgeFilter;
import com.graphhopper.routing.util.EncodingManager;
import com.graphhopper.routing.util.FlagEncoder;
import com.graphhopper.routing.util.FlagEncoderFactory;
import com.graphhopper.routing.util.FootFlagEncoder;
import com.graphhopper.routing.util.HikeFlagEncoder;
import com.graphhopper.routing.util.MotorcycleFlagEncoder;
import com.graphhopper.routing.util.MountainBikeFlagEncoder;
import com.graphhopper.routing.util.RacingBikeFlagEncoder;
import com.graphhopper.routing.util.WheelchairFlagEncoder;
import com.graphhopper.routing.weighting.Weighting;
import com.graphhopper.storage.CHGraph;
import com.graphhopper.storage.DAType;
import com.graphhopper.storage.GHDirectory;
import com.graphhopper.storage.Graph;
import com.graphhopper.storage.GraphHopperStorage;
import com.graphhopper.storage.GraphStorage;
import com.graphhopper.storage.IntsRef;
import com.graphhopper.storage.MMapDirectory;
import com.graphhopper.storage.NodeAccess;
import com.graphhopper.storage.RAMDirectory;
import com.graphhopper.storage.TurnCostStorage;
import com.graphhopper.storage.index.LocationIndex;
import com.graphhopper.util.EdgeIterator;
import com.graphhopper.util.EdgeIteratorState;
import com.graphhopper.util.FetchMode;
import com.graphhopper.util.GHUtility;
import com.graphhopper.util.PMap;
import com.graphhopper.util.PointList;
import com.graphhopper.util.shapes.BBox;
import com.graphhopper.util.shapes.Circle;
import java.time.chrono.MinguoEra;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Random;
import java.util.Set;
import java.util.Stack;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GHUtility_ESTest extends GHUtility_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      HikeFlagEncoder hikeFlagEncoder0 = new HikeFlagEncoder();
      int[] intArray0 = new int[3];
      IntsRef intsRef0 = new IntsRef(intArray0, 0, 0);
      // Undeclared exception!
      try { 
        GHUtility.setSpeed(2927.900846564646, (double) 0, (FlagEncoder) hikeFlagEncoder0, intsRef0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // FlagEncoder com.graphhopper.routing.util.HikeFlagEncoder@0000000001 not yet initialized
         //
         verifyException("com.graphhopper.routing.util.AbstractFlagEncoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      boolean boolean0 = GHUtility.isSameEdgeKeys(2146753016, (-2428));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      int int0 = GHUtility.createEdgeKey((-731), 0, 2, false);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom((-461));
      mockRandom0.nextLong();
      double double0 = GHUtility.randomDoubleInRange(mockRandom0, 1461.509164509, (-6.0));
      assertEquals(1314.7582480581, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      GHUtility.DisabledNodeAccess gHUtility_DisabledNodeAccess0 = new GHUtility.DisabledNodeAccess();
      // Undeclared exception!
      try { 
        gHUtility_DisabledNodeAccess0.getLat(122);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledNodeAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      // Undeclared exception!
      try { 
        gHUtility_DisabledEdgeIterator0.next();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      FetchMode fetchMode0 = FetchMode.TOWER_ONLY;
      // Undeclared exception!
      try { 
        gHUtility_DisabledEdgeIterator0.fetchWayGeometry(fetchMode0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      int int0 = GHUtility.reverseEdgeKey(1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      int int0 = GHUtility.reverseEdgeKey(5);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      double double0 = GHUtility.randomDoubleInRange(mockRandom0, (-1666.2482523308288), (-1666.2482523308288));
      assertEquals((-1666.2482523308288), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      RAMDirectory rAMDirectory0 = new RAMDirectory();
      Vector<Bike2WeightFlagEncoder> vector0 = new Vector<Bike2WeightFlagEncoder>(819);
      EncodingManager encodingManager0 = EncodingManager.create((List<? extends FlagEncoder>) vector0);
      GraphHopperStorage graphHopperStorage0 = new GraphHopperStorage(rAMDirectory0, encodingManager0, true);
      RAMDirectory rAMDirectory1 = (RAMDirectory)GHUtility.guessDirectory(graphHopperStorage0);
      assertFalse(rAMDirectory1.isStoring());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      int int0 = GHUtility.getEdgeFromEdgeKey(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      int int0 = GHUtility.getEdgeFromEdgeKey(2);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      int int0 = GHUtility.getAdjNode((Graph) null, (-4616), (-4616));
      assertEquals((-4616), int0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      MMapDirectory mMapDirectory0 = new MMapDirectory("https://edcintl.cr.usgs.gov/downloads/sciweb1/shared/topo/downloads/GMTED/Global_tiles_GMTED/075darcsec/mea/");
      DefaultFlagEncoderFactory defaultFlagEncoderFactory0 = new DefaultFlagEncoderFactory();
      EncodingManager encodingManager0 = EncodingManager.create((FlagEncoderFactory) defaultFlagEncoderFactory0, "");
      GraphHopperStorage graphHopperStorage0 = new GraphHopperStorage(mMapDirectory0, encodingManager0, true, false, (-1871));
      int[] intArray0 = new int[4];
      IntArrayDeque intArrayDeque0 = IntArrayDeque.from(intArray0);
      IntStack intStack0 = new IntStack(intArrayDeque0);
      Graph graph0 = GHUtility.createSortedGraph(graphHopperStorage0, graphHopperStorage0, intStack0, intStack0);
      assertEquals(0, graph0.getNodes());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      int int0 = GHUtility.createEdgeKey((-971), false);
      assertEquals((-1942), int0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      int int0 = GHUtility.createEdgeKey(750, 8, 0, true);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      int int0 = GHUtility.createEdgeKey((-461), (-461), (-461), false);
      assertEquals((-922), int0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      IntStack intStack0 = new IntStack();
      Set<Integer> set0 = GHUtility.asSet(intStack0.EMPTY_ARRAY);
      assertEquals(0, set0.size());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      MMapDirectory mMapDirectory0 = new MMapDirectory("https://edcintl.cr.usgs.gov/downloads/sciweb1/shared/topo/downloads/GMTED/Global_tiles_GMTED/075darcsec/mea/");
      DefaultFlagEncoderFactory defaultFlagEncoderFactory0 = new DefaultFlagEncoderFactory();
      EncodingManager encodingManager0 = EncodingManager.create((FlagEncoderFactory) defaultFlagEncoderFactory0, "");
      GraphHopperStorage graphHopperStorage0 = new GraphHopperStorage(mMapDirectory0, encodingManager0, true, false, (-1871));
      // Undeclared exception!
      try { 
        GHUtility.updateDistancesFor(graphHopperStorage0, 1024, 4, 180.0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // The graph has not yet been initialized.
         //
         verifyException("com.graphhopper.storage.BaseGraph", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      // Undeclared exception!
      try { 
        GHUtility.sortDFS((Graph) null, (Graph) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.util.GHUtility", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      // Undeclared exception!
      try { 
        GHUtility.shuffle((Graph) null, (Graph) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.util.GHUtility", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      // Undeclared exception!
      try { 
        GHUtility.setSpeed(2268.4, true, false, (FlagEncoder) null, (EdgeIteratorState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.util.GHUtility", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      PMap pMap0 = new PMap(0);
      MotorcycleFlagEncoder motorcycleFlagEncoder0 = new MotorcycleFlagEncoder(pMap0);
      EdgeIteratorState[] edgeIteratorStateArray0 = new EdgeIteratorState[0];
      // Undeclared exception!
      try { 
        GHUtility.setSpeed(3027.9, 6.0, (FlagEncoder) motorcycleFlagEncoder0, edgeIteratorStateArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // FlagEncoder com.graphhopper.routing.util.MotorcycleFlagEncoder@0000000002 not yet initialized
         //
         verifyException("com.graphhopper.routing.util.AbstractFlagEncoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      MotorcycleFlagEncoder motorcycleFlagEncoder0 = new MotorcycleFlagEncoder();
      Stack<GHUtility.DisabledEdgeIterator> stack0 = new Stack<GHUtility.DisabledEdgeIterator>();
      Vector<EdgeIteratorState> vector0 = new Vector<EdgeIteratorState>(stack0);
      // Undeclared exception!
      try { 
        GHUtility.setSpeed(3027.9, (double) (byte)0, (FlagEncoder) motorcycleFlagEncoder0, (Collection<EdgeIteratorState>) vector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // FlagEncoder com.graphhopper.routing.util.MotorcycleFlagEncoder@0000000002 not yet initialized
         //
         verifyException("com.graphhopper.routing.util.AbstractFlagEncoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      // Undeclared exception!
      try { 
        GHUtility.randomDoubleInRange((Random) null, (-3206.584), (-3202.969873572483));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.util.GHUtility", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      BikeFlagEncoder bikeFlagEncoder0 = new BikeFlagEncoder();
      double[] doubleArray0 = new double[8];
      BBox bBox0 = new BBox(doubleArray0);
      // Undeclared exception!
      try { 
        GHUtility.printGraphForUnitTest((Graph) null, (FlagEncoder) bikeFlagEncoder0, bBox0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.util.GHUtility", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      RacingBikeFlagEncoder racingBikeFlagEncoder0 = new RacingBikeFlagEncoder();
      // Undeclared exception!
      try { 
        GHUtility.printEdgeInfo((Graph) null, racingBikeFlagEncoder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.util.GHUtility", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      BikeFlagEncoder bikeFlagEncoder0 = new BikeFlagEncoder();
      RAMDirectory rAMDirectory0 = new RAMDirectory();
      ArrayList<Bike2WeightFlagEncoder> arrayList0 = new ArrayList<Bike2WeightFlagEncoder>();
      EncodingManager encodingManager0 = EncodingManager.create((List<? extends FlagEncoder>) arrayList0);
      GraphHopperStorage graphHopperStorage0 = new GraphHopperStorage(rAMDirectory0, encodingManager0, false, true);
      // Undeclared exception!
      try { 
        GHUtility.printEdgeInfo(graphHopperStorage0, bikeFlagEncoder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // FlagEncoder com.graphhopper.routing.util.BikeFlagEncoder@0000000001 not yet initialized
         //
         verifyException("com.graphhopper.routing.util.AbstractFlagEncoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      RAMDirectory rAMDirectory0 = new RAMDirectory("aq#qz3L'mJ4%g.T4S");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("aq#qz3L'mJ4%g.T4S");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      Stack<FlagEncoder> stack0 = new Stack<FlagEncoder>();
      EncodingManager encodingManager0 = EncodingManager.create((List<? extends FlagEncoder>) stack0);
      GraphHopperStorage graphHopperStorage0 = new GraphHopperStorage(rAMDirectory0, encodingManager0, false);
      // Undeclared exception!
      try { 
        GHUtility.newStorage(graphHopperStorage0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // file 'aq#qz3L'mJ4%g.T4S' exists but is not a directory
         //
         verifyException("com.graphhopper.storage.GHDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      // Undeclared exception!
      try { 
        GHUtility.newStorage((GraphHopperStorage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.util.GHUtility", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      // Undeclared exception!
      try { 
        GHUtility.guessDirectory((GraphStorage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.util.GHUtility", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      // Undeclared exception!
      try { 
        GHUtility.getProblems((Graph) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.util.GHUtility", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      // Undeclared exception!
      try { 
        GHUtility.getNodeInfo((CHGraph) null, 5, (EdgeFilter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.util.GHUtility", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      // Undeclared exception!
      try { 
        GHUtility.getNeighbors(gHUtility_DisabledEdgeIterator0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      // Undeclared exception!
      try { 
        GHUtility.getNeighbors((EdgeIterator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.util.GHUtility", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      // Undeclared exception!
      try { 
        GHUtility.getEdgeIds((EdgeIterator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.util.GHUtility", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      // Undeclared exception!
      try { 
        GHUtility.getEdge((Graph) null, 36, 36);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.util.GHUtility", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DAType dAType0 = DAType.MMAP_RO;
      GHDirectory gHDirectory0 = new GHDirectory("|vehicle=", dAType0);
      FlagEncoder[] flagEncoderArray0 = new FlagEncoder[0];
      EncodingManager encodingManager0 = EncodingManager.create(flagEncoderArray0);
      GraphHopperStorage graphHopperStorage0 = new GraphHopperStorage(gHDirectory0, encodingManager0, false);
      // Undeclared exception!
      try { 
        GHUtility.getEdge((Graph) graphHopperStorage0, 146, (int) (byte)85);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      RAMDirectory rAMDirectory0 = new RAMDirectory("|vehicle=", false);
      FlagEncoder[] flagEncoderArray0 = new FlagEncoder[0];
      EncodingManager encodingManager0 = EncodingManager.create(flagEncoderArray0);
      GraphHopperStorage graphHopperStorage0 = new GraphHopperStorage(rAMDirectory0, encodingManager0, false);
      // Undeclared exception!
      try { 
        GHUtility.getEdge((Graph) graphHopperStorage0, 45, (-610));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.graphhopper.storage.RAMIntDataAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      // Undeclared exception!
      try { 
        GHUtility.getEdge((CHGraph) null, (-2144549927), (-1944));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.util.GHUtility", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      // Undeclared exception!
      try { 
        GHUtility.getDistance(0, 0, (NodeAccess) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.util.GHUtility", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DAType dAType0 = DAType.MMAP_RO;
      GHDirectory gHDirectory0 = new GHDirectory("|vehicle=", dAType0);
      FlagEncoder[] flagEncoderArray0 = new FlagEncoder[0];
      EncodingManager encodingManager0 = EncodingManager.create(flagEncoderArray0);
      GraphHopperStorage graphHopperStorage0 = new GraphHopperStorage(gHDirectory0, encodingManager0, false);
      NodeAccess nodeAccess0 = graphHopperStorage0.getNodeAccess();
      // Undeclared exception!
      try { 
        GHUtility.getDistance(999, (byte)98, nodeAccess0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      RAMDirectory rAMDirectory0 = new RAMDirectory();
      Stack<Bike2WeightFlagEncoder> stack0 = new Stack<Bike2WeightFlagEncoder>();
      EncodingManager encodingManager0 = EncodingManager.create((List<? extends FlagEncoder>) stack0);
      GraphHopperStorage graphHopperStorage0 = new GraphHopperStorage(rAMDirectory0, encodingManager0, false);
      NodeAccess nodeAccess0 = graphHopperStorage0.getNodeAccess();
      // Undeclared exception!
      try { 
        GHUtility.getDistance((-404), 1084, nodeAccess0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.graphhopper.storage.RAMIntDataAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      // Undeclared exception!
      try { 
        GHUtility.getAdjNode((Graph) null, 100, 100);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.util.GHUtility", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      int[] intArray0 = new int[9];
      IntArrayList intArrayList0 = IntArrayList.from(intArray0);
      // Undeclared exception!
      try { 
        GHUtility.createSortedGraph((Graph) null, (Graph) null, intArrayList0, intArrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.util.GHUtility", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      // Undeclared exception!
      try { 
        GHUtility.createBBox((EdgeIteratorState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.util.GHUtility", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      // Undeclared exception!
      try { 
        GHUtility.count(gHUtility_DisabledEdgeIterator0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      // Undeclared exception!
      try { 
        GHUtility.count((EdgeIterator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.util.GHUtility", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      // Undeclared exception!
      try { 
        GHUtility.copyTo((Graph) null, (Graph) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.util.GHUtility", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      // Undeclared exception!
      try { 
        GHUtility.calcWeightWithTurnWeight((Weighting) null, gHUtility_DisabledEdgeIterator0, true, 5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.util.GHUtility", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      // Undeclared exception!
      try { 
        GHUtility.asSet((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.util.GHUtility", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Stack<FlagEncoder> stack0 = new Stack<FlagEncoder>();
      EncodingManager encodingManager0 = EncodingManager.create((List<? extends FlagEncoder>) stack0);
      PMap pMap0 = new PMap();
      FootFlagEncoder footFlagEncoder0 = new FootFlagEncoder(pMap0);
      // Undeclared exception!
      try { 
        GHUtility.addRandomTurnCosts((Graph) null, 0L, encodingManager0, footFlagEncoder0, 2211, (TurnCostStorage) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot find EncodedValue com.graphhopper.routing.util.FootFlagEncoder@0000000020$turn_cost in collection: null
         //
         verifyException("com.graphhopper.routing.util.EncodingManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      LinkedList<EdgeIteratorState> linkedList0 = new LinkedList<EdgeIteratorState>();
      // Undeclared exception!
      try { 
        GHUtility.setSpeed((double) (-731), Double.NEGATIVE_INFINITY, (FlagEncoder) null, (Collection<EdgeIteratorState>) linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Speed must be positive but wasn't! fwdSpeed:-731.0, bwdSpeed:-Infinity
         //
         verifyException("com.graphhopper.util.GHUtility", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      RAMDirectory rAMDirectory0 = new RAMDirectory("aq#qz3L'mJ4%g.T4S");
      Stack<FlagEncoder> stack0 = new Stack<FlagEncoder>();
      EncodingManager encodingManager0 = EncodingManager.create((List<? extends FlagEncoder>) stack0);
      GraphHopperStorage graphHopperStorage0 = new GraphHopperStorage(rAMDirectory0, encodingManager0, true);
      Circle circle0 = new Circle(6371000.0, 6371000.0, 102.0);
      BBox bBox0 = circle0.getBounds();
      GHUtility.printGraphForUnitTest((Graph) graphHopperStorage0, (FlagEncoder) null, bBox0);
      assertEquals(0, graphHopperStorage0.getNodes());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      MountainBikeFlagEncoder mountainBikeFlagEncoder0 = new MountainBikeFlagEncoder();
      // Undeclared exception!
      try { 
        GHUtility.setSpeed((-2210.0), true, true, (FlagEncoder) mountainBikeFlagEncoder0, (EdgeIteratorState) gHUtility_DisabledEdgeIterator0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Zero speed is only allowed if edge will get inaccessible. Otherwise Weighting can produce inconsistent results
         //
         verifyException("com.graphhopper.util.GHUtility", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      WheelchairFlagEncoder wheelchairFlagEncoder0 = new WheelchairFlagEncoder();
      // Undeclared exception!
      try { 
        GHUtility.setSpeed(2053.497023, true, false, (FlagEncoder) wheelchairFlagEncoder0, (EdgeIteratorState) gHUtility_DisabledEdgeIterator0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // FlagEncoder com.graphhopper.routing.util.WheelchairFlagEncoder@0000000002 not yet initialized
         //
         verifyException("com.graphhopper.routing.util.AbstractFlagEncoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      BikeFlagEncoder bikeFlagEncoder0 = new BikeFlagEncoder();
      ArrayDeque<EdgeIteratorState> arrayDeque0 = new ArrayDeque<EdgeIteratorState>();
      // Undeclared exception!
      try { 
        GHUtility.setSpeed(60.0, (-631.2), (FlagEncoder) bikeFlagEncoder0, (Collection<EdgeIteratorState>) arrayDeque0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Speed must be positive but wasn't! fwdSpeed:60.0, bwdSpeed:-631.2
         //
         verifyException("com.graphhopper.util.GHUtility", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ArrayDeque<EdgeIteratorState> arrayDeque0 = new ArrayDeque<EdgeIteratorState>();
      // Undeclared exception!
      try { 
        GHUtility.setSpeed((double) 0, 6.0, (FlagEncoder) null, (Collection<EdgeIteratorState>) arrayDeque0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.util.GHUtility", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FootFlagEncoder footFlagEncoder0 = new FootFlagEncoder();
      EdgeIteratorState[] edgeIteratorStateArray0 = new EdgeIteratorState[4];
      // Undeclared exception!
      try { 
        GHUtility.setSpeed((-1833.47111954), 46.0, (FlagEncoder) footFlagEncoder0, edgeIteratorStateArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Speed must be positive but wasn't! fwdSpeed:-1833.47111954, bwdSpeed:46.0
         //
         verifyException("com.graphhopper.util.GHUtility", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      IntsRef intsRef0 = IntsRef.EMPTY;
      Bike2WeightFlagEncoder bike2WeightFlagEncoder0 = new Bike2WeightFlagEncoder();
      // Undeclared exception!
      try { 
        GHUtility.setSpeed((double) 0, 2370.95405556, (FlagEncoder) bike2WeightFlagEncoder0, intsRef0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // FlagEncoder com.graphhopper.routing.util.Bike2WeightFlagEncoder@0000000002 not yet initialized
         //
         verifyException("com.graphhopper.routing.util.AbstractFlagEncoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      HikeFlagEncoder hikeFlagEncoder0 = new HikeFlagEncoder();
      int[] intArray0 = new int[3];
      IntsRef intsRef0 = new IntsRef(intArray0, 0, 0);
      // Undeclared exception!
      try { 
        GHUtility.setSpeed((double) 0, (-3206.584), (FlagEncoder) hikeFlagEncoder0, intsRef0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Speed must be positive but wasn't! fwdSpeed:0.0, bwdSpeed:-3206.584
         //
         verifyException("com.graphhopper.util.GHUtility", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      HikeFlagEncoder hikeFlagEncoder0 = new HikeFlagEncoder();
      int[] intArray0 = new int[3];
      IntsRef intsRef0 = new IntsRef(intArray0, 0, 0);
      // Undeclared exception!
      try { 
        GHUtility.setSpeed((-3202.969873572483), (-3206.584), (FlagEncoder) hikeFlagEncoder0, intsRef0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Speed must be positive but wasn't! fwdSpeed:-3202.969873572483, bwdSpeed:-3206.584
         //
         verifyException("com.graphhopper.util.GHUtility", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      int int0 = GHUtility.reverseEdgeKey((-848));
      assertEquals((-847), int0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      int int0 = GHUtility.reverseEdgeKey((-869));
      assertEquals((-870), int0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      boolean boolean0 = GHUtility.isSameEdgeKeys((-869), (-869));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      boolean boolean0 = GHUtility.isSameEdgeKeys(0, 199);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      int int0 = GHUtility.createEdgeKey(4, true);
      assertEquals(9, int0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      int int0 = GHUtility.createEdgeKey(0, false);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      int int0 = GHUtility.createEdgeKey(2, 2, 2, true);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      int int0 = GHUtility.createEdgeKey((-731), 0, 2, true);
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      int int0 = GHUtility.createEdgeKey(1147, (-408), 2545, false);
      assertEquals(5091, int0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      MMapDirectory mMapDirectory0 = new MMapDirectory("https://edcintl.cr.usgs.gov/downloads/sciweb1/shared/topo/downloads/GMTED/Global_tiles_GMTED/075darcsec/mea/");
      DefaultFlagEncoderFactory defaultFlagEncoderFactory0 = new DefaultFlagEncoderFactory();
      EncodingManager encodingManager0 = EncodingManager.create((FlagEncoderFactory) defaultFlagEncoderFactory0, "");
      GraphHopperStorage graphHopperStorage0 = new GraphHopperStorage(mMapDirectory0, encodingManager0, true, false, (-1871));
      // Undeclared exception!
      try { 
        GHUtility.getAdjNode(graphHopperStorage0, 0, (-1871));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // edgeId 0 out of bounds, edgeCount: 0
         //
         verifyException("com.graphhopper.storage.BaseGraph", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      MMapDirectory mMapDirectory0 = new MMapDirectory("https://edcintl.cr.usgs.gov/downloads/sciweb1/shared/topo/downloads/GMTED/Global_tiles_GMTED/075darcsec/mea/");
      DefaultFlagEncoderFactory defaultFlagEncoderFactory0 = new DefaultFlagEncoderFactory();
      EncodingManager encodingManager0 = EncodingManager.create((FlagEncoderFactory) defaultFlagEncoderFactory0, "");
      GraphHopperStorage graphHopperStorage0 = new GraphHopperStorage(mMapDirectory0, encodingManager0, true, false, (-1871));
      int int0 = GHUtility.getAdjNode(graphHopperStorage0, (-1871), 1024);
      assertEquals(1024, int0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      RAMDirectory rAMDirectory0 = new RAMDirectory("aq#qz3L'mJ4%g.T4S");
      Stack<FlagEncoder> stack0 = new Stack<FlagEncoder>();
      EncodingManager encodingManager0 = EncodingManager.create((List<? extends FlagEncoder>) stack0);
      GraphHopperStorage graphHopperStorage0 = new GraphHopperStorage(rAMDirectory0, encodingManager0, false);
      // Undeclared exception!
      GHUtility.newStorage(graphHopperStorage0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      MMapDirectory mMapDirectory0 = new MMapDirectory("https://edcintl.cr.usgs.gov/downloads/sciweb1/shared/topo/downloads/GMTED/Global_tiles_GMTED/075darcsec/mea/");
      DefaultFlagEncoderFactory defaultFlagEncoderFactory0 = new DefaultFlagEncoderFactory();
      EncodingManager encodingManager0 = EncodingManager.create((FlagEncoderFactory) defaultFlagEncoderFactory0, "");
      GraphHopperStorage graphHopperStorage0 = new GraphHopperStorage(mMapDirectory0, encodingManager0, true, false, (-1871));
      // Undeclared exception!
      try { 
        GHUtility.newStorage(graphHopperStorage0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not supported yet: mmap will overwrite existing storage at the same location
         //
         verifyException("com.graphhopper.util.GHUtility", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      RAMDirectory rAMDirectory0 = new RAMDirectory("Gje5p4\":};x6N");
      FlagEncoder[] flagEncoderArray0 = new FlagEncoder[0];
      EncodingManager encodingManager0 = EncodingManager.create(flagEncoderArray0);
      GraphHopperStorage graphHopperStorage0 = new GraphHopperStorage(rAMDirectory0, encodingManager0, true, true, (-1277));
      // Undeclared exception!
      GHUtility.newStorage(graphHopperStorage0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      RAMDirectory rAMDirectory0 = new RAMDirectory();
      Stack<Bike2WeightFlagEncoder> stack0 = new Stack<Bike2WeightFlagEncoder>();
      EncodingManager encodingManager0 = EncodingManager.create((List<? extends FlagEncoder>) stack0);
      GraphHopperStorage graphHopperStorage0 = new GraphHopperStorage(rAMDirectory0, encodingManager0, false);
      Graph graph0 = GHUtility.copyTo(graphHopperStorage0, graphHopperStorage0);
      assertSame(graphHopperStorage0, graph0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      RAMDirectory rAMDirectory0 = new RAMDirectory();
      Stack<Bike2WeightFlagEncoder> stack0 = new Stack<Bike2WeightFlagEncoder>();
      EncodingManager encodingManager0 = EncodingManager.create((List<? extends FlagEncoder>) stack0);
      GraphHopperStorage graphHopperStorage0 = new GraphHopperStorage(rAMDirectory0, encodingManager0, true, true, 359);
      IntStack intStack0 = new IntStack();
      // Undeclared exception!
      try { 
        GHUtility.createSortedGraph(graphHopperStorage0, graphHopperStorage0, intStack0, intStack0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Sorting the graph is currently not supported in the presence of turn costs
         //
         verifyException("com.graphhopper.util.GHUtility", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      RAMDirectory rAMDirectory0 = new RAMDirectory();
      EncodingManager encodingManager0 = EncodingManager.create("");
      GraphHopperStorage graphHopperStorage0 = new GraphHopperStorage(rAMDirectory0, encodingManager0, true, true, 0);
      // Undeclared exception!
      try { 
        GHUtility.sortDFS(graphHopperStorage0, graphHopperStorage0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Sorting the graph is currently not supported in the presence of turn costs
         //
         verifyException("com.graphhopper.util.GHUtility", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DAType dAType0 = DAType.MMAP_RO;
      GHDirectory gHDirectory0 = new GHDirectory("|vehicle=", dAType0);
      FlagEncoder[] flagEncoderArray0 = new FlagEncoder[0];
      EncodingManager encodingManager0 = EncodingManager.create(flagEncoderArray0);
      GraphHopperStorage graphHopperStorage0 = new GraphHopperStorage(gHDirectory0, encodingManager0, false);
      Graph graph0 = GHUtility.sortDFS(graphHopperStorage0, graphHopperStorage0);
      assertSame(graph0, graphHopperStorage0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      MMapDirectory mMapDirectory0 = new MMapDirectory("");
      DefaultFlagEncoderFactory defaultFlagEncoderFactory0 = new DefaultFlagEncoderFactory();
      EncodingManager encodingManager0 = EncodingManager.create((FlagEncoderFactory) defaultFlagEncoderFactory0, "");
      GraphHopperStorage graphHopperStorage0 = new GraphHopperStorage(mMapDirectory0, encodingManager0, true, true, 4);
      // Undeclared exception!
      try { 
        GHUtility.shuffle(graphHopperStorage0, graphHopperStorage0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Shuffling the graph is currently not supported in the presence of turn costs
         //
         verifyException("com.graphhopper.util.GHUtility", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      RAMDirectory rAMDirectory0 = new RAMDirectory();
      ArrayList<FlagEncoder> arrayList0 = new ArrayList<FlagEncoder>();
      EncodingManager encodingManager0 = EncodingManager.create((List<? extends FlagEncoder>) arrayList0);
      GraphHopperStorage graphHopperStorage0 = new GraphHopperStorage(rAMDirectory0, encodingManager0, false, false);
      Graph graph0 = GHUtility.shuffle(graphHopperStorage0, graphHopperStorage0);
      assertEquals(0, graph0.getEdges());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      BBox bBox0 = new BBox(doubleArray0);
      MockRandom mockRandom0 = new MockRandom();
      DefaultEdgeFilter defaultEdgeFilter0 = DefaultEdgeFilter.inEdges((BooleanEncodedValue) null);
      // Undeclared exception!
      try { 
        GHUtility.createRandomSnaps(bBox0, (LocationIndex) null, mockRandom0, 3836, false, defaultEdgeFilter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.util.GHUtility", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DAType dAType0 = DAType.fromString("");
      GHDirectory gHDirectory0 = new GHDirectory("", dAType0);
      ArrayList<FlagEncoder> arrayList0 = new ArrayList<FlagEncoder>();
      EncodingManager encodingManager0 = EncodingManager.create((List<? extends FlagEncoder>) arrayList0);
      GraphHopperStorage graphHopperStorage0 = new GraphHopperStorage(gHDirectory0, encodingManager0, true, true, 6);
      AllEdgesIterator allEdgesIterator0 = graphHopperStorage0.getAllEdges();
      List<Integer> list0 = GHUtility.getEdgeIds(allEdgesIterator0);
      assertFalse(list0.contains(6));
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      int[] intArray0 = new int[8];
      Set<Integer> set0 = GHUtility.asSet(intArray0);
      assertEquals(1, set0.size());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DAType dAType0 = DAType.MMAP_RO;
      GHDirectory gHDirectory0 = new GHDirectory("|vehicle=", dAType0);
      FlagEncoder[] flagEncoderArray0 = new FlagEncoder[0];
      EncodingManager encodingManager0 = EncodingManager.create(flagEncoderArray0);
      GraphHopperStorage graphHopperStorage0 = new GraphHopperStorage(gHDirectory0, encodingManager0, false);
      List<String> list0 = GHUtility.getProblems(graphHopperStorage0);
      assertFalse(list0.contains("|vehicle="));
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      GHUtility.DisabledNodeAccess gHUtility_DisabledNodeAccess0 = new GHUtility.DisabledNodeAccess();
      // Undeclared exception!
      try { 
        gHUtility_DisabledNodeAccess0.ensureNode(Integer.MIN_VALUE);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledNodeAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      GHUtility.DisabledNodeAccess gHUtility_DisabledNodeAccess0 = new GHUtility.DisabledNodeAccess();
      // Undeclared exception!
      try { 
        gHUtility_DisabledNodeAccess0.getEle(2711);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledNodeAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      GHUtility.DisabledNodeAccess gHUtility_DisabledNodeAccess0 = new GHUtility.DisabledNodeAccess();
      // Undeclared exception!
      try { 
        gHUtility_DisabledNodeAccess0.is3D();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledNodeAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      GHUtility.DisabledNodeAccess gHUtility_DisabledNodeAccess0 = new GHUtility.DisabledNodeAccess();
      // Undeclared exception!
      try { 
        gHUtility_DisabledNodeAccess0.getTurnCostIndex((-719));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledNodeAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      GHUtility.DisabledNodeAccess gHUtility_DisabledNodeAccess0 = new GHUtility.DisabledNodeAccess();
      // Undeclared exception!
      try { 
        gHUtility_DisabledNodeAccess0.getDimension();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledNodeAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      GHUtility.DisabledNodeAccess gHUtility_DisabledNodeAccess0 = new GHUtility.DisabledNodeAccess();
      // Undeclared exception!
      try { 
        gHUtility_DisabledNodeAccess0.setNode(0, (-3202.969873572483), (-3202.969873572483), (-3206.584));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledNodeAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      GHUtility.DisabledNodeAccess gHUtility_DisabledNodeAccess0 = new GHUtility.DisabledNodeAccess();
      // Undeclared exception!
      try { 
        gHUtility_DisabledNodeAccess0.getLon(5139);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledNodeAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      GHUtility.DisabledNodeAccess gHUtility_DisabledNodeAccess0 = new GHUtility.DisabledNodeAccess();
      // Undeclared exception!
      try { 
        gHUtility_DisabledNodeAccess0.setTurnCostIndex((-1570), 20756);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledNodeAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      // Undeclared exception!
      try { 
        gHUtility_DisabledEdgeIterator0.set((DecimalEncodedValue) null, (double) 0, (double) 0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      // Undeclared exception!
      try { 
        gHUtility_DisabledEdgeIterator0.getEdge();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      // Undeclared exception!
      try { 
        GHUtility.createBBox(gHUtility_DisabledEdgeIterator0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      // Undeclared exception!
      try { 
        gHUtility_DisabledEdgeIterator0.getName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      SimpleBooleanEncodedValue simpleBooleanEncodedValue0 = (SimpleBooleanEncodedValue)EdgeIteratorState.UNFAVORED_EDGE;
      // Undeclared exception!
      try { 
        gHUtility_DisabledEdgeIterator0.set((BooleanEncodedValue) simpleBooleanEncodedValue0, true, true);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      BooleanEncodedValue booleanEncodedValue0 = EdgeIteratorState.REVERSE_STATE;
      // Undeclared exception!
      try { 
        gHUtility_DisabledEdgeIterator0.set(booleanEncodedValue0, false);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      // Undeclared exception!
      try { 
        gHUtility_DisabledEdgeIterator0.getBaseNode();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      // Undeclared exception!
      try { 
        gHUtility_DisabledEdgeIterator0.setDistance(0.0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      // Undeclared exception!
      try { 
        gHUtility_DisabledEdgeIterator0.setName("");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      // Undeclared exception!
      try { 
        gHUtility_DisabledEdgeIterator0.copyPropertiesFrom((EdgeIteratorState) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      MinguoEra minguoEra0 = MinguoEra.BEFORE_ROC;
      // Undeclared exception!
      try { 
        gHUtility_DisabledEdgeIterator0.set((EnumEncodedValue<MinguoEra>) null, minguoEra0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      // Undeclared exception!
      try { 
        gHUtility_DisabledEdgeIterator0.setReverse((BooleanEncodedValue) null, true);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      Class<MinguoEra> class0 = MinguoEra.class;
      EnumEncodedValue<MinguoEra> enumEncodedValue0 = new EnumEncodedValue<MinguoEra>("demanding_mountain_hiking", class0);
      MinguoEra minguoEra0 = MinguoEra.BEFORE_ROC;
      // Undeclared exception!
      try { 
        gHUtility_DisabledEdgeIterator0.set(enumEncodedValue0, minguoEra0, minguoEra0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      // Undeclared exception!
      try { 
        gHUtility_DisabledEdgeIterator0.detach(true);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      // Undeclared exception!
      try { 
        gHUtility_DisabledEdgeIterator0.getReverse((EnumEncodedValue<MinguoEra>) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      // Undeclared exception!
      try { 
        gHUtility_DisabledEdgeIterator0.get((StringEncodedValue) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      PointList pointList0 = new PointList();
      // Undeclared exception!
      try { 
        gHUtility_DisabledEdgeIterator0.setWayGeometry(pointList0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      // Undeclared exception!
      try { 
        gHUtility_DisabledEdgeIterator0.setReverse((StringEncodedValue) null, "1PuAZK*");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      // Undeclared exception!
      try { 
        gHUtility_DisabledEdgeIterator0.set((StringEncodedValue) null, "only_right_turn", "only_right_turn");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      // Undeclared exception!
      try { 
        gHUtility_DisabledEdgeIterator0.get((EnumEncodedValue<MinguoEra>) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      // Undeclared exception!
      try { 
        gHUtility_DisabledEdgeIterator0.getOrigEdgeLast();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      // Undeclared exception!
      try { 
        gHUtility_DisabledEdgeIterator0.set((IntEncodedValue) null, 1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      // Undeclared exception!
      try { 
        gHUtility_DisabledEdgeIterator0.getDistance();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      // Undeclared exception!
      try { 
        gHUtility_DisabledEdgeIterator0.getOrigEdgeFirst();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      // Undeclared exception!
      try { 
        gHUtility_DisabledEdgeIterator0.getFlags();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      // Undeclared exception!
      try { 
        gHUtility_DisabledEdgeIterator0.setReverse((IntEncodedValue) null, (-1210));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      // Undeclared exception!
      try { 
        gHUtility_DisabledEdgeIterator0.set((IntEncodedValue) null, (int) (byte)7, 734);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      // Undeclared exception!
      try { 
        gHUtility_DisabledEdgeIterator0.getEdgeKey();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      // Undeclared exception!
      try { 
        gHUtility_DisabledEdgeIterator0.getReverse((StringEncodedValue) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      // Undeclared exception!
      try { 
        gHUtility_DisabledEdgeIterator0.set((StringEncodedValue) null, "O;k1k}=LHR X_");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      // Undeclared exception!
      try { 
        gHUtility_DisabledEdgeIterator0.get((IntEncodedValue) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      // Undeclared exception!
      try { 
        gHUtility_DisabledEdgeIterator0.getAdjNode();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      // Undeclared exception!
      try { 
        gHUtility_DisabledEdgeIterator0.getReverse((IntEncodedValue) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      // Undeclared exception!
      try { 
        gHUtility_DisabledEdgeIterator0.getReverse((DecimalEncodedValue) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      SimpleBooleanEncodedValue simpleBooleanEncodedValue0 = (SimpleBooleanEncodedValue)EdgeIteratorState.UNFAVORED_EDGE;
      // Undeclared exception!
      try { 
        gHUtility_DisabledEdgeIterator0.get((BooleanEncodedValue) simpleBooleanEncodedValue0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      MinguoEra minguoEra0 = MinguoEra.BEFORE_ROC;
      // Undeclared exception!
      try { 
        gHUtility_DisabledEdgeIterator0.setReverse((EnumEncodedValue<MinguoEra>) null, minguoEra0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      int[] intArray0 = new int[6];
      IntsRef intsRef0 = new IntsRef(intArray0, 175, 1922);
      // Undeclared exception!
      try { 
        gHUtility_DisabledEdgeIterator0.setFlags(intsRef0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      // Undeclared exception!
      try { 
        GHUtility.getEdgeIds(gHUtility_DisabledEdgeIterator0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      GHUtility.DisabledEdgeIterator gHUtility_DisabledEdgeIterator0 = new GHUtility.DisabledEdgeIterator();
      SimpleBooleanEncodedValue simpleBooleanEncodedValue0 = (SimpleBooleanEncodedValue)EdgeIteratorState.UNFAVORED_EDGE;
      // Undeclared exception!
      try { 
        gHUtility_DisabledEdgeIterator0.getReverse((BooleanEncodedValue) simpleBooleanEncodedValue0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported. Edge is empty.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledEdgeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      int int0 = GHUtility.getEdgeFromEdgeKey((-901));
      assertEquals((-450), int0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      // Undeclared exception!
      try { 
        GHUtility.setSpeed(89.0042, 89.0042, (FlagEncoder) null, (EdgeIteratorState[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DAType dAType0 = DAType.MMAP_RO;
      GHDirectory gHDirectory0 = new GHDirectory("|vehicle=", dAType0);
      FlagEncoder[] flagEncoderArray0 = new FlagEncoder[0];
      EncodingManager encodingManager0 = EncodingManager.create(flagEncoderArray0);
      GraphHopperStorage graphHopperStorage0 = new GraphHopperStorage(gHDirectory0, encodingManager0, false);
      String[] stringArray0 = new String[0];
      PMap pMap0 = PMap.read(stringArray0);
      FootFlagEncoder footFlagEncoder0 = new FootFlagEncoder(pMap0);
      GHUtility.printGraphForUnitTest((Graph) graphHopperStorage0, (FlagEncoder) footFlagEncoder0);
      assertEquals(5, footFlagEncoder0.getVersion());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      GHUtility.DisabledNodeAccess gHUtility_DisabledNodeAccess0 = new GHUtility.DisabledNodeAccess();
      // Undeclared exception!
      try { 
        GHUtility.getDistance(2490, 6, gHUtility_DisabledNodeAccess0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported.
         //
         verifyException("com.graphhopper.util.GHUtility$DisabledNodeAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      GHUtility gHUtility0 = new GHUtility();
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      double[] doubleArray0 = new double[8];
      BBox bBox0 = new BBox(doubleArray0);
      // Undeclared exception!
      try { 
        GHUtility.getRandomSnap((LocationIndex) null, mockRandom0, bBox0, (EdgeFilter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.util.GHUtility", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      RAMDirectory rAMDirectory0 = new RAMDirectory();
      Stack<Bike2WeightFlagEncoder> stack0 = new Stack<Bike2WeightFlagEncoder>();
      EncodingManager encodingManager0 = EncodingManager.create((List<? extends FlagEncoder>) stack0);
      GraphHopperStorage graphHopperStorage0 = new GraphHopperStorage(rAMDirectory0, encodingManager0, false);
      BooleanEncodedValue booleanEncodedValue0 = EdgeIteratorState.REVERSE_STATE;
      DefaultEdgeFilter defaultEdgeFilter0 = DefaultEdgeFilter.outEdges(booleanEncodedValue0);
      // Undeclared exception!
      try { 
        GHUtility.printInfo(graphHopperStorage0, 0, 199, defaultEdgeFilter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.graphhopper.storage.RAMIntDataAccess", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      DefaultEdgeFilter defaultEdgeFilter0 = DefaultEdgeFilter.inEdges((BooleanEncodedValue) null);
      // Undeclared exception!
      try { 
        GHUtility.printInfo((Graph) null, (-424), 1045, defaultEdgeFilter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.util.GHUtility", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      IntsRef intsRef0 = IntsRef.EMPTY;
      EdgeIteratorState edgeIteratorState0 = GHUtility.createMockedEdgeIteratorState(2370.95405556, intsRef0, 0, 0, 0, 0, 0);
      BBox bBox0 = GHUtility.createBBox(edgeIteratorState0);
      assertEquals(0.0, bBox0.minLat, 0.01);
      assertEquals(4.0, bBox0.maxLon, 0.01);
      assertEquals(2.0, bBox0.minLon, 0.01);
      assertEquals(6.0, bBox0.maxLat, 0.01);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      IntsRef intsRef0 = IntsRef.EMPTY;
      EdgeIteratorState edgeIteratorState0 = GHUtility.createMockedEdgeIteratorState(2370.95405556, intsRef0);
      RacingBikeFlagEncoder racingBikeFlagEncoder0 = new RacingBikeFlagEncoder();
      // Undeclared exception!
      try { 
        GHUtility.setSpeed((double) 0, false, false, (FlagEncoder) racingBikeFlagEncoder0, edgeIteratorState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // FlagEncoder com.graphhopper.routing.util.RacingBikeFlagEncoder@0000000002 not yet initialized
         //
         verifyException("com.graphhopper.routing.util.AbstractFlagEncoder", e);
      }
  }
}
