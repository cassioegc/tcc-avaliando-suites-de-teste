/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 04 05:45:24 GMT 2021
 */

package com.graphhopper.coll;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.carrotsearch.hppc.cursors.IntCursor;
import com.graphhopper.coll.GHBitSet;
import com.graphhopper.coll.GHIntHashSet;
import com.graphhopper.coll.GHTBitSet;
import java.util.Iterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GHTBitSet_ESTest extends GHTBitSet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GHIntHashSet gHIntHashSet0 = mock(GHIntHashSet.class, new ViolatedAssumptionAnswer());
      doReturn("", "", (String) null).when(gHIntHashSet0).toString();
      GHTBitSet gHTBitSet0 = new GHTBitSet(gHIntHashSet0);
      gHTBitSet0.toString();
      gHTBitSet0.toString();
      String string0 = gHTBitSet0.toString();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GHTBitSet gHTBitSet0 = new GHTBitSet();
      gHTBitSet0.add(0);
      int int0 = gHTBitSet0.getCardinality();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GHIntHashSet gHIntHashSet0 = mock(GHIntHashSet.class, new ViolatedAssumptionAnswer());
      doReturn((-1921)).when(gHIntHashSet0).size();
      GHTBitSet gHTBitSet0 = new GHTBitSet(gHIntHashSet0);
      gHTBitSet0.getCardinality();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GHTBitSet gHTBitSet0 = new GHTBitSet(0);
      Iterator<IntCursor> iterator0 = (Iterator<IntCursor>) mock(Iterator.class, new ViolatedAssumptionAnswer());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GHTBitSet gHTBitSet0 = new GHTBitSet();
      gHTBitSet0.add((-807));
      boolean boolean0 = gHTBitSet0.contains((-807));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GHTBitSet gHTBitSet0 = new GHTBitSet();
      GHBitSet gHBitSet0 = gHTBitSet0.copyTo(gHTBitSet0);
      GHBitSet gHBitSet1 = gHTBitSet0.copyTo(gHTBitSet0);
      gHTBitSet0.copyTo(gHBitSet1);
      gHTBitSet0.copyTo(gHBitSet0);
      // Undeclared exception!
      gHTBitSet0.toString();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GHTBitSet gHTBitSet0 = new GHTBitSet((GHIntHashSet) null);
      // Undeclared exception!
      try { 
        gHTBitSet0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.coll.GHTBitSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GHTBitSet gHTBitSet0 = new GHTBitSet((GHIntHashSet) null);
      // Undeclared exception!
      try { 
        gHTBitSet0.remove((-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.coll.GHTBitSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GHTBitSet gHTBitSet0 = new GHTBitSet(4355);
      GHBitSet gHBitSet0 = gHTBitSet0.copyTo(gHTBitSet0);
      // Undeclared exception!
      gHTBitSet0.copyTo(gHBitSet0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GHTBitSet gHTBitSet0 = new GHTBitSet();
      // Undeclared exception!
      try { 
        gHTBitSet0.copyTo((GHBitSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.coll.GHTBitSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GHTBitSet gHTBitSet0 = new GHTBitSet((GHIntHashSet) null);
      // Undeclared exception!
      try { 
        gHTBitSet0.contains(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.coll.GHTBitSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GHTBitSet gHTBitSet0 = new GHTBitSet((GHIntHashSet) null);
      // Undeclared exception!
      try { 
        gHTBitSet0.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.coll.GHTBitSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GHTBitSet gHTBitSet0 = null;
      try {
        gHTBitSet0 = new GHTBitSet((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of elements must be >= 0: -1
         //
         verifyException("com.carrotsearch.hppc.HashContainers", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GHTBitSet gHTBitSet0 = new GHTBitSet();
      int int0 = gHTBitSet0.getCardinality();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GHTBitSet gHTBitSet0 = new GHTBitSet();
      String string0 = gHTBitSet0.toString();
      assertEquals("[]", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GHTBitSet gHTBitSet0 = new GHTBitSet();
      gHTBitSet0.clear();
      assertEquals(0, gHTBitSet0.getCardinality());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GHTBitSet gHTBitSet0 = new GHTBitSet();
      gHTBitSet0.remove((-1431));
      assertEquals(0, gHTBitSet0.getCardinality());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GHTBitSet gHTBitSet0 = new GHTBitSet(1);
      // Undeclared exception!
      try { 
        gHTBitSet0.next(2880);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported yet.
         //
         verifyException("com.graphhopper.coll.GHTBitSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GHTBitSet gHTBitSet0 = new GHTBitSet((GHIntHashSet) null);
      // Undeclared exception!
      try { 
        gHTBitSet0.add(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.coll.GHTBitSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GHTBitSet gHTBitSet0 = new GHTBitSet();
      gHTBitSet0.add(0);
      GHTBitSet gHTBitSet1 = new GHTBitSet();
      GHBitSet gHBitSet0 = gHTBitSet0.copyTo(gHTBitSet1);
      assertEquals(1, gHBitSet0.getCardinality());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GHTBitSet gHTBitSet0 = new GHTBitSet();
      boolean boolean0 = gHTBitSet0.contains(1);
      assertFalse(boolean0);
  }
}
