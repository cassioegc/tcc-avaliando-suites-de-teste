/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 04 04:45:53 GMT 2021
 */

package com.graphhopper.reader.dem;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.graphhopper.reader.dem.CGIARProvider;
import com.graphhopper.reader.dem.GMTEDProvider;
import com.graphhopper.reader.dem.SRTMGL1Provider;
import com.graphhopper.reader.dem.SRTMProvider;
import com.graphhopper.reader.dem.SkadiProvider;
import com.graphhopper.storage.DAType;
import com.graphhopper.storage.Directory;
import com.graphhopper.util.Downloader;
import java.io.File;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractElevationProvider_ESTest extends AbstractElevationProvider_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SRTMGL1Provider sRTMGL1Provider0 = new SRTMGL1Provider("com.graphhopper.reader.dem.SRTMProvider");
      double double0 = 0.0;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("com.graphhopper.reader.dem.SRTMProvider");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "com.graphhopper.reader.dem.SRTMProvider");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "com.graphhopper.reader.dem.SRTMProvider");
      sRTMGL1Provider0.getDownloadURL(0.0, 0.0);
      // Undeclared exception!
      try { 
        sRTMGL1Provider0.getDirectory();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // file '/home/cassioegc/tcc/graphhopper.reader-osm/core/com.graphhopper.reader.dem.SRTMProvider' exists but is not a directory
         //
         verifyException("com.graphhopper.storage.GHDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SRTMGL1Provider sRTMGL1Provider0 = new SRTMGL1Provider(" using interpolate: ");
      sRTMGL1Provider0.interpolate = true;
      sRTMGL1Provider0.setBaseURL(" using interpolate: ");
      sRTMGL1Provider0.toString();
      GMTEDProvider gMTEDProvider0 = new GMTEDProvider();
      gMTEDProvider0.getFileName(0.0, 0.0);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, (String) null);
      gMTEDProvider0.getEle(2444.95, 0.0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = " using interpolate: ";
      stringArray0[1] = "10s000e_20101117_gmted_mea075";
      stringArray0[2] = "10s000e_20101117_gmted_mea075";
      stringArray0[3] = "10s000e_20101117_gmted_mea075";
      // Undeclared exception!
      try { 
        SRTMProvider.main(stringArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Cannot load area names from classpath
         //
         verifyException("com.graphhopper.reader.dem.SRTMProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CGIARProvider cGIARProvider0 = new CGIARProvider();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "UP{eFCRv";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/cgiar");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "$Yt.}");
      stringArray0[1] = ", error:";
      // Undeclared exception!
      try { 
        CGIARProvider.main(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cache path has to be a directory
         //
         verifyException("com.graphhopper.reader.dem.AbstractElevationProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CGIARProvider cGIARProvider0 = new CGIARProvider();
      cGIARProvider0.getDirectory();
      cGIARProvider0.setAutoRemoveTemporaryFiles(false);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "(r=Rn";
      stringArray0[1] = "";
      stringArray0[2] = "$?!=l $#L]Vls@<BN31";
      CGIARProvider.main(stringArray0);
      cGIARProvider0.down(1.0E-7);
      cGIARProvider0.getCacheDir();
      cGIARProvider0.isOutsideSupportedArea(1.0E-7, 1.0E7);
      SRTMGL1Provider sRTMGL1Provider0 = new SRTMGL1Provider("(r=Rn");
      sRTMGL1Provider0.autoRemoveTemporary = true;
      sRTMGL1Provider0.getFileName((-1166.7), 0.0);
      GMTEDProvider gMTEDProvider0 = new GMTEDProvider();
      gMTEDProvider0.isOutsideSupportedArea(29.840644, 1326.1944936);
      // Undeclared exception!
      try { 
        SRTMProvider.main(stringArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Cannot load area names from classpath
         //
         verifyException("com.graphhopper.reader.dem.SRTMProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "l60cb@8ZfTU Do$";
      double double0 = (-2339.0);
      String string1 = "(SO";
      String[] stringArray0 = new String[5];
      stringArray0[0] = "(SO";
      stringArray0[1] = "yU$`O>RJaj\"ZuhBBj-F";
      stringArray0[2] = "l60cb@8ZfTU Do$";
      stringArray0[3] = "yU$`O>RJaj\"ZuhBBj-F";
      stringArray0[4] = "(SO";
      // Undeclared exception!
      try { 
        CGIARProvider.main(stringArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Simulated IOException
         //
         verifyException("com.graphhopper.reader.dem.AbstractElevationProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CGIARProvider cGIARProvider0 = new CGIARProvider();
      long long0 = 0L;
      cGIARProvider0.setDAType((DAType) null);
      cGIARProvider0.setAutoRemoveTemporaryFiles(true);
      cGIARProvider0.release();
      cGIARProvider0.interpolate = true;
      cGIARProvider0.sleep = 0L;
      cGIARProvider0.setAutoRemoveTemporaryFiles(true);
      cGIARProvider0.getMinLonForTile(1116.2367);
      cGIARProvider0.getInterpolate();
      SkadiProvider skadiProvider0 = new SkadiProvider("+5wZm@Fr");
      skadiProvider0.getFileName(0L, 0L);
      cGIARProvider0.getDownloadURL(0.0, 3110.2275);
      GMTEDProvider gMTEDProvider0 = new GMTEDProvider("+5wZm@Fr");
      gMTEDProvider0.getMinLatForTile(0.0);
      SRTMProvider sRTMProvider0 = null;
      try {
        sRTMProvider0 = new SRTMProvider();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Cannot load area names from classpath
         //
         verifyException("com.graphhopper.reader.dem.SRTMProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CGIARProvider cGIARProvider0 = new CGIARProvider();
      cGIARProvider0.sleep = (-1046L);
      cGIARProvider0.sleep = 0L;
      cGIARProvider0.setInterpolate(false);
      cGIARProvider0.getFileName(1.0, 38.065392);
      cGIARProvider0.getFileName(0.75, 0.75);
      cGIARProvider0.setDAType((DAType) null);
      cGIARProvider0.setAutoRemoveTemporaryFiles(false);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SRTMProvider sRTMProvider0 = null;
      try {
        sRTMProvider0 = new SRTMProvider("/");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Cannot load area names from classpath
         //
         verifyException("com.graphhopper.reader.dem.SRTMProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = "0.";
      GMTEDProvider gMTEDProvider0 = new GMTEDProvider("0.");
      gMTEDProvider0.getDownloadURL(521.411, 521.411);
      gMTEDProvider0.setAutoRemoveTemporaryFiles(true);
      gMTEDProvider0.setDownloader((Downloader) null);
      SRTMProvider sRTMProvider0 = null;
      try {
        sRTMProvider0 = new SRTMProvider();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Cannot load area names from classpath
         //
         verifyException("com.graphhopper.reader.dem.SRTMProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CGIARProvider cGIARProvider0 = new CGIARProvider("f8vGdJxZ}$01/?");
      cGIARProvider0.setAutoRemoveTemporaryFiles(true);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = "";
      CGIARProvider cGIARProvider0 = new CGIARProvider("");
      // Undeclared exception!
      try { 
        cGIARProvider0.setBaseURL("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // baseUrl cannot be empty
         //
         verifyException("com.graphhopper.reader.dem.AbstractElevationProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SkadiProvider skadiProvider0 = new SkadiProvider("");
      skadiProvider0.setSleep((-1L));
      skadiProvider0.getCacheDir();
      CGIARProvider cGIARProvider0 = new CGIARProvider();
      cGIARProvider0.getFileNameOfLocalFile(2333.8, 2333.8);
      cGIARProvider0.setInterpolate(false);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SkadiProvider skadiProvider0 = new SkadiProvider("/Y&3ZZiQ");
      skadiProvider0.getDirectory();
      skadiProvider0.getInterpolate();
      SRTMProvider sRTMProvider0 = null;
      try {
        sRTMProvider0 = new SRTMProvider("");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Cannot load area names from classpath
         //
         verifyException("com.graphhopper.reader.dem.SRTMProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SkadiProvider skadiProvider0 = new SkadiProvider("{'9J<A;jn@Ujk&^:");
      CGIARProvider cGIARProvider0 = new CGIARProvider();
      cGIARProvider0.down((-1612.049));
      cGIARProvider0.setSleep((-1615));
      cGIARProvider0.getDirectory();
      skadiProvider0.getDownloadURL(14.575127, (-1615));
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SRTMGL1Provider sRTMGL1Provider0 = new SRTMGL1Provider();
      sRTMGL1Provider0.getCacheDir();
      SRTMProvider sRTMProvider0 = null;
      try {
        sRTMProvider0 = new SRTMProvider();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Cannot load area names from classpath
         //
         verifyException("com.graphhopper.reader.dem.SRTMProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GMTEDProvider gMTEDProvider0 = new GMTEDProvider();
      gMTEDProvider0.setInterpolate(true);
      gMTEDProvider0.baseUrl = ", as: ";
      String[] stringArray0 = new String[4];
      stringArray0[0] = ", as: ";
      stringArray0[1] = ", as: ";
      stringArray0[2] = ", to: ";
      stringArray0[3] = ", as: ";
      GMTEDProvider.main(stringArray0);
      double double0 = 1.0;
      gMTEDProvider0.getFileNameOfLocalFile(1.0, 1.0);
      CGIARProvider cGIARProvider0 = new CGIARProvider();
      cGIARProvider0.getMinLonForTile(1.0);
      double double1 = 877.2736;
      gMTEDProvider0.getDownloadURL((-1.0), 877.2736);
      // Undeclared exception!
      try { 
        cGIARProvider0.setBaseURL((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // baseUrl cannot be empty
         //
         verifyException("com.graphhopper.reader.dem.AbstractElevationProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SkadiProvider skadiProvider0 = new SkadiProvider("{'9J<A;jn@Ujk&^:");
      CGIARProvider cGIARProvider0 = new CGIARProvider();
      cGIARProvider0.down((-1612.049));
      Downloader downloader0 = new Downloader("!J' OH>3)");
      skadiProvider0.setDownloader(downloader0);
      cGIARProvider0.setSleep((-1615));
      skadiProvider0.getDownloadURL(14.575127, (-1615));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CGIARProvider cGIARProvider0 = new CGIARProvider();
      cGIARProvider0.setAutoRemoveTemporaryFiles(false);
      cGIARProvider0.setBaseURL(" using interpolate: ");
      cGIARProvider0.toString();
      double double0 = 0.0;
      cGIARProvider0.getFileName(0.0, 0.0);
      cGIARProvider0.getFileName(0.0, 0.0);
      cGIARProvider0.setBaseURL("@g=5R8RHJZN=");
      // Undeclared exception!
      try { 
        cGIARProvider0.setBaseURL("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // baseUrl cannot be empty
         //
         verifyException("com.graphhopper.reader.dem.AbstractElevationProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GMTEDProvider gMTEDProvider0 = new GMTEDProvider("gzip, deflate");
      Directory directory0 = gMTEDProvider0.getDirectory();
      gMTEDProvider0.dir = directory0;
      gMTEDProvider0.release();
      gMTEDProvider0.toString();
      SkadiProvider skadiProvider0 = new SkadiProvider();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GMTEDProvider gMTEDProvider0 = new GMTEDProvider("e,lVw1GkP.Rf");
      gMTEDProvider0.getFileNameOfLocalFile(0.0, 0.0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "UD(qqq &R<0{MMK";
      stringArray0[1] = "e,lVw1GkP.Rf";
      stringArray0[2] = "10s000e_20101117_gmted_mea075.tif";
      stringArray0[3] = "e,lVw1GkP.Rf";
      stringArray0[4] = "/IT(u(";
      stringArray0[5] = "e,lVw1GkP.Rf";
      stringArray0[6] = "e,lVw1GkP.Rf";
      CGIARProvider.main(stringArray0);
      GMTEDProvider.main(stringArray0);
      CGIARProvider.main(stringArray0);
      CGIARProvider cGIARProvider0 = new CGIARProvider();
      cGIARProvider0.toString();
      assertFalse(cGIARProvider0.getInterpolate());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CGIARProvider cGIARProvider0 = new CGIARProvider();
      long long0 = 0L;
      cGIARProvider0.setDAType((DAType) null);
      cGIARProvider0.release();
      cGIARProvider0.getMinLonForTile(1116.2367);
      cGIARProvider0.getInterpolate();
      SkadiProvider skadiProvider0 = new SkadiProvider("+5wZm@Fr");
      skadiProvider0.getFileName(2000L, 0L);
      cGIARProvider0.getDownloadURL(0.0, 3110.2275);
      GMTEDProvider gMTEDProvider0 = new GMTEDProvider("+5wZm@Fr");
      gMTEDProvider0.getMinLatForTile(0.0);
      SRTMProvider sRTMProvider0 = null;
      try {
        sRTMProvider0 = new SRTMProvider();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Cannot load area names from classpath
         //
         verifyException("com.graphhopper.reader.dem.SRTMProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GMTEDProvider gMTEDProvider0 = new GMTEDProvider("");
      Directory directory0 = gMTEDProvider0.getDirectory();
      assertNotNull(directory0);
      assertFalse(gMTEDProvider0.getInterpolate());
  }
}
