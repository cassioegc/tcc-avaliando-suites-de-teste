/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 04 05:07:35 GMT 2021
 */

package com.graphhopper.reader.dem;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.graphhopper.reader.dem.SkadiProvider;
import java.io.EOFException;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.zip.ZipException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SkadiProvider_ESTest extends SkadiProvider_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SkadiProvider skadiProvider0 = new SkadiProvider();
      String string0 = skadiProvider0.getDownloadURL(0.0, 0.0);
      assertEquals("N00/N00E000.hgt.gz", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SkadiProvider skadiProvider0 = new SkadiProvider("qal&$r");
      // Undeclared exception!
      try { 
        skadiProvider0.readFile((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SkadiProvider skadiProvider0 = new SkadiProvider("}K+|>VPfHFm@|A&;");
      MockFile mockFile0 = (MockFile)skadiProvider0.cacheDir;
      mockFile0.createNewFile();
      try { 
        skadiProvider0.readFile(mockFile0);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.zip.GZIPInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("RAM_STORE");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      SkadiProvider skadiProvider0 = null;
      try {
        skadiProvider0 = new SkadiProvider("RAM_STORE");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Simulated IOException
         //
         verifyException("com.graphhopper.reader.dem.AbstractElevationProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SkadiProvider skadiProvider0 = null;
      try {
        skadiProvider0 = new SkadiProvider((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SkadiProvider skadiProvider0 = new SkadiProvider("");
      MockFile mockFile0 = (MockFile)skadiProvider0.cacheDir;
      try { 
        skadiProvider0.readFile(mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SkadiProvider skadiProvider0 = new SkadiProvider();
      String string0 = skadiProvider0.getDownloadURL((-860.8716107070538), (-52.7261944542));
      assertEquals("S861/S861W053.hgt.gz", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SkadiProvider skadiProvider0 = new SkadiProvider();
      String string0 = skadiProvider0.getFileName((-2876.67841132917), 39.9999999);
      assertEquals("s2877e039", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SkadiProvider skadiProvider0 = new SkadiProvider("~s");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("~s");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "gLAaDf]9QO0~D0Fd");
      MockFile mockFile0 = (MockFile)skadiProvider0.cacheDir;
      try { 
        skadiProvider0.readFile(mockFile0);
        fail("Expecting exception: ZipException");
      
      } catch(ZipException e) {
         //
         // Not in GZIP format
         //
         verifyException("java.util.zip.GZIPInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String[] stringArray0 = new String[3];
      // Undeclared exception!
      try { 
        SkadiProvider.main(stringArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // There was an issue looking up the coordinates for 49.949784,11.57517
         //
         verifyException("com.graphhopper.reader.dem.AbstractSRTMElevationProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SkadiProvider skadiProvider0 = new SkadiProvider();
      String string0 = skadiProvider0.toString();
      assertEquals("skadi", string0);
  }
}
