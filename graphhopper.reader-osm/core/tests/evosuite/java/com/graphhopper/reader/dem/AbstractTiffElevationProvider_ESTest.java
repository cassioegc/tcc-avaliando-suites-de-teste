/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 04 03:25:04 GMT 2021
 */

package com.graphhopper.reader.dem;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.graphhopper.reader.dem.CGIARProvider;
import com.graphhopper.reader.dem.GMTEDProvider;
import com.graphhopper.storage.DAType;
import com.graphhopper.storage.Directory;
import com.graphhopper.storage.MMapDirectory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractTiffElevationProvider_ESTest extends AbstractTiffElevationProvider_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String[] stringArray0 = new String[1];
      CGIARProvider.main(stringArray0);
      CGIARProvider.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      GMTEDProvider gMTEDProvider0 = new GMTEDProvider();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://edcintl.cr.usgs.gov/downloads/sciweb1/shared/topo/downloads/GMTED/Global_tiles_GMTED/075darcsec/mea//E210/10S210E_20101117_gmted_mea075.tif");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "i#WsA%[SS43~4yl");
      // Undeclared exception!
      try { 
        gMTEDProvider0.getEle((-1.214369138070578), 1764.0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't decode 10s210e_20101117_gmted_mea075.tif
         //
         verifyException("com.graphhopper.reader.dem.GMTEDProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      GMTEDProvider gMTEDProvider0 = new GMTEDProvider();
      gMTEDProvider0.getEle((-1.214369138070578), (-1.214369138070578));
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        gMTEDProvider0.release();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Couldn't close resource
         //
         verifyException("com.graphhopper.util.Helper", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CGIARProvider cGIARProvider0 = new CGIARProvider();
      cGIARProvider0.setDAType((DAType) null);
      // Undeclared exception!
      try { 
        cGIARProvider0.getEle(0.5, 1.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.storage.GHDirectory", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CGIARProvider cGIARProvider0 = new CGIARProvider();
      String[] stringArray0 = new String[3];
      CGIARProvider.main(stringArray0);
      double double0 = cGIARProvider0.getEle(14.575127, 10);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/gmted/30s090w_20101117_gmted_mea075.tif");
      FileSystemHandling.createFolder(evoSuiteFile0);
      String[] stringArray0 = new String[5];
      // Undeclared exception!
      try { 
        GMTEDProvider.main(stringArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't decode 30s090w_20101117_gmted_mea075.tif
         //
         verifyException("com.graphhopper.reader.dem.GMTEDProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      GMTEDProvider gMTEDProvider0 = new GMTEDProvider();
      double double0 = gMTEDProvider0.getEle((-1.0), 0.6491354767781518);
      double double1 = gMTEDProvider0.getEle(0.0, 0.0);
      assertEquals(double1, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      CGIARProvider cGIARProvider0 = new CGIARProvider();
      double double0 = cGIARProvider0.getEle(1.0E7, 1.0E7);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      GMTEDProvider gMTEDProvider0 = new GMTEDProvider();
      gMTEDProvider0.autoRemoveTemporary = false;
      MMapDirectory mMapDirectory0 = new MMapDirectory("[(:&$oiqMzt!");
      gMTEDProvider0.dir = (Directory) mMapDirectory0;
      gMTEDProvider0.release();
      assertEquals("gmted", gMTEDProvider0.toString());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      CGIARProvider cGIARProvider0 = new CGIARProvider();
      cGIARProvider0.release();
      assertFalse(cGIARProvider0.getInterpolate());
  }
}
