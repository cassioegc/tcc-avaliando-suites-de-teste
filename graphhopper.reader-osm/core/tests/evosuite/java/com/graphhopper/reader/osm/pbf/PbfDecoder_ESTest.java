/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 04 04:39:43 GMT 2021
 */

package com.graphhopper.reader.osm.pbf;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.graphhopper.reader.osm.pbf.PbfDecoder;
import com.graphhopper.reader.osm.pbf.PbfRawBlob;
import com.graphhopper.reader.osm.pbf.PbfStreamSplitter;
import com.graphhopper.reader.osm.pbf.Sink;
import java.util.concurrent.ExecutorService;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PbfDecoder_ESTest extends PbfDecoder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PbfStreamSplitter pbfStreamSplitter0 = mock(PbfStreamSplitter.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, true).when(pbfStreamSplitter0).hasNext();
      doReturn((PbfRawBlob) null).when(pbfStreamSplitter0).next();
      PbfDecoder pbfDecoder0 = new PbfDecoder(pbfStreamSplitter0, (ExecutorService) null, 331, (Sink) null);
      pbfDecoder0.run();
      pbfDecoder0.run();
      // Undeclared exception!
      try { 
        pbfDecoder0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.reader.osm.pbf.PbfDecoder", e);
      }
  }
}
