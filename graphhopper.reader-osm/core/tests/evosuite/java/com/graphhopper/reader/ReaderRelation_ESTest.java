/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 04 04:36:43 GMT 2021
 */

package com.graphhopper.reader;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.graphhopper.reader.ReaderRelation;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ReaderRelation_ESTest extends ReaderRelation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ReaderRelation.Member readerRelation_Member0 = new ReaderRelation.Member(513, 513, "");
      String string0 = readerRelation_Member0.toString();
      assertEquals("Member 513:513", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ReaderRelation readerRelation0 = new ReaderRelation(918L);
      ReaderRelation.Member readerRelation_Member0 = new ReaderRelation.Member(3, 918L, "\n");
      readerRelation0.add(readerRelation_Member0);
      assertEquals(918L, readerRelation_Member0.getRef());
      assertEquals(3, readerRelation_Member0.getType());
      
      boolean boolean0 = readerRelation0.isMetaRelation();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ReaderRelation readerRelation0 = new ReaderRelation(883L);
      readerRelation0.add((ReaderRelation.Member) null);
      // Undeclared exception!
      try { 
        readerRelation0.isMetaRelation();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.graphhopper.reader.ReaderRelation", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ReaderRelation.Member readerRelation_Member0 = new ReaderRelation.Member(513, 513, "");
      int int0 = readerRelation_Member0.getType();
      assertEquals(513L, readerRelation_Member0.getRef());
      assertEquals(513, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ReaderRelation.Member readerRelation_Member0 = new ReaderRelation.Member(513, 513, "");
      ReaderRelation readerRelation0 = new ReaderRelation(0L);
      List<ReaderRelation.Member> list0 = readerRelation0.getMembers();
      readerRelation0.members = list0;
      // Undeclared exception!
      try { 
        readerRelation0.add(readerRelation_Member0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ReaderRelation.Member readerRelation_Member0 = new ReaderRelation.Member((-2742), (-2742), "Efk");
      ReaderRelation readerRelation0 = new ReaderRelation(2);
      readerRelation0.add(readerRelation_Member0);
      assertEquals((-2742L), readerRelation_Member0.getRef());
      assertEquals((-2742), readerRelation_Member0.getType());
      
      boolean boolean0 = readerRelation0.isMetaRelation();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ReaderRelation readerRelation0 = new ReaderRelation(2);
      boolean boolean0 = readerRelation0.isMetaRelation();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ReaderRelation readerRelation0 = new ReaderRelation(1899L);
      ReaderRelation.Member readerRelation_Member0 = new ReaderRelation.Member(2, 1899L, "#wQA~]@p8");
      readerRelation0.add(readerRelation_Member0);
      assertEquals(1899L, readerRelation_Member0.getRef());
      assertEquals(2, readerRelation_Member0.getType());
      
      List<ReaderRelation.Member> list0 = readerRelation0.getMembers();
      assertTrue(list0.contains(readerRelation_Member0));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ReaderRelation readerRelation0 = new ReaderRelation(1899L);
      String string0 = readerRelation0.toString();
      assertEquals("Relation (1899, 0 members)", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ReaderRelation readerRelation0 = new ReaderRelation(1899L);
      ReaderRelation.Member readerRelation_Member0 = new ReaderRelation.Member(2, 1899L, "#wQA~]@p8");
      readerRelation0.add(readerRelation_Member0);
      assertEquals(2, readerRelation_Member0.getType());
      assertEquals(1899L, readerRelation_Member0.getRef());
      
      String string0 = readerRelation0.toString();
      assertEquals("Relation (1899, 1 members)", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ReaderRelation.Member readerRelation_Member0 = new ReaderRelation.Member((-2742), (-2742), "Efk");
      long long0 = readerRelation_Member0.getRef();
      assertEquals((-2742L), long0);
      assertEquals((-2742), readerRelation_Member0.getType());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ReaderRelation readerRelation0 = new ReaderRelation(1899L);
      ReaderRelation.Member readerRelation_Member0 = new ReaderRelation.Member(2, 1899L, "#wQA~]@p8");
      readerRelation0.add(readerRelation_Member0);
      assertEquals(1899L, readerRelation_Member0.getRef());
      
      boolean boolean0 = readerRelation0.isMetaRelation();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ReaderRelation.Member readerRelation_Member0 = new ReaderRelation.Member(2, 1899L, "#wQA~]@p8");
      readerRelation_Member0.getRole();
      assertEquals(1899L, readerRelation_Member0.getRef());
      assertEquals(2, readerRelation_Member0.getType());
  }
}
