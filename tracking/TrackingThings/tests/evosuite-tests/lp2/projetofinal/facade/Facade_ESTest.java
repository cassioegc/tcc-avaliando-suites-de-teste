/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 23 17:55:26 GMT 2021
 */

package lp2.projetofinal.facade;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import lp2.projetofinal.facade.Facade;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Facade_ESTest extends Facade_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.devolverItem((String) null, "+R!Km+>j", (String) null, (String) null, "+R!Km+>j", (String) null, "+R!Km+>j");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.devolverItem("", "", "RzWtkex$$", "", "RzWtkex$$", "RzWtkex$$", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Nome usuario nao pode ser vazio ou nulo
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.removerItem("lp2.projetofinal.controllers.Sistema", "lp2.projetofinal.facade.Facade", "8-N;}O8,");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Usuario invalido
         //
         verifyException("lp2.projetofinal.util.Exceptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.adicionarPecaPerdida("6)\"", "^n&Ku=vO", "", "`luOAifUE7m:L:)my`o");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Nome item nao pode ser vazio ou nulo
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.adicionarBluRay("8FOv USuf", "", "8FOv USuf", (-913));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Telefone nao pode ser vazio ou nulo
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.cadastrarBluRayShow("", "D~_2V``%0N;ckLxi.", "lp2.projetofinal.facade.Facade", 184.589048739529, (-1), 0, "lp2.projetofinal.facade.Facade", "lp2.projetofinal.facade.Facade");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Nome usuario nao pode ser vazio ou nulo
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.cadastrarBluRayShow("", "d*?:7<FI", "lp2.projetofinal.controllers.Sistema", (-2149.4968495312796), 0, 0, "a_kGT#", "a_kGT#");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Nome usuario nao pode ser vazio ou nulo
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.cadastrarJogoTabuleiro("g1sZn", "4+!", "lp2.projetofinal.controllers.Sistema", 1.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Usuario invalido
         //
         verifyException("lp2.projetofinal.util.Exceptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.getInfoItem("", "f!5dIoU2S<D^#>SG", (String) null, "f!5dIoU2S<D^#>SG");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Nome usuario nao pode ser vazio ou nulo
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Facade facade0 = new Facade();
      facade0.cadastrarUsuario("_8S[,zM-(pr?5T0", "_8S[,zM-(pr?5T0", "_8S[,zM-(pr?5T0");
      facade0.cadastrarJogoTabuleiro("_8S[,zM-(pr?5T0", "_8S[,zM-(pr?5T0", "_8S[,zM-(pr?5T0", 100.0);
      facade0.removerItem("_8S[,zM-(pr?5T0", "_8S[,zM-(pr?5T0", "_8S[,zM-(pr?5T0");
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Facade facade0 = new Facade();
      facade0.cadastrarUsuario("lp2.projetofinal.facade.Facade", "=c%jkNdvWt;aaMQ", "Ydg.JscSn#(x`,V IP");
      String string0 = facade0.listarTop10PioresUsuarios();
      assertEquals("1: lp2.projetofinal.facade.Facade - Reputacao: 0.00|", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Facade facade0 = new Facade();
      facade0.cadastrarUsuario("lp2.projetofinal.facade.Facade", "=c%jkNdvWt;aaMQ", "Ydg.JscSn#(x`,V IP");
      String string0 = facade0.listarTop10MelhoresUsuarios();
      assertEquals("1: lp2.projetofinal.facade.Facade - Reputacao: 0.00|", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Facade facade0 = new Facade();
      facade0.cadastrarUsuario("<Rkp+%<v$CuPOBJ2{9", "<Rkp+%<v$CuPOBJ2{9", "<Rkp+%<v$CuPOBJ2{9");
      String string0 = facade0.listarEmprestimosUsuarioPegandoEmprestado("<Rkp+%<v$CuPOBJ2{9", "<Rkp+%<v$CuPOBJ2{9");
      assertEquals("Nenhum item pego emprestado", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Facade facade0 = new Facade();
      String string0 = facade0.listarEmprestimosItem("!");
      assertEquals("Nenhum emprestimos associados ao item", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.removerUsuario((String) null, "ZJMml|SV>.fof\"?&");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.registrarEmprestimo("2>k]Kdv;0 ;C{e", (String) null, (String) null, "", "", "", 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.pesquisarDetalhesItem("`cF*L'", (String) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.listarEmprestimosUsuarioPegandoEmprestado("*crc", "fAo_$2'mFLyy");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Usuario invalido
         //
         verifyException("lp2.projetofinal.util.Exceptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.listarEmprestimosUsuarioEmprestando((String) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.listarEmprestimosItem((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.getInfoUsuario("^Y`)t5U_A?@WLV]}00", "^Y`)t5U_A?@WLV]}00", "^Y`)t5U_A?@WLV]}00");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Usuario invalido
         //
         verifyException("lp2.projetofinal.util.Exceptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.getInfoItem((String) null, (String) null, "", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.devolverItem((String) null, "", "", ";@B", "", "", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.cadastrarUsuario("_8S[,zM-(pr?5T0", "_8S[,zM-(pr?5T0", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.cadastrarUsuario("", "", "?'P+e?`t[We#l?dD");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Nome usuario nao pode ser vazio ou nulo
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.cadastrarEletronico((String) null, (String) null, (String) null, (-1780.5547394), "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.cadastrarBluRayShow((String) null, "lp2.projetofinal.facade.Facade", ":zk:q&LN", 256.2356824042883, (-23), (-23), "lp2.projetofinal.facade.Facade", "lp2.projetofinal.controllers.Sistema");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.cadastrarBluRaySerie((String) null, (String) null, "P<`7*", (-2863.7951), "P<`7*", 0, "dL]", (String) null, (-1116));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.cadastrarBluRayFilme("9>[Jgl]", "9>[Jgl]", "9>[Jgl]", (-1.102670939509792), (-1044), "9>[Jgl]", "9>[Jgl]", (-1044));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Preco invalido
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.atualizarUsuario((String) null, (String) null, "", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.atualizarItem((String) null, "", (String) null, (String) null, "1{\"u%F6D>+");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.adicionarBluRay((String) null, (String) null, "", (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.cadastrarBluRaySerie("", "R", (String) null, (-315.5239206), "`m=~s+BFAQIy7Tj^-", (-55), "", (String) null, (-55));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Nome usuario nao pode ser vazio ou nulo
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.removerUsuario("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Nome usuario nao pode ser vazio ou nulo
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Facade facade0 = new Facade();
      facade0.cadastrarUsuario("<Rkp+%<v$CuPOBJ2{9", "<Rkp+%<v$CuPOBJ2{9", "<Rkp+%<v$CuPOBJ2{9");
      String string0 = facade0.listarEmprestimosUsuarioEmprestando("<Rkp+%<v$CuPOBJ2{9", "<Rkp+%<v$CuPOBJ2{9");
      assertEquals("Nenhum item emprestado", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Facade facade0 = new Facade();
      String string0 = facade0.listarCaloteiros();
      assertEquals("Lista de usuarios com reputacao negativa: ", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Facade facade0 = new Facade();
      String string0 = facade0.listarTop10PioresUsuarios();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.atualizarUsuario("\"", "[YpQ1?R#dV_:S", "", "SUZ#/");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Atributo nao pode ser vazio ou nulo
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.getInfoUsuario((String) null, "", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.listarEmprestimosUsuarioEmprestando("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Nome usuario nao pode ser vazio ou nulo
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Facade facade0 = new Facade();
      facade0.fecharSistema();
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Facade facade0 = new Facade();
      String string0 = facade0.listarItensOrdenadosPorNome();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.listarEmprestimosUsuarioPegandoEmprestado((String) null, "lp2.projetofinal.facade.Facade");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.registrarEmprestimo("", "", "!", "", "", "", 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Nome usuario nao pode ser vazio ou nulo
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Facade facade0 = new Facade();
      String string0 = facade0.listarTop10Itens();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.cadastrarEletronico("", "lp2.projetofinal.controllers.Sistema", "", 5617.776417034913, "lp2.projetofinal.controllers.Sistema");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Nome usuario nao pode ser vazio ou nulo
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.listarEmprestimosItem("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Nome item nao pode ser vazio ou nulo
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Facade facade0 = new Facade();
      facade0.iniciarSistema();
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.removerItem((String) null, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.cadastrarBluRayFilme((String) null, "", "\"9/`V?Scc^`53t%", (-1063.96429661163), 1, "", "", 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Facade facade0 = new Facade();
      facade0.resetarPersistencia();
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Facade facade0 = new Facade();
      String string0 = facade0.listarItensNaoEmprestados();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.atualizarItem("", "", (String) null, "", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Nome usuario nao pode ser vazio ou nulo
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.pesquisarDetalhesItem("", "", "%D=O!PDRg'Lw+;");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Nome usuario nao pode ser vazio ou nulo
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Facade facade0 = new Facade();
      String string0 = facade0.listarTop10MelhoresUsuarios();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.cadastrarJogoTabuleiro((String) null, (String) null, "tM|3]pDl", 1619.14);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Facade facade0 = new Facade();
      String string0 = facade0.listarItensEmprestados();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Facade facade0 = new Facade();
      // Undeclared exception!
      try { 
        facade0.adicionarPecaPerdida("QpSjOFJzc4iiw ", (String) null, "[", "QpSjOFJzc4iiw ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Facade facade0 = new Facade();
      String string0 = facade0.listarItensOrdenadosPorValor();
      assertEquals("", string0);
  }
}
