/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 23 18:20:52 GMT 2021
 */

package lp2.projetofinal.entidades;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import lp2.projetofinal.entidades.ChaveNomeTelefone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ChaveNomeTelefone_ESTest extends ChaveNomeTelefone_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ChaveNomeTelefone chaveNomeTelefone0 = new ChaveNomeTelefone("H", "H");
      String string0 = chaveNomeTelefone0.getTelefone();
      assertEquals("H", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ChaveNomeTelefone chaveNomeTelefone0 = new ChaveNomeTelefone("", "");
      String string0 = chaveNomeTelefone0.getTelefone();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ChaveNomeTelefone chaveNomeTelefone0 = new ChaveNomeTelefone("7 ?G9", "");
      String string0 = chaveNomeTelefone0.getNome();
      assertEquals("7 ?G9", string0);
      assertEquals("", chaveNomeTelefone0.getTelefone());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ChaveNomeTelefone chaveNomeTelefone0 = new ChaveNomeTelefone("", "");
      String string0 = chaveNomeTelefone0.getNome();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ChaveNomeTelefone chaveNomeTelefone0 = new ChaveNomeTelefone((String) null, (String) null);
      ChaveNomeTelefone chaveNomeTelefone1 = new ChaveNomeTelefone("7 ?G9", "");
      // Undeclared exception!
      try { 
        chaveNomeTelefone1.equals(chaveNomeTelefone0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ChaveNomeTelefone chaveNomeTelefone0 = new ChaveNomeTelefone((String) null, (String) null);
      String string0 = chaveNomeTelefone0.getTelefone();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ChaveNomeTelefone chaveNomeTelefone0 = new ChaveNomeTelefone((String) null, (String) null);
      String string0 = chaveNomeTelefone0.getNome();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ChaveNomeTelefone chaveNomeTelefone0 = new ChaveNomeTelefone("k", "k");
      ChaveNomeTelefone chaveNomeTelefone1 = new ChaveNomeTelefone("k", "k");
      boolean boolean0 = chaveNomeTelefone0.equals(chaveNomeTelefone1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ChaveNomeTelefone chaveNomeTelefone0 = new ChaveNomeTelefone((String) null, (String) null);
      ChaveNomeTelefone chaveNomeTelefone1 = new ChaveNomeTelefone("7 ?G9", "");
      boolean boolean0 = chaveNomeTelefone0.equals(chaveNomeTelefone1);
      assertEquals("7 ?G9", chaveNomeTelefone1.getNome());
      assertEquals("", chaveNomeTelefone1.getTelefone());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ChaveNomeTelefone chaveNomeTelefone0 = new ChaveNomeTelefone("l", "l");
      boolean boolean0 = chaveNomeTelefone0.equals("l");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ChaveNomeTelefone chaveNomeTelefone0 = new ChaveNomeTelefone((String) null, (String) null);
      boolean boolean0 = chaveNomeTelefone0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ChaveNomeTelefone chaveNomeTelefone0 = new ChaveNomeTelefone((String) null, (String) null);
      boolean boolean0 = chaveNomeTelefone0.equals(chaveNomeTelefone0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ChaveNomeTelefone chaveNomeTelefone0 = new ChaveNomeTelefone((String) null, (String) null);
      chaveNomeTelefone0.hashCode();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ChaveNomeTelefone chaveNomeTelefone0 = new ChaveNomeTelefone("l", "l");
      chaveNomeTelefone0.hashCode();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ChaveNomeTelefone chaveNomeTelefone0 = new ChaveNomeTelefone("l", "l");
      ChaveNomeTelefone chaveNomeTelefone1 = new ChaveNomeTelefone("l", "k");
      boolean boolean0 = chaveNomeTelefone0.equals(chaveNomeTelefone1);
      assertEquals("l", chaveNomeTelefone1.getNome());
      assertFalse(boolean0);
  }
}
