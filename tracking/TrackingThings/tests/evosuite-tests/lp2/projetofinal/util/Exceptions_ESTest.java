/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 23 18:10:30 GMT 2021
 */

package lp2.projetofinal.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import lp2.projetofinal.util.Exceptions;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Exceptions_ESTest extends Exceptions_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        Exceptions.usuarioJaCadastradoException();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Usuario ja cadastrado
         //
         verifyException("lp2.projetofinal.util.Exceptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        Exceptions.atributoInvalidoException();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Atributo invalido
         //
         verifyException("lp2.projetofinal.util.Exceptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        Exceptions.usuarioNaoPodePegarItemException();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Usuario nao pode pegar nenhum item emprestado
         //
         verifyException("lp2.projetofinal.util.Exceptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Exceptions exceptions0 = new Exceptions();
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        Exceptions.itemEmprestadoNoMomento();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Item emprestado no momento
         //
         verifyException("lp2.projetofinal.util.Exceptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try { 
        Exceptions.nenhumItemEmprestado();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Nenhum item emprestado
         //
         verifyException("lp2.projetofinal.util.Exceptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      // Undeclared exception!
      try { 
        Exceptions.emprestimoNaoEncontrado();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Emprestimo nao encontrado
         //
         verifyException("lp2.projetofinal.util.Exceptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      // Undeclared exception!
      try { 
        Exceptions.itemNaoEncontradoException();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Item nao encontrado
         //
         verifyException("lp2.projetofinal.util.Exceptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      // Undeclared exception!
      try { 
        Exceptions.usuarioInvalidoException();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Usuario invalido
         //
         verifyException("lp2.projetofinal.util.Exceptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      // Undeclared exception!
      try { 
        Exceptions.usuarioImpossibilitadoDePegarItemNessePeriodoException();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Usuario impossiblitado de pegar emprestado por esse periodo
         //
         verifyException("lp2.projetofinal.util.Exceptions", e);
      }
  }
}
