/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 23 18:09:17 GMT 2021
 */

package lp2.projetofinal.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import lp2.projetofinal.util.Checks;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Checks_ESTest extends Checks_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.verificaPeriodoZeradoOuNegativo(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Periodo nao pode zero ou negativo
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.verificaTemporadaZeroNegativa((-1064));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Temporada invalida
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.verificaNumeroFaixasZeroNegativo(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Numero faixas invalido
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.verificaAnoLancamentoZeroNegativo(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Ano lancamento invalido
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.verificaDuracaoZeroNegativa(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Duracao invalida
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.verificaPrecoZeroNegativo((-1.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Preco invalido
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.verificaValorVazioNulo((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.verificaTelefoneVazioNulo((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.verificaPlataformaVaziaNula((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.verificaPecaVaziaNula((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.verificaNomeVazioNulo((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.verificaNomeItemVazioNulo((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.verificaGeneroVazioNulo((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.verificaEmailVazioNulo((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.verificaDescricaoVaziaNula((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.verificaDataEmprestimoVaziaNula((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.verificaDataDevolucaoVaziaNula((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.verificaClassificacaoVaziaNula((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.verificaAtributolVazioNulo((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.verificaArtistaVazioNulo((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.verificaPeriodoZeradoOuNegativo((-764));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Periodo nao pode zero ou negativo
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Checks.verificaPeriodoZeradoOuNegativo(1);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.verificaDataDevolucaoVaziaNula("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Data devolucao nao pode ser vazia ou nula
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Checks.verificaDataDevolucaoVaziaNula("\"1RWdfB");
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.verificaDataEmprestimoVaziaNula("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Data nao pode ser vazia ou nula
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Checks.verificaDataEmprestimoVaziaNula("lp2.projetofinal.util.Checks");
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.verificaPecaVaziaNula("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Peca nao pode ser vazia ou nula
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Checks.verificaPecaVaziaNula("+");
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.verificaDescricaoVaziaNula("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Descricao nao pode ser vazia ou nula
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Checks.verificaDescricaoVaziaNula("Data nao pode ser vazia ou nula");
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.verificaTemporadaZeroNegativa(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Temporada invalida
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Checks.verificaTemporadaZeroNegativa(1);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.verificaArtistaVazioNulo("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Artista nao pode ser vazio ou nulo
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Checks.verificaArtistaVazioNulo("+");
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.verificaNumeroFaixasZeroNegativo((-1050));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Numero faixas invalido
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Checks.verificaNumeroFaixasZeroNegativo(1);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.verificaAnoLancamentoZeroNegativo((-703));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Ano lancamento invalido
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Checks.verificaAnoLancamentoZeroNegativo(3433);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.verificaClassificacaoVaziaNula("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Classificacao nao pode ser vazia ou nula
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Checks.verificaClassificacaoVaziaNula("+");
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.verificaGeneroVazioNulo("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Genero nao pode ser vazio ou nulo
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Checks.verificaGeneroVazioNulo("+");
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.verificaDuracaoZeroNegativa((-781));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Duracao invalida
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Checks.verificaDuracaoZeroNegativa(1);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.verificaPlataformaVaziaNula("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Plataforma nao pode ser vazia ou nula
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Checks.verificaPlataformaVaziaNula("A");
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.verificaNomeItemVazioNulo("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Nome item nao pode ser vazio ou nulo
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Checks.verificaNomeItemVazioNulo("+");
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.verificaPrecoZeroNegativo(0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Preco invalido
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Checks.verificaPrecoZeroNegativo(1.0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.verificaValorVazioNulo("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Valor nao pode ser vazio ou nulo
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Checks.verificaValorVazioNulo("S");
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.verificaAtributolVazioNulo("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Atributo nao pode ser vazio ou nulo
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Checks.verificaAtributolVazioNulo("+");
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.verificaEmailVazioNulo("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Email nao pode ser vazio ou nulo
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Checks.verificaEmailVazioNulo("A");
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.verificaTelefoneVazioNulo("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Telefone nao pode ser vazio ou nulo
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Checks.verificaTelefoneVazioNulo("+");
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      // Undeclared exception!
      try { 
        Checks.verificaNomeVazioNulo("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Nome usuario nao pode ser vazio ou nulo
         //
         verifyException("lp2.projetofinal.util.Checks", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Checks.verificaNomeVazioNulo("S");
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Checks checks0 = new Checks();
  }
}
