/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 23 17:53:01 GMT 2021
 */

package lp2.projetofinal.enums;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import lp2.projetofinal.enums.GeneroBluRay;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GeneroBluRay_ESTest extends GeneroBluRay_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GeneroBluRay[] generoBluRayArray0 = GeneroBluRay.values();
      assertEquals(15, generoBluRayArray0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GeneroBluRay generoBluRay0 = GeneroBluRay.valueOf("POLICIAL");
      assertEquals(GeneroBluRay.POLICIAL, generoBluRay0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        GeneroBluRay.indentificaGenero((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lp2.projetofinal.enums.GeneroBluRay", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GeneroBluRay generoBluRay0 = GeneroBluRay.indentificaGenero(",1p");
      assertEquals("OUTRO", generoBluRay0.getGenero());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GeneroBluRay generoBluRay0 = GeneroBluRay.indentificaGenero("MUSICAL");
      assertEquals(GeneroBluRay.MUSICAL, generoBluRay0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GeneroBluRay generoBluRay0 = GeneroBluRay.indentificaGenero("ROMANCE");
      assertEquals(GeneroBluRay.ROMANCE, generoBluRay0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GeneroBluRay generoBluRay0 = GeneroBluRay.indentificaGenero("FICCAO");
      assertEquals(GeneroBluRay.FICCAO, generoBluRay0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GeneroBluRay generoBluRay0 = GeneroBluRay.indentificaGenero("FAROESTE");
      assertEquals(GeneroBluRay.FAROESTE, generoBluRay0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GeneroBluRay generoBluRay0 = GeneroBluRay.indentificaGenero("COMEDIA");
      assertEquals(GeneroBluRay.COMEDIA, generoBluRay0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GeneroBluRay generoBluRay0 = GeneroBluRay.indentificaGenero("POLICIAL");
      assertEquals(GeneroBluRay.POLICIAL, generoBluRay0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GeneroBluRay generoBluRay0 = GeneroBluRay.indentificaGenero("DOCUMENTARIO");
      assertEquals(GeneroBluRay.DOCUMENTARIO, generoBluRay0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GeneroBluRay generoBluRay0 = GeneroBluRay.indentificaGenero("OUTRO");
      assertEquals(GeneroBluRay.OUTRO, generoBluRay0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GeneroBluRay generoBluRay0 = GeneroBluRay.indentificaGenero("DRAMA");
      assertEquals(GeneroBluRay.DRAMA, generoBluRay0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GeneroBluRay generoBluRay0 = GeneroBluRay.indentificaGenero("ACAO");
      assertEquals(GeneroBluRay.ACAO, generoBluRay0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GeneroBluRay generoBluRay0 = GeneroBluRay.indentificaGenero("ANIMACAO");
      assertEquals(GeneroBluRay.ANIMACAO, generoBluRay0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GeneroBluRay generoBluRay0 = GeneroBluRay.indentificaGenero("EROTICO");
      assertEquals(GeneroBluRay.EROTICO, generoBluRay0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GeneroBluRay generoBluRay0 = GeneroBluRay.indentificaGenero("SUSPENSE");
      assertEquals(GeneroBluRay.SUSPENSE, generoBluRay0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GeneroBluRay generoBluRay0 = GeneroBluRay.indentificaGenero("AVENTURA");
      assertEquals(GeneroBluRay.AVENTURA, generoBluRay0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GeneroBluRay generoBluRay0 = GeneroBluRay.indentificaGenero("TERROR");
      assertEquals(GeneroBluRay.TERROR, generoBluRay0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GeneroBluRay generoBluRay0 = GeneroBluRay.POLICIAL;
      String string0 = generoBluRay0.getGenero();
      assertEquals("POLICIAL", string0);
  }
}
