/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 23 17:51:51 GMT 2021
 */

package lp2.projetofinal.enums;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import lp2.projetofinal.enums.PlataformaJogoEletronico;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PlataformaJogoEletronico_ESTest extends PlataformaJogoEletronico_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PlataformaJogoEletronico[] plataformaJogoEletronicoArray0 = PlataformaJogoEletronico.values();
      assertEquals(8, plataformaJogoEletronicoArray0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PlataformaJogoEletronico plataformaJogoEletronico0 = PlataformaJogoEletronico.valueOf("PC");
      assertEquals("PC", plataformaJogoEletronico0.getPlataforma());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        PlataformaJogoEletronico.indentificaPlataforma((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("lp2.projetofinal.enums.PlataformaJogoEletronico", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PlataformaJogoEletronico plataformaJogoEletronico0 = PlataformaJogoEletronico.indentificaPlataforma("&+oaCzW]S[sQ,>T@`");
      assertEquals(PlataformaJogoEletronico.OUTRO, plataformaJogoEletronico0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PlataformaJogoEletronico plataformaJogoEletronico0 = PlataformaJogoEletronico.indentificaPlataforma("NINTENDO_3DS");
      assertEquals(PlataformaJogoEletronico.NINTENDO_3DS, plataformaJogoEletronico0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PlataformaJogoEletronico plataformaJogoEletronico0 = PlataformaJogoEletronico.indentificaPlataforma("OUTRO");
      assertEquals(PlataformaJogoEletronico.OUTRO, plataformaJogoEletronico0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PlataformaJogoEletronico plataformaJogoEletronico0 = PlataformaJogoEletronico.indentificaPlataforma("PS4");
      assertEquals(PlataformaJogoEletronico.PS4, plataformaJogoEletronico0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PlataformaJogoEletronico plataformaJogoEletronico0 = PlataformaJogoEletronico.indentificaPlataforma("PS3");
      assertEquals(PlataformaJogoEletronico.PS3, plataformaJogoEletronico0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PlataformaJogoEletronico plataformaJogoEletronico0 = PlataformaJogoEletronico.indentificaPlataforma("MAC");
      assertEquals(PlataformaJogoEletronico.MAC, plataformaJogoEletronico0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PlataformaJogoEletronico plataformaJogoEletronico0 = PlataformaJogoEletronico.indentificaPlataforma("XBOX_ONE");
      assertEquals(PlataformaJogoEletronico.XBOX_ONE, plataformaJogoEletronico0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PlataformaJogoEletronico plataformaJogoEletronico0 = PlataformaJogoEletronico.indentificaPlataforma("PC");
      assertEquals(PlataformaJogoEletronico.PC, plataformaJogoEletronico0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PlataformaJogoEletronico plataformaJogoEletronico0 = PlataformaJogoEletronico.indentificaPlataforma("XBOX360");
      assertEquals(PlataformaJogoEletronico.XBOX360, plataformaJogoEletronico0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PlataformaJogoEletronico plataformaJogoEletronico0 = PlataformaJogoEletronico.MAC;
      String string0 = plataformaJogoEletronico0.getPlataforma();
      assertEquals("MAC", string0);
  }
}
