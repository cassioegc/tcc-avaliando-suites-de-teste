/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 28 14:21:09 GMT 2021
 */

package com.ufcg.sad;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ufcg.sad.SadApplication;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SadApplication_ESTest extends SadApplication_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "^{s";
      stringArray0[1] = "";
      stringArray0[2] = "fj";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "com.ufcg.sad.SadApplication";
      stringArray0[6] = ">\"3++k]<";
      // Undeclared exception!
      SadApplication.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "com.ufcg.sad.SadApplication";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "spring.boot.enableautoconfiguration";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("config/config/application-default.xml");
      FileSystemHandling.createFolder(evoSuiteFile0);
      stringArray0[5] = "";
      // Undeclared exception!
      try { 
        SadApplication.main(stringArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Failed to load property source from location 'file:./config/application-default.xml'
         //
         verifyException("org.springframework.boot.context.config.ConfigFileApplicationListener$Loader", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        SadApplication.main((String[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Args must not be null
         //
         verifyException("org.springframework.util.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        SadApplication.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.springframework.core.env.SimpleCommandLineArgsParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SadApplication sadApplication0 = new SadApplication();
  }
}
