/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 28 14:24:19 GMT 2021
 */

package com.ufcg.sad.services.email;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ufcg.sad.services.email.EmailServiceImpl;
import javax.mail.internet.AddressException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.javaee.injection.Injector;
import org.junit.runner.RunWith;
import org.springframework.mail.javamail.JavaMailSenderImpl;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EmailServiceImpl_ESTest extends EmailServiceImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EmailServiceImpl emailServiceImpl0 = new EmailServiceImpl();
      JavaMailSenderImpl javaMailSenderImpl0 = new JavaMailSenderImpl();
      Injector.inject(emailServiceImpl0, (Class<?>) EmailServiceImpl.class, "mailSender", (Object) javaMailSenderImpl0);
      Injector.validateBean(emailServiceImpl0, (Class<?>) EmailServiceImpl.class);
      try { 
        emailServiceImpl0.enviarEmail("", "smtp");
        fail("Expecting exception: AddressException");
      
      } catch(AddressException e) {
         //
         // Illegal address
         //
         verifyException("org.springframework.mail.javamail.MimeMessageHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      EmailServiceImpl emailServiceImpl0 = new EmailServiceImpl();
      JavaMailSenderImpl javaMailSenderImpl0 = new JavaMailSenderImpl();
      Injector.inject(emailServiceImpl0, (Class<?>) EmailServiceImpl.class, "mailSender", (Object) javaMailSenderImpl0);
      Injector.validateBean(emailServiceImpl0, (Class<?>) EmailServiceImpl.class);
      emailServiceImpl0.mailSender = null;
      // Undeclared exception!
      try { 
        emailServiceImpl0.enviarEmail("org.springframework.cache.caffeine.CaffeineCache$PutIfAbsentFunction", "org.springframework.cache.caffeine.CaffeineCache$PutIfAbsentFunction");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ufcg.sad.services.email.EmailServiceImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      EmailServiceImpl emailServiceImpl0 = new EmailServiceImpl();
      JavaMailSenderImpl javaMailSenderImpl0 = new JavaMailSenderImpl();
      Injector.inject(emailServiceImpl0, (Class<?>) EmailServiceImpl.class, "mailSender", (Object) javaMailSenderImpl0);
      Injector.validateBean(emailServiceImpl0, (Class<?>) EmailServiceImpl.class);
      // Undeclared exception!
      try { 
        emailServiceImpl0.enviarEmail("smtp", "smtp");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Reply-to address must not be null
         //
         verifyException("org.springframework.util.Assert", e);
      }
  }
}
