/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 28 14:27:27 GMT 2021
 */

package com.ufcg.sad.security;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ufcg.sad.security.JWTAuthenticationFilter;
import javax.servlet.FilterChain;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JWTAuthenticationFilter_ESTest extends JWTAuthenticationFilter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JWTAuthenticationFilter jWTAuthenticationFilter0 = new JWTAuthenticationFilter();
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      FilterChain filterChain0 = mock(FilterChain.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        jWTAuthenticationFilter0.doFilter((ServletRequest) null, servletResponse0, filterChain0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ufcg.sad.security.TokenAuthenticationService", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JWTAuthenticationFilter jWTAuthenticationFilter0 = new JWTAuthenticationFilter();
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      FilterChain filterChain0 = mock(FilterChain.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        jWTAuthenticationFilter0.doFilter(servletRequest0, (ServletResponse) null, filterChain0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // codegen.javax.servlet.ServletRequest$MockitoMock$1260895927 cannot be cast to javax.servlet.http.HttpServletRequest
         //
         verifyException("com.ufcg.sad.security.JWTAuthenticationFilter", e);
      }
  }
}
