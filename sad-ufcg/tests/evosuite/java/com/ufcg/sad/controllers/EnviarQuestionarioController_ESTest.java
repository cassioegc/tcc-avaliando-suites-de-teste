/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 28 14:20:22 GMT 2021
 */

package com.ufcg.sad.controllers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ufcg.sad.controllers.EnviarQuestionarioController;
import com.ufcg.sad.services.disciplina.DisciplinaService;
import com.ufcg.sad.services.email.EmailService;
import com.ufcg.sad.services.questionario.EnviarQuestionarioServiceImpl;
import com.ufcg.sad.services.questionario.QuestionarioAplicadoService;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EnviarQuestionarioController_ESTest extends EnviarQuestionarioController_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EnviarQuestionarioController enviarQuestionarioController0 = new EnviarQuestionarioController();
      EnviarQuestionarioServiceImpl enviarQuestionarioServiceImpl0 = new EnviarQuestionarioServiceImpl();
      DisciplinaService disciplinaService0 = mock(DisciplinaService.class, new ViolatedAssumptionAnswer());
      Injector.inject(enviarQuestionarioServiceImpl0, (Class<?>) EnviarQuestionarioServiceImpl.class, "disciplinaService", (Object) disciplinaService0);
      EmailService emailService0 = mock(EmailService.class, new ViolatedAssumptionAnswer());
      Injector.inject(enviarQuestionarioServiceImpl0, (Class<?>) EnviarQuestionarioServiceImpl.class, "emailService", (Object) emailService0);
      QuestionarioAplicadoService questionarioAplicadoService0 = mock(QuestionarioAplicadoService.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        enviarQuestionarioController0.enviarEmailParaVariosQuestionarios((List<Long>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ufcg.sad.controllers.EnviarQuestionarioController", e);
      }
  }
}
