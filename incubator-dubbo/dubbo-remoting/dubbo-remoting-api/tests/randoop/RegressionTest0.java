import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test001");
        int int0 = org.apache.dubbo.remoting.TimeoutException.CLIENT_SIDE;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 0 + "'", int0 == 0);
    }

    @Test
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test002");
        int int0 = org.apache.dubbo.remoting.Constants.DEFAULT_IO_THREADS;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 5 + "'", int0 == 5);
    }

    @Test
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test003");
        java.lang.String str0 = org.apache.dubbo.remoting.Constants.CHARSET_KEY;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "charset" + "'", str0, "charset");
    }

    @Test
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test004");
        org.apache.dubbo.remoting.RemotingServer remotingServer0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeServer headerExchangeServer1 = new org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeServer(remotingServer0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: server == null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test005");
        java.lang.String str0 = org.apache.dubbo.remoting.Constants.HEARTBEAT_TIMEOUT_KEY;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "heartbeat.timeout" + "'", str0, "heartbeat.timeout");
    }

    @Test
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test006");
        java.lang.String str0 = org.apache.dubbo.remoting.Constants.CHANNEL_ATTRIBUTE_READONLY_KEY;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "channel.readonly" + "'", str0, "channel.readonly");
    }

    @Test
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test007");
        int int0 = org.apache.dubbo.remoting.Constants.DEFAULT_PAYLOAD;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 8388608 + "'", int0 == 8388608);
    }

    @Test
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test008");
        org.apache.dubbo.common.URL uRL0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.common.serialize.Serialization serialization2 = org.apache.dubbo.remoting.transport.CodecSupport.getSerialization(uRL0, (java.lang.Byte) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: Unrecognized serialize type from consumer: -1");
        } catch (java.io.IOException e) {
        // Expected exception.
        }
    }

    @Test
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test009");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        java.io.InputStream inputStream2 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int4 = heapChannelBuffer1.writeBytes(inputStream2, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test010");
        java.lang.String str0 = org.apache.dubbo.remoting.Constants.TELNET;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "telnet" + "'", str0, "telnet");
    }

    @Test
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test011");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer4 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer1.setBytes((int) (byte) 100, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test012");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        java.nio.ByteBuffer byteBuffer5 = null;
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer1.readBytes(byteBuffer5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test013");
        java.lang.String str0 = org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyDispatcher.NAME;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "message" + "'", str0, "message");
    }

    @Test
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test014");
        byte byte0 = org.apache.dubbo.remoting.exchange.Response.SERVICE_ERROR;
        org.junit.Assert.assertTrue("'" + byte0 + "' != '" + (byte) 70 + "'", byte0 == (byte) 70);
    }

    @Test
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test015");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer6 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer8 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean9 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer6, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer8);
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer1.readBytes((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer6, (int) (byte) 1, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test016");
        org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer1 = new org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBuffer(byteBufferBackedChannelBuffer0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test017");
        java.lang.String str0 = org.apache.dubbo.remoting.telnet.support.command.LogTelnetHandler.SERVICE_KEY;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "telnet.log" + "'", str0, "telnet.log");
    }

    @Test
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test018");
        org.apache.dubbo.common.serialize.Serialization serialization0 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray1 = org.apache.dubbo.remoting.transport.CodecSupport.getNullBytesOf(serialization0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test019");
        org.apache.dubbo.remoting.utils.UrlUtils urlUtils0 = new org.apache.dubbo.remoting.utils.UrlUtils();
    }

    @Test
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test020");
        org.apache.dubbo.remoting.Channel channel0 = null;
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray1 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher2 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray1);
        org.apache.dubbo.common.URL uRL3 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler4 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher2, uRL3);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState5 = null;
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable7 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable(channel0, (org.apache.dubbo.remoting.ChannelHandler) messageOnlyChannelHandler4, channelState5, (java.lang.Object) (short) 1);
        org.apache.dubbo.common.URL uRL8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.ChannelHandler channelHandler9 = org.apache.dubbo.remoting.transport.dispatcher.ChannelHandlers.wrap((org.apache.dubbo.remoting.ChannelHandler) messageOnlyChannelHandler4, uRL8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Failed to create adaptive instance: java.lang.IllegalStateException: Can't create adaptive extension interface org.apache.dubbo.remoting.Dispatcher, cause: Failed to compile class, cause: javassist/ClassPath, class: org.apache.dubbo.remoting.Dispatcher$Adaptive, code: ?package org.apache.dubbo.remoting;?import org.apache.dubbo.common.extension.ExtensionLoader;?public class Dispatcher$Adaptive implements org.apache.dubbo.remoting.Dispatcher {?public org.apache.dubbo.remoting.ChannelHandler dispatch(org.apache.dubbo.remoting.ChannelHandler arg0, org.apache.dubbo.common.URL arg1)  {?if (arg1 == null) throw new IllegalArgumentException(\"url == null\");?org.apache.dubbo.common.URL url = arg1;?String extName = url.getParameter(\"dispatcher\", url.getParameter(\"dispather\", url.getParameter(\"channel.handler\", \"all\")));?if(extName == null) throw new IllegalStateException(\"Failed to get extension (org.apache.dubbo.remoting.Dispatcher) name from url (\" + url.toString() + \") use keys([dispatcher, dispather, channel.handler])\");?org.apache.dubbo.remoting.Dispatcher extension = (org.apache.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Dispatcher.class).getExtension(extName);?return extension.dispatch(arg0, arg1);?}?}?, stack: java.lang.NoClassDefFoundError: javassist/ClassPath??java.lang.NoClassDefFoundError: javassist/ClassPath??at org.apache.dubbo.common.compiler.support.JavassistCompiler.doCompile(JavassistCompiler.java:43)??at org.apache.dubbo.common.compiler.support.AbstractCompiler.compile(AbstractCompiler.java:58)??at org.apache.dubbo.common.compiler.support.AdaptiveCompiler.compile(AdaptiveCompiler.java:45)??at org.apache.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClass(ExtensionLoader.java:1039)??at org.apache.dubbo.common.extension.ExtensionLoader.getAdaptiveExtensionClass(ExtensionLoader.java:1032)??at org.apache.dubbo.common.extension.ExtensionLoader.createAdaptiveExtension(ExtensionLoader.java:1021)??at org.apache.dubbo.common.extension.ExtensionLoader.getAdaptiveExtension(ExtensionLoader.java:588)??at org.apache.dubbo.remoting.transport.dispatcher.ChannelHandlers.wrapInternal(ChannelHandlers.java:47)??at org.apache.dubbo.remoting.transport.dispatcher.ChannelHandlers.wrap(ChannelHandlers.java:34)??at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)??at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)??at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)??at java.lang.reflect.Method.invoke(Method.java:498)??at randoop.util.MethodReflectionCode.runReflectionCodeRaw(MethodReflectionCode.java:53)??at randoop.util.ReflectionCode.runReflectionCode(ReflectionCode.java:59)??at randoop.util.RunnerThread.executeReflectionCode(RunnerThread.java:49)??at randoop.util.RunnerThread.run(RunnerThread.java:43)?Caused by: java.lang.ClassNotFoundException: javassist.ClassPath??at java.net.URLClassLoader.findClass(URLClassLoader.java:382)??at java.lang.ClassLoader.loadClass(ClassLoader.java:418)??at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:355)??at java.lang.ClassLoader.loadClass(ClassLoader.java:351)??... 17 more?");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray1);
    }

    @Test
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test021");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        java.nio.channels.ScatteringByteChannel scatteringByteChannel6 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int8 = heapChannelBuffer3.setBytes((int) (short) -1, scatteringByteChannel6, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test022");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        byte[] byteArray10 = new byte[] { (byte) 10, (byte) 70, (byte) 10 };
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer3.setBytes((int) (byte) -1, byteArray10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 70, 10]");
    }

    @Test
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test023");
        java.lang.String str0 = org.apache.dubbo.remoting.Constants.BIND_IP_KEY;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "bind.ip" + "'", str0, "bind.ip");
    }

    @Test
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test024");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        java.nio.ByteBuffer byteBuffer7 = null;
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer3.setBytes(0, byteBuffer7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test025");
        java.lang.String str0 = org.apache.dubbo.remoting.transport.dispatcher.all.AllDispatcher.NAME;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "all" + "'", str0, "all");
    }

    @Test
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test026");
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate0 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        org.apache.dubbo.common.Parameters parameters1 = null;
        // The following exception was thrown during execution in test generation
        try {
            exchangeServerDelegate0.reset(parameters1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test027");
        byte byte0 = org.apache.dubbo.remoting.exchange.Response.SERVER_THREADPOOL_EXHAUSTED_ERROR;
        org.junit.Assert.assertTrue("'" + byte0 + "' != '" + (byte) 100 + "'", byte0 == (byte) 100);
    }

    @Test
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test028");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.common.URL uRL2 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler3 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher1, uRL2);
        org.apache.dubbo.common.URL uRL4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.transport.dispatcher.connection.ConnectionOrderedChannelHandler connectionOrderedChannelHandler5 = new org.apache.dubbo.remoting.transport.dispatcher.connection.ConnectionOrderedChannelHandler((org.apache.dubbo.remoting.ChannelHandler) messageOnlyChannelHandler3, uRL4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray0);
    }

    @Test
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test029");
        java.lang.String str0 = org.apache.dubbo.remoting.Constants.BUFFER_KEY;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "buffer" + "'", str0, "buffer");
    }

    @Test
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test030");
        java.lang.String str0 = org.apache.dubbo.remoting.exchange.support.header.HeartbeatHandler.KEY_WRITE_TIMESTAMP;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "WRITE_TIMESTAMP" + "'", str0, "WRITE_TIMESTAMP");
    }

    @Test
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test031");
        org.apache.dubbo.remoting.Codec2.DecodeResult decodeResult0 = org.apache.dubbo.remoting.Codec2.DecodeResult.NEED_MORE_INPUT;
        org.junit.Assert.assertTrue("'" + decodeResult0 + "' != '" + org.apache.dubbo.remoting.Codec2.DecodeResult.NEED_MORE_INPUT + "'", decodeResult0.equals(org.apache.dubbo.remoting.Codec2.DecodeResult.NEED_MORE_INPUT));
    }

    @Test
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test032");
        org.apache.dubbo.remoting.Channel channel0 = null;
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray1 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher2 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray1);
        org.apache.dubbo.common.URL uRL3 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler4 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher2, uRL3);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState5 = null;
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable7 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable(channel0, (org.apache.dubbo.remoting.ChannelHandler) messageOnlyChannelHandler4, channelState5, (java.lang.Object) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            channelEventRunnable7.run();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray1);
    }

    @Test
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test033");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray1 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher2 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray1);
        org.apache.dubbo.remoting.Channel channel3 = null;
        java.lang.Throwable throwable4 = null;
        channelHandlerDispatcher2.caught(channel3, throwable4);
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher6 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.exchange.ExchangeClient exchangeClient7 = org.apache.dubbo.remoting.exchange.Exchangers.connect("message", (org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher2, (org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Failed to create adaptive instance: java.lang.IllegalStateException: Can't create adaptive extension interface org.apache.dubbo.remoting.Transporter, cause: Failed to compile class, cause: javassist/ClassPath, class: org.apache.dubbo.remoting.Transporter$Adaptive, code: ?package org.apache.dubbo.remoting;?import org.apache.dubbo.common.extension.ExtensionLoader;?public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {?public org.apache.dubbo.remoting.RemotingServer bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {?if (arg0 == null) throw new IllegalArgumentException(\"url == null\");?org.apache.dubbo.common.URL url = arg0;?String extName = url.getParameter(\"server\", url.getParameter(\"transporter\", \"netty\"));?if(extName == null) throw new IllegalStateException(\"Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (\" + url.toString() + \") use keys([server, transporter])\");?org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);?return extension.bind(arg0, arg1);?}?public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {?if (arg0 == null) throw new IllegalArgumentException(\"url == null\");?org.apache.dubbo.common.URL url = arg0;?String extName = url.getParameter(\"client\", url.getParameter(\"transporter\", \"netty\"));?if(extName == null) throw new IllegalStateException(\"Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (\" + url.toString() + \") use keys([client, transporter])\");?org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);?return extension.connect(arg0, arg1);?}?}?, stack: java.lang.NoClassDefFoundError: javassist/ClassPath??java.lang.NoClassDefFoundError: javassist/ClassPath??at org.apache.dubbo.common.compiler.support.JavassistCompiler.doCompile(JavassistCompiler.java:43)??at org.apache.dubbo.common.compiler.support.AbstractCompiler.compile(AbstractCompiler.java:58)??at org.apache.dubbo.common.compiler.support.AdaptiveCompiler.compile(AdaptiveCompiler.java:45)??at org.apache.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClass(ExtensionLoader.java:1039)??at org.apache.dubbo.common.extension.ExtensionLoader.getAdaptiveExtensionClass(ExtensionLoader.java:1032)??at org.apache.dubbo.common.extension.ExtensionLoader.createAdaptiveExtension(ExtensionLoader.java:1021)??at org.apache.dubbo.common.extension.ExtensionLoader.getAdaptiveExtension(ExtensionLoader.java:588)??at org.apache.dubbo.remoting.Transporters.getTransporter(Transporters.java:79)??at org.apache.dubbo.remoting.Transporters.connect(Transporters.java:75)??at org.apache.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:94)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:90)??at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)??at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)??at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)??at java.lang.reflect.Method.invoke(Method.java:498)??at randoop.util.MethodReflectionCode.runReflectionCodeRaw(MethodReflectionCode.java:53)??at randoop.util.ReflectionCode.runReflectionCode(ReflectionCode.java:59)??at randoop.util.RunnerThread.executeReflectionCode(RunnerThread.java:49)??at randoop.util.RunnerThread.run(RunnerThread.java:43)?Caused by: java.lang.ClassNotFoundException: javassist.ClassPath??at java.net.URLClassLoader.findClass(URLClassLoader.java:382)??at java.lang.ClassLoader.loadClass(ClassLoader.java:418)??at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:355)??at java.lang.ClassLoader.loadClass(ClassLoader.java:351)??... 21 more?");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray1);
    }

    @Test
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test034");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer1 = org.apache.dubbo.remoting.buffer.ChannelBuffers.buffer((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: capacity can not be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test035");
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher0 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.exchange.ExchangeChannel exchangeChannel1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture3 = exchangeHandlerDispatcher0.reply(exchangeChannel1, (java.lang.Object) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Replier not found, Unsupported message object: class java.lang.Byte");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
    }

    @Test
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test036");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        int int5 = heapChannelBuffer1.readerIndex();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer7 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer1.readBytes((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer7, (int) (byte) 70, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test037");
        java.lang.String str0 = org.apache.dubbo.remoting.Constants.CONNECT_QUEUE_WARNING_SIZE;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "connect.queue.warning.size" + "'", str0, "connect.queue.warning.size");
    }

    @Test
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test038");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer8 = heapChannelBuffer3.copy((int) (short) 100, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test039");
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer1 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            java.nio.ByteBuffer byteBuffer4 = dynamicChannelBuffer1.toByteBuffer((int) ' ', (int) (byte) 70);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test040");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.common.URL uRL2 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler3 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher1, uRL2);
        org.apache.dubbo.remoting.Channel channel4 = null;
        messageOnlyChannelHandler3.connected(channel4);
        org.apache.dubbo.remoting.Channel channel6 = null;
        // The following exception was thrown during execution in test generation
        try {
            messageOnlyChannelHandler3.received(channel6, (java.lang.Object) 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray0);
    }

    @Test
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test041");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "bind.ip", "charset", "buffer", "charset" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        java.util.List<java.util.List<java.lang.String>> strListList8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = org.apache.dubbo.remoting.telnet.support.TelnetUtils.toTable((java.util.List<java.lang.String>) strList6, strListList8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test042");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        heapChannelBuffer1.writeByte((int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer6 = heapChannelBuffer1.copy((int) (short) 10, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test043");
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate0 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.net.InetSocketAddress inetSocketAddress1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.Channel channel2 = exchangeServerDelegate0.getChannel(inetSocketAddress1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test044");
        org.apache.dubbo.common.URL uRL0 = null;
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher1 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher2 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.exchange.ExchangeServer exchangeServer3 = org.apache.dubbo.remoting.exchange.Exchangers.bind(uRL0, (org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: url == null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test045");
        org.apache.dubbo.common.URL uRL0 = null;
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate1 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray2 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher3 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray2);
        org.apache.dubbo.common.URL uRL4 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler5 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher3, uRL4);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState6 = null;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        org.apache.dubbo.remoting.RemotingException remotingException10 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress7, inetSocketAddress8, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable11 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate1, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler5, channelState6, (java.lang.Throwable) remotingException10);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher12 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState13 = null;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        org.apache.dubbo.remoting.ExecutionException executionException18 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress15, inetSocketAddress16, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable19 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate1, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher12, channelState13, (java.lang.Throwable) executionException18);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray20 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher12 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.RemotingServer remotingServer21 = org.apache.dubbo.remoting.Transporters.bind(uRL0, channelHandlerArray20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: url == null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray2);
        org.junit.Assert.assertNotNull(channelHandlerArray20);
    }

    @Test
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test046");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer6 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer8 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean9 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer6, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer8);
        heapChannelBuffer3.writeBytes((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer6);
        java.nio.ByteBuffer byteBuffer12 = null;
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer3.setBytes((int) '4', byteBuffer12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test047");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        java.io.OutputStream outputStream6 = null;
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer3.readBytes(outputStream6, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test048");
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate0 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate1 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray2 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher3 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray2);
        org.apache.dubbo.common.URL uRL4 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler5 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher3, uRL4);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState6 = null;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        org.apache.dubbo.remoting.RemotingException remotingException10 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress7, inetSocketAddress8, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable11 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate1, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler5, channelState6, (java.lang.Throwable) remotingException10);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher12 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState13 = null;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        org.apache.dubbo.remoting.ExecutionException executionException18 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress15, inetSocketAddress16, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable19 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate1, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher12, channelState13, (java.lang.Throwable) executionException18);
        channelDelegate0.setChannel((org.apache.dubbo.remoting.Channel) channelDelegate1);
        // The following exception was thrown during execution in test generation
        try {
            channelDelegate1.close(10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray2);
    }

    @Test
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test049");
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate0 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate1 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray2 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher3 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray2);
        org.apache.dubbo.common.URL uRL4 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler5 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher3, uRL4);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState6 = null;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        org.apache.dubbo.remoting.RemotingException remotingException10 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress7, inetSocketAddress8, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable11 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate1, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler5, channelState6, (java.lang.Throwable) remotingException10);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher12 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState13 = null;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        org.apache.dubbo.remoting.ExecutionException executionException18 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress15, inetSocketAddress16, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable19 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate1, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher12, channelState13, (java.lang.Throwable) executionException18);
        channelDelegate0.setChannel((org.apache.dubbo.remoting.Channel) channelDelegate1);
        // The following exception was thrown during execution in test generation
        try {
            java.net.InetSocketAddress inetSocketAddress21 = channelDelegate1.getLocalAddress();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray2);
    }

    @Test
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test050");
        org.apache.dubbo.remoting.transport.codec.TransportCodec transportCodec0 = new org.apache.dubbo.remoting.transport.codec.TransportCodec();
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate1 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray2 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher3 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray2);
        org.apache.dubbo.common.URL uRL4 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler5 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher3, uRL4);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState6 = null;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        org.apache.dubbo.remoting.RemotingException remotingException10 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress7, inetSocketAddress8, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable11 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate1, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler5, channelState6, (java.lang.Throwable) remotingException10);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer13 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer15 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean16 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer13, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer15);
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer18 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        int int19 = dynamicChannelBuffer18.capacity();
        // The following exception was thrown during execution in test generation
        try {
            transportCodec0.encode((org.apache.dubbo.remoting.Channel) channelDelegate1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer15, (java.lang.Object) dynamicChannelBuffer18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray2);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
    }

    @Test
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test051");
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate1 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate2 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray3 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher4 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray3);
        org.apache.dubbo.common.URL uRL5 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler6 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher4, uRL5);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState7 = null;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        org.apache.dubbo.remoting.RemotingException remotingException11 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress8, inetSocketAddress9, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable12 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate2, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler6, channelState7, (java.lang.Throwable) remotingException11);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher13 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState14 = null;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        org.apache.dubbo.remoting.ExecutionException executionException19 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress16, inetSocketAddress17, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable20 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate2, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher13, channelState14, (java.lang.Throwable) executionException19);
        channelDelegate1.setChannel((org.apache.dubbo.remoting.Channel) channelDelegate2);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.ExecutionException executionException23 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "message", (org.apache.dubbo.remoting.Channel) channelDelegate1, "connect.queue.warning.size");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray3);
    }

    @Test
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test052");
        java.lang.String str0 = org.apache.dubbo.remoting.Constants.RECONNECT_KEY;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "reconnect" + "'", str0, "reconnect");
    }

    @Test
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test053");
        java.lang.String str0 = org.apache.dubbo.remoting.Constants.DISPACTHER_KEY;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "dispacther" + "'", str0, "dispacther");
    }

    @Test
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test054");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray1 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher2 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray1);
        org.apache.dubbo.common.URL uRL3 = null;
        org.apache.dubbo.remoting.transport.dispatcher.execution.ExecutionChannelHandler executionChannelHandler4 = new org.apache.dubbo.remoting.transport.dispatcher.execution.ExecutionChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher2, uRL3);
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher5 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher6 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher5);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.exchange.ExchangeClient exchangeClient7 = org.apache.dubbo.remoting.exchange.Exchangers.connect("message", (org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher2, (org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Failed to create adaptive instance: java.lang.IllegalStateException: Can't create adaptive extension interface org.apache.dubbo.remoting.Transporter, cause: Failed to compile class, cause: javassist/ClassPath, class: org.apache.dubbo.remoting.Transporter$Adaptive, code: ?package org.apache.dubbo.remoting;?import org.apache.dubbo.common.extension.ExtensionLoader;?public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {?public org.apache.dubbo.remoting.RemotingServer bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {?if (arg0 == null) throw new IllegalArgumentException(\"url == null\");?org.apache.dubbo.common.URL url = arg0;?String extName = url.getParameter(\"server\", url.getParameter(\"transporter\", \"netty\"));?if(extName == null) throw new IllegalStateException(\"Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (\" + url.toString() + \") use keys([server, transporter])\");?org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);?return extension.bind(arg0, arg1);?}?public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {?if (arg0 == null) throw new IllegalArgumentException(\"url == null\");?org.apache.dubbo.common.URL url = arg0;?String extName = url.getParameter(\"client\", url.getParameter(\"transporter\", \"netty\"));?if(extName == null) throw new IllegalStateException(\"Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (\" + url.toString() + \") use keys([client, transporter])\");?org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);?return extension.connect(arg0, arg1);?}?}?, stack: java.lang.NoClassDefFoundError: javassist/ClassPath??java.lang.NoClassDefFoundError: javassist/ClassPath??at org.apache.dubbo.common.compiler.support.JavassistCompiler.doCompile(JavassistCompiler.java:43)??at org.apache.dubbo.common.compiler.support.AbstractCompiler.compile(AbstractCompiler.java:58)??at org.apache.dubbo.common.compiler.support.AdaptiveCompiler.compile(AdaptiveCompiler.java:45)??at org.apache.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClass(ExtensionLoader.java:1039)??at org.apache.dubbo.common.extension.ExtensionLoader.getAdaptiveExtensionClass(ExtensionLoader.java:1032)??at org.apache.dubbo.common.extension.ExtensionLoader.createAdaptiveExtension(ExtensionLoader.java:1021)??at org.apache.dubbo.common.extension.ExtensionLoader.getAdaptiveExtension(ExtensionLoader.java:588)??at org.apache.dubbo.remoting.Transporters.getTransporter(Transporters.java:79)??at org.apache.dubbo.remoting.Transporters.connect(Transporters.java:75)??at org.apache.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:94)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:90)??at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)??at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)??at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)??at java.lang.reflect.Method.invoke(Method.java:498)??at randoop.util.MethodReflectionCode.runReflectionCodeRaw(MethodReflectionCode.java:53)??at randoop.util.ReflectionCode.runReflectionCode(ReflectionCode.java:59)??at randoop.util.RunnerThread.executeReflectionCode(RunnerThread.java:49)??at randoop.util.RunnerThread.run(RunnerThread.java:43)?Caused by: java.lang.ClassNotFoundException: javassist.ClassPath??at java.net.URLClassLoader.findClass(URLClassLoader.java:382)??at java.lang.ClassLoader.loadClass(ClassLoader.java:418)??at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:355)??at java.lang.ClassLoader.loadClass(ClassLoader.java:351)??... 21 more?");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray1);
    }

    @Test
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test055");
        org.apache.dubbo.remoting.telnet.support.command.LogTelnetHandler logTelnetHandler0 = new org.apache.dubbo.remoting.telnet.support.command.LogTelnetHandler();
    }

    @Test
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test056");
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate0 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray1 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher2 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray1);
        org.apache.dubbo.common.URL uRL3 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler4 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher2, uRL3);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState5 = null;
        java.net.InetSocketAddress inetSocketAddress6 = null;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        org.apache.dubbo.remoting.RemotingException remotingException9 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress6, inetSocketAddress7, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable10 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate0, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler4, channelState5, (java.lang.Throwable) remotingException9);
        // The following exception was thrown during execution in test generation
        try {
            java.net.InetSocketAddress inetSocketAddress11 = channelDelegate0.getLocalAddress();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray1);
    }

    @Test
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test057");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray2 = heapChannelBuffer1.array();
        byte[] byteArray7 = new byte[] { (byte) 1, (byte) 20, (byte) 70, (byte) 10 };
        heapChannelBuffer1.writeBytes(byteArray7);
        java.nio.ByteBuffer byteBuffer9 = null;
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer1.writeBytes(byteBuffer9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[1, 20, 70, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 20, 70, 10]");
    }

    @Test
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test058");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray2 = heapChannelBuffer1.array();
        byte[] byteArray7 = new byte[] { (byte) 1, (byte) 20, (byte) 70, (byte) 10 };
        heapChannelBuffer1.writeBytes(byteArray7);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer10 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer12 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean13 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer10, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer12);
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer14 = heapChannelBuffer10.copy();
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer1.writeBytes((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer10, (int) 'a', (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[1, 20, 70, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 20, 70, 10]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(channelBuffer14);
    }

    @Test
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test059");
        java.lang.String str0 = org.apache.dubbo.remoting.Constants.PAYLOAD_KEY;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "payload" + "'", str0, "payload");
    }

    @Test
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test060");
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate0 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj1 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate0);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate2 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate0);
        org.apache.dubbo.common.Parameters parameters3 = null;
        // The following exception was thrown during execution in test generation
        try {
            serverDelegate2.reset(parameters3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj1);
    }

    @Test
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test061");
        byte byte0 = org.apache.dubbo.remoting.exchange.Response.BAD_REQUEST;
        org.junit.Assert.assertTrue("'" + byte0 + "' != '" + (byte) 40 + "'", byte0 == (byte) 40);
    }

    @Test
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test062");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.Transporter transporter0 = org.apache.dubbo.remoting.Transporters.getTransporter();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Failed to create adaptive instance: java.lang.IllegalStateException: Can't create adaptive extension interface org.apache.dubbo.remoting.Transporter, cause: Failed to compile class, cause: javassist/ClassPath, class: org.apache.dubbo.remoting.Transporter$Adaptive, code: ?package org.apache.dubbo.remoting;?import org.apache.dubbo.common.extension.ExtensionLoader;?public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {?public org.apache.dubbo.remoting.RemotingServer bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {?if (arg0 == null) throw new IllegalArgumentException(\"url == null\");?org.apache.dubbo.common.URL url = arg0;?String extName = url.getParameter(\"server\", url.getParameter(\"transporter\", \"netty\"));?if(extName == null) throw new IllegalStateException(\"Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (\" + url.toString() + \") use keys([server, transporter])\");?org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);?return extension.bind(arg0, arg1);?}?public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {?if (arg0 == null) throw new IllegalArgumentException(\"url == null\");?org.apache.dubbo.common.URL url = arg0;?String extName = url.getParameter(\"client\", url.getParameter(\"transporter\", \"netty\"));?if(extName == null) throw new IllegalStateException(\"Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (\" + url.toString() + \") use keys([client, transporter])\");?org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);?return extension.connect(arg0, arg1);?}?}?, stack: java.lang.NoClassDefFoundError: javassist/ClassPath??java.lang.NoClassDefFoundError: javassist/ClassPath??at org.apache.dubbo.common.compiler.support.JavassistCompiler.doCompile(JavassistCompiler.java:43)??at org.apache.dubbo.common.compiler.support.AbstractCompiler.compile(AbstractCompiler.java:58)??at org.apache.dubbo.common.compiler.support.AdaptiveCompiler.compile(AdaptiveCompiler.java:45)??at org.apache.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClass(ExtensionLoader.java:1039)??at org.apache.dubbo.common.extension.ExtensionLoader.getAdaptiveExtensionClass(ExtensionLoader.java:1032)??at org.apache.dubbo.common.extension.ExtensionLoader.createAdaptiveExtension(ExtensionLoader.java:1021)??at org.apache.dubbo.common.extension.ExtensionLoader.getAdaptiveExtension(ExtensionLoader.java:588)??at org.apache.dubbo.remoting.Transporters.getTransporter(Transporters.java:79)??at org.apache.dubbo.remoting.Transporters.connect(Transporters.java:75)??at org.apache.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:94)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:90)??at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)??at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)??at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)??at java.lang.reflect.Method.invoke(Method.java:498)??at randoop.util.MethodReflectionCode.runReflectionCodeRaw(MethodReflectionCode.java:53)??at randoop.util.ReflectionCode.runReflectionCode(ReflectionCode.java:59)??at randoop.util.RunnerThread.executeReflectionCode(RunnerThread.java:49)??at randoop.util.RunnerThread.run(RunnerThread.java:43)?Caused by: java.lang.ClassNotFoundException: javassist.ClassPath??at java.net.URLClassLoader.findClass(URLClassLoader.java:382)??at java.lang.ClassLoader.loadClass(ClassLoader.java:418)??at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:355)??at java.lang.ClassLoader.loadClass(ClassLoader.java:351)??... 21 more?");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
    }

    @Test
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test063");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        java.io.OutputStream outputStream6 = null;
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer3.getBytes((int) ' ', outputStream6, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test064");
        byte byte0 = org.apache.dubbo.remoting.exchange.Response.OK;
        org.junit.Assert.assertTrue("'" + byte0 + "' != '" + (byte) 20 + "'", byte0 == (byte) 20);
    }

    @Test
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test065");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer5 = heapChannelBuffer1.copy();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer7 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray8 = heapChannelBuffer7.array();
        // The following exception was thrown during execution in test generation
        try {
            channelBuffer5.readBytes(byteArray8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(channelBuffer5);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test066");
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate0 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray1 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher2 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray1);
        org.apache.dubbo.common.URL uRL3 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler4 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher2, uRL3);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState5 = null;
        java.net.InetSocketAddress inetSocketAddress6 = null;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        org.apache.dubbo.remoting.RemotingException remotingException9 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress6, inetSocketAddress7, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable10 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate0, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler4, channelState5, (java.lang.Throwable) remotingException9);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher11 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState12 = null;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        org.apache.dubbo.remoting.ExecutionException executionException17 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress14, inetSocketAddress15, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable18 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate0, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher11, channelState12, (java.lang.Throwable) executionException17);
        org.apache.dubbo.remoting.exchange.Response response21 = new org.apache.dubbo.remoting.exchange.Response((long) (byte) 1, "");
        java.lang.String str22 = response21.getVersion();
        byte byte23 = response21.getStatus();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.exchange.support.DefaultFuture.received((org.apache.dubbo.remoting.Channel) channelDelegate0, response21, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray1);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + byte23 + "' != '" + (byte) 20 + "'", byte23 == (byte) 20);
    }

    @Test
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test067");
        java.lang.String str0 = org.apache.dubbo.remoting.Constants.CONNECT_TIMEOUT_KEY;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "connect.timeout" + "'", str0, "connect.timeout");
    }

    @Test
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test068");
        org.apache.dubbo.remoting.telnet.support.TelnetUtils telnetUtils0 = new org.apache.dubbo.remoting.telnet.support.TelnetUtils();
    }

    @Test
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test069");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.common.URL uRL2 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler3 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher1, uRL2);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler4 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler3);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate5 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray6 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher7 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray6);
        org.apache.dubbo.common.URL uRL8 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler9 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher7, uRL8);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState10 = null;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        org.apache.dubbo.remoting.RemotingException remotingException14 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress11, inetSocketAddress12, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable15 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate5, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler9, channelState10, (java.lang.Throwable) remotingException14);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher16 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState17 = null;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        org.apache.dubbo.remoting.ExecutionException executionException22 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress19, inetSocketAddress20, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable23 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate5, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher16, channelState17, (java.lang.Throwable) executionException22);
        decodeHandler4.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate5);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate25 = new org.apache.dubbo.remoting.transport.ChannelDelegate((org.apache.dubbo.remoting.Channel) channelDelegate5);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.RemotingException remotingException27 = new org.apache.dubbo.remoting.RemotingException((org.apache.dubbo.remoting.Channel) channelDelegate5, "heartbeat.timeout");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray0);
        org.junit.Assert.assertNotNull(channelHandlerArray6);
    }

    @Test
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test070");
        byte byte0 = org.apache.dubbo.remoting.exchange.Response.SERVER_ERROR;
        org.junit.Assert.assertTrue("'" + byte0 + "' != '" + (byte) 80 + "'", byte0 == (byte) 80);
    }

    @Test
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test071");
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory1 = org.apache.dubbo.remoting.buffer.DirectChannelBufferFactory.getInstance();
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer2 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer(10, channelBufferFactory1);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer4 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray5 = heapChannelBuffer4.array();
        // The following exception was thrown during execution in test generation
        try {
            dynamicChannelBuffer2.writeBytes((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer4, (int) 'a', (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelBufferFactory1);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test072");
        java.lang.Runnable runnable0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.CompletableFuture<java.lang.Void> voidCompletableFuture1 = java.util.concurrent.CompletableFuture.runAsync(runnable0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test073");
        org.apache.dubbo.remoting.Client client0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeClient headerExchangeClient2 = new org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeClient(client0, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Client can't be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test074");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        heapChannelBuffer1.writeByte((int) (short) 10);
        heapChannelBuffer1.discardReadBytes();
        java.io.InputStream inputStream6 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int8 = heapChannelBuffer1.setBytes((int) (byte) 80, inputStream6, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test075");
        java.lang.String str0 = org.apache.dubbo.remoting.Constants.DEFAULT_EXCHANGER;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "header" + "'", str0, "header");
    }

    @Test
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test076");
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate0 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate1 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray2 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher3 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray2);
        org.apache.dubbo.common.URL uRL4 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler5 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher3, uRL4);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState6 = null;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        org.apache.dubbo.remoting.RemotingException remotingException10 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress7, inetSocketAddress8, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable11 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate1, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler5, channelState6, (java.lang.Throwable) remotingException10);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher12 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState13 = null;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        org.apache.dubbo.remoting.ExecutionException executionException18 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress15, inetSocketAddress16, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable19 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate1, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher12, channelState13, (java.lang.Throwable) executionException18);
        channelDelegate0.setChannel((org.apache.dubbo.remoting.Channel) channelDelegate1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.common.URL uRL21 = channelDelegate1.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray2);
    }

    @Test
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test077");
        java.lang.String str0 = org.apache.dubbo.remoting.Constants.SENT_KEY;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "sent" + "'", str0, "sent");
    }

    @Test
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test078");
        org.apache.dubbo.remoting.exchange.Response response2 = new org.apache.dubbo.remoting.exchange.Response((long) (byte) 1, "");
        boolean boolean3 = response2.isEvent();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test079");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray2 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher3 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray2);
        org.apache.dubbo.common.URL uRL4 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler5 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher3, uRL4);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler6 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler5);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate7 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray8 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher9 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray8);
        org.apache.dubbo.common.URL uRL10 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler11 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher9, uRL10);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState12 = null;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        org.apache.dubbo.remoting.RemotingException remotingException16 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress13, inetSocketAddress14, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable17 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate7, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler11, channelState12, (java.lang.Throwable) remotingException16);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher18 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState19 = null;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        java.net.InetSocketAddress inetSocketAddress22 = null;
        org.apache.dubbo.remoting.ExecutionException executionException24 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress21, inetSocketAddress22, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable25 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate7, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher18, channelState19, (java.lang.Throwable) executionException24);
        decodeHandler6.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate7);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate27 = new org.apache.dubbo.remoting.transport.ChannelDelegate((org.apache.dubbo.remoting.Channel) channelDelegate7);
        channelHandlerDispatcher1.received((org.apache.dubbo.remoting.Channel) channelDelegate27, (java.lang.Object) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            channelDelegate27.send((java.lang.Object) "connect.queue.warning.size", false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray0);
        org.junit.Assert.assertNotNull(channelHandlerArray2);
        org.junit.Assert.assertNotNull(channelHandlerArray8);
    }

    @Test
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test080");
        org.apache.dubbo.remoting.Codec codec0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.transport.codec.CodecAdapter codecAdapter1 = new org.apache.dubbo.remoting.transport.codec.CodecAdapter(codec0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: codec == null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test081");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        heapChannelBuffer1.writeByte((int) (short) 10);
        heapChannelBuffer1.discardReadBytes();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer7 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray8 = heapChannelBuffer7.array();
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer1.getBytes((int) 'a', byteArray8, (int) (byte) 100, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test082");
        org.apache.dubbo.remoting.exchange.Response response2 = new org.apache.dubbo.remoting.exchange.Response((long) (byte) 1, "");
        response2.setEvent("buffer");
    }

    @Test
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test083");
        java.lang.String str0 = org.apache.dubbo.remoting.Constants.PROMPT_KEY;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "prompt" + "'", str0, "prompt");
    }

    @Test
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test084");
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate0 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate1 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray2 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher3 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray2);
        org.apache.dubbo.common.URL uRL4 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler5 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher3, uRL4);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState6 = null;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        org.apache.dubbo.remoting.RemotingException remotingException10 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress7, inetSocketAddress8, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable11 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate1, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler5, channelState6, (java.lang.Throwable) remotingException10);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher12 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState13 = null;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        org.apache.dubbo.remoting.ExecutionException executionException18 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress15, inetSocketAddress16, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable19 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate1, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher12, channelState13, (java.lang.Throwable) executionException18);
        channelDelegate0.setChannel((org.apache.dubbo.remoting.Channel) channelDelegate1);
        // The following exception was thrown during execution in test generation
        try {
            java.net.InetSocketAddress inetSocketAddress21 = channelDelegate0.getLocalAddress();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray2);
    }

    @Test
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test085");
        byte byte0 = org.apache.dubbo.remoting.exchange.Response.CLIENT_ERROR;
        org.junit.Assert.assertTrue("'" + byte0 + "' != '" + (byte) 90 + "'", byte0 == (byte) 90);
    }

    @Test
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test086");
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer1 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        int int2 = dynamicChannelBuffer1.capacity();
        dynamicChannelBuffer1.ensureWritableBytes(0);
        java.io.OutputStream outputStream6 = null;
        // The following exception was thrown during execution in test generation
        try {
            dynamicChannelBuffer1.getBytes((int) '#', outputStream6, (int) (byte) 80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    }

    @Test
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test087");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer5 = heapChannelBuffer1.copy();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer8 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer10 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean11 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer8, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer10);
        heapChannelBuffer10.resetReaderIndex();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer15 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray16 = heapChannelBuffer15.array();
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 20, (byte) 70, (byte) 10 };
        heapChannelBuffer15.writeBytes(byteArray21);
        heapChannelBuffer10.setBytes(0, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer15, (int) (byte) 1, 10);
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer1.getBytes(5, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer15);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(channelBuffer5);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[1, 20, 70, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 20, 70, 10]");
    }

    @Test
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test088");
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer1 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        int int2 = dynamicChannelBuffer1.capacity();
        dynamicChannelBuffer1.clear();
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory6 = org.apache.dubbo.remoting.buffer.DirectChannelBufferFactory.getInstance();
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer7 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer(10, channelBufferFactory6);
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer8 = dynamicChannelBuffer7.copy();
        // The following exception was thrown during execution in test generation
        try {
            dynamicChannelBuffer1.setBytes((int) (byte) 100, channelBuffer8, 0, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(channelBufferFactory6);
        org.junit.Assert.assertNotNull(channelBuffer8);
    }

    @Test
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test089");
        java.util.concurrent.CompletableFuture<?> wildcardCompletableFuture0 = null;
        java.util.concurrent.CompletableFuture[] completableFutureArray2 = new java.util.concurrent.CompletableFuture[1];
        @SuppressWarnings("unchecked")
        java.util.concurrent.CompletableFuture<?>[] wildcardCompletableFutureArray3 = (java.util.concurrent.CompletableFuture<?>[]) completableFutureArray2;
        wildcardCompletableFutureArray3[0] = wildcardCompletableFuture0;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.CompletableFuture<java.lang.Void> voidCompletableFuture6 = java.util.concurrent.CompletableFuture.allOf(wildcardCompletableFutureArray3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(completableFutureArray2);
        org.junit.Assert.assertNotNull(wildcardCompletableFutureArray3);
    }

    @Test
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test090");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray2 = heapChannelBuffer1.array();
        byte[] byteArray3 = heapChannelBuffer1.array();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer6 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer8 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean9 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer6, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer8);
        heapChannelBuffer8.resetReaderIndex();
        heapChannelBuffer8.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream12 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer8);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer15 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer17 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean18 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer15, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer17);
        heapChannelBuffer17.resetReaderIndex();
        heapChannelBuffer17.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream21 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer17);
        int int23 = heapChannelBuffer8.setBytes((int) (byte) 10, (java.io.InputStream) channelBufferInputStream21, (int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer1.getBytes((int) (byte) 40, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test091");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.common.URL uRL2 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler3 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher1, uRL2);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.ExecutorService executorService5 = messageOnlyChannelHandler3.getPreferredExecutorService((java.lang.Object) (byte) 90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray0);
    }

    @Test
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test092");
        long long0 = org.apache.dubbo.remoting.Constants.LEAST_HEARTBEAT_DURATION;
        org.junit.Assert.assertTrue("'" + long0 + "' != '" + 1000L + "'", long0 == 1000L);
    }

    @Test
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test093");
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate0 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.net.InetSocketAddress inetSocketAddress1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.Channel channel2 = exchangeServerDelegate0.getChannel(inetSocketAddress1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test094");
        org.apache.dubbo.common.URL uRL0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int1 = org.apache.dubbo.remoting.utils.UrlUtils.getHeartbeat(uRL0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test095");
        org.apache.dubbo.remoting.telnet.codec.TelnetCodec telnetCodec0 = new org.apache.dubbo.remoting.telnet.codec.TelnetCodec();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray1 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher2 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray1);
        org.apache.dubbo.common.URL uRL3 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler4 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher2, uRL3);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler5 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler4);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate6 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray7 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher8 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray7);
        org.apache.dubbo.common.URL uRL9 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler10 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher8, uRL9);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState11 = null;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        org.apache.dubbo.remoting.RemotingException remotingException15 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress12, inetSocketAddress13, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable16 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate6, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler10, channelState11, (java.lang.Throwable) remotingException15);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher17 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState18 = null;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        org.apache.dubbo.remoting.ExecutionException executionException23 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress20, inetSocketAddress21, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable24 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate6, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher17, channelState18, (java.lang.Throwable) executionException23);
        decodeHandler5.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate6);
        java.lang.Object obj26 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) channelDelegate6);
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory27 = org.apache.dubbo.remoting.buffer.HeapChannelBufferFactory.getInstance();
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer29 = channelBufferFactory27.getBuffer((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj30 = telnetCodec0.decode((org.apache.dubbo.remoting.Channel) channelDelegate6, channelBuffer29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray1);
        org.junit.Assert.assertNotNull(channelHandlerArray7);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertNotNull(channelBufferFactory27);
        org.junit.Assert.assertNotNull(channelBuffer29);
    }

    @Test
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test096");
        org.apache.dubbo.remoting.Channel channel0 = null;
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray1 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher2 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray1);
        org.apache.dubbo.common.URL uRL3 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler4 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher2, uRL3);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState5 = null;
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable7 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable(channel0, (org.apache.dubbo.remoting.ChannelHandler) messageOnlyChannelHandler4, channelState5, (java.lang.Object) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.ExecutorService executorService8 = messageOnlyChannelHandler4.getExecutorService();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray1);
    }

    @Test
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test097");
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate0 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate1 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate0);
    }

    @Test
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test098");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        heapChannelBuffer3.discardReadBytes();
        // The following exception was thrown during execution in test generation
        try {
            byte byte7 = heapChannelBuffer3.readByte();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test099");
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer1 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer4 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        heapChannelBuffer4.writeByte((int) (short) 10);
        byte[] byteArray7 = heapChannelBuffer4.array();
        // The following exception was thrown during execution in test generation
        try {
            dynamicChannelBuffer1.getBytes((int) (byte) 20, byteArray7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test100");
        org.apache.dubbo.remoting.Channel channel0 = null;
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray1 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher2 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray1);
        org.apache.dubbo.common.URL uRL3 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler4 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher2, uRL3);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState5 = null;
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable7 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable(channel0, (org.apache.dubbo.remoting.ChannelHandler) messageOnlyChannelHandler4, channelState5, (java.lang.Object) (short) 1);
        java.util.concurrent.Executor executor8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.CompletableFuture<java.lang.Void> voidCompletableFuture9 = java.util.concurrent.CompletableFuture.runAsync((java.lang.Runnable) channelEventRunnable7, executor8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray1);
    }

    @Test
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test101");
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer1 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        boolean boolean2 = dynamicChannelBuffer1.hasArray();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer4 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer6 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean7 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer4, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer6);
        heapChannelBuffer6.resetReaderIndex();
        // The following exception was thrown during execution in test generation
        try {
            dynamicChannelBuffer1.readBytes((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer6, (int) (byte) 10, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test102");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        heapChannelBuffer3.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream7 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer10 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray11 = heapChannelBuffer10.array();
        byte[] byteArray12 = heapChannelBuffer10.array();
        heapChannelBuffer3.getBytes((int) (short) 1, byteArray12, (int) (short) 0, (int) (byte) 20);
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory17 = org.apache.dubbo.remoting.buffer.DirectChannelBufferFactory.getInstance();
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer18 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer(10, channelBufferFactory17);
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer3.readBytes((org.apache.dubbo.remoting.buffer.ChannelBuffer) dynamicChannelBuffer18);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(channelBufferFactory17);
    }

    @Test
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test103");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer8 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray9 = heapChannelBuffer8.array();
        byte[] byteArray14 = new byte[] { (byte) 1, (byte) 20, (byte) 70, (byte) 10 };
        heapChannelBuffer8.writeBytes(byteArray14);
        heapChannelBuffer3.setBytes(0, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer8, (int) (byte) 1, 10);
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory19 = heapChannelBuffer3.factory();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[1, 20, 70, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[1, 20, 70, 10]");
        org.junit.Assert.assertNotNull(channelBufferFactory19);
    }

    @Test
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test104");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        int int5 = heapChannelBuffer1.readerIndex();
        heapChannelBuffer1.clear();
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer1.writerIndex((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test105");
        java.lang.String str0 = org.apache.dubbo.remoting.Constants.DEFAULT_CHARSET;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "UTF-8" + "'", str0, "UTF-8");
    }

    @Test
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test106");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer7 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        boolean boolean8 = dynamicChannelBuffer7.hasArray();
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory9 = dynamicChannelBuffer7.factory();
        int int10 = heapChannelBuffer3.compareTo((org.apache.dubbo.remoting.buffer.ChannelBuffer) dynamicChannelBuffer7);
        java.nio.ByteBuffer byteBuffer11 = null;
        // The following exception was thrown during execution in test generation
        try {
            dynamicChannelBuffer7.readBytes(byteBuffer11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(channelBufferFactory9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test107");
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate0 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate1 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray2 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher3 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray2);
        org.apache.dubbo.common.URL uRL4 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler5 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher3, uRL4);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState6 = null;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        org.apache.dubbo.remoting.RemotingException remotingException10 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress7, inetSocketAddress8, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable11 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate1, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler5, channelState6, (java.lang.Throwable) remotingException10);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher12 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState13 = null;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        org.apache.dubbo.remoting.ExecutionException executionException18 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress15, inetSocketAddress16, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable19 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate1, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher12, channelState13, (java.lang.Throwable) executionException18);
        channelDelegate0.setChannel((org.apache.dubbo.remoting.Channel) channelDelegate1);
        // The following exception was thrown during execution in test generation
        try {
            channelDelegate1.close((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray2);
    }

    @Test
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test108");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher2 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher3 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher2);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher4 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray5 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher6 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray5);
        org.apache.dubbo.remoting.Channel channel7 = null;
        java.lang.Throwable throwable8 = null;
        channelHandlerDispatcher6.caught(channel7, throwable8);
        org.apache.dubbo.remoting.Channel channel10 = null;
        channelHandlerDispatcher6.disconnected(channel10);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray12 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher13 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray12);
        org.apache.dubbo.remoting.Channel channel14 = null;
        java.lang.Throwable throwable15 = null;
        channelHandlerDispatcher13.caught(channel14, throwable15);
        org.apache.dubbo.remoting.Channel channel17 = null;
        channelHandlerDispatcher13.disconnected(channel17);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray19 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher20 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray19);
        org.apache.dubbo.common.URL uRL21 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler22 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher20, uRL21);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray23 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher24 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray23);
        org.apache.dubbo.common.URL uRL25 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler26 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher24, uRL25);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler27 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler26);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray28 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher4, channelHandlerDispatcher6, channelHandlerDispatcher13, channelHandlerDispatcher20, decodeHandler27 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher29 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher3, channelHandlerArray28);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray30 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher31 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray30);
        org.apache.dubbo.common.URL uRL32 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler33 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher31, uRL32);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler34 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler33);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate35 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray36 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher37 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray36);
        org.apache.dubbo.common.URL uRL38 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler39 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher37, uRL38);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState40 = null;
        java.net.InetSocketAddress inetSocketAddress41 = null;
        java.net.InetSocketAddress inetSocketAddress42 = null;
        org.apache.dubbo.remoting.RemotingException remotingException44 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress41, inetSocketAddress42, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable45 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate35, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler39, channelState40, (java.lang.Throwable) remotingException44);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher46 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState47 = null;
        java.net.InetSocketAddress inetSocketAddress49 = null;
        java.net.InetSocketAddress inetSocketAddress50 = null;
        org.apache.dubbo.remoting.ExecutionException executionException52 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress49, inetSocketAddress50, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable53 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate35, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher46, channelState47, (java.lang.Throwable) executionException52);
        decodeHandler34.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate35);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate55 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj56 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate55);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate57 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate55);
        exchangeHandlerDispatcher29.sent((org.apache.dubbo.remoting.Channel) channelDelegate35, (java.lang.Object) serverDelegate57);
        channelHandlerDispatcher1.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate35);
        boolean boolean60 = org.apache.dubbo.remoting.exchange.support.DefaultFuture.hasFuture((org.apache.dubbo.remoting.Channel) channelDelegate35);
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyDispatcher messageOnlyDispatcher62 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyDispatcher();
        // The following exception was thrown during execution in test generation
        try {
            channelDelegate35.setAttribute("", (java.lang.Object) messageOnlyDispatcher62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray0);
        org.junit.Assert.assertNotNull(channelHandlerArray5);
        org.junit.Assert.assertNotNull(channelHandlerArray12);
        org.junit.Assert.assertNotNull(channelHandlerArray19);
        org.junit.Assert.assertNotNull(channelHandlerArray23);
        org.junit.Assert.assertNotNull(channelHandlerArray28);
        org.junit.Assert.assertNotNull(channelHandlerArray30);
        org.junit.Assert.assertNotNull(channelHandlerArray36);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test109");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.common.URL uRL2 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler3 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher1, uRL2);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler4 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler3);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate5 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray6 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher7 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray6);
        org.apache.dubbo.common.URL uRL8 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler9 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher7, uRL8);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState10 = null;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        org.apache.dubbo.remoting.RemotingException remotingException14 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress11, inetSocketAddress12, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable15 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate5, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler9, channelState10, (java.lang.Throwable) remotingException14);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher16 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState17 = null;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        org.apache.dubbo.remoting.ExecutionException executionException22 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress19, inetSocketAddress20, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable23 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate5, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher16, channelState17, (java.lang.Throwable) executionException22);
        decodeHandler4.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate5);
        java.lang.Object obj25 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) channelDelegate5);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj27 = channelDelegate5.getAttribute("bind.ip");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray0);
        org.junit.Assert.assertNotNull(channelHandlerArray6);
        org.junit.Assert.assertNotNull(obj25);
    }

    @Test
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test110");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        heapChannelBuffer3.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream7 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer10 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray11 = heapChannelBuffer10.array();
        byte[] byteArray12 = heapChannelBuffer10.array();
        heapChannelBuffer3.getBytes((int) (short) 1, byteArray12, (int) (short) 0, (int) (byte) 20);
        heapChannelBuffer3.ensureWritableBytes((int) (short) -1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test111");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer5 = heapChannelBuffer1.copy();
        java.nio.channels.ScatteringByteChannel scatteringByteChannel7 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int9 = heapChannelBuffer1.setBytes((int) (byte) 90, scatteringByteChannel7, (int) (byte) 80);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(channelBuffer5);
    }

    @Test
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test112");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        heapChannelBuffer3.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream7 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer10 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer12 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean13 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer10, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer12);
        heapChannelBuffer12.resetReaderIndex();
        heapChannelBuffer12.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream16 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer12);
        int int18 = heapChannelBuffer3.setBytes((int) (byte) 10, (java.io.InputStream) channelBufferInputStream16, (int) (byte) 100);
        byte[] byteArray26 = new byte[] { (byte) 20, (byte) 90, (byte) 10, (byte) 20, (byte) 90, (byte) 1 };
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer3.getBytes((int) (byte) 70, byteArray26);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[20, 90, 10, 20, 90, 1]");
    }

    @Test
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test113");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer8 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray9 = heapChannelBuffer8.array();
        byte[] byteArray14 = new byte[] { (byte) 1, (byte) 20, (byte) 70, (byte) 10 };
        heapChannelBuffer8.writeBytes(byteArray14);
        heapChannelBuffer3.setBytes(0, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer8, (int) (byte) 1, 10);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer21 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        heapChannelBuffer21.writeByte((int) (short) 10);
        byte[] byteArray24 = heapChannelBuffer21.array();
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer3.getBytes((int) (byte) 80, byteArray24, (int) '4', (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[1, 20, 70, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[1, 20, 70, 10]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test114");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        int int5 = heapChannelBuffer1.readerIndex();
        heapChannelBuffer1.clear();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer8 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer10 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean11 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer8, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer10);
        heapChannelBuffer10.resetReaderIndex();
        heapChannelBuffer10.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream14 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer10);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer17 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray18 = heapChannelBuffer17.array();
        byte[] byteArray19 = heapChannelBuffer17.array();
        heapChannelBuffer10.getBytes((int) (short) 1, byteArray19, (int) (short) 0, (int) (byte) 20);
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer1.readBytes(byteArray19);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test115");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer7 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        boolean boolean8 = dynamicChannelBuffer7.hasArray();
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory9 = dynamicChannelBuffer7.factory();
        int int10 = heapChannelBuffer3.compareTo((org.apache.dubbo.remoting.buffer.ChannelBuffer) dynamicChannelBuffer7);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer13 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray14 = heapChannelBuffer13.array();
        byte[] byteArray15 = heapChannelBuffer13.array();
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer3.setBytes((int) (byte) 90, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer13, (int) '4', (int) (byte) 70);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(channelBufferFactory9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test116");
        java.util.Collection collection0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.exchange.support.MultiMessage multiMessage1 = org.apache.dubbo.remoting.exchange.support.MultiMessage.createFromCollection(collection0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test117");
        org.apache.dubbo.remoting.exchange.Response response2 = new org.apache.dubbo.remoting.exchange.Response((long) (byte) 1, "");
        boolean boolean3 = response2.isHeartbeat();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test118");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray2 = heapChannelBuffer1.array();
        byte[] byteArray7 = new byte[] { (byte) 1, (byte) 20, (byte) 70, (byte) 10 };
        heapChannelBuffer1.writeBytes(byteArray7);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer11 = org.apache.dubbo.remoting.buffer.ChannelBuffers.wrappedBuffer(byteArray7, 100, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[1, 20, 70, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 20, 70, 10]");
    }

    @Test
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test119");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer6 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer8 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean9 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer6, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer8);
        heapChannelBuffer3.writeBytes((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer6);
        java.nio.ByteBuffer byteBuffer12 = null;
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer3.setBytes((int) (byte) 80, byteBuffer12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test120");
        byte byte0 = org.apache.dubbo.remoting.exchange.Response.SERVICE_NOT_FOUND;
        org.junit.Assert.assertTrue("'" + byte0 + "' != '" + (byte) 60 + "'", byte0 == (byte) 60);
    }

    @Test
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test121");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.common.URL uRL2 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler3 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher1, uRL2);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate4 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate5 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray6 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher7 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray6);
        org.apache.dubbo.common.URL uRL8 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler9 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher7, uRL8);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState10 = null;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        org.apache.dubbo.remoting.RemotingException remotingException14 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress11, inetSocketAddress12, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable15 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate5, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler9, channelState10, (java.lang.Throwable) remotingException14);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher16 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState17 = null;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        org.apache.dubbo.remoting.ExecutionException executionException22 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress19, inetSocketAddress20, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable23 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate5, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher16, channelState17, (java.lang.Throwable) executionException22);
        channelDelegate4.setChannel((org.apache.dubbo.remoting.Channel) channelDelegate5);
        channelHandlerDispatcher1.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate4);
        // The following exception was thrown during execution in test generation
        try {
            java.net.InetSocketAddress inetSocketAddress26 = channelDelegate4.getLocalAddress();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray0);
        org.junit.Assert.assertNotNull(channelHandlerArray6);
    }

    @Test
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test122");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory5 = org.apache.dubbo.remoting.buffer.HeapChannelBufferFactory.getInstance();
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer7 = channelBufferFactory5.getBuffer((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer3.readBytes(channelBuffer7, (int) (byte) 20);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(channelBufferFactory5);
        org.junit.Assert.assertNotNull(channelBuffer7);
    }

    @Test
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test123");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.common.URL uRL2 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler3 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher1, uRL2);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.ExecutorService executorService5 = directChannelHandler3.getPreferredExecutorService((java.lang.Object) "channel.readonly");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray0);
    }

    @Test
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test124");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        heapChannelBuffer3.discardReadBytes();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer9 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer11 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean12 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer9, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer11);
        heapChannelBuffer11.resetReaderIndex();
        heapChannelBuffer11.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream15 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer11);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer18 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray19 = heapChannelBuffer18.array();
        byte[] byteArray20 = heapChannelBuffer18.array();
        heapChannelBuffer11.getBytes((int) (short) 1, byteArray20, (int) (short) 0, (int) (byte) 20);
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer3.setBytes(1, byteArray20, (int) (short) 1, (int) (byte) 70);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test125");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer4 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        heapChannelBuffer4.writeByte((int) (short) 10);
        byte[] byteArray7 = heapChannelBuffer4.array();
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer1.setBytes((int) (byte) 1, byteArray7);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test126");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer6 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer8 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean9 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer6, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer8);
        heapChannelBuffer3.writeBytes((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer6);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer13 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray14 = heapChannelBuffer13.array();
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 20, (byte) 70, (byte) 10 };
        heapChannelBuffer13.writeBytes(byteArray19);
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer3.getBytes((int) (byte) 60, byteArray19);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[1, 20, 70, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 20, 70, 10]");
    }

    @Test
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test127");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.common.URL uRL2 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler3 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher1, uRL2);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler4 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler3);
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher5 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher6 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher5);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.ExecutorService executorService7 = directChannelHandler3.getPreferredExecutorService((java.lang.Object) replierDispatcher6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray0);
    }

    @Test
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test128");
        int int0 = org.apache.dubbo.remoting.Constants.DEFAULT_IDLE_TIMEOUT;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 600000 + "'", int0 == 600000);
    }

    @Test
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test129");
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher0 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher1 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher0);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher2 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray3 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher4 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray3);
        org.apache.dubbo.remoting.Channel channel5 = null;
        java.lang.Throwable throwable6 = null;
        channelHandlerDispatcher4.caught(channel5, throwable6);
        org.apache.dubbo.remoting.Channel channel8 = null;
        channelHandlerDispatcher4.disconnected(channel8);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray10 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher11 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray10);
        org.apache.dubbo.remoting.Channel channel12 = null;
        java.lang.Throwable throwable13 = null;
        channelHandlerDispatcher11.caught(channel12, throwable13);
        org.apache.dubbo.remoting.Channel channel15 = null;
        channelHandlerDispatcher11.disconnected(channel15);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray17 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher18 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray17);
        org.apache.dubbo.common.URL uRL19 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler20 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher18, uRL19);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray21 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher22 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray21);
        org.apache.dubbo.common.URL uRL23 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler24 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher22, uRL23);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler25 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler24);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray26 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher2, channelHandlerDispatcher4, channelHandlerDispatcher11, channelHandlerDispatcher18, decodeHandler25 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher27 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher1, channelHandlerArray26);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray28 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher29 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray28);
        org.apache.dubbo.common.URL uRL30 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler31 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher29, uRL30);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler32 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler31);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate33 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray34 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher35 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray34);
        org.apache.dubbo.common.URL uRL36 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler37 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher35, uRL36);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState38 = null;
        java.net.InetSocketAddress inetSocketAddress39 = null;
        java.net.InetSocketAddress inetSocketAddress40 = null;
        org.apache.dubbo.remoting.RemotingException remotingException42 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress39, inetSocketAddress40, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable43 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate33, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler37, channelState38, (java.lang.Throwable) remotingException42);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher44 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState45 = null;
        java.net.InetSocketAddress inetSocketAddress47 = null;
        java.net.InetSocketAddress inetSocketAddress48 = null;
        org.apache.dubbo.remoting.ExecutionException executionException50 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress47, inetSocketAddress48, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable51 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate33, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher44, channelState45, (java.lang.Throwable) executionException50);
        decodeHandler32.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate33);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate53 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj54 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate53);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate55 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate53);
        exchangeHandlerDispatcher27.sent((org.apache.dubbo.remoting.Channel) channelDelegate33, (java.lang.Object) serverDelegate55);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate58 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj59 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate58);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate60 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate58);
        // The following exception was thrown during execution in test generation
        try {
            channelDelegate33.setAttribute("reconnect", (java.lang.Object) exchangeServerDelegate58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray3);
        org.junit.Assert.assertNotNull(channelHandlerArray10);
        org.junit.Assert.assertNotNull(channelHandlerArray17);
        org.junit.Assert.assertNotNull(channelHandlerArray21);
        org.junit.Assert.assertNotNull(channelHandlerArray26);
        org.junit.Assert.assertNotNull(channelHandlerArray28);
        org.junit.Assert.assertNotNull(channelHandlerArray34);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(obj59);
    }

    @Test
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test130");
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher1 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher2 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher1);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher3 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray4 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher5 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray4);
        org.apache.dubbo.remoting.Channel channel6 = null;
        java.lang.Throwable throwable7 = null;
        channelHandlerDispatcher5.caught(channel6, throwable7);
        org.apache.dubbo.remoting.Channel channel9 = null;
        channelHandlerDispatcher5.disconnected(channel9);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray11 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher12 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray11);
        org.apache.dubbo.remoting.Channel channel13 = null;
        java.lang.Throwable throwable14 = null;
        channelHandlerDispatcher12.caught(channel13, throwable14);
        org.apache.dubbo.remoting.Channel channel16 = null;
        channelHandlerDispatcher12.disconnected(channel16);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray18 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher19 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray18);
        org.apache.dubbo.common.URL uRL20 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler21 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher19, uRL20);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray22 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher23 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray22);
        org.apache.dubbo.common.URL uRL24 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler25 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher23, uRL24);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler26 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler25);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray27 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher3, channelHandlerDispatcher5, channelHandlerDispatcher12, channelHandlerDispatcher19, decodeHandler26 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher28 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher2, channelHandlerArray27);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.exchange.ExchangeClient exchangeClient29 = org.apache.dubbo.remoting.exchange.Exchangers.connect("dispacther", (org.apache.dubbo.remoting.exchange.ExchangeHandler) exchangeHandlerDispatcher28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Failed to create adaptive instance: java.lang.IllegalStateException: Can't create adaptive extension interface org.apache.dubbo.remoting.Transporter, cause: Failed to compile class, cause: javassist/ClassPath, class: org.apache.dubbo.remoting.Transporter$Adaptive, code: ?package org.apache.dubbo.remoting;?import org.apache.dubbo.common.extension.ExtensionLoader;?public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {?public org.apache.dubbo.remoting.RemotingServer bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {?if (arg0 == null) throw new IllegalArgumentException(\"url == null\");?org.apache.dubbo.common.URL url = arg0;?String extName = url.getParameter(\"server\", url.getParameter(\"transporter\", \"netty\"));?if(extName == null) throw new IllegalStateException(\"Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (\" + url.toString() + \") use keys([server, transporter])\");?org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);?return extension.bind(arg0, arg1);?}?public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {?if (arg0 == null) throw new IllegalArgumentException(\"url == null\");?org.apache.dubbo.common.URL url = arg0;?String extName = url.getParameter(\"client\", url.getParameter(\"transporter\", \"netty\"));?if(extName == null) throw new IllegalStateException(\"Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (\" + url.toString() + \") use keys([client, transporter])\");?org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);?return extension.connect(arg0, arg1);?}?}?, stack: java.lang.NoClassDefFoundError: javassist/ClassPath??java.lang.NoClassDefFoundError: javassist/ClassPath??at org.apache.dubbo.common.compiler.support.JavassistCompiler.doCompile(JavassistCompiler.java:43)??at org.apache.dubbo.common.compiler.support.AbstractCompiler.compile(AbstractCompiler.java:58)??at org.apache.dubbo.common.compiler.support.AdaptiveCompiler.compile(AdaptiveCompiler.java:45)??at org.apache.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClass(ExtensionLoader.java:1039)??at org.apache.dubbo.common.extension.ExtensionLoader.getAdaptiveExtensionClass(ExtensionLoader.java:1032)??at org.apache.dubbo.common.extension.ExtensionLoader.createAdaptiveExtension(ExtensionLoader.java:1021)??at org.apache.dubbo.common.extension.ExtensionLoader.getAdaptiveExtension(ExtensionLoader.java:588)??at org.apache.dubbo.remoting.Transporters.getTransporter(Transporters.java:79)??at org.apache.dubbo.remoting.Transporters.connect(Transporters.java:75)??at org.apache.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:94)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:90)??at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)??at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)??at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)??at java.lang.reflect.Method.invoke(Method.java:498)??at randoop.util.MethodReflectionCode.runReflectionCodeRaw(MethodReflectionCode.java:53)??at randoop.util.ReflectionCode.runReflectionCode(ReflectionCode.java:59)??at randoop.util.RunnerThread.executeReflectionCode(RunnerThread.java:49)??at randoop.util.RunnerThread.run(RunnerThread.java:43)?Caused by: java.lang.ClassNotFoundException: javassist.ClassPath??at java.net.URLClassLoader.findClass(URLClassLoader.java:382)??at java.lang.ClassLoader.loadClass(ClassLoader.java:418)??at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:355)??at java.lang.ClassLoader.loadClass(ClassLoader.java:351)??... 21 more?");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray4);
        org.junit.Assert.assertNotNull(channelHandlerArray11);
        org.junit.Assert.assertNotNull(channelHandlerArray18);
        org.junit.Assert.assertNotNull(channelHandlerArray22);
        org.junit.Assert.assertNotNull(channelHandlerArray27);
    }

    @Test
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test131");
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher0 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.ExchangeChannel exchangeChannel1 = null;
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer3 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj4 = replierDispatcher0.reply(exchangeChannel1, (java.lang.Object) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Replier not found, Unsupported message object: class java.lang.Byte");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
    }

    @Test
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test132");
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer1 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        int int2 = dynamicChannelBuffer1.capacity();
        dynamicChannelBuffer1.ensureWritableBytes(0);
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer6 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        boolean boolean7 = dynamicChannelBuffer6.hasArray();
        // The following exception was thrown during execution in test generation
        try {
            dynamicChannelBuffer1.writeBytes((org.apache.dubbo.remoting.buffer.ChannelBuffer) dynamicChannelBuffer6, (int) (byte) 90, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test133");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.common.URL uRL2 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler3 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher1, uRL2);
        org.apache.dubbo.remoting.Channel channel4 = null;
        messageOnlyChannelHandler3.connected(channel4);
        org.apache.dubbo.remoting.ChannelHandler channelHandler6 = messageOnlyChannelHandler3.getHandler();
        org.junit.Assert.assertNotNull(channelHandlerArray0);
        org.junit.Assert.assertNotNull(channelHandler6);
    }

    @Test
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test134");
        int int0 = org.apache.dubbo.remoting.Constants.HEARTBEAT_CHECK_TICK;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 3 + "'", int0 == 3);
    }

    @Test
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test135");
        java.util.ArrayList<java.util.List<java.lang.String>> strListList0 = new java.util.ArrayList<java.util.List<java.lang.String>>();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str1 = org.apache.dubbo.remoting.telnet.support.TelnetUtils.toList((java.util.List<java.util.List<java.lang.String>>) strListList0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test136");
        java.nio.ByteBuffer byteBuffer0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer1 = org.apache.dubbo.remoting.buffer.ChannelBuffers.wrappedBuffer(byteBuffer0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test137");
        org.apache.dubbo.remoting.exchange.Response response2 = new org.apache.dubbo.remoting.exchange.Response((long) (byte) 90, "connect.queue.warning.size");
        byte byte3 = response2.getStatus();
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 20 + "'", byte3 == (byte) 20);
    }

    @Test
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test138");
        org.apache.dubbo.common.URL uRL0 = null;
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher1 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher2 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher1);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher3 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray4 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher5 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray4);
        org.apache.dubbo.remoting.Channel channel6 = null;
        java.lang.Throwable throwable7 = null;
        channelHandlerDispatcher5.caught(channel6, throwable7);
        org.apache.dubbo.remoting.Channel channel9 = null;
        channelHandlerDispatcher5.disconnected(channel9);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray11 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher12 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray11);
        org.apache.dubbo.remoting.Channel channel13 = null;
        java.lang.Throwable throwable14 = null;
        channelHandlerDispatcher12.caught(channel13, throwable14);
        org.apache.dubbo.remoting.Channel channel16 = null;
        channelHandlerDispatcher12.disconnected(channel16);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray18 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher19 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray18);
        org.apache.dubbo.common.URL uRL20 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler21 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher19, uRL20);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray22 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher23 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray22);
        org.apache.dubbo.common.URL uRL24 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler25 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher23, uRL24);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler26 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler25);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray27 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher3, channelHandlerDispatcher5, channelHandlerDispatcher12, channelHandlerDispatcher19, decodeHandler26 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher28 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher2, channelHandlerArray27);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.RemotingServer remotingServer29 = org.apache.dubbo.remoting.Transporters.bind(uRL0, channelHandlerArray27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: url == null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray4);
        org.junit.Assert.assertNotNull(channelHandlerArray11);
        org.junit.Assert.assertNotNull(channelHandlerArray18);
        org.junit.Assert.assertNotNull(channelHandlerArray22);
        org.junit.Assert.assertNotNull(channelHandlerArray27);
    }

    @Test
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test139");
        org.apache.dubbo.common.URL uRL0 = null;
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate1 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray2 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher3 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray2);
        org.apache.dubbo.common.URL uRL4 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler5 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher3, uRL4);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState6 = null;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        org.apache.dubbo.remoting.RemotingException remotingException10 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress7, inetSocketAddress8, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable11 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate1, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler5, channelState6, (java.lang.Throwable) remotingException10);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher12 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState13 = null;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        org.apache.dubbo.remoting.ExecutionException executionException18 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress15, inetSocketAddress16, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable19 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate1, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher12, channelState13, (java.lang.Throwable) executionException18);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.exchange.ExchangeClient exchangeClient20 = org.apache.dubbo.remoting.exchange.Exchangers.connect(uRL0, (org.apache.dubbo.remoting.exchange.ExchangeHandler) exchangeHandlerDispatcher12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: url == null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray2);
    }

    @Test
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test140");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.common.URL uRL2 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler3 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher1, uRL2);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray4 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher5 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray4);
        org.apache.dubbo.common.URL uRL6 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler7 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher5, uRL6);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler8 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler7);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate9 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray10 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher11 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray10);
        org.apache.dubbo.common.URL uRL12 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler13 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher11, uRL12);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState14 = null;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        org.apache.dubbo.remoting.RemotingException remotingException18 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress15, inetSocketAddress16, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable19 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate9, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler13, channelState14, (java.lang.Throwable) remotingException18);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher20 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState21 = null;
        java.net.InetSocketAddress inetSocketAddress23 = null;
        java.net.InetSocketAddress inetSocketAddress24 = null;
        org.apache.dubbo.remoting.ExecutionException executionException26 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress23, inetSocketAddress24, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable27 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate9, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher20, channelState21, (java.lang.Throwable) executionException26);
        decodeHandler8.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate9);
        java.lang.Object obj29 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) channelDelegate9);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer31 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer33 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean34 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer31, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer33);
        int int35 = heapChannelBuffer31.readerIndex();
        heapChannelBuffer31.clear();
        // The following exception was thrown during execution in test generation
        try {
            messageOnlyChannelHandler3.received((org.apache.dubbo.remoting.Channel) channelDelegate9, (java.lang.Object) heapChannelBuffer31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray0);
        org.junit.Assert.assertNotNull(channelHandlerArray4);
        org.junit.Assert.assertNotNull(channelHandlerArray10);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
    }

    @Test
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test141");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer7 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        boolean boolean8 = dynamicChannelBuffer7.hasArray();
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory9 = dynamicChannelBuffer7.factory();
        int int10 = heapChannelBuffer3.compareTo((org.apache.dubbo.remoting.buffer.ChannelBuffer) dynamicChannelBuffer7);
        // The following exception was thrown during execution in test generation
        try {
            byte byte12 = dynamicChannelBuffer7.getByte((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(channelBufferFactory9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test142");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer7 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        boolean boolean8 = dynamicChannelBuffer7.hasArray();
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory9 = dynamicChannelBuffer7.factory();
        int int10 = heapChannelBuffer3.compareTo((org.apache.dubbo.remoting.buffer.ChannelBuffer) dynamicChannelBuffer7);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer12 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        heapChannelBuffer12.writeByte((int) (short) 10);
        heapChannelBuffer12.discardReadBytes();
        java.lang.String str16 = heapChannelBuffer12.toString();
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer3.readBytes((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(channelBufferFactory9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HeapChannelBuffer(ridx=0, widx=1, cap=52)" + "'", str16, "HeapChannelBuffer(ridx=0, widx=1, cap=52)");
    }

    @Test
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test143");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.common.URL uRL2 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler3 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher1, uRL2);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler4 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler3);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate5 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray6 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher7 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray6);
        org.apache.dubbo.common.URL uRL8 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler9 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher7, uRL8);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState10 = null;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        org.apache.dubbo.remoting.RemotingException remotingException14 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress11, inetSocketAddress12, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable15 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate5, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler9, channelState10, (java.lang.Throwable) remotingException14);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher16 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState17 = null;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        org.apache.dubbo.remoting.ExecutionException executionException22 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress19, inetSocketAddress20, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable23 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate5, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher16, channelState17, (java.lang.Throwable) executionException22);
        decodeHandler4.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate5);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate25 = new org.apache.dubbo.remoting.transport.ChannelDelegate((org.apache.dubbo.remoting.Channel) channelDelegate5);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.ChannelHandler channelHandler26 = channelDelegate25.getChannelHandler();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray0);
        org.junit.Assert.assertNotNull(channelHandlerArray6);
    }

    @Test
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test144");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher2 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher3 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher2);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher4 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray5 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher6 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray5);
        org.apache.dubbo.remoting.Channel channel7 = null;
        java.lang.Throwable throwable8 = null;
        channelHandlerDispatcher6.caught(channel7, throwable8);
        org.apache.dubbo.remoting.Channel channel10 = null;
        channelHandlerDispatcher6.disconnected(channel10);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray12 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher13 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray12);
        org.apache.dubbo.remoting.Channel channel14 = null;
        java.lang.Throwable throwable15 = null;
        channelHandlerDispatcher13.caught(channel14, throwable15);
        org.apache.dubbo.remoting.Channel channel17 = null;
        channelHandlerDispatcher13.disconnected(channel17);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray19 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher20 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray19);
        org.apache.dubbo.common.URL uRL21 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler22 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher20, uRL21);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray23 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher24 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray23);
        org.apache.dubbo.common.URL uRL25 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler26 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher24, uRL25);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler27 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler26);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray28 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher4, channelHandlerDispatcher6, channelHandlerDispatcher13, channelHandlerDispatcher20, decodeHandler27 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher29 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher3, channelHandlerArray28);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray30 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher31 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray30);
        org.apache.dubbo.common.URL uRL32 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler33 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher31, uRL32);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler34 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler33);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate35 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray36 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher37 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray36);
        org.apache.dubbo.common.URL uRL38 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler39 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher37, uRL38);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState40 = null;
        java.net.InetSocketAddress inetSocketAddress41 = null;
        java.net.InetSocketAddress inetSocketAddress42 = null;
        org.apache.dubbo.remoting.RemotingException remotingException44 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress41, inetSocketAddress42, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable45 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate35, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler39, channelState40, (java.lang.Throwable) remotingException44);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher46 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState47 = null;
        java.net.InetSocketAddress inetSocketAddress49 = null;
        java.net.InetSocketAddress inetSocketAddress50 = null;
        org.apache.dubbo.remoting.ExecutionException executionException52 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress49, inetSocketAddress50, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable53 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate35, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher46, channelState47, (java.lang.Throwable) executionException52);
        decodeHandler34.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate35);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate55 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj56 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate55);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate57 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate55);
        exchangeHandlerDispatcher29.sent((org.apache.dubbo.remoting.Channel) channelDelegate35, (java.lang.Object) serverDelegate57);
        channelHandlerDispatcher1.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate35);
        boolean boolean60 = org.apache.dubbo.remoting.exchange.support.DefaultFuture.hasFuture((org.apache.dubbo.remoting.Channel) channelDelegate35);
        org.apache.dubbo.remoting.exchange.Request request61 = null;
        java.util.concurrent.ExecutorService executorService63 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.exchange.support.DefaultFuture defaultFuture64 = org.apache.dubbo.remoting.exchange.support.DefaultFuture.newFuture((org.apache.dubbo.remoting.Channel) channelDelegate35, request61, 0, executorService63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray0);
        org.junit.Assert.assertNotNull(channelHandlerArray5);
        org.junit.Assert.assertNotNull(channelHandlerArray12);
        org.junit.Assert.assertNotNull(channelHandlerArray19);
        org.junit.Assert.assertNotNull(channelHandlerArray23);
        org.junit.Assert.assertNotNull(channelHandlerArray28);
        org.junit.Assert.assertNotNull(channelHandlerArray30);
        org.junit.Assert.assertNotNull(channelHandlerArray36);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test145");
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher1 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher2 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher1);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher3 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray4 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher5 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray4);
        org.apache.dubbo.remoting.Channel channel6 = null;
        java.lang.Throwable throwable7 = null;
        channelHandlerDispatcher5.caught(channel6, throwable7);
        org.apache.dubbo.remoting.Channel channel9 = null;
        channelHandlerDispatcher5.disconnected(channel9);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray11 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher12 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray11);
        org.apache.dubbo.remoting.Channel channel13 = null;
        java.lang.Throwable throwable14 = null;
        channelHandlerDispatcher12.caught(channel13, throwable14);
        org.apache.dubbo.remoting.Channel channel16 = null;
        channelHandlerDispatcher12.disconnected(channel16);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray18 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher19 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray18);
        org.apache.dubbo.common.URL uRL20 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler21 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher19, uRL20);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray22 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher23 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray22);
        org.apache.dubbo.common.URL uRL24 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler25 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher23, uRL24);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler26 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler25);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray27 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher3, channelHandlerDispatcher5, channelHandlerDispatcher12, channelHandlerDispatcher19, decodeHandler26 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher28 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher2, channelHandlerArray27);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.RemotingServer remotingServer29 = org.apache.dubbo.remoting.Transporters.bind("telnet", channelHandlerArray27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Failed to create adaptive instance: java.lang.IllegalStateException: Can't create adaptive extension interface org.apache.dubbo.remoting.Transporter, cause: Failed to compile class, cause: javassist/ClassPath, class: org.apache.dubbo.remoting.Transporter$Adaptive, code: ?package org.apache.dubbo.remoting;?import org.apache.dubbo.common.extension.ExtensionLoader;?public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {?public org.apache.dubbo.remoting.RemotingServer bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {?if (arg0 == null) throw new IllegalArgumentException(\"url == null\");?org.apache.dubbo.common.URL url = arg0;?String extName = url.getParameter(\"server\", url.getParameter(\"transporter\", \"netty\"));?if(extName == null) throw new IllegalStateException(\"Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (\" + url.toString() + \") use keys([server, transporter])\");?org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);?return extension.bind(arg0, arg1);?}?public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {?if (arg0 == null) throw new IllegalArgumentException(\"url == null\");?org.apache.dubbo.common.URL url = arg0;?String extName = url.getParameter(\"client\", url.getParameter(\"transporter\", \"netty\"));?if(extName == null) throw new IllegalStateException(\"Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (\" + url.toString() + \") use keys([client, transporter])\");?org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);?return extension.connect(arg0, arg1);?}?}?, stack: java.lang.NoClassDefFoundError: javassist/ClassPath??java.lang.NoClassDefFoundError: javassist/ClassPath??at org.apache.dubbo.common.compiler.support.JavassistCompiler.doCompile(JavassistCompiler.java:43)??at org.apache.dubbo.common.compiler.support.AbstractCompiler.compile(AbstractCompiler.java:58)??at org.apache.dubbo.common.compiler.support.AdaptiveCompiler.compile(AdaptiveCompiler.java:45)??at org.apache.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClass(ExtensionLoader.java:1039)??at org.apache.dubbo.common.extension.ExtensionLoader.getAdaptiveExtensionClass(ExtensionLoader.java:1032)??at org.apache.dubbo.common.extension.ExtensionLoader.createAdaptiveExtension(ExtensionLoader.java:1021)??at org.apache.dubbo.common.extension.ExtensionLoader.getAdaptiveExtension(ExtensionLoader.java:588)??at org.apache.dubbo.remoting.Transporters.getTransporter(Transporters.java:79)??at org.apache.dubbo.remoting.Transporters.connect(Transporters.java:75)??at org.apache.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:94)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:90)??at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)??at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)??at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)??at java.lang.reflect.Method.invoke(Method.java:498)??at randoop.util.MethodReflectionCode.runReflectionCodeRaw(MethodReflectionCode.java:53)??at randoop.util.ReflectionCode.runReflectionCode(ReflectionCode.java:59)??at randoop.util.RunnerThread.executeReflectionCode(RunnerThread.java:49)??at randoop.util.RunnerThread.run(RunnerThread.java:43)?Caused by: java.lang.ClassNotFoundException: javassist.ClassPath??at java.net.URLClassLoader.findClass(URLClassLoader.java:382)??at java.lang.ClassLoader.loadClass(ClassLoader.java:418)??at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:355)??at java.lang.ClassLoader.loadClass(ClassLoader.java:351)??... 21 more?");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray4);
        org.junit.Assert.assertNotNull(channelHandlerArray11);
        org.junit.Assert.assertNotNull(channelHandlerArray18);
        org.junit.Assert.assertNotNull(channelHandlerArray22);
        org.junit.Assert.assertNotNull(channelHandlerArray27);
    }

    @Test
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test146");
        org.apache.dubbo.remoting.Codec2.DecodeResult decodeResult0 = org.apache.dubbo.remoting.Codec2.DecodeResult.SKIP_SOME_INPUT;
        org.junit.Assert.assertTrue("'" + decodeResult0 + "' != '" + org.apache.dubbo.remoting.Codec2.DecodeResult.SKIP_SOME_INPUT + "'", decodeResult0.equals(org.apache.dubbo.remoting.Codec2.DecodeResult.SKIP_SOME_INPUT));
    }

    @Test
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test147");
        org.apache.dubbo.remoting.transport.codec.TransportCodec transportCodec0 = new org.apache.dubbo.remoting.transport.codec.TransportCodec();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher1 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher2 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher1);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher3 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray4 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher5 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray4);
        org.apache.dubbo.remoting.Channel channel6 = null;
        java.lang.Throwable throwable7 = null;
        channelHandlerDispatcher5.caught(channel6, throwable7);
        org.apache.dubbo.remoting.Channel channel9 = null;
        channelHandlerDispatcher5.disconnected(channel9);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray11 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher12 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray11);
        org.apache.dubbo.remoting.Channel channel13 = null;
        java.lang.Throwable throwable14 = null;
        channelHandlerDispatcher12.caught(channel13, throwable14);
        org.apache.dubbo.remoting.Channel channel16 = null;
        channelHandlerDispatcher12.disconnected(channel16);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray18 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher19 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray18);
        org.apache.dubbo.common.URL uRL20 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler21 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher19, uRL20);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray22 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher23 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray22);
        org.apache.dubbo.common.URL uRL24 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler25 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher23, uRL24);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler26 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler25);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray27 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher3, channelHandlerDispatcher5, channelHandlerDispatcher12, channelHandlerDispatcher19, decodeHandler26 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher28 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher2, channelHandlerArray27);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray29 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher30 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray29);
        org.apache.dubbo.common.URL uRL31 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler32 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher30, uRL31);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler33 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler32);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate34 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray35 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher36 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray35);
        org.apache.dubbo.common.URL uRL37 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler38 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher36, uRL37);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState39 = null;
        java.net.InetSocketAddress inetSocketAddress40 = null;
        java.net.InetSocketAddress inetSocketAddress41 = null;
        org.apache.dubbo.remoting.RemotingException remotingException43 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress40, inetSocketAddress41, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable44 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate34, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler38, channelState39, (java.lang.Throwable) remotingException43);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher45 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState46 = null;
        java.net.InetSocketAddress inetSocketAddress48 = null;
        java.net.InetSocketAddress inetSocketAddress49 = null;
        org.apache.dubbo.remoting.ExecutionException executionException51 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress48, inetSocketAddress49, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable52 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate34, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher45, channelState46, (java.lang.Throwable) executionException51);
        decodeHandler33.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate34);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate54 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj55 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate54);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate56 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate54);
        exchangeHandlerDispatcher28.sent((org.apache.dubbo.remoting.Channel) channelDelegate34, (java.lang.Object) serverDelegate56);
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer58 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj59 = transportCodec0.decode((org.apache.dubbo.remoting.Channel) channelDelegate34, channelBuffer58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray4);
        org.junit.Assert.assertNotNull(channelHandlerArray11);
        org.junit.Assert.assertNotNull(channelHandlerArray18);
        org.junit.Assert.assertNotNull(channelHandlerArray22);
        org.junit.Assert.assertNotNull(channelHandlerArray27);
        org.junit.Assert.assertNotNull(channelHandlerArray29);
        org.junit.Assert.assertNotNull(channelHandlerArray35);
        org.junit.Assert.assertNotNull(obj55);
    }

    @Test
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test148");
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher1 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher2 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher1);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher3 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray4 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher5 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray4);
        org.apache.dubbo.remoting.Channel channel6 = null;
        java.lang.Throwable throwable7 = null;
        channelHandlerDispatcher5.caught(channel6, throwable7);
        org.apache.dubbo.remoting.Channel channel9 = null;
        channelHandlerDispatcher5.disconnected(channel9);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray11 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher12 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray11);
        org.apache.dubbo.remoting.Channel channel13 = null;
        java.lang.Throwable throwable14 = null;
        channelHandlerDispatcher12.caught(channel13, throwable14);
        org.apache.dubbo.remoting.Channel channel16 = null;
        channelHandlerDispatcher12.disconnected(channel16);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray18 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher19 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray18);
        org.apache.dubbo.common.URL uRL20 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler21 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher19, uRL20);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray22 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher23 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray22);
        org.apache.dubbo.common.URL uRL24 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler25 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher23, uRL24);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler26 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler25);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray27 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher3, channelHandlerDispatcher5, channelHandlerDispatcher12, channelHandlerDispatcher19, decodeHandler26 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher28 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher2, channelHandlerArray27);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.exchange.ExchangeServer exchangeServer29 = org.apache.dubbo.remoting.exchange.Exchangers.bind("telnet", (org.apache.dubbo.remoting.exchange.ExchangeHandler) exchangeHandlerDispatcher28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Failed to create adaptive instance: java.lang.IllegalStateException: Can't create adaptive extension interface org.apache.dubbo.remoting.Transporter, cause: Failed to compile class, cause: javassist/ClassPath, class: org.apache.dubbo.remoting.Transporter$Adaptive, code: ?package org.apache.dubbo.remoting;?import org.apache.dubbo.common.extension.ExtensionLoader;?public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {?public org.apache.dubbo.remoting.RemotingServer bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {?if (arg0 == null) throw new IllegalArgumentException(\"url == null\");?org.apache.dubbo.common.URL url = arg0;?String extName = url.getParameter(\"server\", url.getParameter(\"transporter\", \"netty\"));?if(extName == null) throw new IllegalStateException(\"Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (\" + url.toString() + \") use keys([server, transporter])\");?org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);?return extension.bind(arg0, arg1);?}?public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {?if (arg0 == null) throw new IllegalArgumentException(\"url == null\");?org.apache.dubbo.common.URL url = arg0;?String extName = url.getParameter(\"client\", url.getParameter(\"transporter\", \"netty\"));?if(extName == null) throw new IllegalStateException(\"Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (\" + url.toString() + \") use keys([client, transporter])\");?org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);?return extension.connect(arg0, arg1);?}?}?, stack: java.lang.NoClassDefFoundError: javassist/ClassPath??java.lang.NoClassDefFoundError: javassist/ClassPath??at org.apache.dubbo.common.compiler.support.JavassistCompiler.doCompile(JavassistCompiler.java:43)??at org.apache.dubbo.common.compiler.support.AbstractCompiler.compile(AbstractCompiler.java:58)??at org.apache.dubbo.common.compiler.support.AdaptiveCompiler.compile(AdaptiveCompiler.java:45)??at org.apache.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClass(ExtensionLoader.java:1039)??at org.apache.dubbo.common.extension.ExtensionLoader.getAdaptiveExtensionClass(ExtensionLoader.java:1032)??at org.apache.dubbo.common.extension.ExtensionLoader.createAdaptiveExtension(ExtensionLoader.java:1021)??at org.apache.dubbo.common.extension.ExtensionLoader.getAdaptiveExtension(ExtensionLoader.java:588)??at org.apache.dubbo.remoting.Transporters.getTransporter(Transporters.java:79)??at org.apache.dubbo.remoting.Transporters.connect(Transporters.java:75)??at org.apache.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:94)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:90)??at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)??at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)??at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)??at java.lang.reflect.Method.invoke(Method.java:498)??at randoop.util.MethodReflectionCode.runReflectionCodeRaw(MethodReflectionCode.java:53)??at randoop.util.ReflectionCode.runReflectionCode(ReflectionCode.java:59)??at randoop.util.RunnerThread.executeReflectionCode(RunnerThread.java:49)??at randoop.util.RunnerThread.run(RunnerThread.java:43)?Caused by: java.lang.ClassNotFoundException: javassist.ClassPath??at java.net.URLClassLoader.findClass(URLClassLoader.java:382)??at java.lang.ClassLoader.loadClass(ClassLoader.java:418)??at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:355)??at java.lang.ClassLoader.loadClass(ClassLoader.java:351)??... 21 more?");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray4);
        org.junit.Assert.assertNotNull(channelHandlerArray11);
        org.junit.Assert.assertNotNull(channelHandlerArray18);
        org.junit.Assert.assertNotNull(channelHandlerArray22);
        org.junit.Assert.assertNotNull(channelHandlerArray27);
    }

    @Test
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test149");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.common.URL uRL2 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler3 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher1, uRL2);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray4 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher5 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray4);
        org.apache.dubbo.common.URL uRL6 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler7 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher5, uRL6);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler8 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler7);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate9 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray10 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher11 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray10);
        org.apache.dubbo.common.URL uRL12 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler13 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher11, uRL12);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState14 = null;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        org.apache.dubbo.remoting.RemotingException remotingException18 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress15, inetSocketAddress16, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable19 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate9, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler13, channelState14, (java.lang.Throwable) remotingException18);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher20 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState21 = null;
        java.net.InetSocketAddress inetSocketAddress23 = null;
        java.net.InetSocketAddress inetSocketAddress24 = null;
        org.apache.dubbo.remoting.ExecutionException executionException26 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress23, inetSocketAddress24, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable27 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate9, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher20, channelState21, (java.lang.Throwable) executionException26);
        decodeHandler8.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate9);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray29 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher30 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray29);
        org.apache.dubbo.remoting.Channel channel31 = null;
        java.lang.Throwable throwable32 = null;
        channelHandlerDispatcher30.caught(channel31, throwable32);
        directChannelHandler3.sent((org.apache.dubbo.remoting.Channel) channelDelegate9, (java.lang.Object) channel31);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray35 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher36 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray35);
        org.apache.dubbo.common.URL uRL37 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler38 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher36, uRL37);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler39 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler38);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate40 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray41 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher42 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray41);
        org.apache.dubbo.common.URL uRL43 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler44 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher42, uRL43);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState45 = null;
        java.net.InetSocketAddress inetSocketAddress46 = null;
        java.net.InetSocketAddress inetSocketAddress47 = null;
        org.apache.dubbo.remoting.RemotingException remotingException49 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress46, inetSocketAddress47, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable50 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate40, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler44, channelState45, (java.lang.Throwable) remotingException49);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher51 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState52 = null;
        java.net.InetSocketAddress inetSocketAddress54 = null;
        java.net.InetSocketAddress inetSocketAddress55 = null;
        org.apache.dubbo.remoting.ExecutionException executionException57 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress54, inetSocketAddress55, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable58 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate40, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher51, channelState52, (java.lang.Throwable) executionException57);
        decodeHandler39.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate40);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate60 = new org.apache.dubbo.remoting.transport.ChannelDelegate((org.apache.dubbo.remoting.Channel) channelDelegate40);
        // The following exception was thrown during execution in test generation
        try {
            directChannelHandler3.received((org.apache.dubbo.remoting.Channel) channelDelegate40, (java.lang.Object) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray0);
        org.junit.Assert.assertNotNull(channelHandlerArray4);
        org.junit.Assert.assertNotNull(channelHandlerArray10);
        org.junit.Assert.assertNotNull(channelHandlerArray29);
        org.junit.Assert.assertNotNull(channelHandlerArray35);
        org.junit.Assert.assertNotNull(channelHandlerArray41);
    }

    @Test
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test150");
        java.net.InetSocketAddress inetSocketAddress1 = null;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        org.apache.dubbo.remoting.ExecutionException executionException4 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress1, inetSocketAddress2, "hi!");
        java.net.InetSocketAddress inetSocketAddress5 = executionException4.getRemoteAddress();
        org.junit.Assert.assertNull(inetSocketAddress5);
    }

    @Test
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test151");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        int int5 = heapChannelBuffer1.readerIndex();
        heapChannelBuffer1.clear();
        heapChannelBuffer1.resetWriterIndex();
        java.nio.ByteBuffer byteBuffer9 = null;
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer1.getBytes((int) (byte) 80, byteBuffer9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test152");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.common.URL uRL2 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler3 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher1, uRL2);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler4 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler3);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate5 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray6 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher7 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray6);
        org.apache.dubbo.common.URL uRL8 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler9 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher7, uRL8);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState10 = null;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        org.apache.dubbo.remoting.RemotingException remotingException14 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress11, inetSocketAddress12, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable15 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate5, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler9, channelState10, (java.lang.Throwable) remotingException14);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher16 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState17 = null;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        org.apache.dubbo.remoting.ExecutionException executionException22 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress19, inetSocketAddress20, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable23 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate5, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher16, channelState17, (java.lang.Throwable) executionException22);
        decodeHandler4.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate5);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate25 = new org.apache.dubbo.remoting.transport.ChannelDelegate((org.apache.dubbo.remoting.Channel) channelDelegate5);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = channelDelegate5.isConnected();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray0);
        org.junit.Assert.assertNotNull(channelHandlerArray6);
    }

    @Test
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test153");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer7 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        boolean boolean8 = dynamicChannelBuffer7.hasArray();
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory9 = dynamicChannelBuffer7.factory();
        int int10 = heapChannelBuffer3.compareTo((org.apache.dubbo.remoting.buffer.ChannelBuffer) dynamicChannelBuffer7);
        boolean boolean11 = dynamicChannelBuffer7.hasArray();
        dynamicChannelBuffer7.writeByte((int) (byte) 40);
        byte[] byteArray17 = new byte[] { (byte) 90, (byte) 60, (byte) 1 };
        // The following exception was thrown during execution in test generation
        try {
            dynamicChannelBuffer7.readBytes(byteArray17, 0, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(channelBufferFactory9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[90, 60, 1]");
    }

    @Test
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test154");
        org.apache.dubbo.common.URL uRL0 = null;
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher1 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher2 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher1);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher3 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray4 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher5 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray4);
        org.apache.dubbo.remoting.Channel channel6 = null;
        java.lang.Throwable throwable7 = null;
        channelHandlerDispatcher5.caught(channel6, throwable7);
        org.apache.dubbo.remoting.Channel channel9 = null;
        channelHandlerDispatcher5.disconnected(channel9);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray11 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher12 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray11);
        org.apache.dubbo.remoting.Channel channel13 = null;
        java.lang.Throwable throwable14 = null;
        channelHandlerDispatcher12.caught(channel13, throwable14);
        org.apache.dubbo.remoting.Channel channel16 = null;
        channelHandlerDispatcher12.disconnected(channel16);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray18 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher19 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray18);
        org.apache.dubbo.common.URL uRL20 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler21 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher19, uRL20);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray22 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher23 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray22);
        org.apache.dubbo.common.URL uRL24 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler25 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher23, uRL24);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler26 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler25);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray27 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher3, channelHandlerDispatcher5, channelHandlerDispatcher12, channelHandlerDispatcher19, decodeHandler26 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher28 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher2, channelHandlerArray27);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray29 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher30 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray29);
        org.apache.dubbo.common.URL uRL31 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler32 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher30, uRL31);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler33 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler32);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate34 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray35 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher36 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray35);
        org.apache.dubbo.common.URL uRL37 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler38 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher36, uRL37);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState39 = null;
        java.net.InetSocketAddress inetSocketAddress40 = null;
        java.net.InetSocketAddress inetSocketAddress41 = null;
        org.apache.dubbo.remoting.RemotingException remotingException43 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress40, inetSocketAddress41, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable44 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate34, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler38, channelState39, (java.lang.Throwable) remotingException43);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher45 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState46 = null;
        java.net.InetSocketAddress inetSocketAddress48 = null;
        java.net.InetSocketAddress inetSocketAddress49 = null;
        org.apache.dubbo.remoting.ExecutionException executionException51 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress48, inetSocketAddress49, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable52 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate34, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher45, channelState46, (java.lang.Throwable) executionException51);
        decodeHandler33.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate34);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate54 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj55 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate54);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate56 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate54);
        exchangeHandlerDispatcher28.sent((org.apache.dubbo.remoting.Channel) channelDelegate34, (java.lang.Object) serverDelegate56);
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher58 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher59 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher58);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.exchange.ExchangeServer exchangeServer60 = org.apache.dubbo.remoting.exchange.Exchangers.bind(uRL0, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher28, (org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: url == null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray4);
        org.junit.Assert.assertNotNull(channelHandlerArray11);
        org.junit.Assert.assertNotNull(channelHandlerArray18);
        org.junit.Assert.assertNotNull(channelHandlerArray22);
        org.junit.Assert.assertNotNull(channelHandlerArray27);
        org.junit.Assert.assertNotNull(channelHandlerArray29);
        org.junit.Assert.assertNotNull(channelHandlerArray35);
        org.junit.Assert.assertNotNull(obj55);
    }

    @Test
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test155");
        java.lang.String str0 = org.apache.dubbo.remoting.transport.dispatcher.execution.ExecutionDispatcher.NAME;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "execution" + "'", str0, "execution");
    }

    @Test
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test156");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray1 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.Client client2 = org.apache.dubbo.remoting.Transporters.connect("WRITE_TIMESTAMP", channelHandlerArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Failed to create adaptive instance: java.lang.IllegalStateException: Can't create adaptive extension interface org.apache.dubbo.remoting.Transporter, cause: Failed to compile class, cause: javassist/ClassPath, class: org.apache.dubbo.remoting.Transporter$Adaptive, code: ?package org.apache.dubbo.remoting;?import org.apache.dubbo.common.extension.ExtensionLoader;?public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {?public org.apache.dubbo.remoting.RemotingServer bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {?if (arg0 == null) throw new IllegalArgumentException(\"url == null\");?org.apache.dubbo.common.URL url = arg0;?String extName = url.getParameter(\"server\", url.getParameter(\"transporter\", \"netty\"));?if(extName == null) throw new IllegalStateException(\"Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (\" + url.toString() + \") use keys([server, transporter])\");?org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);?return extension.bind(arg0, arg1);?}?public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {?if (arg0 == null) throw new IllegalArgumentException(\"url == null\");?org.apache.dubbo.common.URL url = arg0;?String extName = url.getParameter(\"client\", url.getParameter(\"transporter\", \"netty\"));?if(extName == null) throw new IllegalStateException(\"Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (\" + url.toString() + \") use keys([client, transporter])\");?org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);?return extension.connect(arg0, arg1);?}?}?, stack: java.lang.NoClassDefFoundError: javassist/ClassPath??java.lang.NoClassDefFoundError: javassist/ClassPath??at org.apache.dubbo.common.compiler.support.JavassistCompiler.doCompile(JavassistCompiler.java:43)??at org.apache.dubbo.common.compiler.support.AbstractCompiler.compile(AbstractCompiler.java:58)??at org.apache.dubbo.common.compiler.support.AdaptiveCompiler.compile(AdaptiveCompiler.java:45)??at org.apache.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClass(ExtensionLoader.java:1039)??at org.apache.dubbo.common.extension.ExtensionLoader.getAdaptiveExtensionClass(ExtensionLoader.java:1032)??at org.apache.dubbo.common.extension.ExtensionLoader.createAdaptiveExtension(ExtensionLoader.java:1021)??at org.apache.dubbo.common.extension.ExtensionLoader.getAdaptiveExtension(ExtensionLoader.java:588)??at org.apache.dubbo.remoting.Transporters.getTransporter(Transporters.java:79)??at org.apache.dubbo.remoting.Transporters.connect(Transporters.java:75)??at org.apache.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:94)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:90)??at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)??at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)??at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)??at java.lang.reflect.Method.invoke(Method.java:498)??at randoop.util.MethodReflectionCode.runReflectionCodeRaw(MethodReflectionCode.java:53)??at randoop.util.ReflectionCode.runReflectionCode(ReflectionCode.java:59)??at randoop.util.RunnerThread.executeReflectionCode(RunnerThread.java:49)??at randoop.util.RunnerThread.run(RunnerThread.java:43)?Caused by: java.lang.ClassNotFoundException: javassist.ClassPath??at java.net.URLClassLoader.findClass(URLClassLoader.java:382)??at java.lang.ClassLoader.loadClass(ClassLoader.java:418)??at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:355)??at java.lang.ClassLoader.loadClass(ClassLoader.java:351)??... 21 more?");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray1);
    }

    @Test
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test157");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        int int5 = heapChannelBuffer1.readerIndex();
        heapChannelBuffer1.clear();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer8 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer10 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean11 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer8, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer10);
        heapChannelBuffer10.resetReaderIndex();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer15 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray16 = heapChannelBuffer15.array();
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 20, (byte) 70, (byte) 10 };
        heapChannelBuffer15.writeBytes(byteArray21);
        heapChannelBuffer10.setBytes(0, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer15, (int) (byte) 1, 10);
        heapChannelBuffer1.writeBytes((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer15, (int) ' ', (int) (short) 10);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer30 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray31 = heapChannelBuffer30.array();
        byte[] byteArray32 = heapChannelBuffer30.array();
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer1.readBytes(byteArray32, (int) (byte) 1, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[1, 20, 70, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 20, 70, 10]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test158");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray2 = heapChannelBuffer1.array();
        byte[] byteArray3 = heapChannelBuffer1.array();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer6 = org.apache.dubbo.remoting.buffer.ChannelBuffers.wrappedBuffer(byteArray3, (-1), 600000);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test159");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.common.URL uRL2 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler3 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher1, uRL2);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate4 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate5 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray6 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher7 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray6);
        org.apache.dubbo.common.URL uRL8 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler9 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher7, uRL8);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState10 = null;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        org.apache.dubbo.remoting.RemotingException remotingException14 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress11, inetSocketAddress12, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable15 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate5, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler9, channelState10, (java.lang.Throwable) remotingException14);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher16 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState17 = null;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        org.apache.dubbo.remoting.ExecutionException executionException22 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress19, inetSocketAddress20, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable23 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate5, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher16, channelState17, (java.lang.Throwable) executionException22);
        channelDelegate4.setChannel((org.apache.dubbo.remoting.Channel) channelDelegate5);
        channelHandlerDispatcher1.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate4);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = channelDelegate4.isClosed();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray0);
        org.junit.Assert.assertNotNull(channelHandlerArray6);
    }

    @Test
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test160");
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer1 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        int int2 = dynamicChannelBuffer1.capacity();
        byte[] byteArray3 = null;
        // The following exception was thrown during execution in test generation
        try {
            dynamicChannelBuffer1.readBytes(byteArray3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    }

    @Test
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test161");
        org.apache.dubbo.remoting.transport.ClientDelegate clientDelegate0 = new org.apache.dubbo.remoting.transport.ClientDelegate();
        org.apache.dubbo.common.Parameters parameters1 = null;
        // The following exception was thrown during execution in test generation
        try {
            clientDelegate0.reset(parameters1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test162");
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer0 = org.apache.dubbo.remoting.buffer.ChannelBuffers.EMPTY_BUFFER;
        org.junit.Assert.assertNotNull(channelBuffer0);
    }

    @Test
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test163");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer5 = heapChannelBuffer1.copy();
        boolean boolean6 = channelBuffer5.readable();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(channelBuffer5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test164");
        org.apache.dubbo.common.URL uRL0 = null;
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher1 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray2 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher3 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray2);
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher4 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher5 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher4);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher6 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray7 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher8 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray7);
        org.apache.dubbo.remoting.Channel channel9 = null;
        java.lang.Throwable throwable10 = null;
        channelHandlerDispatcher8.caught(channel9, throwable10);
        org.apache.dubbo.remoting.Channel channel12 = null;
        channelHandlerDispatcher8.disconnected(channel12);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray14 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher15 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray14);
        org.apache.dubbo.remoting.Channel channel16 = null;
        java.lang.Throwable throwable17 = null;
        channelHandlerDispatcher15.caught(channel16, throwable17);
        org.apache.dubbo.remoting.Channel channel19 = null;
        channelHandlerDispatcher15.disconnected(channel19);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray21 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher22 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray21);
        org.apache.dubbo.common.URL uRL23 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler24 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher22, uRL23);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray25 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher26 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray25);
        org.apache.dubbo.common.URL uRL27 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler28 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher26, uRL27);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler29 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler28);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray30 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher6, channelHandlerDispatcher8, channelHandlerDispatcher15, channelHandlerDispatcher22, decodeHandler29 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher31 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher5, channelHandlerArray30);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray32 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher33 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray32);
        org.apache.dubbo.common.URL uRL34 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler35 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher33, uRL34);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler36 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler35);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate37 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray38 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher39 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray38);
        org.apache.dubbo.common.URL uRL40 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler41 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher39, uRL40);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState42 = null;
        java.net.InetSocketAddress inetSocketAddress43 = null;
        java.net.InetSocketAddress inetSocketAddress44 = null;
        org.apache.dubbo.remoting.RemotingException remotingException46 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress43, inetSocketAddress44, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable47 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate37, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler41, channelState42, (java.lang.Throwable) remotingException46);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher48 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState49 = null;
        java.net.InetSocketAddress inetSocketAddress51 = null;
        java.net.InetSocketAddress inetSocketAddress52 = null;
        org.apache.dubbo.remoting.ExecutionException executionException54 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress51, inetSocketAddress52, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable55 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate37, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher48, channelState49, (java.lang.Throwable) executionException54);
        decodeHandler36.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate37);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate57 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj58 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate57);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate59 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate57);
        exchangeHandlerDispatcher31.sent((org.apache.dubbo.remoting.Channel) channelDelegate37, (java.lang.Object) serverDelegate59);
        channelHandlerDispatcher3.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate37);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher62 = exchangeHandlerDispatcher1.addChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher3);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.exchange.ExchangeClient exchangeClient63 = org.apache.dubbo.remoting.exchange.Exchangers.connect(uRL0, (org.apache.dubbo.remoting.exchange.ExchangeHandler) exchangeHandlerDispatcher1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: url == null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray2);
        org.junit.Assert.assertNotNull(channelHandlerArray7);
        org.junit.Assert.assertNotNull(channelHandlerArray14);
        org.junit.Assert.assertNotNull(channelHandlerArray21);
        org.junit.Assert.assertNotNull(channelHandlerArray25);
        org.junit.Assert.assertNotNull(channelHandlerArray30);
        org.junit.Assert.assertNotNull(channelHandlerArray32);
        org.junit.Assert.assertNotNull(channelHandlerArray38);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(exchangeHandlerDispatcher62);
    }

    @Test
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test165");
        org.apache.dubbo.remoting.buffer.HeapChannelBufferFactory heapChannelBufferFactory0 = new org.apache.dubbo.remoting.buffer.HeapChannelBufferFactory();
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer2 = heapChannelBufferFactory0.getBuffer((int) (byte) 0);
        org.junit.Assert.assertNotNull(channelBuffer2);
    }

    @Test
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test166");
        org.apache.dubbo.remoting.transport.ClientDelegate clientDelegate0 = new org.apache.dubbo.remoting.transport.ClientDelegate();
        org.apache.dubbo.common.Parameters parameters1 = null;
        // The following exception was thrown during execution in test generation
        try {
            clientDelegate0.reset(parameters1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test167");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        heapChannelBuffer1.writeByte((int) (short) 10);
        byte[] byteArray4 = heapChannelBuffer1.array();
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer5 = org.apache.dubbo.remoting.buffer.ChannelBuffers.wrappedBuffer(byteArray4);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(channelBuffer5);
    }

    @Test
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test168");
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate0 = new org.apache.dubbo.remoting.transport.ServerDelegate();
        org.apache.dubbo.common.Parameters parameters1 = null;
        // The following exception was thrown during execution in test generation
        try {
            serverDelegate0.reset(parameters1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test169");
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate0 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj1 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate0);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray2 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher3 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray2);
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher4 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher5 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher4);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher6 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray7 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher8 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray7);
        org.apache.dubbo.remoting.Channel channel9 = null;
        java.lang.Throwable throwable10 = null;
        channelHandlerDispatcher8.caught(channel9, throwable10);
        org.apache.dubbo.remoting.Channel channel12 = null;
        channelHandlerDispatcher8.disconnected(channel12);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray14 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher15 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray14);
        org.apache.dubbo.remoting.Channel channel16 = null;
        java.lang.Throwable throwable17 = null;
        channelHandlerDispatcher15.caught(channel16, throwable17);
        org.apache.dubbo.remoting.Channel channel19 = null;
        channelHandlerDispatcher15.disconnected(channel19);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray21 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher22 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray21);
        org.apache.dubbo.common.URL uRL23 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler24 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher22, uRL23);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray25 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher26 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray25);
        org.apache.dubbo.common.URL uRL27 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler28 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher26, uRL27);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler29 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler28);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray30 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher6, channelHandlerDispatcher8, channelHandlerDispatcher15, channelHandlerDispatcher22, decodeHandler29 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher31 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher5, channelHandlerArray30);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray32 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher33 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray32);
        org.apache.dubbo.common.URL uRL34 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler35 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher33, uRL34);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler36 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler35);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate37 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray38 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher39 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray38);
        org.apache.dubbo.common.URL uRL40 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler41 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher39, uRL40);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState42 = null;
        java.net.InetSocketAddress inetSocketAddress43 = null;
        java.net.InetSocketAddress inetSocketAddress44 = null;
        org.apache.dubbo.remoting.RemotingException remotingException46 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress43, inetSocketAddress44, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable47 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate37, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler41, channelState42, (java.lang.Throwable) remotingException46);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher48 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState49 = null;
        java.net.InetSocketAddress inetSocketAddress51 = null;
        java.net.InetSocketAddress inetSocketAddress52 = null;
        org.apache.dubbo.remoting.ExecutionException executionException54 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress51, inetSocketAddress52, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable55 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate37, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher48, channelState49, (java.lang.Throwable) executionException54);
        decodeHandler36.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate37);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate57 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj58 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate57);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate59 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate57);
        exchangeHandlerDispatcher31.sent((org.apache.dubbo.remoting.Channel) channelDelegate37, (java.lang.Object) serverDelegate59);
        channelHandlerDispatcher3.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate37);
        // The following exception was thrown during execution in test generation
        try {
            exchangeServerDelegate0.send((java.lang.Object) channelDelegate37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(channelHandlerArray2);
        org.junit.Assert.assertNotNull(channelHandlerArray7);
        org.junit.Assert.assertNotNull(channelHandlerArray14);
        org.junit.Assert.assertNotNull(channelHandlerArray21);
        org.junit.Assert.assertNotNull(channelHandlerArray25);
        org.junit.Assert.assertNotNull(channelHandlerArray30);
        org.junit.Assert.assertNotNull(channelHandlerArray32);
        org.junit.Assert.assertNotNull(channelHandlerArray38);
        org.junit.Assert.assertNotNull(obj58);
    }

    @Test
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test170");
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher1 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher2 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.exchange.ExchangeClient exchangeClient3 = org.apache.dubbo.remoting.exchange.Exchangers.connect("", (org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: url == null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test171");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        heapChannelBuffer3.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream7 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer10 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray11 = heapChannelBuffer10.array();
        byte[] byteArray12 = heapChannelBuffer10.array();
        heapChannelBuffer3.getBytes((int) (short) 1, byteArray12, (int) (short) 0, (int) (byte) 20);
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer17 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        int int18 = dynamicChannelBuffer17.capacity();
        dynamicChannelBuffer17.clear();
        dynamicChannelBuffer17.ensureWritableBytes((int) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer3.writeBytes((org.apache.dubbo.remoting.buffer.ChannelBuffer) dynamicChannelBuffer17, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test172");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer7 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        boolean boolean8 = dynamicChannelBuffer7.hasArray();
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory9 = dynamicChannelBuffer7.factory();
        int int10 = heapChannelBuffer3.compareTo((org.apache.dubbo.remoting.buffer.ChannelBuffer) dynamicChannelBuffer7);
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer11 = dynamicChannelBuffer7.copy();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(channelBufferFactory9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(channelBuffer11);
    }

    @Test
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test173");
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer1 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer5 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean6 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer5);
        heapChannelBuffer5.resetReaderIndex();
        heapChannelBuffer5.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream9 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer5);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer12 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer14 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean15 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer12, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer14);
        heapChannelBuffer14.resetReaderIndex();
        heapChannelBuffer14.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream18 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer14);
        int int20 = heapChannelBuffer5.setBytes((int) (byte) 10, (java.io.InputStream) channelBufferInputStream18, (int) (byte) 100);
        int int22 = dynamicChannelBuffer1.writeBytes((java.io.InputStream) channelBufferInputStream18, 0);
        java.lang.Class<?> wildcardClass23 = dynamicChannelBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test174");
        org.apache.dubbo.remoting.telnet.codec.TelnetCodec telnetCodec0 = new org.apache.dubbo.remoting.telnet.codec.TelnetCodec();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray1 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher2 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray1);
        org.apache.dubbo.common.URL uRL3 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler4 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher2, uRL3);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate5 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate6 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray7 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher8 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray7);
        org.apache.dubbo.common.URL uRL9 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler10 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher8, uRL9);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState11 = null;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        org.apache.dubbo.remoting.RemotingException remotingException15 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress12, inetSocketAddress13, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable16 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate6, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler10, channelState11, (java.lang.Throwable) remotingException15);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher17 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState18 = null;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        org.apache.dubbo.remoting.ExecutionException executionException23 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress20, inetSocketAddress21, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable24 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate6, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher17, channelState18, (java.lang.Throwable) executionException23);
        channelDelegate5.setChannel((org.apache.dubbo.remoting.Channel) channelDelegate6);
        channelHandlerDispatcher2.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate5);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer28 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer30 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean31 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer28, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer30);
        heapChannelBuffer30.resetReaderIndex();
        heapChannelBuffer30.discardReadBytes();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer36 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer38 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean39 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer36, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer38);
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer40 = heapChannelBuffer36.copy();
        heapChannelBuffer30.setBytes((int) (byte) 0, channelBuffer40);
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory43 = org.apache.dubbo.remoting.buffer.DirectChannelBufferFactory.getInstance();
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer44 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer(10, channelBufferFactory43);
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer45 = dynamicChannelBuffer44.copy();
        channelBuffer45.resetWriterIndex();
        int int47 = channelBuffer45.capacity();
        // The following exception was thrown during execution in test generation
        try {
            telnetCodec0.encode((org.apache.dubbo.remoting.Channel) channelDelegate5, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer30, (java.lang.Object) int47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray1);
        org.junit.Assert.assertNotNull(channelHandlerArray7);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(channelBuffer40);
        org.junit.Assert.assertNotNull(channelBufferFactory43);
        org.junit.Assert.assertNotNull(channelBuffer45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
    }

    @Test
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test175");
        java.nio.ByteBuffer byteBuffer0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer1 = new org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBuffer(byteBuffer0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: buffer");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test176");
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer1 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer5 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean6 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer5);
        heapChannelBuffer5.resetReaderIndex();
        heapChannelBuffer5.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream9 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer5);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer12 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer14 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean15 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer12, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer14);
        heapChannelBuffer14.resetReaderIndex();
        heapChannelBuffer14.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream18 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer14);
        int int20 = heapChannelBuffer5.setBytes((int) (byte) 10, (java.io.InputStream) channelBufferInputStream18, (int) (byte) 100);
        int int22 = dynamicChannelBuffer1.writeBytes((java.io.InputStream) channelBufferInputStream18, 0);
        channelBufferInputStream18.reset();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test177");
        org.apache.dubbo.remoting.buffer.HeapChannelBufferFactory heapChannelBufferFactory0 = new org.apache.dubbo.remoting.buffer.HeapChannelBufferFactory();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer2 = heapChannelBufferFactory0.getBuffer((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: capacity can not be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test178");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        heapChannelBuffer1.writeByte((int) (short) 10);
        byte[] byteArray4 = heapChannelBuffer1.array();
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer6 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer8 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer10 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean11 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer8, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer10);
        heapChannelBuffer10.resetReaderIndex();
        heapChannelBuffer10.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream14 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer10);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer17 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer19 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean20 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer17, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer19);
        heapChannelBuffer19.resetReaderIndex();
        heapChannelBuffer19.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream23 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer19);
        int int25 = heapChannelBuffer10.setBytes((int) (byte) 10, (java.io.InputStream) channelBufferInputStream23, (int) (byte) 100);
        int int27 = dynamicChannelBuffer6.writeBytes((java.io.InputStream) channelBufferInputStream23, 0);
        int int29 = heapChannelBuffer1.writeBytes((java.io.InputStream) channelBufferInputStream23, 0);
        byte[] byteArray32 = new byte[] { (byte) 40, (byte) 1 };
        int int33 = channelBufferInputStream23.read(byteArray32);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[40, 1]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
    }

    @Test
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test179");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer8 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray9 = heapChannelBuffer8.array();
        byte[] byteArray14 = new byte[] { (byte) 1, (byte) 20, (byte) 70, (byte) 10 };
        heapChannelBuffer8.writeBytes(byteArray14);
        heapChannelBuffer3.setBytes(0, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer8, (int) (byte) 1, 10);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer20 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer22 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean23 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer20, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer22);
        heapChannelBuffer22.resetReaderIndex();
        heapChannelBuffer22.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream26 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer22);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer29 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer31 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean32 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer29, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer31);
        heapChannelBuffer31.resetReaderIndex();
        heapChannelBuffer31.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream35 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer31);
        int int37 = heapChannelBuffer22.setBytes((int) (byte) 10, (java.io.InputStream) channelBufferInputStream35, (int) (byte) 100);
        heapChannelBuffer8.writeBytes((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer22, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer8.setByte(600000, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 600000");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[1, 20, 70, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[1, 20, 70, 10]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
    }

    @Test
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test180");
        org.apache.dubbo.remoting.transport.CodecSupport.checkSerialization("hi!", "telnet.log", (java.lang.Byte) (byte) 10);
    }

    @Test
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test181");
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate0 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj1 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate0);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate2 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate0);
        java.net.InetSocketAddress inetSocketAddress3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.Channel channel4 = serverDelegate2.getChannel(inetSocketAddress3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj1);
    }

    @Test
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test182");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        int int2 = heapChannelBuffer1.readableBytes();
        java.nio.channels.GatheringByteChannel gatheringByteChannel4 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int6 = heapChannelBuffer1.getBytes((int) (short) 0, gatheringByteChannel4, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test183");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.common.URL uRL2 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler3 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher1, uRL2);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate4 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate5 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray6 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher7 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray6);
        org.apache.dubbo.common.URL uRL8 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler9 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher7, uRL8);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState10 = null;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        org.apache.dubbo.remoting.RemotingException remotingException14 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress11, inetSocketAddress12, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable15 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate5, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler9, channelState10, (java.lang.Throwable) remotingException14);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher16 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState17 = null;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        org.apache.dubbo.remoting.ExecutionException executionException22 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress19, inetSocketAddress20, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable23 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate5, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher16, channelState17, (java.lang.Throwable) executionException22);
        channelDelegate4.setChannel((org.apache.dubbo.remoting.Channel) channelDelegate5);
        channelHandlerDispatcher1.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate4);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray26 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher27 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray26);
        org.apache.dubbo.common.URL uRL28 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler29 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher27, uRL28);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler30 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler29);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray31 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher32 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray31);
        org.apache.dubbo.common.URL uRL33 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler34 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher32, uRL33);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler35 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler34);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate36 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray37 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher38 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray37);
        org.apache.dubbo.common.URL uRL39 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler40 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher38, uRL39);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState41 = null;
        java.net.InetSocketAddress inetSocketAddress42 = null;
        java.net.InetSocketAddress inetSocketAddress43 = null;
        org.apache.dubbo.remoting.RemotingException remotingException45 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress42, inetSocketAddress43, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable46 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate36, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler40, channelState41, (java.lang.Throwable) remotingException45);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher47 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState48 = null;
        java.net.InetSocketAddress inetSocketAddress50 = null;
        java.net.InetSocketAddress inetSocketAddress51 = null;
        org.apache.dubbo.remoting.ExecutionException executionException53 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress50, inetSocketAddress51, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable54 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate36, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher47, channelState48, (java.lang.Throwable) executionException53);
        decodeHandler35.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate36);
        decodeHandler30.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate36);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate57 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray58 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher59 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray58);
        org.apache.dubbo.common.URL uRL60 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler61 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher59, uRL60);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState62 = null;
        java.net.InetSocketAddress inetSocketAddress63 = null;
        java.net.InetSocketAddress inetSocketAddress64 = null;
        org.apache.dubbo.remoting.RemotingException remotingException66 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress63, inetSocketAddress64, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable67 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate57, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler61, channelState62, (java.lang.Throwable) remotingException66);
        java.net.InetSocketAddress inetSocketAddress68 = null;
        java.net.InetSocketAddress inetSocketAddress69 = null;
        org.apache.dubbo.remoting.RemotingException remotingException71 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress68, inetSocketAddress69, "charset");
        remotingException66.addSuppressed((java.lang.Throwable) remotingException71);
        java.net.InetSocketAddress inetSocketAddress73 = remotingException71.getLocalAddress();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.ExecutionException executionException74 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) channelHandlerDispatcher1, (org.apache.dubbo.remoting.Channel) channelDelegate36, (java.lang.Throwable) remotingException71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray0);
        org.junit.Assert.assertNotNull(channelHandlerArray6);
        org.junit.Assert.assertNotNull(channelHandlerArray26);
        org.junit.Assert.assertNotNull(channelHandlerArray31);
        org.junit.Assert.assertNotNull(channelHandlerArray37);
        org.junit.Assert.assertNotNull(channelHandlerArray58);
        org.junit.Assert.assertNull(inetSocketAddress73);
    }

    @Test
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test184");
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate0 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate1 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray2 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher3 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray2);
        org.apache.dubbo.common.URL uRL4 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler5 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher3, uRL4);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState6 = null;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        org.apache.dubbo.remoting.RemotingException remotingException10 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress7, inetSocketAddress8, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable11 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate1, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler5, channelState6, (java.lang.Throwable) remotingException10);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher12 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState13 = null;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        org.apache.dubbo.remoting.ExecutionException executionException18 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress15, inetSocketAddress16, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable19 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate1, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher12, channelState13, (java.lang.Throwable) executionException18);
        channelDelegate0.setChannel((org.apache.dubbo.remoting.Channel) channelDelegate1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = channelDelegate0.getAttribute("telnet.log");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray2);
    }

    @Test
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test185");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        heapChannelBuffer3.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory7 = heapChannelBuffer3.factory();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer9 = channelBufferFactory7.getBuffer((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: capacity can not be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(channelBufferFactory7);
    }

    @Test
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test186");
        org.apache.dubbo.common.URL uRL0 = null;
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher1 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher2 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher1);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher3 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray4 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher5 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray4);
        org.apache.dubbo.remoting.Channel channel6 = null;
        java.lang.Throwable throwable7 = null;
        channelHandlerDispatcher5.caught(channel6, throwable7);
        org.apache.dubbo.remoting.Channel channel9 = null;
        channelHandlerDispatcher5.disconnected(channel9);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray11 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher12 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray11);
        org.apache.dubbo.remoting.Channel channel13 = null;
        java.lang.Throwable throwable14 = null;
        channelHandlerDispatcher12.caught(channel13, throwable14);
        org.apache.dubbo.remoting.Channel channel16 = null;
        channelHandlerDispatcher12.disconnected(channel16);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray18 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher19 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray18);
        org.apache.dubbo.common.URL uRL20 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler21 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher19, uRL20);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray22 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher23 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray22);
        org.apache.dubbo.common.URL uRL24 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler25 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher23, uRL24);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler26 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler25);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray27 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher3, channelHandlerDispatcher5, channelHandlerDispatcher12, channelHandlerDispatcher19, decodeHandler26 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher28 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher2, channelHandlerArray27);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray29 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher30 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray29);
        org.apache.dubbo.common.URL uRL31 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler32 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher30, uRL31);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler33 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler32);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate34 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray35 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher36 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray35);
        org.apache.dubbo.common.URL uRL37 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler38 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher36, uRL37);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState39 = null;
        java.net.InetSocketAddress inetSocketAddress40 = null;
        java.net.InetSocketAddress inetSocketAddress41 = null;
        org.apache.dubbo.remoting.RemotingException remotingException43 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress40, inetSocketAddress41, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable44 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate34, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler38, channelState39, (java.lang.Throwable) remotingException43);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher45 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState46 = null;
        java.net.InetSocketAddress inetSocketAddress48 = null;
        java.net.InetSocketAddress inetSocketAddress49 = null;
        org.apache.dubbo.remoting.ExecutionException executionException51 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress48, inetSocketAddress49, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable52 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate34, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher45, channelState46, (java.lang.Throwable) executionException51);
        decodeHandler33.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate34);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate54 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj55 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate54);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate56 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate54);
        exchangeHandlerDispatcher28.sent((org.apache.dubbo.remoting.Channel) channelDelegate34, (java.lang.Object) serverDelegate56);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.exchange.ExchangeServer exchangeServer58 = org.apache.dubbo.remoting.exchange.Exchangers.bind(uRL0, (org.apache.dubbo.remoting.exchange.ExchangeHandler) exchangeHandlerDispatcher28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: url == null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray4);
        org.junit.Assert.assertNotNull(channelHandlerArray11);
        org.junit.Assert.assertNotNull(channelHandlerArray18);
        org.junit.Assert.assertNotNull(channelHandlerArray22);
        org.junit.Assert.assertNotNull(channelHandlerArray27);
        org.junit.Assert.assertNotNull(channelHandlerArray29);
        org.junit.Assert.assertNotNull(channelHandlerArray35);
        org.junit.Assert.assertNotNull(obj55);
    }

    @Test
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test187");
        org.apache.dubbo.remoting.telnet.support.TelnetHandlerAdapter telnetHandlerAdapter0 = new org.apache.dubbo.remoting.telnet.support.TelnetHandlerAdapter();
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate1 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate2 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray3 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher4 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray3);
        org.apache.dubbo.common.URL uRL5 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler6 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher4, uRL5);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState7 = null;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        org.apache.dubbo.remoting.RemotingException remotingException11 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress8, inetSocketAddress9, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable12 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate2, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler6, channelState7, (java.lang.Throwable) remotingException11);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher13 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState14 = null;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        org.apache.dubbo.remoting.ExecutionException executionException19 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress16, inetSocketAddress17, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable20 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate2, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher13, channelState14, (java.lang.Throwable) executionException19);
        channelDelegate1.setChannel((org.apache.dubbo.remoting.Channel) channelDelegate2);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = telnetHandlerAdapter0.telnet((org.apache.dubbo.remoting.Channel) channelDelegate1, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray3);
    }

    @Test
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test188");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.common.URL uRL2 = null;
        org.apache.dubbo.remoting.transport.dispatcher.execution.ExecutionChannelHandler executionChannelHandler3 = new org.apache.dubbo.remoting.transport.dispatcher.execution.ExecutionChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher1, uRL2);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher4 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray5 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher6 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray5);
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher7 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher8 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher7);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher9 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray10 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher11 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray10);
        org.apache.dubbo.remoting.Channel channel12 = null;
        java.lang.Throwable throwable13 = null;
        channelHandlerDispatcher11.caught(channel12, throwable13);
        org.apache.dubbo.remoting.Channel channel15 = null;
        channelHandlerDispatcher11.disconnected(channel15);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray17 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher18 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray17);
        org.apache.dubbo.remoting.Channel channel19 = null;
        java.lang.Throwable throwable20 = null;
        channelHandlerDispatcher18.caught(channel19, throwable20);
        org.apache.dubbo.remoting.Channel channel22 = null;
        channelHandlerDispatcher18.disconnected(channel22);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray24 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher25 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray24);
        org.apache.dubbo.common.URL uRL26 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler27 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher25, uRL26);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray28 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher29 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray28);
        org.apache.dubbo.common.URL uRL30 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler31 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher29, uRL30);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler32 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler31);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray33 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher9, channelHandlerDispatcher11, channelHandlerDispatcher18, channelHandlerDispatcher25, decodeHandler32 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher34 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher8, channelHandlerArray33);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray35 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher36 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray35);
        org.apache.dubbo.common.URL uRL37 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler38 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher36, uRL37);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler39 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler38);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate40 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray41 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher42 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray41);
        org.apache.dubbo.common.URL uRL43 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler44 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher42, uRL43);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState45 = null;
        java.net.InetSocketAddress inetSocketAddress46 = null;
        java.net.InetSocketAddress inetSocketAddress47 = null;
        org.apache.dubbo.remoting.RemotingException remotingException49 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress46, inetSocketAddress47, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable50 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate40, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler44, channelState45, (java.lang.Throwable) remotingException49);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher51 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState52 = null;
        java.net.InetSocketAddress inetSocketAddress54 = null;
        java.net.InetSocketAddress inetSocketAddress55 = null;
        org.apache.dubbo.remoting.ExecutionException executionException57 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress54, inetSocketAddress55, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable58 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate40, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher51, channelState52, (java.lang.Throwable) executionException57);
        decodeHandler39.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate40);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate60 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj61 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate60);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate62 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate60);
        exchangeHandlerDispatcher34.sent((org.apache.dubbo.remoting.Channel) channelDelegate40, (java.lang.Object) serverDelegate62);
        channelHandlerDispatcher6.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate40);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher65 = exchangeHandlerDispatcher4.addChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher6);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate66 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        exchangeHandlerDispatcher4.connected((org.apache.dubbo.remoting.Channel) channelDelegate66);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray68 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher69 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray68);
        org.apache.dubbo.common.URL uRL70 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler71 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher69, uRL70);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler72 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler71);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate73 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray74 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher75 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray74);
        org.apache.dubbo.common.URL uRL76 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler77 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher75, uRL76);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState78 = null;
        java.net.InetSocketAddress inetSocketAddress79 = null;
        java.net.InetSocketAddress inetSocketAddress80 = null;
        org.apache.dubbo.remoting.RemotingException remotingException82 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress79, inetSocketAddress80, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable83 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate73, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler77, channelState78, (java.lang.Throwable) remotingException82);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher84 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState85 = null;
        java.net.InetSocketAddress inetSocketAddress87 = null;
        java.net.InetSocketAddress inetSocketAddress88 = null;
        org.apache.dubbo.remoting.ExecutionException executionException90 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress87, inetSocketAddress88, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable91 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate73, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher84, channelState85, (java.lang.Throwable) executionException90);
        decodeHandler72.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate73);
        org.apache.dubbo.remoting.ChannelHandler channelHandler93 = decodeHandler72.getHandler();
        // The following exception was thrown during execution in test generation
        try {
            executionChannelHandler3.received((org.apache.dubbo.remoting.Channel) channelDelegate66, (java.lang.Object) channelHandler93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray0);
        org.junit.Assert.assertNotNull(channelHandlerArray5);
        org.junit.Assert.assertNotNull(channelHandlerArray10);
        org.junit.Assert.assertNotNull(channelHandlerArray17);
        org.junit.Assert.assertNotNull(channelHandlerArray24);
        org.junit.Assert.assertNotNull(channelHandlerArray28);
        org.junit.Assert.assertNotNull(channelHandlerArray33);
        org.junit.Assert.assertNotNull(channelHandlerArray35);
        org.junit.Assert.assertNotNull(channelHandlerArray41);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(exchangeHandlerDispatcher65);
        org.junit.Assert.assertNotNull(channelHandlerArray68);
        org.junit.Assert.assertNotNull(channelHandlerArray74);
        org.junit.Assert.assertNotNull(channelHandler93);
    }

    @Test
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test189");
        java.lang.String str0 = org.apache.dubbo.remoting.Constants.CODEC_VERSION_KEY;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "codec.version" + "'", str0, "codec.version");
    }

    @Test
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test190");
        java.lang.String str0 = org.apache.dubbo.remoting.exchange.support.header.HeaderExchanger.NAME;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "header" + "'", str0, "header");
    }

    @Test
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test191");
        org.apache.dubbo.common.URL uRL0 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int1 = org.apache.dubbo.remoting.utils.UrlUtils.getIdleTimeout(uRL0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test192");
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher0 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher1 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher0);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher2 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray3 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher4 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray3);
        org.apache.dubbo.remoting.Channel channel5 = null;
        java.lang.Throwable throwable6 = null;
        channelHandlerDispatcher4.caught(channel5, throwable6);
        org.apache.dubbo.remoting.Channel channel8 = null;
        channelHandlerDispatcher4.disconnected(channel8);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray10 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher11 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray10);
        org.apache.dubbo.remoting.Channel channel12 = null;
        java.lang.Throwable throwable13 = null;
        channelHandlerDispatcher11.caught(channel12, throwable13);
        org.apache.dubbo.remoting.Channel channel15 = null;
        channelHandlerDispatcher11.disconnected(channel15);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray17 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher18 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray17);
        org.apache.dubbo.common.URL uRL19 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler20 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher18, uRL19);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray21 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher22 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray21);
        org.apache.dubbo.common.URL uRL23 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler24 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher22, uRL23);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler25 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler24);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray26 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher2, channelHandlerDispatcher4, channelHandlerDispatcher11, channelHandlerDispatcher18, decodeHandler25 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher27 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher1, channelHandlerArray26);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray28 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher29 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray28);
        org.apache.dubbo.common.URL uRL30 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler31 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher29, uRL30);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler32 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler31);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate33 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray34 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher35 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray34);
        org.apache.dubbo.common.URL uRL36 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler37 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher35, uRL36);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState38 = null;
        java.net.InetSocketAddress inetSocketAddress39 = null;
        java.net.InetSocketAddress inetSocketAddress40 = null;
        org.apache.dubbo.remoting.RemotingException remotingException42 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress39, inetSocketAddress40, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable43 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate33, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler37, channelState38, (java.lang.Throwable) remotingException42);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher44 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState45 = null;
        java.net.InetSocketAddress inetSocketAddress47 = null;
        java.net.InetSocketAddress inetSocketAddress48 = null;
        org.apache.dubbo.remoting.ExecutionException executionException50 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress47, inetSocketAddress48, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable51 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate33, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher44, channelState45, (java.lang.Throwable) executionException50);
        decodeHandler32.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate33);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate53 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj54 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate53);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate55 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate53);
        exchangeHandlerDispatcher27.sent((org.apache.dubbo.remoting.Channel) channelDelegate33, (java.lang.Object) serverDelegate55);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean57 = channelDelegate33.isConnected();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray3);
        org.junit.Assert.assertNotNull(channelHandlerArray10);
        org.junit.Assert.assertNotNull(channelHandlerArray17);
        org.junit.Assert.assertNotNull(channelHandlerArray21);
        org.junit.Assert.assertNotNull(channelHandlerArray26);
        org.junit.Assert.assertNotNull(channelHandlerArray28);
        org.junit.Assert.assertNotNull(channelHandlerArray34);
        org.junit.Assert.assertNotNull(obj54);
    }

    @Test
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test193");
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher0 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher1 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher0);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher2 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray3 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher4 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray3);
        org.apache.dubbo.remoting.Channel channel5 = null;
        java.lang.Throwable throwable6 = null;
        channelHandlerDispatcher4.caught(channel5, throwable6);
        org.apache.dubbo.remoting.Channel channel8 = null;
        channelHandlerDispatcher4.disconnected(channel8);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray10 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher11 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray10);
        org.apache.dubbo.remoting.Channel channel12 = null;
        java.lang.Throwable throwable13 = null;
        channelHandlerDispatcher11.caught(channel12, throwable13);
        org.apache.dubbo.remoting.Channel channel15 = null;
        channelHandlerDispatcher11.disconnected(channel15);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray17 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher18 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray17);
        org.apache.dubbo.common.URL uRL19 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler20 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher18, uRL19);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray21 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher22 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray21);
        org.apache.dubbo.common.URL uRL23 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler24 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher22, uRL23);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler25 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler24);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray26 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher2, channelHandlerDispatcher4, channelHandlerDispatcher11, channelHandlerDispatcher18, decodeHandler25 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher27 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher1, channelHandlerArray26);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray28 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher29 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray28);
        org.apache.dubbo.common.URL uRL30 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler31 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher29, uRL30);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler32 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler31);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate33 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray34 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher35 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray34);
        org.apache.dubbo.common.URL uRL36 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler37 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher35, uRL36);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState38 = null;
        java.net.InetSocketAddress inetSocketAddress39 = null;
        java.net.InetSocketAddress inetSocketAddress40 = null;
        org.apache.dubbo.remoting.RemotingException remotingException42 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress39, inetSocketAddress40, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable43 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate33, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler37, channelState38, (java.lang.Throwable) remotingException42);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher44 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState45 = null;
        java.net.InetSocketAddress inetSocketAddress47 = null;
        java.net.InetSocketAddress inetSocketAddress48 = null;
        org.apache.dubbo.remoting.ExecutionException executionException50 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress47, inetSocketAddress48, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable51 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate33, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher44, channelState45, (java.lang.Throwable) executionException50);
        decodeHandler32.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate33);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate53 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj54 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate53);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate55 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate53);
        exchangeHandlerDispatcher27.sent((org.apache.dubbo.remoting.Channel) channelDelegate33, (java.lang.Object) serverDelegate55);
        org.apache.dubbo.common.URL uRL57 = null;
        // The following exception was thrown during execution in test generation
        try {
            serverDelegate55.reset(uRL57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray3);
        org.junit.Assert.assertNotNull(channelHandlerArray10);
        org.junit.Assert.assertNotNull(channelHandlerArray17);
        org.junit.Assert.assertNotNull(channelHandlerArray21);
        org.junit.Assert.assertNotNull(channelHandlerArray26);
        org.junit.Assert.assertNotNull(channelHandlerArray28);
        org.junit.Assert.assertNotNull(channelHandlerArray34);
        org.junit.Assert.assertNotNull(obj54);
    }

    @Test
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test194");
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer1 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream3 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) dynamicChannelBuffer1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test195");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.common.URL uRL2 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler3 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher1, uRL2);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray4 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher5 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray4);
        org.apache.dubbo.common.URL uRL6 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler7 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher5, uRL6);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler8 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler7);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate9 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray10 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher11 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray10);
        org.apache.dubbo.common.URL uRL12 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler13 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher11, uRL12);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState14 = null;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        org.apache.dubbo.remoting.RemotingException remotingException18 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress15, inetSocketAddress16, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable19 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate9, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler13, channelState14, (java.lang.Throwable) remotingException18);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher20 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState21 = null;
        java.net.InetSocketAddress inetSocketAddress23 = null;
        java.net.InetSocketAddress inetSocketAddress24 = null;
        org.apache.dubbo.remoting.ExecutionException executionException26 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress23, inetSocketAddress24, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable27 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate9, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher20, channelState21, (java.lang.Throwable) executionException26);
        decodeHandler8.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate9);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray29 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher30 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray29);
        org.apache.dubbo.remoting.Channel channel31 = null;
        java.lang.Throwable throwable32 = null;
        channelHandlerDispatcher30.caught(channel31, throwable32);
        directChannelHandler3.sent((org.apache.dubbo.remoting.Channel) channelDelegate9, (java.lang.Object) channel31);
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher35 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher36 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher35);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher37 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray38 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher39 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray38);
        org.apache.dubbo.remoting.Channel channel40 = null;
        java.lang.Throwable throwable41 = null;
        channelHandlerDispatcher39.caught(channel40, throwable41);
        org.apache.dubbo.remoting.Channel channel43 = null;
        channelHandlerDispatcher39.disconnected(channel43);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray45 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher46 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray45);
        org.apache.dubbo.remoting.Channel channel47 = null;
        java.lang.Throwable throwable48 = null;
        channelHandlerDispatcher46.caught(channel47, throwable48);
        org.apache.dubbo.remoting.Channel channel50 = null;
        channelHandlerDispatcher46.disconnected(channel50);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray52 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher53 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray52);
        org.apache.dubbo.common.URL uRL54 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler55 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher53, uRL54);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray56 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher57 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray56);
        org.apache.dubbo.common.URL uRL58 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler59 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher57, uRL58);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler60 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler59);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray61 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher37, channelHandlerDispatcher39, channelHandlerDispatcher46, channelHandlerDispatcher53, decodeHandler60 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher62 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher36, channelHandlerArray61);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray63 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher64 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray63);
        org.apache.dubbo.common.URL uRL65 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler66 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher64, uRL65);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler67 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler66);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate68 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray69 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher70 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray69);
        org.apache.dubbo.common.URL uRL71 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler72 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher70, uRL71);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState73 = null;
        java.net.InetSocketAddress inetSocketAddress74 = null;
        java.net.InetSocketAddress inetSocketAddress75 = null;
        org.apache.dubbo.remoting.RemotingException remotingException77 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress74, inetSocketAddress75, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable78 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate68, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler72, channelState73, (java.lang.Throwable) remotingException77);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher79 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState80 = null;
        java.net.InetSocketAddress inetSocketAddress82 = null;
        java.net.InetSocketAddress inetSocketAddress83 = null;
        org.apache.dubbo.remoting.ExecutionException executionException85 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress82, inetSocketAddress83, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable86 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate68, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher79, channelState80, (java.lang.Throwable) executionException85);
        decodeHandler67.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate68);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate88 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj89 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate88);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate90 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate88);
        exchangeHandlerDispatcher62.sent((org.apache.dubbo.remoting.Channel) channelDelegate68, (java.lang.Object) serverDelegate90);
        java.lang.Object obj92 = null;
        // The following exception was thrown during execution in test generation
        try {
            directChannelHandler3.received((org.apache.dubbo.remoting.Channel) channelDelegate68, obj92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray0);
        org.junit.Assert.assertNotNull(channelHandlerArray4);
        org.junit.Assert.assertNotNull(channelHandlerArray10);
        org.junit.Assert.assertNotNull(channelHandlerArray29);
        org.junit.Assert.assertNotNull(channelHandlerArray38);
        org.junit.Assert.assertNotNull(channelHandlerArray45);
        org.junit.Assert.assertNotNull(channelHandlerArray52);
        org.junit.Assert.assertNotNull(channelHandlerArray56);
        org.junit.Assert.assertNotNull(channelHandlerArray61);
        org.junit.Assert.assertNotNull(channelHandlerArray63);
        org.junit.Assert.assertNotNull(channelHandlerArray69);
        org.junit.Assert.assertNotNull(obj89);
    }

    @Test
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test196");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.common.URL uRL2 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler3 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher1, uRL2);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate4 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate5 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray6 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher7 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray6);
        org.apache.dubbo.common.URL uRL8 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler9 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher7, uRL8);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState10 = null;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        org.apache.dubbo.remoting.RemotingException remotingException14 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress11, inetSocketAddress12, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable15 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate5, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler9, channelState10, (java.lang.Throwable) remotingException14);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher16 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState17 = null;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        org.apache.dubbo.remoting.ExecutionException executionException22 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress19, inetSocketAddress20, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable23 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate5, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher16, channelState17, (java.lang.Throwable) executionException22);
        channelDelegate4.setChannel((org.apache.dubbo.remoting.Channel) channelDelegate5);
        channelHandlerDispatcher1.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate4);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.ChannelHandler channelHandler26 = channelDelegate4.getChannelHandler();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray0);
        org.junit.Assert.assertNotNull(channelHandlerArray6);
    }

    @Test
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test197");
        org.apache.dubbo.remoting.exchange.support.DefaultFuture defaultFuture1 = org.apache.dubbo.remoting.exchange.support.DefaultFuture.getFuture((long) (short) -1);
        org.junit.Assert.assertNull(defaultFuture1);
    }

    @Test
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test198");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        int int2 = heapChannelBuffer1.readableBytes();
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer1.setByte(8388608, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 8388608");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test199");
        java.util.concurrent.CompletableFuture[] completableFutureArray1 = new java.util.concurrent.CompletableFuture[0];
        @SuppressWarnings("unchecked")
        java.util.concurrent.CompletableFuture<?>[] wildcardCompletableFutureArray2 = (java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1;
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture3 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1);
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture4 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1);
        int int5 = objCompletableFuture4.getNumberOfDependents();
        java.util.concurrent.CompletableFuture[] completableFutureArray7 = new java.util.concurrent.CompletableFuture[0];
        @SuppressWarnings("unchecked")
        java.util.concurrent.CompletableFuture<?>[] wildcardCompletableFutureArray8 = (java.util.concurrent.CompletableFuture<?>[]) completableFutureArray7;
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture9 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray7);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate10 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray11 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher12 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray11);
        org.apache.dubbo.common.URL uRL13 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler14 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher12, uRL13);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState15 = null;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        org.apache.dubbo.remoting.RemotingException remotingException19 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress16, inetSocketAddress17, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable20 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate10, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler14, channelState15, (java.lang.Throwable) remotingException19);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher21 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState22 = null;
        java.net.InetSocketAddress inetSocketAddress24 = null;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        org.apache.dubbo.remoting.ExecutionException executionException27 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress24, inetSocketAddress25, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable28 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate10, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher21, channelState22, (java.lang.Throwable) executionException27);
        java.util.concurrent.CompletableFuture<java.lang.Void> voidCompletableFuture29 = objCompletableFuture9.thenRunAsync((java.lang.Runnable) channelEventRunnable28);
        java.util.concurrent.CompletableFuture<java.lang.Void> voidCompletableFuture30 = objCompletableFuture4.thenRunAsync((java.lang.Runnable) channelEventRunnable28);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer32 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray33 = heapChannelBuffer32.array();
        byte[] byteArray34 = heapChannelBuffer32.array();
        boolean boolean35 = objCompletableFuture4.complete((java.lang.Object) byteArray34);
        org.junit.Assert.assertNotNull(completableFutureArray1);
        org.junit.Assert.assertNotNull(wildcardCompletableFutureArray2);
        org.junit.Assert.assertNotNull(objCompletableFuture3);
        org.junit.Assert.assertNotNull(objCompletableFuture4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(completableFutureArray7);
        org.junit.Assert.assertNotNull(wildcardCompletableFutureArray8);
        org.junit.Assert.assertNotNull(objCompletableFuture9);
        org.junit.Assert.assertNotNull(channelHandlerArray11);
        org.junit.Assert.assertNotNull(voidCompletableFuture29);
        org.junit.Assert.assertNotNull(voidCompletableFuture30);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test200");
        org.apache.dubbo.remoting.telnet.support.TelnetHandlerAdapter telnetHandlerAdapter0 = new org.apache.dubbo.remoting.telnet.support.TelnetHandlerAdapter();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray1 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher2 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray1);
        org.apache.dubbo.common.URL uRL3 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler4 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher2, uRL3);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler5 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler4);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate6 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray7 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher8 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray7);
        org.apache.dubbo.common.URL uRL9 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler10 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher8, uRL9);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState11 = null;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        org.apache.dubbo.remoting.RemotingException remotingException15 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress12, inetSocketAddress13, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable16 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate6, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler10, channelState11, (java.lang.Throwable) remotingException15);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher17 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState18 = null;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        org.apache.dubbo.remoting.ExecutionException executionException23 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress20, inetSocketAddress21, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable24 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate6, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher17, channelState18, (java.lang.Throwable) executionException23);
        decodeHandler5.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate6);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate26 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray27 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher28 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray27);
        org.apache.dubbo.common.URL uRL29 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler30 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher28, uRL29);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState31 = null;
        java.net.InetSocketAddress inetSocketAddress32 = null;
        java.net.InetSocketAddress inetSocketAddress33 = null;
        org.apache.dubbo.remoting.RemotingException remotingException35 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress32, inetSocketAddress33, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable36 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate26, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler30, channelState31, (java.lang.Throwable) remotingException35);
        java.net.InetSocketAddress inetSocketAddress37 = null;
        java.net.InetSocketAddress inetSocketAddress38 = null;
        org.apache.dubbo.remoting.RemotingException remotingException40 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress37, inetSocketAddress38, "charset");
        remotingException35.addSuppressed((java.lang.Throwable) remotingException40);
        telnetHandlerAdapter0.caught((org.apache.dubbo.remoting.Channel) channelDelegate6, (java.lang.Throwable) remotingException40);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate43 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray44 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher45 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray44);
        org.apache.dubbo.common.URL uRL46 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler47 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher45, uRL46);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState48 = null;
        java.net.InetSocketAddress inetSocketAddress49 = null;
        java.net.InetSocketAddress inetSocketAddress50 = null;
        org.apache.dubbo.remoting.RemotingException remotingException52 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress49, inetSocketAddress50, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable53 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate43, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler47, channelState48, (java.lang.Throwable) remotingException52);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str55 = telnetHandlerAdapter0.telnet((org.apache.dubbo.remoting.Channel) channelDelegate43, "payload");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray1);
        org.junit.Assert.assertNotNull(channelHandlerArray7);
        org.junit.Assert.assertNotNull(channelHandlerArray27);
        org.junit.Assert.assertNotNull(channelHandlerArray44);
    }

    @Test
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test201");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer8 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray9 = heapChannelBuffer8.array();
        byte[] byteArray14 = new byte[] { (byte) 1, (byte) 20, (byte) 70, (byte) 10 };
        heapChannelBuffer8.writeBytes(byteArray14);
        heapChannelBuffer3.setBytes(0, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer8, (int) (byte) 1, 10);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer20 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer22 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean23 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer20, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer22);
        heapChannelBuffer22.resetReaderIndex();
        heapChannelBuffer22.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream26 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer22);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer29 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray30 = heapChannelBuffer29.array();
        byte[] byteArray31 = heapChannelBuffer29.array();
        heapChannelBuffer22.getBytes((int) (short) 1, byteArray31, (int) (short) 0, (int) (byte) 20);
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer8.readBytes(byteArray31, (-4), 8388608);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[1, 20, 70, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[1, 20, 70, 10]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test202");
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher0 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray1 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher2 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray1);
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher3 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher4 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher3);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher5 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray6 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher7 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray6);
        org.apache.dubbo.remoting.Channel channel8 = null;
        java.lang.Throwable throwable9 = null;
        channelHandlerDispatcher7.caught(channel8, throwable9);
        org.apache.dubbo.remoting.Channel channel11 = null;
        channelHandlerDispatcher7.disconnected(channel11);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray13 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher14 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray13);
        org.apache.dubbo.remoting.Channel channel15 = null;
        java.lang.Throwable throwable16 = null;
        channelHandlerDispatcher14.caught(channel15, throwable16);
        org.apache.dubbo.remoting.Channel channel18 = null;
        channelHandlerDispatcher14.disconnected(channel18);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray20 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher21 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray20);
        org.apache.dubbo.common.URL uRL22 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler23 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher21, uRL22);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray24 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher25 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray24);
        org.apache.dubbo.common.URL uRL26 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler27 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher25, uRL26);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler28 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler27);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray29 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher5, channelHandlerDispatcher7, channelHandlerDispatcher14, channelHandlerDispatcher21, decodeHandler28 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher30 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher4, channelHandlerArray29);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray31 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher32 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray31);
        org.apache.dubbo.common.URL uRL33 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler34 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher32, uRL33);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler35 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler34);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate36 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray37 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher38 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray37);
        org.apache.dubbo.common.URL uRL39 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler40 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher38, uRL39);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState41 = null;
        java.net.InetSocketAddress inetSocketAddress42 = null;
        java.net.InetSocketAddress inetSocketAddress43 = null;
        org.apache.dubbo.remoting.RemotingException remotingException45 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress42, inetSocketAddress43, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable46 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate36, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler40, channelState41, (java.lang.Throwable) remotingException45);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher47 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState48 = null;
        java.net.InetSocketAddress inetSocketAddress50 = null;
        java.net.InetSocketAddress inetSocketAddress51 = null;
        org.apache.dubbo.remoting.ExecutionException executionException53 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress50, inetSocketAddress51, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable54 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate36, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher47, channelState48, (java.lang.Throwable) executionException53);
        decodeHandler35.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate36);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate56 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj57 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate56);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate58 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate56);
        exchangeHandlerDispatcher30.sent((org.apache.dubbo.remoting.Channel) channelDelegate36, (java.lang.Object) serverDelegate58);
        channelHandlerDispatcher2.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate36);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher61 = exchangeHandlerDispatcher0.addChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher2);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate62 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        exchangeHandlerDispatcher0.connected((org.apache.dubbo.remoting.Channel) channelDelegate62);
        org.apache.dubbo.remoting.Channel channel64 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str66 = exchangeHandlerDispatcher0.telnet(channel64, "UTF-8");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray1);
        org.junit.Assert.assertNotNull(channelHandlerArray6);
        org.junit.Assert.assertNotNull(channelHandlerArray13);
        org.junit.Assert.assertNotNull(channelHandlerArray20);
        org.junit.Assert.assertNotNull(channelHandlerArray24);
        org.junit.Assert.assertNotNull(channelHandlerArray29);
        org.junit.Assert.assertNotNull(channelHandlerArray31);
        org.junit.Assert.assertNotNull(channelHandlerArray37);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(exchangeHandlerDispatcher61);
    }

    @Test
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test203");
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer1 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        boolean boolean2 = dynamicChannelBuffer1.hasArray();
        dynamicChannelBuffer1.ensureWritableBytes((int) (byte) 1);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer6 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer8 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean9 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer6, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer8);
        heapChannelBuffer8.resetReaderIndex();
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer12 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        boolean boolean13 = dynamicChannelBuffer12.hasArray();
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory14 = dynamicChannelBuffer12.factory();
        int int15 = heapChannelBuffer8.compareTo((org.apache.dubbo.remoting.buffer.ChannelBuffer) dynamicChannelBuffer12);
        boolean boolean16 = dynamicChannelBuffer12.hasArray();
        dynamicChannelBuffer12.writeByte((int) (byte) 40);
        byte[] byteArray19 = dynamicChannelBuffer12.array();
        // The following exception was thrown during execution in test generation
        try {
            dynamicChannelBuffer1.readBytes(byteArray19);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(channelBufferFactory14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[40]");
    }

    @Test
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test204");
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer1 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        int int2 = dynamicChannelBuffer1.capacity();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer4 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer6 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean7 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer4, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer6);
        heapChannelBuffer6.resetReaderIndex();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer11 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray12 = heapChannelBuffer11.array();
        byte[] byteArray17 = new byte[] { (byte) 1, (byte) 20, (byte) 70, (byte) 10 };
        heapChannelBuffer11.writeBytes(byteArray17);
        heapChannelBuffer6.setBytes(0, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer11, (int) (byte) 1, 10);
        // The following exception was thrown during execution in test generation
        try {
            dynamicChannelBuffer1.readBytes((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer11, (int) ' ', (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[1, 20, 70, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[1, 20, 70, 10]");
    }

    @Test
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test205");
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate0 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate1 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate((org.apache.dubbo.remoting.exchange.ExchangeServer) exchangeServerDelegate0);
        org.apache.dubbo.common.Parameters parameters2 = null;
        // The following exception was thrown during execution in test generation
        try {
            exchangeServerDelegate1.reset(parameters2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test206");
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer1 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        int int2 = dynamicChannelBuffer1.capacity();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer5 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        heapChannelBuffer5.writeByte((int) (short) 10);
        byte[] byteArray8 = heapChannelBuffer5.array();
        // The following exception was thrown during execution in test generation
        try {
            dynamicChannelBuffer1.getBytes((int) (short) -1, byteArray8, (int) (short) -1, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test207");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher2 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher3 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher2);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher4 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray5 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher6 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray5);
        org.apache.dubbo.remoting.Channel channel7 = null;
        java.lang.Throwable throwable8 = null;
        channelHandlerDispatcher6.caught(channel7, throwable8);
        org.apache.dubbo.remoting.Channel channel10 = null;
        channelHandlerDispatcher6.disconnected(channel10);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray12 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher13 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray12);
        org.apache.dubbo.remoting.Channel channel14 = null;
        java.lang.Throwable throwable15 = null;
        channelHandlerDispatcher13.caught(channel14, throwable15);
        org.apache.dubbo.remoting.Channel channel17 = null;
        channelHandlerDispatcher13.disconnected(channel17);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray19 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher20 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray19);
        org.apache.dubbo.common.URL uRL21 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler22 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher20, uRL21);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray23 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher24 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray23);
        org.apache.dubbo.common.URL uRL25 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler26 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher24, uRL25);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler27 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler26);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray28 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher4, channelHandlerDispatcher6, channelHandlerDispatcher13, channelHandlerDispatcher20, decodeHandler27 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher29 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher3, channelHandlerArray28);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray30 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher31 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray30);
        org.apache.dubbo.common.URL uRL32 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler33 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher31, uRL32);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler34 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler33);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate35 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray36 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher37 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray36);
        org.apache.dubbo.common.URL uRL38 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler39 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher37, uRL38);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState40 = null;
        java.net.InetSocketAddress inetSocketAddress41 = null;
        java.net.InetSocketAddress inetSocketAddress42 = null;
        org.apache.dubbo.remoting.RemotingException remotingException44 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress41, inetSocketAddress42, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable45 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate35, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler39, channelState40, (java.lang.Throwable) remotingException44);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher46 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState47 = null;
        java.net.InetSocketAddress inetSocketAddress49 = null;
        java.net.InetSocketAddress inetSocketAddress50 = null;
        org.apache.dubbo.remoting.ExecutionException executionException52 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress49, inetSocketAddress50, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable53 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate35, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher46, channelState47, (java.lang.Throwable) executionException52);
        decodeHandler34.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate35);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate55 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj56 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate55);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate57 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate55);
        exchangeHandlerDispatcher29.sent((org.apache.dubbo.remoting.Channel) channelDelegate35, (java.lang.Object) serverDelegate57);
        channelHandlerDispatcher1.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate35);
        java.net.InetSocketAddress inetSocketAddress61 = null;
        java.net.InetSocketAddress inetSocketAddress62 = null;
        org.apache.dubbo.remoting.ExecutionException executionException64 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress61, inetSocketAddress62, "hi!");
        java.net.InetSocketAddress inetSocketAddress65 = executionException64.getLocalAddress();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.RemotingException remotingException66 = new org.apache.dubbo.remoting.RemotingException((org.apache.dubbo.remoting.Channel) channelDelegate35, (java.lang.Throwable) executionException64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray0);
        org.junit.Assert.assertNotNull(channelHandlerArray5);
        org.junit.Assert.assertNotNull(channelHandlerArray12);
        org.junit.Assert.assertNotNull(channelHandlerArray19);
        org.junit.Assert.assertNotNull(channelHandlerArray23);
        org.junit.Assert.assertNotNull(channelHandlerArray28);
        org.junit.Assert.assertNotNull(channelHandlerArray30);
        org.junit.Assert.assertNotNull(channelHandlerArray36);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNull(inetSocketAddress65);
    }

    @Test
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test208");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        heapChannelBuffer3.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream7 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.markReaderIndex();
        int int9 = heapChannelBuffer3.readableBytes();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test209");
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer1 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        boolean boolean2 = dynamicChannelBuffer1.hasArray();
        dynamicChannelBuffer1.markReaderIndex();
        java.nio.ByteBuffer byteBuffer5 = null;
        // The following exception was thrown during execution in test generation
        try {
            dynamicChannelBuffer1.getBytes((int) (byte) 90, byteBuffer5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test210");
        int int0 = org.apache.dubbo.remoting.Constants.TICKS_PER_WHEEL;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 128 + "'", int0 == 128);
    }

    @Test
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test211");
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer0 = null;
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer2 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        boolean boolean3 = dynamicChannelBuffer2.hasArray();
        boolean boolean4 = dynamicChannelBuffer2.isDirect();
        // The following exception was thrown during execution in test generation
        try {
            int int5 = org.apache.dubbo.remoting.buffer.ChannelBuffers.compare(channelBuffer0, (org.apache.dubbo.remoting.buffer.ChannelBuffer) dynamicChannelBuffer2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test212");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray2 = heapChannelBuffer1.array();
        byte[] byteArray3 = heapChannelBuffer1.array();
        java.nio.ByteBuffer byteBuffer5 = null;
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer1.setBytes((int) (byte) 90, byteBuffer5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test213");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer1 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: estimatedLength: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test214");
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer1 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        int int2 = dynamicChannelBuffer1.capacity();
        dynamicChannelBuffer1.clear();
        dynamicChannelBuffer1.ensureWritableBytes((int) (short) 100);
        int int6 = dynamicChannelBuffer1.writerIndex();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test215");
        byte byte0 = org.apache.dubbo.remoting.exchange.Response.CLIENT_TIMEOUT;
        org.junit.Assert.assertTrue("'" + byte0 + "' != '" + (byte) 30 + "'", byte0 == (byte) 30);
    }

    @Test
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test216");
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher1 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher2 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher1);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher3 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray4 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher5 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray4);
        org.apache.dubbo.remoting.Channel channel6 = null;
        java.lang.Throwable throwable7 = null;
        channelHandlerDispatcher5.caught(channel6, throwable7);
        org.apache.dubbo.remoting.Channel channel9 = null;
        channelHandlerDispatcher5.disconnected(channel9);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray11 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher12 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray11);
        org.apache.dubbo.remoting.Channel channel13 = null;
        java.lang.Throwable throwable14 = null;
        channelHandlerDispatcher12.caught(channel13, throwable14);
        org.apache.dubbo.remoting.Channel channel16 = null;
        channelHandlerDispatcher12.disconnected(channel16);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray18 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher19 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray18);
        org.apache.dubbo.common.URL uRL20 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler21 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher19, uRL20);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray22 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher23 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray22);
        org.apache.dubbo.common.URL uRL24 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler25 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher23, uRL24);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler26 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler25);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray27 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher3, channelHandlerDispatcher5, channelHandlerDispatcher12, channelHandlerDispatcher19, decodeHandler26 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher28 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher2, channelHandlerArray27);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.Client client29 = org.apache.dubbo.remoting.Transporters.connect("connect.timeout", channelHandlerArray27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Failed to create adaptive instance: java.lang.IllegalStateException: Can't create adaptive extension interface org.apache.dubbo.remoting.Transporter, cause: Failed to compile class, cause: javassist/ClassPath, class: org.apache.dubbo.remoting.Transporter$Adaptive, code: ?package org.apache.dubbo.remoting;?import org.apache.dubbo.common.extension.ExtensionLoader;?public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {?public org.apache.dubbo.remoting.RemotingServer bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {?if (arg0 == null) throw new IllegalArgumentException(\"url == null\");?org.apache.dubbo.common.URL url = arg0;?String extName = url.getParameter(\"server\", url.getParameter(\"transporter\", \"netty\"));?if(extName == null) throw new IllegalStateException(\"Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (\" + url.toString() + \") use keys([server, transporter])\");?org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);?return extension.bind(arg0, arg1);?}?public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {?if (arg0 == null) throw new IllegalArgumentException(\"url == null\");?org.apache.dubbo.common.URL url = arg0;?String extName = url.getParameter(\"client\", url.getParameter(\"transporter\", \"netty\"));?if(extName == null) throw new IllegalStateException(\"Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (\" + url.toString() + \") use keys([client, transporter])\");?org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);?return extension.connect(arg0, arg1);?}?}?, stack: java.lang.NoClassDefFoundError: javassist/ClassPath??java.lang.NoClassDefFoundError: javassist/ClassPath??at org.apache.dubbo.common.compiler.support.JavassistCompiler.doCompile(JavassistCompiler.java:43)??at org.apache.dubbo.common.compiler.support.AbstractCompiler.compile(AbstractCompiler.java:58)??at org.apache.dubbo.common.compiler.support.AdaptiveCompiler.compile(AdaptiveCompiler.java:45)??at org.apache.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClass(ExtensionLoader.java:1039)??at org.apache.dubbo.common.extension.ExtensionLoader.getAdaptiveExtensionClass(ExtensionLoader.java:1032)??at org.apache.dubbo.common.extension.ExtensionLoader.createAdaptiveExtension(ExtensionLoader.java:1021)??at org.apache.dubbo.common.extension.ExtensionLoader.getAdaptiveExtension(ExtensionLoader.java:588)??at org.apache.dubbo.remoting.Transporters.getTransporter(Transporters.java:79)??at org.apache.dubbo.remoting.Transporters.connect(Transporters.java:75)??at org.apache.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:94)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:90)??at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)??at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)??at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)??at java.lang.reflect.Method.invoke(Method.java:498)??at randoop.util.MethodReflectionCode.runReflectionCodeRaw(MethodReflectionCode.java:53)??at randoop.util.ReflectionCode.runReflectionCode(ReflectionCode.java:59)??at randoop.util.RunnerThread.executeReflectionCode(RunnerThread.java:49)??at randoop.util.RunnerThread.run(RunnerThread.java:43)?Caused by: java.lang.ClassNotFoundException: javassist.ClassPath??at java.net.URLClassLoader.findClass(URLClassLoader.java:382)??at java.lang.ClassLoader.loadClass(ClassLoader.java:418)??at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:355)??at java.lang.ClassLoader.loadClass(ClassLoader.java:351)??... 21 more?");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray4);
        org.junit.Assert.assertNotNull(channelHandlerArray11);
        org.junit.Assert.assertNotNull(channelHandlerArray18);
        org.junit.Assert.assertNotNull(channelHandlerArray22);
        org.junit.Assert.assertNotNull(channelHandlerArray27);
    }

    @Test
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test217");
        int int0 = org.apache.dubbo.remoting.Constants.DEFAULT_CONNECT_TIMEOUT;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 3000 + "'", int0 == 3000);
    }

    @Test
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test218");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        heapChannelBuffer3.discardReadBytes();
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer3.readerIndex((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test219");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.common.URL uRL2 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler3 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher1, uRL2);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate4 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate5 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray6 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher7 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray6);
        org.apache.dubbo.common.URL uRL8 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler9 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher7, uRL8);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState10 = null;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        org.apache.dubbo.remoting.RemotingException remotingException14 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress11, inetSocketAddress12, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable15 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate5, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler9, channelState10, (java.lang.Throwable) remotingException14);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher16 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState17 = null;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        org.apache.dubbo.remoting.ExecutionException executionException22 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress19, inetSocketAddress20, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable23 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate5, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher16, channelState17, (java.lang.Throwable) executionException22);
        channelDelegate4.setChannel((org.apache.dubbo.remoting.Channel) channelDelegate5);
        channelHandlerDispatcher1.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate4);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray26 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher27 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray26);
        org.apache.dubbo.common.URL uRL28 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler29 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher27, uRL28);
        // The following exception was thrown during execution in test generation
        try {
            channelDelegate4.send((java.lang.Object) channelHandlerDispatcher27, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray0);
        org.junit.Assert.assertNotNull(channelHandlerArray6);
        org.junit.Assert.assertNotNull(channelHandlerArray26);
    }

    @Test
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test220");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer5 = heapChannelBuffer1.copy();
        int int6 = heapChannelBuffer1.readerIndex();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer9 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer11 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean12 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer9, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer11);
        int int13 = heapChannelBuffer9.readerIndex();
        heapChannelBuffer9.clear();
        heapChannelBuffer9.resetWriterIndex();
        boolean boolean16 = heapChannelBuffer9.writable();
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer1.getBytes(3000, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(channelBuffer5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test221");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.common.URL uRL2 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler3 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher1, uRL2);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer5 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer7 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean8 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer5, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer7);
        heapChannelBuffer7.resetReaderIndex();
        heapChannelBuffer7.discardReadBytes();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer13 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer15 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean16 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer13, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer15);
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer17 = heapChannelBuffer13.copy();
        heapChannelBuffer7.setBytes((int) (byte) 0, channelBuffer17);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.ExecutorService executorService19 = messageOnlyChannelHandler3.getPreferredExecutorService((java.lang.Object) channelBuffer17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(channelBuffer17);
    }

    @Test
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test222");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        int int5 = heapChannelBuffer1.readerIndex();
        heapChannelBuffer1.clear();
        heapChannelBuffer1.resetWriterIndex();
        int int8 = heapChannelBuffer1.writerIndex();
        java.nio.ByteBuffer byteBuffer10 = null;
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer1.getBytes((-1), byteBuffer10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test223");
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory1 = org.apache.dubbo.remoting.buffer.DirectChannelBufferFactory.getInstance();
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer2 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 60, channelBufferFactory1);
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer4 = channelBufferFactory1.getBuffer((int) (byte) 90);
        org.junit.Assert.assertNotNull(channelBufferFactory1);
        org.junit.Assert.assertNotNull(channelBuffer4);
    }

    @Test
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test224");
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher0 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher1 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher0);
        org.apache.dubbo.remoting.exchange.ExchangeChannel exchangeChannel2 = null;
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer4 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer6 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean7 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer4, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer6);
        boolean boolean8 = heapChannelBuffer4.writable();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer11 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer13 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean14 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer11, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer13);
        heapChannelBuffer13.resetReaderIndex();
        heapChannelBuffer13.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream17 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer13);
        int int19 = heapChannelBuffer4.setBytes(0, (java.io.InputStream) channelBufferInputStream17, (int) (byte) 40);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture20 = exchangeHandlerDispatcher1.reply(exchangeChannel2, (java.lang.Object) int19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Replier not found, Unsupported message object: class java.lang.Integer");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test225");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.common.URL uRL2 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler3 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher1, uRL2);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler4 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler3);
        org.apache.dubbo.common.URL uRL5 = null;
        org.apache.dubbo.remoting.transport.dispatcher.WrappedChannelHandler wrappedChannelHandler6 = new org.apache.dubbo.remoting.transport.dispatcher.WrappedChannelHandler((org.apache.dubbo.remoting.ChannelHandler) decodeHandler4, uRL5);
        org.junit.Assert.assertNotNull(channelHandlerArray0);
    }

    @Test
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test226");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray2 = heapChannelBuffer1.array();
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer1.writerIndex(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test227");
        java.util.concurrent.CompletableFuture[] completableFutureArray1 = new java.util.concurrent.CompletableFuture[0];
        @SuppressWarnings("unchecked")
        java.util.concurrent.CompletableFuture<?>[] wildcardCompletableFutureArray2 = (java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1;
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture3 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate4 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray5 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher6 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray5);
        org.apache.dubbo.common.URL uRL7 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler8 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher6, uRL7);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState9 = null;
        java.net.InetSocketAddress inetSocketAddress10 = null;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        org.apache.dubbo.remoting.RemotingException remotingException13 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress10, inetSocketAddress11, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable14 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate4, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler8, channelState9, (java.lang.Throwable) remotingException13);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher15 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState16 = null;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        org.apache.dubbo.remoting.ExecutionException executionException21 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress18, inetSocketAddress19, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable22 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate4, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher15, channelState16, (java.lang.Throwable) executionException21);
        java.util.concurrent.CompletableFuture<java.lang.Void> voidCompletableFuture23 = objCompletableFuture3.thenRunAsync((java.lang.Runnable) channelEventRunnable22);
        int int24 = objCompletableFuture3.getNumberOfDependents();
        java.net.InetSocketAddress inetSocketAddress25 = null;
        java.net.InetSocketAddress inetSocketAddress26 = null;
        java.net.InetSocketAddress inetSocketAddress28 = null;
        java.net.InetSocketAddress inetSocketAddress29 = null;
        java.net.InetSocketAddress inetSocketAddress31 = null;
        java.net.InetSocketAddress inetSocketAddress32 = null;
        java.net.InetSocketAddress inetSocketAddress33 = null;
        java.net.InetSocketAddress inetSocketAddress34 = null;
        org.apache.dubbo.remoting.RemotingException remotingException36 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress33, inetSocketAddress34, "charset");
        org.apache.dubbo.remoting.RemotingException remotingException37 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress31, inetSocketAddress32, (java.lang.Throwable) remotingException36);
        org.apache.dubbo.remoting.ExecutionException executionException38 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) 1L, inetSocketAddress28, inetSocketAddress29, "dispacther", (java.lang.Throwable) remotingException36);
        org.apache.dubbo.remoting.ExecutionException executionException39 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) int24, inetSocketAddress25, inetSocketAddress26, (java.lang.Throwable) executionException38);
        org.junit.Assert.assertNotNull(completableFutureArray1);
        org.junit.Assert.assertNotNull(wildcardCompletableFutureArray2);
        org.junit.Assert.assertNotNull(objCompletableFuture3);
        org.junit.Assert.assertNotNull(channelHandlerArray5);
        org.junit.Assert.assertNotNull(voidCompletableFuture23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
    }

    @Test
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test228");
        java.lang.String str0 = org.apache.dubbo.remoting.Constants.CHANNEL_READONLYEVENT_SENT_KEY;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "channel.readonly.sent" + "'", str0, "channel.readonly.sent");
    }

    @Test
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test229");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        int int5 = heapChannelBuffer1.readerIndex();
        heapChannelBuffer1.clear();
        boolean boolean7 = heapChannelBuffer1.writable();
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer10 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        boolean boolean11 = dynamicChannelBuffer10.hasArray();
        dynamicChannelBuffer10.clear();
        heapChannelBuffer1.setBytes(5, (org.apache.dubbo.remoting.buffer.ChannelBuffer) dynamicChannelBuffer10);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test230");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray2 = heapChannelBuffer1.array();
        byte[] byteArray3 = heapChannelBuffer1.array();
        java.nio.channels.GatheringByteChannel gatheringByteChannel5 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int7 = heapChannelBuffer1.getBytes(0, gatheringByteChannel5, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test231");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        int int5 = heapChannelBuffer1.readerIndex();
        heapChannelBuffer1.clear();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer8 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer10 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean11 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer8, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer10);
        heapChannelBuffer10.resetReaderIndex();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer15 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray16 = heapChannelBuffer15.array();
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 20, (byte) 70, (byte) 10 };
        heapChannelBuffer15.writeBytes(byteArray21);
        heapChannelBuffer10.setBytes(0, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer15, (int) (byte) 1, 10);
        heapChannelBuffer1.writeBytes((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer15, (int) ' ', (int) (short) 10);
        int int29 = heapChannelBuffer15.writerIndex();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer32 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer34 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean35 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer32, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer34);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer37 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer39 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean40 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer37, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer39);
        heapChannelBuffer34.writeBytes((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer37);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer43 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer45 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean46 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer43, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer45);
        int int47 = heapChannelBuffer43.readerIndex();
        heapChannelBuffer43.clear();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer50 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer52 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean53 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer50, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer52);
        heapChannelBuffer52.resetReaderIndex();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer57 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray58 = heapChannelBuffer57.array();
        byte[] byteArray63 = new byte[] { (byte) 1, (byte) 20, (byte) 70, (byte) 10 };
        heapChannelBuffer57.writeBytes(byteArray63);
        heapChannelBuffer52.setBytes(0, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer57, (int) (byte) 1, 10);
        heapChannelBuffer43.writeBytes((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer57, (int) ' ', (int) (short) 10);
        int int71 = heapChannelBuffer37.compareTo((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer57);
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer15.getBytes((int) (byte) -1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer57);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[1, 20, 70, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 20, 70, 10]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[1, 20, 70, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[1, 20, 70, 10]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-4) + "'", int71 == (-4));
    }

    @Test
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test232");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray2 = heapChannelBuffer1.array();
        byte[] byteArray7 = new byte[] { (byte) 1, (byte) 20, (byte) 70, (byte) 10 };
        heapChannelBuffer1.writeBytes(byteArray7);
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory10 = org.apache.dubbo.remoting.buffer.DirectChannelBufferFactory.getInstance();
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer11 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 60, channelBufferFactory10);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer14 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer16 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean17 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer14, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer16);
        heapChannelBuffer16.resetReaderIndex();
        heapChannelBuffer16.discardReadBytes();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer22 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer24 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean25 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer22, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer24);
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer26 = heapChannelBuffer22.copy();
        heapChannelBuffer16.setBytes((int) (byte) 0, channelBuffer26);
        dynamicChannelBuffer11.getBytes(5, channelBuffer26, (int) (short) 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer1.readBytes((org.apache.dubbo.remoting.buffer.ChannelBuffer) dynamicChannelBuffer11, (int) (byte) 90, 52);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[1, 20, 70, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 20, 70, 10]");
        org.junit.Assert.assertNotNull(channelBufferFactory10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(channelBuffer26);
    }

    @Test
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test233");
        java.net.InetSocketAddress inetSocketAddress0 = null;
        java.net.InetSocketAddress inetSocketAddress1 = null;
        org.apache.dubbo.remoting.RemotingException remotingException3 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress0, inetSocketAddress1, "");
    }

    @Test
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test234");
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer1 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer5 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean6 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer5);
        heapChannelBuffer5.resetReaderIndex();
        heapChannelBuffer5.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream9 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer5);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer12 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer14 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean15 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer12, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer14);
        heapChannelBuffer14.resetReaderIndex();
        heapChannelBuffer14.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream18 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer14);
        int int20 = heapChannelBuffer5.setBytes((int) (byte) 10, (java.io.InputStream) channelBufferInputStream18, (int) (byte) 100);
        int int22 = dynamicChannelBuffer1.writeBytes((java.io.InputStream) channelBufferInputStream18, 0);
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer24 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer26 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer28 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean29 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer26, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer28);
        heapChannelBuffer28.resetReaderIndex();
        heapChannelBuffer28.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream32 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer28);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer35 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer37 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean38 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer35, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer37);
        heapChannelBuffer37.resetReaderIndex();
        heapChannelBuffer37.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream41 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer37);
        int int43 = heapChannelBuffer28.setBytes((int) (byte) 10, (java.io.InputStream) channelBufferInputStream41, (int) (byte) 100);
        int int45 = dynamicChannelBuffer24.writeBytes((java.io.InputStream) channelBufferInputStream41, 0);
        int int47 = dynamicChannelBuffer1.writeBytes((java.io.InputStream) channelBufferInputStream41, (int) (short) 10);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer49 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray50 = heapChannelBuffer49.array();
        byte[] byteArray55 = new byte[] { (byte) 1, (byte) 20, (byte) 70, (byte) 10 };
        heapChannelBuffer49.writeBytes(byteArray55);
        int int57 = channelBufferInputStream41.read(byteArray55);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[1, 20, 70, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[1, 20, 70, 10]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
    }

    @Test
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test235");
        org.apache.dubbo.common.URL uRL0 = null;
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray1 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher2 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray1);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray3 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher4 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray3);
        org.apache.dubbo.common.URL uRL5 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler6 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher4, uRL5);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher7 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher8 = channelHandlerDispatcher4.removeChannelHandler((org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher7);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray9 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher10 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray9);
        org.apache.dubbo.common.URL uRL11 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler12 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher10, uRL11);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler13 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler12);
        org.apache.dubbo.common.URL uRL14 = null;
        org.apache.dubbo.remoting.transport.dispatcher.WrappedChannelHandler wrappedChannelHandler15 = new org.apache.dubbo.remoting.transport.dispatcher.WrappedChannelHandler((org.apache.dubbo.remoting.ChannelHandler) decodeHandler13, uRL14);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray16 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher17 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray16);
        org.apache.dubbo.common.URL uRL18 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler19 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher17, uRL18);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler20 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler19);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate21 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray22 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher23 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray22);
        org.apache.dubbo.common.URL uRL24 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler25 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher23, uRL24);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState26 = null;
        java.net.InetSocketAddress inetSocketAddress27 = null;
        java.net.InetSocketAddress inetSocketAddress28 = null;
        org.apache.dubbo.remoting.RemotingException remotingException30 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress27, inetSocketAddress28, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable31 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate21, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler25, channelState26, (java.lang.Throwable) remotingException30);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher32 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState33 = null;
        java.net.InetSocketAddress inetSocketAddress35 = null;
        java.net.InetSocketAddress inetSocketAddress36 = null;
        org.apache.dubbo.remoting.ExecutionException executionException38 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress35, inetSocketAddress36, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable39 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate21, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher32, channelState33, (java.lang.Throwable) executionException38);
        decodeHandler20.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate21);
        org.apache.dubbo.remoting.ChannelHandler channelHandler41 = decodeHandler20.getHandler();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray42 = new org.apache.dubbo.remoting.ChannelHandler[] { channelHandlerDispatcher2, channelHandlerDispatcher4, decodeHandler13, channelHandler41 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.Client client43 = org.apache.dubbo.remoting.Transporters.connect(uRL0, channelHandlerArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: url == null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray1);
        org.junit.Assert.assertNotNull(channelHandlerArray3);
        org.junit.Assert.assertNotNull(channelHandlerDispatcher8);
        org.junit.Assert.assertNotNull(channelHandlerArray9);
        org.junit.Assert.assertNotNull(channelHandlerArray16);
        org.junit.Assert.assertNotNull(channelHandlerArray22);
        org.junit.Assert.assertNotNull(channelHandler41);
        org.junit.Assert.assertNotNull(channelHandlerArray42);
    }

    @Test
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test236");
        byte byte0 = org.apache.dubbo.remoting.exchange.Response.BAD_RESPONSE;
        org.junit.Assert.assertTrue("'" + byte0 + "' != '" + (byte) 50 + "'", byte0 == (byte) 50);
    }

    @Test
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test237");
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate0 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate1 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate((org.apache.dubbo.remoting.exchange.ExchangeServer) exchangeServerDelegate0);
        java.net.InetSocketAddress inetSocketAddress2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.exchange.ExchangeChannel exchangeChannel3 = exchangeServerDelegate0.getExchangeChannel(inetSocketAddress2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test238");
        org.apache.dubbo.remoting.Channel channel0 = null;
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray1 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher2 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray1);
        org.apache.dubbo.common.URL uRL3 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler4 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher2, uRL3);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState5 = null;
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable7 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable(channel0, (org.apache.dubbo.remoting.ChannelHandler) messageOnlyChannelHandler4, channelState5, (java.lang.Object) (short) 1);
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher8 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher9 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher8);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher10 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray11 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher12 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray11);
        org.apache.dubbo.remoting.Channel channel13 = null;
        java.lang.Throwable throwable14 = null;
        channelHandlerDispatcher12.caught(channel13, throwable14);
        org.apache.dubbo.remoting.Channel channel16 = null;
        channelHandlerDispatcher12.disconnected(channel16);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray18 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher19 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray18);
        org.apache.dubbo.remoting.Channel channel20 = null;
        java.lang.Throwable throwable21 = null;
        channelHandlerDispatcher19.caught(channel20, throwable21);
        org.apache.dubbo.remoting.Channel channel23 = null;
        channelHandlerDispatcher19.disconnected(channel23);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray25 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher26 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray25);
        org.apache.dubbo.common.URL uRL27 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler28 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher26, uRL27);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray29 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher30 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray29);
        org.apache.dubbo.common.URL uRL31 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler32 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher30, uRL31);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler33 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler32);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray34 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher10, channelHandlerDispatcher12, channelHandlerDispatcher19, channelHandlerDispatcher26, decodeHandler33 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher35 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher9, channelHandlerArray34);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray36 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher37 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray36);
        org.apache.dubbo.common.URL uRL38 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler39 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher37, uRL38);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler40 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler39);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate41 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray42 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher43 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray42);
        org.apache.dubbo.common.URL uRL44 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler45 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher43, uRL44);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState46 = null;
        java.net.InetSocketAddress inetSocketAddress47 = null;
        java.net.InetSocketAddress inetSocketAddress48 = null;
        org.apache.dubbo.remoting.RemotingException remotingException50 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress47, inetSocketAddress48, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable51 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate41, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler45, channelState46, (java.lang.Throwable) remotingException50);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher52 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState53 = null;
        java.net.InetSocketAddress inetSocketAddress55 = null;
        java.net.InetSocketAddress inetSocketAddress56 = null;
        org.apache.dubbo.remoting.ExecutionException executionException58 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress55, inetSocketAddress56, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable59 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate41, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher52, channelState53, (java.lang.Throwable) executionException58);
        decodeHandler40.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate41);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate61 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj62 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate61);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate63 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate61);
        exchangeHandlerDispatcher35.sent((org.apache.dubbo.remoting.Channel) channelDelegate41, (java.lang.Object) serverDelegate63);
        messageOnlyChannelHandler4.connected((org.apache.dubbo.remoting.Channel) channelDelegate41);
        // The following exception was thrown during execution in test generation
        try {
            channelDelegate41.removeAttribute("buffer");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray1);
        org.junit.Assert.assertNotNull(channelHandlerArray11);
        org.junit.Assert.assertNotNull(channelHandlerArray18);
        org.junit.Assert.assertNotNull(channelHandlerArray25);
        org.junit.Assert.assertNotNull(channelHandlerArray29);
        org.junit.Assert.assertNotNull(channelHandlerArray34);
        org.junit.Assert.assertNotNull(channelHandlerArray36);
        org.junit.Assert.assertNotNull(channelHandlerArray42);
        org.junit.Assert.assertNotNull(obj62);
    }

    @Test
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test239");
        org.apache.dubbo.remoting.telnet.support.TelnetHandlerAdapter telnetHandlerAdapter0 = new org.apache.dubbo.remoting.telnet.support.TelnetHandlerAdapter();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray1 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher2 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray1);
        org.apache.dubbo.common.URL uRL3 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler4 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher2, uRL3);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler5 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler4);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate6 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray7 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher8 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray7);
        org.apache.dubbo.common.URL uRL9 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler10 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher8, uRL9);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState11 = null;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        org.apache.dubbo.remoting.RemotingException remotingException15 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress12, inetSocketAddress13, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable16 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate6, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler10, channelState11, (java.lang.Throwable) remotingException15);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher17 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState18 = null;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        org.apache.dubbo.remoting.ExecutionException executionException23 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress20, inetSocketAddress21, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable24 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate6, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher17, channelState18, (java.lang.Throwable) executionException23);
        decodeHandler5.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate6);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate26 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray27 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher28 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray27);
        org.apache.dubbo.common.URL uRL29 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler30 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher28, uRL29);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState31 = null;
        java.net.InetSocketAddress inetSocketAddress32 = null;
        java.net.InetSocketAddress inetSocketAddress33 = null;
        org.apache.dubbo.remoting.RemotingException remotingException35 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress32, inetSocketAddress33, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable36 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate26, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler30, channelState31, (java.lang.Throwable) remotingException35);
        java.net.InetSocketAddress inetSocketAddress37 = null;
        java.net.InetSocketAddress inetSocketAddress38 = null;
        org.apache.dubbo.remoting.RemotingException remotingException40 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress37, inetSocketAddress38, "charset");
        remotingException35.addSuppressed((java.lang.Throwable) remotingException40);
        telnetHandlerAdapter0.caught((org.apache.dubbo.remoting.Channel) channelDelegate6, (java.lang.Throwable) remotingException40);
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer44 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        boolean boolean45 = dynamicChannelBuffer44.hasArray();
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory46 = dynamicChannelBuffer44.factory();
        // The following exception was thrown during execution in test generation
        try {
            channelDelegate6.send((java.lang.Object) channelBufferFactory46, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray1);
        org.junit.Assert.assertNotNull(channelHandlerArray7);
        org.junit.Assert.assertNotNull(channelHandlerArray27);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(channelBufferFactory46);
    }

    @Test
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test240");
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate0 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate1 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate((org.apache.dubbo.remoting.exchange.ExchangeServer) exchangeServerDelegate0);
        org.apache.dubbo.common.URL uRL2 = null;
        // The following exception was thrown during execution in test generation
        try {
            exchangeServerDelegate0.reset(uRL2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test241");
        org.apache.dubbo.common.serialize.Serialization serialization1 = org.apache.dubbo.remoting.transport.CodecSupport.getSerializationById((java.lang.Byte) (byte) 30);
        org.junit.Assert.assertNull(serialization1);
    }

    @Test
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test242");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray2 = heapChannelBuffer1.array();
        byte[] byteArray7 = new byte[] { (byte) 1, (byte) 20, (byte) 70, (byte) 10 };
        heapChannelBuffer1.writeBytes(byteArray7);
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer1.setIndex((int) '#', (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[1, 20, 70, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 20, 70, 10]");
    }

    @Test
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test243");
        org.apache.dubbo.remoting.exchange.Response response0 = new org.apache.dubbo.remoting.exchange.Response();
        byte byte1 = response0.getStatus();
        org.junit.Assert.assertTrue("'" + byte1 + "' != '" + (byte) 20 + "'", byte1 == (byte) 20);
    }

    @Test
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test244");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        boolean boolean5 = heapChannelBuffer1.writable();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer8 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer10 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean11 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer8, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer10);
        heapChannelBuffer10.resetReaderIndex();
        heapChannelBuffer10.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream14 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer10);
        int int16 = heapChannelBuffer1.setBytes(0, (java.io.InputStream) channelBufferInputStream14, (int) (byte) 40);
        heapChannelBuffer1.resetWriterIndex();
        int int18 = heapChannelBuffer1.capacity();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
    }

    @Test
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test245");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.common.URL uRL2 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler3 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher1, uRL2);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler4 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler3);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate5 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray6 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher7 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray6);
        org.apache.dubbo.common.URL uRL8 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler9 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher7, uRL8);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState10 = null;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        org.apache.dubbo.remoting.RemotingException remotingException14 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress11, inetSocketAddress12, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable15 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate5, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler9, channelState10, (java.lang.Throwable) remotingException14);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher16 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState17 = null;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        org.apache.dubbo.remoting.ExecutionException executionException22 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress19, inetSocketAddress20, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable23 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate5, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher16, channelState17, (java.lang.Throwable) executionException22);
        decodeHandler4.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate5);
        java.lang.Object obj25 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) channelDelegate5);
        // The following exception was thrown during execution in test generation
        try {
            java.net.InetSocketAddress inetSocketAddress26 = channelDelegate5.getRemoteAddress();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray0);
        org.junit.Assert.assertNotNull(channelHandlerArray6);
        org.junit.Assert.assertNotNull(obj25);
    }

    @Test
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test246");
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer1 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        heapChannelBuffer3.writeByte((int) (short) 10);
        byte[] byteArray6 = heapChannelBuffer3.array();
        dynamicChannelBuffer1.writeBytes(byteArray6);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer9 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer11 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean12 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer9, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer11);
        heapChannelBuffer11.resetReaderIndex();
        heapChannelBuffer11.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream15 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer11);
        dynamicChannelBuffer1.writeBytes((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer11);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test247");
        org.apache.dubbo.remoting.exchange.Response response2 = new org.apache.dubbo.remoting.exchange.Response((long) (byte) 1, "");
        java.lang.String str3 = response2.getVersion();
        byte byte4 = response2.getStatus();
        response2.setEvent("codec.version");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + byte4 + "' != '" + (byte) 20 + "'", byte4 == (byte) 20);
    }

    @Test
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test248");
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate0 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj1 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate0);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate2 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate0);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate3 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj4 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate3);
        exchangeServerDelegate0.setServer((org.apache.dubbo.remoting.exchange.ExchangeServer) exchangeServerDelegate3);
        java.net.InetSocketAddress inetSocketAddress6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.exchange.ExchangeChannel exchangeChannel7 = exchangeServerDelegate0.getExchangeChannel(inetSocketAddress6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(obj4);
    }

    @Test
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test249");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray2 = heapChannelBuffer1.array();
        byte[] byteArray3 = heapChannelBuffer1.array();
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer1.setIndex((-4), (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test250");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        heapChannelBuffer3.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream7 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer10 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer12 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean13 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer10, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer12);
        heapChannelBuffer12.resetReaderIndex();
        heapChannelBuffer12.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream16 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer12);
        int int18 = heapChannelBuffer3.setBytes((int) (byte) 10, (java.io.InputStream) channelBufferInputStream16, (int) (byte) 100);
        channelBufferInputStream16.mark((int) (short) 100);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test251");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        boolean boolean5 = heapChannelBuffer1.writable();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer8 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer10 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean11 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer8, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer10);
        heapChannelBuffer10.resetReaderIndex();
        heapChannelBuffer10.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream14 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer10);
        int int16 = heapChannelBuffer1.setBytes(0, (java.io.InputStream) channelBufferInputStream14, (int) (byte) 40);
        heapChannelBuffer1.resetWriterIndex();
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer1.setIndex((int) '#', (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test252");
        java.lang.Object obj0 = null;
        org.apache.dubbo.remoting.transport.ClientDelegate clientDelegate1 = new org.apache.dubbo.remoting.transport.ClientDelegate();
        org.apache.dubbo.remoting.transport.ClientDelegate clientDelegate2 = new org.apache.dubbo.remoting.transport.ClientDelegate();
        clientDelegate1.setClient((org.apache.dubbo.remoting.Client) clientDelegate2);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate4 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray5 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher6 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray5);
        org.apache.dubbo.common.URL uRL7 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler8 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher6, uRL7);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState9 = null;
        java.net.InetSocketAddress inetSocketAddress10 = null;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        org.apache.dubbo.remoting.RemotingException remotingException13 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress10, inetSocketAddress11, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable14 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate4, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler8, channelState9, (java.lang.Throwable) remotingException13);
        java.net.InetSocketAddress inetSocketAddress15 = null;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        org.apache.dubbo.remoting.RemotingException remotingException18 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress15, inetSocketAddress16, "charset");
        remotingException13.addSuppressed((java.lang.Throwable) remotingException18);
        java.net.InetSocketAddress inetSocketAddress20 = remotingException13.getLocalAddress();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.ExecutionException executionException21 = new org.apache.dubbo.remoting.ExecutionException(obj0, (org.apache.dubbo.remoting.Channel) clientDelegate2, (java.lang.Throwable) remotingException13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray5);
        org.junit.Assert.assertNull(inetSocketAddress20);
    }

    @Test
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test253");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        int int5 = heapChannelBuffer1.readerIndex();
        heapChannelBuffer1.ensureWritableBytes(10);
        java.net.InetSocketAddress inetSocketAddress8 = null;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        org.apache.dubbo.remoting.RemotingException remotingException16 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress13, inetSocketAddress14, "charset");
        org.apache.dubbo.remoting.RemotingException remotingException17 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress11, inetSocketAddress12, (java.lang.Throwable) remotingException16);
        java.lang.Throwable[] throwableArray18 = remotingException17.getSuppressed();
        org.apache.dubbo.remoting.ExecutionException executionException19 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) heapChannelBuffer1, inetSocketAddress8, inetSocketAddress9, "buffer", (java.lang.Throwable) remotingException17);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(throwableArray18);
    }

    @Test
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test254");
        java.lang.String str0 = org.apache.dubbo.remoting.Constants.ACCEPTS_KEY;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "accepts" + "'", str0, "accepts");
    }

    @Test
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test255");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer7 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        boolean boolean8 = dynamicChannelBuffer7.hasArray();
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory9 = dynamicChannelBuffer7.factory();
        int int10 = heapChannelBuffer3.compareTo((org.apache.dubbo.remoting.buffer.ChannelBuffer) dynamicChannelBuffer7);
        boolean boolean11 = dynamicChannelBuffer7.hasArray();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer14 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        heapChannelBuffer14.writeByte((int) (short) 10);
        heapChannelBuffer14.discardReadBytes();
        java.lang.String str18 = heapChannelBuffer14.toString();
        dynamicChannelBuffer7.setBytes(1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer14, (int) ' ', (int) (byte) 0);
        java.nio.ByteBuffer byteBuffer23 = null;
        // The following exception was thrown during execution in test generation
        try {
            dynamicChannelBuffer7.setBytes((int) (byte) 90, byteBuffer23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(channelBufferFactory9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "HeapChannelBuffer(ridx=0, widx=1, cap=52)" + "'", str18, "HeapChannelBuffer(ridx=0, widx=1, cap=52)");
    }

    @Test
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test256");
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate0 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate1 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray2 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher3 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray2);
        org.apache.dubbo.common.URL uRL4 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler5 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher3, uRL4);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState6 = null;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        org.apache.dubbo.remoting.RemotingException remotingException10 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress7, inetSocketAddress8, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable11 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate1, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler5, channelState6, (java.lang.Throwable) remotingException10);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher12 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState13 = null;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        org.apache.dubbo.remoting.ExecutionException executionException18 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress15, inetSocketAddress16, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable19 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate1, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher12, channelState13, (java.lang.Throwable) executionException18);
        channelDelegate0.setChannel((org.apache.dubbo.remoting.Channel) channelDelegate1);
        org.apache.dubbo.remoting.exchange.Response response23 = new org.apache.dubbo.remoting.exchange.Response((long) (byte) 1, "");
        java.lang.String str24 = response23.getVersion();
        response23.setEvent(false);
        boolean boolean27 = response23.isHeartbeat();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.exchange.support.DefaultFuture.received((org.apache.dubbo.remoting.Channel) channelDelegate0, response23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray2);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test257");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        int int5 = heapChannelBuffer1.readerIndex();
        heapChannelBuffer1.resetWriterIndex();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test258");
        org.apache.dubbo.common.URL uRL0 = null;
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher1 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher2 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher1);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher3 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray4 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher5 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray4);
        org.apache.dubbo.remoting.Channel channel6 = null;
        java.lang.Throwable throwable7 = null;
        channelHandlerDispatcher5.caught(channel6, throwable7);
        org.apache.dubbo.remoting.Channel channel9 = null;
        channelHandlerDispatcher5.disconnected(channel9);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray11 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher12 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray11);
        org.apache.dubbo.remoting.Channel channel13 = null;
        java.lang.Throwable throwable14 = null;
        channelHandlerDispatcher12.caught(channel13, throwable14);
        org.apache.dubbo.remoting.Channel channel16 = null;
        channelHandlerDispatcher12.disconnected(channel16);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray18 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher19 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray18);
        org.apache.dubbo.common.URL uRL20 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler21 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher19, uRL20);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray22 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher23 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray22);
        org.apache.dubbo.common.URL uRL24 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler25 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher23, uRL24);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler26 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler25);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray27 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher3, channelHandlerDispatcher5, channelHandlerDispatcher12, channelHandlerDispatcher19, decodeHandler26 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher28 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher2, channelHandlerArray27);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.Client client29 = org.apache.dubbo.remoting.Transporters.connect(uRL0, channelHandlerArray27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: url == null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray4);
        org.junit.Assert.assertNotNull(channelHandlerArray11);
        org.junit.Assert.assertNotNull(channelHandlerArray18);
        org.junit.Assert.assertNotNull(channelHandlerArray22);
        org.junit.Assert.assertNotNull(channelHandlerArray27);
    }

    @Test
    public void test259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test259");
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer1 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        heapChannelBuffer3.writeByte((int) (short) 10);
        heapChannelBuffer3.discardReadBytes();
        java.lang.String str7 = heapChannelBuffer3.toString();
        int int8 = org.apache.dubbo.remoting.buffer.ChannelBuffers.compare((org.apache.dubbo.remoting.buffer.ChannelBuffer) dynamicChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        java.nio.ByteBuffer byteBuffer10 = null;
        // The following exception was thrown during execution in test generation
        try {
            dynamicChannelBuffer1.getBytes((int) '#', byteBuffer10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "HeapChannelBuffer(ridx=0, widx=1, cap=52)" + "'", str7, "HeapChannelBuffer(ridx=0, widx=1, cap=52)");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test260");
        java.lang.String str0 = org.apache.dubbo.remoting.Constants.DEFAULT_TRANSPORTER;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "netty" + "'", str0, "netty");
    }

    @Test
    public void test261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test261");
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer1 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer5 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean6 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer5);
        heapChannelBuffer5.resetReaderIndex();
        heapChannelBuffer5.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream9 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer5);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer12 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer14 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean15 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer12, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer14);
        heapChannelBuffer14.resetReaderIndex();
        heapChannelBuffer14.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream18 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer14);
        int int20 = heapChannelBuffer5.setBytes((int) (byte) 10, (java.io.InputStream) channelBufferInputStream18, (int) (byte) 100);
        int int22 = dynamicChannelBuffer1.writeBytes((java.io.InputStream) channelBufferInputStream18, 0);
        int int23 = channelBufferInputStream18.read();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test262");
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer1 = org.apache.dubbo.remoting.buffer.ChannelBuffers.buffer((int) (short) 10);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer5 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean6 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer5);
        heapChannelBuffer5.resetReaderIndex();
        heapChannelBuffer5.discardReadBytes();
        channelBuffer1.writeBytes((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer5, (int) (byte) 0);
        org.junit.Assert.assertNotNull(channelBuffer1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test263");
        org.apache.dubbo.remoting.transport.ClientDelegate clientDelegate0 = new org.apache.dubbo.remoting.transport.ClientDelegate();
        org.apache.dubbo.remoting.transport.ClientDelegate clientDelegate1 = new org.apache.dubbo.remoting.transport.ClientDelegate();
        clientDelegate0.setClient((org.apache.dubbo.remoting.Client) clientDelegate1);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray3 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher4 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray3);
        org.apache.dubbo.common.URL uRL5 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler6 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher4, uRL5);
        org.apache.dubbo.remoting.ChannelHandler channelHandler7 = messageOnlyChannelHandler6.getHandler();
        // The following exception was thrown during execution in test generation
        try {
            clientDelegate1.send((java.lang.Object) messageOnlyChannelHandler6, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray3);
        org.junit.Assert.assertNotNull(channelHandler7);
    }

    @Test
    public void test264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test264");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer8 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray9 = heapChannelBuffer8.array();
        byte[] byteArray14 = new byte[] { (byte) 1, (byte) 20, (byte) 70, (byte) 10 };
        heapChannelBuffer8.writeBytes(byteArray14);
        heapChannelBuffer3.setBytes(0, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer8, (int) (byte) 1, 10);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer20 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer22 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean23 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer20, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer22);
        heapChannelBuffer22.resetReaderIndex();
        heapChannelBuffer22.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream26 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer22);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer29 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer31 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean32 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer29, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer31);
        heapChannelBuffer31.resetReaderIndex();
        heapChannelBuffer31.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream35 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer31);
        int int37 = heapChannelBuffer22.setBytes((int) (byte) 10, (java.io.InputStream) channelBufferInputStream35, (int) (byte) 100);
        heapChannelBuffer8.writeBytes((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer22, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            byte byte41 = heapChannelBuffer22.getByte((int) (byte) 90);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 90");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[1, 20, 70, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[1, 20, 70, 10]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
    }

    @Test
    public void test265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test265");
        int int0 = org.apache.dubbo.remoting.Constants.MIN_BUFFER_SIZE;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 1024 + "'", int0 == 1024);
    }

    @Test
    public void test266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test266");
        java.lang.String str0 = org.apache.dubbo.remoting.Constants.CHECK_KEY;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "check" + "'", str0, "check");
    }

    @Test
    public void test267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test267");
        org.apache.dubbo.remoting.telnet.support.command.ClearTelnetHandler clearTelnetHandler0 = new org.apache.dubbo.remoting.telnet.support.command.ClearTelnetHandler();
    }

    @Test
    public void test268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test268");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        heapChannelBuffer3.discardReadBytes();
        java.nio.ByteBuffer byteBuffer8 = null;
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer3.setBytes((int) '4', byteBuffer8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test269");
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate0 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate1 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate((org.apache.dubbo.remoting.exchange.ExchangeServer) exchangeServerDelegate0);
        org.apache.dubbo.common.Parameters parameters2 = null;
        // The following exception was thrown during execution in test generation
        try {
            exchangeServerDelegate0.reset(parameters2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test270");
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory1 = org.apache.dubbo.remoting.buffer.DirectChannelBufferFactory.getInstance();
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer2 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 60, channelBufferFactory1);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer5 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer7 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean8 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer5, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer7);
        heapChannelBuffer7.resetReaderIndex();
        heapChannelBuffer7.discardReadBytes();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer13 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer15 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean16 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer13, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer15);
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer17 = heapChannelBuffer13.copy();
        heapChannelBuffer7.setBytes((int) (byte) 0, channelBuffer17);
        dynamicChannelBuffer2.getBytes(5, channelBuffer17, (int) (short) 0, 0);
        dynamicChannelBuffer2.markReaderIndex();
        org.junit.Assert.assertNotNull(channelBufferFactory1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(channelBuffer17);
    }

    @Test
    public void test271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test271");
        java.util.concurrent.CompletableFuture[] completableFutureArray1 = new java.util.concurrent.CompletableFuture[0];
        @SuppressWarnings("unchecked")
        java.util.concurrent.CompletableFuture<?>[] wildcardCompletableFutureArray2 = (java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1;
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture3 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1);
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture4 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1);
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture5 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1);
        org.junit.Assert.assertNotNull(completableFutureArray1);
        org.junit.Assert.assertNotNull(wildcardCompletableFutureArray2);
        org.junit.Assert.assertNotNull(objCompletableFuture3);
        org.junit.Assert.assertNotNull(objCompletableFuture4);
        org.junit.Assert.assertNotNull(objCompletableFuture5);
    }

    @Test
    public void test272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test272");
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate0 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray1 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher2 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray1);
        org.apache.dubbo.common.URL uRL3 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler4 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher2, uRL3);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState5 = null;
        java.net.InetSocketAddress inetSocketAddress6 = null;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        org.apache.dubbo.remoting.RemotingException remotingException9 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress6, inetSocketAddress7, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable10 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate0, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler4, channelState5, (java.lang.Throwable) remotingException9);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher11 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState12 = null;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        org.apache.dubbo.remoting.ExecutionException executionException17 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress14, inetSocketAddress15, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable18 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate0, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher11, channelState12, (java.lang.Throwable) executionException17);
        org.apache.dubbo.common.URL uRL19 = null;
        org.apache.dubbo.remoting.transport.dispatcher.execution.ExecutionChannelHandler executionChannelHandler20 = new org.apache.dubbo.remoting.transport.dispatcher.execution.ExecutionChannelHandler((org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher11, uRL19);
        org.junit.Assert.assertNotNull(channelHandlerArray1);
    }

    @Test
    public void test273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test273");
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer1 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        boolean boolean2 = dynamicChannelBuffer1.hasArray();
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory3 = dynamicChannelBuffer1.factory();
        java.io.InputStream inputStream4 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int6 = dynamicChannelBuffer1.writeBytes(inputStream4, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(channelBufferFactory3);
    }

    @Test
    public void test274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test274");
        java.util.concurrent.CompletableFuture[] completableFutureArray1 = new java.util.concurrent.CompletableFuture[0];
        @SuppressWarnings("unchecked")
        java.util.concurrent.CompletableFuture<?>[] wildcardCompletableFutureArray2 = (java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1;
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture3 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1);
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture4 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1);
        java.util.concurrent.CompletableFuture[] completableFutureArray6 = new java.util.concurrent.CompletableFuture[0];
        @SuppressWarnings("unchecked")
        java.util.concurrent.CompletableFuture<?>[] wildcardCompletableFutureArray7 = (java.util.concurrent.CompletableFuture<?>[]) completableFutureArray6;
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture8 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray6);
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture9 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray6);
        int int10 = objCompletableFuture9.getNumberOfDependents();
        java.util.concurrent.CompletableFuture[] completableFutureArray12 = new java.util.concurrent.CompletableFuture[0];
        @SuppressWarnings("unchecked")
        java.util.concurrent.CompletableFuture<?>[] wildcardCompletableFutureArray13 = (java.util.concurrent.CompletableFuture<?>[]) completableFutureArray12;
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture14 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray12);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate15 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray16 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher17 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray16);
        org.apache.dubbo.common.URL uRL18 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler19 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher17, uRL18);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState20 = null;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        java.net.InetSocketAddress inetSocketAddress22 = null;
        org.apache.dubbo.remoting.RemotingException remotingException24 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress21, inetSocketAddress22, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable25 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate15, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler19, channelState20, (java.lang.Throwable) remotingException24);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher26 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState27 = null;
        java.net.InetSocketAddress inetSocketAddress29 = null;
        java.net.InetSocketAddress inetSocketAddress30 = null;
        org.apache.dubbo.remoting.ExecutionException executionException32 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress29, inetSocketAddress30, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable33 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate15, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher26, channelState27, (java.lang.Throwable) executionException32);
        java.util.concurrent.CompletableFuture<java.lang.Void> voidCompletableFuture34 = objCompletableFuture14.thenRunAsync((java.lang.Runnable) channelEventRunnable33);
        java.util.concurrent.CompletableFuture<java.lang.Void> voidCompletableFuture35 = objCompletableFuture9.thenRunAsync((java.lang.Runnable) channelEventRunnable33);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate36 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray37 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher38 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray37);
        org.apache.dubbo.common.URL uRL39 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler40 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher38, uRL39);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState41 = null;
        java.net.InetSocketAddress inetSocketAddress42 = null;
        java.net.InetSocketAddress inetSocketAddress43 = null;
        org.apache.dubbo.remoting.RemotingException remotingException45 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress42, inetSocketAddress43, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable46 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate36, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler40, channelState41, (java.lang.Throwable) remotingException45);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher47 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState48 = null;
        java.net.InetSocketAddress inetSocketAddress50 = null;
        java.net.InetSocketAddress inetSocketAddress51 = null;
        org.apache.dubbo.remoting.ExecutionException executionException53 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress50, inetSocketAddress51, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable54 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate36, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher47, channelState48, (java.lang.Throwable) executionException53);
        java.util.concurrent.CompletableFuture<java.lang.Void> voidCompletableFuture55 = objCompletableFuture4.runAfterBothAsync((java.util.concurrent.CompletionStage<java.lang.Object>) objCompletableFuture9, (java.lang.Runnable) channelEventRunnable54);
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory56 = org.apache.dubbo.remoting.buffer.HeapChannelBufferFactory.getInstance();
        java.net.InetSocketAddress inetSocketAddress57 = null;
        java.net.InetSocketAddress inetSocketAddress58 = null;
        java.net.InetSocketAddress inetSocketAddress60 = null;
        java.net.InetSocketAddress inetSocketAddress61 = null;
        org.apache.dubbo.remoting.ExecutionException executionException63 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress60, inetSocketAddress61, "hi!");
        org.apache.dubbo.remoting.ExecutionException executionException64 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) channelBufferFactory56, inetSocketAddress57, inetSocketAddress58, (java.lang.Throwable) executionException63);
        boolean boolean65 = objCompletableFuture4.completeExceptionally((java.lang.Throwable) executionException64);
        org.junit.Assert.assertNotNull(completableFutureArray1);
        org.junit.Assert.assertNotNull(wildcardCompletableFutureArray2);
        org.junit.Assert.assertNotNull(objCompletableFuture3);
        org.junit.Assert.assertNotNull(objCompletableFuture4);
        org.junit.Assert.assertNotNull(completableFutureArray6);
        org.junit.Assert.assertNotNull(wildcardCompletableFutureArray7);
        org.junit.Assert.assertNotNull(objCompletableFuture8);
        org.junit.Assert.assertNotNull(objCompletableFuture9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(completableFutureArray12);
        org.junit.Assert.assertNotNull(wildcardCompletableFutureArray13);
        org.junit.Assert.assertNotNull(objCompletableFuture14);
        org.junit.Assert.assertNotNull(channelHandlerArray16);
        org.junit.Assert.assertNotNull(voidCompletableFuture34);
        org.junit.Assert.assertNotNull(voidCompletableFuture35);
        org.junit.Assert.assertNotNull(channelHandlerArray37);
        org.junit.Assert.assertNotNull(voidCompletableFuture55);
        org.junit.Assert.assertNotNull(channelBufferFactory56);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test275");
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory1 = org.apache.dubbo.remoting.buffer.DirectChannelBufferFactory.getInstance();
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer2 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 60, channelBufferFactory1);
        dynamicChannelBuffer2.discardReadBytes();
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer5 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer7 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        heapChannelBuffer7.writeByte((int) (short) 10);
        byte[] byteArray10 = heapChannelBuffer7.array();
        dynamicChannelBuffer5.writeBytes(byteArray10);
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer12 = org.apache.dubbo.remoting.buffer.ChannelBuffers.wrappedBuffer(byteArray10);
        // The following exception was thrown during execution in test generation
        try {
            dynamicChannelBuffer2.writeBytes(byteArray10, (int) (byte) 80, 1024);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelBufferFactory1);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(channelBuffer12);
    }

    @Test
    public void test276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test276");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        heapChannelBuffer3.discardReadBytes();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer9 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer11 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean12 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer9, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer11);
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer13 = heapChannelBuffer9.copy();
        heapChannelBuffer3.setBytes((int) (byte) 0, channelBuffer13);
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer16 = org.apache.dubbo.remoting.buffer.ChannelBuffers.buffer((int) (short) 10);
        int int17 = org.apache.dubbo.remoting.buffer.ChannelBuffers.compare(channelBuffer13, channelBuffer16);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(channelBuffer13);
        org.junit.Assert.assertNotNull(channelBuffer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test277");
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate0 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate1 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray2 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher3 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray2);
        org.apache.dubbo.common.URL uRL4 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler5 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher3, uRL4);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState6 = null;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        org.apache.dubbo.remoting.RemotingException remotingException10 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress7, inetSocketAddress8, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable11 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate1, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler5, channelState6, (java.lang.Throwable) remotingException10);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher12 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState13 = null;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        org.apache.dubbo.remoting.ExecutionException executionException18 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress15, inetSocketAddress16, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable19 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate1, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher12, channelState13, (java.lang.Throwable) executionException18);
        channelDelegate0.setChannel((org.apache.dubbo.remoting.Channel) channelDelegate1);
        // The following exception was thrown during execution in test generation
        try {
            channelDelegate0.startClose();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray2);
    }

    @Test
    public void test278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test278");
        java.util.concurrent.CompletableFuture[] completableFutureArray1 = new java.util.concurrent.CompletableFuture[0];
        @SuppressWarnings("unchecked")
        java.util.concurrent.CompletableFuture<?>[] wildcardCompletableFutureArray2 = (java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1;
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture3 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1);
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture4 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1);
        int int5 = objCompletableFuture4.getNumberOfDependents();
        java.lang.Runnable runnable6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.CompletableFuture<java.lang.Void> voidCompletableFuture7 = objCompletableFuture4.thenRunAsync(runnable6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(completableFutureArray1);
        org.junit.Assert.assertNotNull(wildcardCompletableFutureArray2);
        org.junit.Assert.assertNotNull(objCompletableFuture3);
        org.junit.Assert.assertNotNull(objCompletableFuture4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test279");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        heapChannelBuffer3.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream7 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        int int8 = heapChannelBuffer3.readerIndex();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test280");
        org.apache.dubbo.remoting.Channel channel0 = null;
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray1 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher2 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray1);
        org.apache.dubbo.common.URL uRL3 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler4 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher2, uRL3);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState5 = null;
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable7 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable(channel0, (org.apache.dubbo.remoting.ChannelHandler) messageOnlyChannelHandler4, channelState5, (java.lang.Object) (short) 1);
        org.apache.dubbo.remoting.transport.ClientDelegate clientDelegate8 = new org.apache.dubbo.remoting.transport.ClientDelegate();
        org.apache.dubbo.remoting.transport.ClientDelegate clientDelegate9 = new org.apache.dubbo.remoting.transport.ClientDelegate();
        clientDelegate8.setClient((org.apache.dubbo.remoting.Client) clientDelegate9);
        org.apache.dubbo.remoting.exchange.Response response12 = new org.apache.dubbo.remoting.exchange.Response(0L);
        // The following exception was thrown during execution in test generation
        try {
            messageOnlyChannelHandler4.received((org.apache.dubbo.remoting.Channel) clientDelegate8, (java.lang.Object) 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray1);
    }

    @Test
    public void test281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test281");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher2 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher3 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher2);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher4 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray5 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher6 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray5);
        org.apache.dubbo.remoting.Channel channel7 = null;
        java.lang.Throwable throwable8 = null;
        channelHandlerDispatcher6.caught(channel7, throwable8);
        org.apache.dubbo.remoting.Channel channel10 = null;
        channelHandlerDispatcher6.disconnected(channel10);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray12 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher13 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray12);
        org.apache.dubbo.remoting.Channel channel14 = null;
        java.lang.Throwable throwable15 = null;
        channelHandlerDispatcher13.caught(channel14, throwable15);
        org.apache.dubbo.remoting.Channel channel17 = null;
        channelHandlerDispatcher13.disconnected(channel17);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray19 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher20 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray19);
        org.apache.dubbo.common.URL uRL21 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler22 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher20, uRL21);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray23 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher24 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray23);
        org.apache.dubbo.common.URL uRL25 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler26 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher24, uRL25);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler27 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler26);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray28 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher4, channelHandlerDispatcher6, channelHandlerDispatcher13, channelHandlerDispatcher20, decodeHandler27 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher29 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher3, channelHandlerArray28);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray30 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher31 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray30);
        org.apache.dubbo.common.URL uRL32 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler33 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher31, uRL32);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler34 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler33);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate35 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray36 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher37 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray36);
        org.apache.dubbo.common.URL uRL38 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler39 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher37, uRL38);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState40 = null;
        java.net.InetSocketAddress inetSocketAddress41 = null;
        java.net.InetSocketAddress inetSocketAddress42 = null;
        org.apache.dubbo.remoting.RemotingException remotingException44 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress41, inetSocketAddress42, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable45 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate35, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler39, channelState40, (java.lang.Throwable) remotingException44);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher46 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState47 = null;
        java.net.InetSocketAddress inetSocketAddress49 = null;
        java.net.InetSocketAddress inetSocketAddress50 = null;
        org.apache.dubbo.remoting.ExecutionException executionException52 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress49, inetSocketAddress50, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable53 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate35, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher46, channelState47, (java.lang.Throwable) executionException52);
        decodeHandler34.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate35);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate55 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj56 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate55);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate57 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate55);
        exchangeHandlerDispatcher29.sent((org.apache.dubbo.remoting.Channel) channelDelegate35, (java.lang.Object) serverDelegate57);
        channelHandlerDispatcher1.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate35);
        boolean boolean60 = org.apache.dubbo.remoting.exchange.support.DefaultFuture.hasFuture((org.apache.dubbo.remoting.Channel) channelDelegate35);
        // The following exception was thrown during execution in test generation
        try {
            channelDelegate35.removeAttribute("buffer");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray0);
        org.junit.Assert.assertNotNull(channelHandlerArray5);
        org.junit.Assert.assertNotNull(channelHandlerArray12);
        org.junit.Assert.assertNotNull(channelHandlerArray19);
        org.junit.Assert.assertNotNull(channelHandlerArray23);
        org.junit.Assert.assertNotNull(channelHandlerArray28);
        org.junit.Assert.assertNotNull(channelHandlerArray30);
        org.junit.Assert.assertNotNull(channelHandlerArray36);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test282");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.common.URL uRL2 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler3 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher1, uRL2);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler4 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler3);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate5 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray6 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher7 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray6);
        org.apache.dubbo.common.URL uRL8 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler9 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher7, uRL8);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState10 = null;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        org.apache.dubbo.remoting.RemotingException remotingException14 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress11, inetSocketAddress12, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable15 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate5, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler9, channelState10, (java.lang.Throwable) remotingException14);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher16 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState17 = null;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        org.apache.dubbo.remoting.ExecutionException executionException22 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress19, inetSocketAddress20, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable23 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate5, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher16, channelState17, (java.lang.Throwable) executionException22);
        decodeHandler4.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate5);
        org.apache.dubbo.remoting.ChannelHandler channelHandler25 = decodeHandler4.getHandler();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray26 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher27 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray26);
        org.apache.dubbo.common.URL uRL28 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler29 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher27, uRL28);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler30 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler29);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate31 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray32 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher33 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray32);
        org.apache.dubbo.common.URL uRL34 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler35 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher33, uRL34);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState36 = null;
        java.net.InetSocketAddress inetSocketAddress37 = null;
        java.net.InetSocketAddress inetSocketAddress38 = null;
        org.apache.dubbo.remoting.RemotingException remotingException40 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress37, inetSocketAddress38, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable41 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate31, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler35, channelState36, (java.lang.Throwable) remotingException40);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher42 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState43 = null;
        java.net.InetSocketAddress inetSocketAddress45 = null;
        java.net.InetSocketAddress inetSocketAddress46 = null;
        org.apache.dubbo.remoting.ExecutionException executionException48 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress45, inetSocketAddress46, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable49 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate31, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher42, channelState43, (java.lang.Throwable) executionException48);
        decodeHandler30.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate31);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate51 = new org.apache.dubbo.remoting.transport.ChannelDelegate((org.apache.dubbo.remoting.Channel) channelDelegate31);
        decodeHandler4.connected((org.apache.dubbo.remoting.Channel) channelDelegate31);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray53 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher54 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray53);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray55 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher56 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray55);
        org.apache.dubbo.common.URL uRL57 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler58 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher56, uRL57);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler59 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler58);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate60 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray61 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher62 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray61);
        org.apache.dubbo.common.URL uRL63 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler64 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher62, uRL63);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState65 = null;
        java.net.InetSocketAddress inetSocketAddress66 = null;
        java.net.InetSocketAddress inetSocketAddress67 = null;
        org.apache.dubbo.remoting.RemotingException remotingException69 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress66, inetSocketAddress67, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable70 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate60, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler64, channelState65, (java.lang.Throwable) remotingException69);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher71 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState72 = null;
        java.net.InetSocketAddress inetSocketAddress74 = null;
        java.net.InetSocketAddress inetSocketAddress75 = null;
        org.apache.dubbo.remoting.ExecutionException executionException77 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress74, inetSocketAddress75, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable78 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate60, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher71, channelState72, (java.lang.Throwable) executionException77);
        decodeHandler59.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate60);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate80 = new org.apache.dubbo.remoting.transport.ChannelDelegate((org.apache.dubbo.remoting.Channel) channelDelegate60);
        channelHandlerDispatcher54.received((org.apache.dubbo.remoting.Channel) channelDelegate80, (java.lang.Object) (byte) 0);
        org.apache.dubbo.remoting.transport.ClientDelegate clientDelegate83 = new org.apache.dubbo.remoting.transport.ClientDelegate();
        // The following exception was thrown during execution in test generation
        try {
            decodeHandler4.received((org.apache.dubbo.remoting.Channel) channelDelegate80, (java.lang.Object) clientDelegate83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray0);
        org.junit.Assert.assertNotNull(channelHandlerArray6);
        org.junit.Assert.assertNotNull(channelHandler25);
        org.junit.Assert.assertNotNull(channelHandlerArray26);
        org.junit.Assert.assertNotNull(channelHandlerArray32);
        org.junit.Assert.assertNotNull(channelHandlerArray53);
        org.junit.Assert.assertNotNull(channelHandlerArray55);
        org.junit.Assert.assertNotNull(channelHandlerArray61);
    }

    @Test
    public void test283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test283");
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher0 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher1 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher0);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher2 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray3 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher4 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray3);
        org.apache.dubbo.remoting.Channel channel5 = null;
        java.lang.Throwable throwable6 = null;
        channelHandlerDispatcher4.caught(channel5, throwable6);
        org.apache.dubbo.remoting.Channel channel8 = null;
        channelHandlerDispatcher4.disconnected(channel8);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray10 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher11 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray10);
        org.apache.dubbo.remoting.Channel channel12 = null;
        java.lang.Throwable throwable13 = null;
        channelHandlerDispatcher11.caught(channel12, throwable13);
        org.apache.dubbo.remoting.Channel channel15 = null;
        channelHandlerDispatcher11.disconnected(channel15);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray17 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher18 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray17);
        org.apache.dubbo.common.URL uRL19 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler20 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher18, uRL19);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray21 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher22 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray21);
        org.apache.dubbo.common.URL uRL23 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler24 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher22, uRL23);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler25 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler24);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray26 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher2, channelHandlerDispatcher4, channelHandlerDispatcher11, channelHandlerDispatcher18, decodeHandler25 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher27 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher1, channelHandlerArray26);
        org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler headerExchangeHandler28 = new org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler((org.apache.dubbo.remoting.exchange.ExchangeHandler) exchangeHandlerDispatcher27);
        org.junit.Assert.assertNotNull(channelHandlerArray3);
        org.junit.Assert.assertNotNull(channelHandlerArray10);
        org.junit.Assert.assertNotNull(channelHandlerArray17);
        org.junit.Assert.assertNotNull(channelHandlerArray21);
        org.junit.Assert.assertNotNull(channelHandlerArray26);
    }

    @Test
    public void test284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test284");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        int int5 = heapChannelBuffer1.readerIndex();
        heapChannelBuffer1.clear();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer8 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer10 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean11 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer8, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer10);
        heapChannelBuffer10.resetReaderIndex();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer15 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray16 = heapChannelBuffer15.array();
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 20, (byte) 70, (byte) 10 };
        heapChannelBuffer15.writeBytes(byteArray21);
        heapChannelBuffer10.setBytes(0, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer15, (int) (byte) 1, 10);
        heapChannelBuffer1.writeBytes((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer15, (int) ' ', (int) (short) 10);
        int int29 = heapChannelBuffer15.writerIndex();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer32 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer34 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean35 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer32, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer34);
        heapChannelBuffer34.resetReaderIndex();
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer38 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        boolean boolean39 = dynamicChannelBuffer38.hasArray();
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory40 = dynamicChannelBuffer38.factory();
        int int41 = heapChannelBuffer34.compareTo((org.apache.dubbo.remoting.buffer.ChannelBuffer) dynamicChannelBuffer38);
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer42 = dynamicChannelBuffer38.copy();
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer15.getBytes((int) (short) 100, (org.apache.dubbo.remoting.buffer.ChannelBuffer) dynamicChannelBuffer38);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[1, 20, 70, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 20, 70, 10]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(channelBufferFactory40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(channelBuffer42);
    }

    @Test
    public void test285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test285");
        java.util.concurrent.CompletableFuture[] completableFutureArray1 = new java.util.concurrent.CompletableFuture[0];
        @SuppressWarnings("unchecked")
        java.util.concurrent.CompletableFuture<?>[] wildcardCompletableFutureArray2 = (java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1;
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture3 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1);
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture4 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1);
        java.util.concurrent.CompletionStage<java.lang.Object> objCompletionStage5 = null;
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate6 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray7 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher8 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray7);
        org.apache.dubbo.common.URL uRL9 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler10 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher8, uRL9);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState11 = null;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        org.apache.dubbo.remoting.RemotingException remotingException15 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress12, inetSocketAddress13, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable16 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate6, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler10, channelState11, (java.lang.Throwable) remotingException15);
        java.util.concurrent.Executor executor17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.CompletableFuture<java.lang.Void> voidCompletableFuture18 = objCompletableFuture4.runAfterBothAsync(objCompletionStage5, (java.lang.Runnable) channelEventRunnable16, executor17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(completableFutureArray1);
        org.junit.Assert.assertNotNull(wildcardCompletableFutureArray2);
        org.junit.Assert.assertNotNull(objCompletableFuture3);
        org.junit.Assert.assertNotNull(objCompletableFuture4);
        org.junit.Assert.assertNotNull(channelHandlerArray7);
    }

    @Test
    public void test286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test286");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        int int5 = heapChannelBuffer1.readerIndex();
        heapChannelBuffer1.clear();
        heapChannelBuffer1.resetWriterIndex();
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer1.ensureWritableBytes((int) (byte) 90);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test287");
        org.apache.dubbo.common.URL uRL0 = null;
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher1 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher2 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher1);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher3 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray4 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher5 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray4);
        org.apache.dubbo.remoting.Channel channel6 = null;
        java.lang.Throwable throwable7 = null;
        channelHandlerDispatcher5.caught(channel6, throwable7);
        org.apache.dubbo.remoting.Channel channel9 = null;
        channelHandlerDispatcher5.disconnected(channel9);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray11 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher12 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray11);
        org.apache.dubbo.remoting.Channel channel13 = null;
        java.lang.Throwable throwable14 = null;
        channelHandlerDispatcher12.caught(channel13, throwable14);
        org.apache.dubbo.remoting.Channel channel16 = null;
        channelHandlerDispatcher12.disconnected(channel16);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray18 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher19 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray18);
        org.apache.dubbo.common.URL uRL20 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler21 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher19, uRL20);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray22 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher23 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray22);
        org.apache.dubbo.common.URL uRL24 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler25 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher23, uRL24);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler26 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler25);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray27 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher3, channelHandlerDispatcher5, channelHandlerDispatcher12, channelHandlerDispatcher19, decodeHandler26 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher28 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher2, channelHandlerArray27);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher29 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher2);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.exchange.ExchangeServer exchangeServer30 = org.apache.dubbo.remoting.exchange.Exchangers.bind(uRL0, (org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: url == null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray4);
        org.junit.Assert.assertNotNull(channelHandlerArray11);
        org.junit.Assert.assertNotNull(channelHandlerArray18);
        org.junit.Assert.assertNotNull(channelHandlerArray22);
        org.junit.Assert.assertNotNull(channelHandlerArray27);
    }

    @Test
    public void test288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test288");
        java.net.InetSocketAddress inetSocketAddress1 = null;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        org.apache.dubbo.remoting.TimeoutException timeoutException4 = new org.apache.dubbo.remoting.TimeoutException(true, inetSocketAddress1, inetSocketAddress2, "execution");
        java.lang.Throwable[] throwableArray5 = timeoutException4.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray5);
    }

    @Test
    public void test289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test289");
        org.apache.dubbo.common.URL uRL0 = null;
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher1 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher2 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher1);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher3 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray4 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher5 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray4);
        org.apache.dubbo.remoting.Channel channel6 = null;
        java.lang.Throwable throwable7 = null;
        channelHandlerDispatcher5.caught(channel6, throwable7);
        org.apache.dubbo.remoting.Channel channel9 = null;
        channelHandlerDispatcher5.disconnected(channel9);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray11 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher12 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray11);
        org.apache.dubbo.remoting.Channel channel13 = null;
        java.lang.Throwable throwable14 = null;
        channelHandlerDispatcher12.caught(channel13, throwable14);
        org.apache.dubbo.remoting.Channel channel16 = null;
        channelHandlerDispatcher12.disconnected(channel16);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray18 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher19 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray18);
        org.apache.dubbo.common.URL uRL20 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler21 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher19, uRL20);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray22 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher23 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray22);
        org.apache.dubbo.common.URL uRL24 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler25 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher23, uRL24);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler26 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler25);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray27 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher3, channelHandlerDispatcher5, channelHandlerDispatcher12, channelHandlerDispatcher19, decodeHandler26 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher28 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher2, channelHandlerArray27);
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher29 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher30 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher29);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher31 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray32 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher33 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray32);
        org.apache.dubbo.remoting.Channel channel34 = null;
        java.lang.Throwable throwable35 = null;
        channelHandlerDispatcher33.caught(channel34, throwable35);
        org.apache.dubbo.remoting.Channel channel37 = null;
        channelHandlerDispatcher33.disconnected(channel37);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray39 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher40 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray39);
        org.apache.dubbo.remoting.Channel channel41 = null;
        java.lang.Throwable throwable42 = null;
        channelHandlerDispatcher40.caught(channel41, throwable42);
        org.apache.dubbo.remoting.Channel channel44 = null;
        channelHandlerDispatcher40.disconnected(channel44);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray46 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher47 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray46);
        org.apache.dubbo.common.URL uRL48 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler49 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher47, uRL48);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray50 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher51 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray50);
        org.apache.dubbo.common.URL uRL52 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler53 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher51, uRL52);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler54 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler53);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray55 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher31, channelHandlerDispatcher33, channelHandlerDispatcher40, channelHandlerDispatcher47, decodeHandler54 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher56 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher30, channelHandlerArray55);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.exchange.ExchangeServer exchangeServer57 = org.apache.dubbo.remoting.exchange.Exchangers.bind(uRL0, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher28, (org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: url == null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray4);
        org.junit.Assert.assertNotNull(channelHandlerArray11);
        org.junit.Assert.assertNotNull(channelHandlerArray18);
        org.junit.Assert.assertNotNull(channelHandlerArray22);
        org.junit.Assert.assertNotNull(channelHandlerArray27);
        org.junit.Assert.assertNotNull(channelHandlerArray32);
        org.junit.Assert.assertNotNull(channelHandlerArray39);
        org.junit.Assert.assertNotNull(channelHandlerArray46);
        org.junit.Assert.assertNotNull(channelHandlerArray50);
        org.junit.Assert.assertNotNull(channelHandlerArray55);
    }

    @Test
    public void test290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test290");
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer1 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        heapChannelBuffer3.writeByte((int) (short) 10);
        byte[] byteArray6 = heapChannelBuffer3.array();
        dynamicChannelBuffer1.writeBytes(byteArray6);
        java.nio.ByteBuffer byteBuffer8 = null;
        // The following exception was thrown during execution in test generation
        try {
            dynamicChannelBuffer1.writeBytes(byteBuffer8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test291");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        heapChannelBuffer1.writeByte((int) (short) 10);
        heapChannelBuffer1.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory5 = heapChannelBuffer1.factory();
        java.nio.ByteBuffer byteBuffer7 = null;
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer1.getBytes((int) (byte) 10, byteBuffer7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelBufferFactory5);
    }

    @Test
    public void test292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test292");
        org.apache.dubbo.common.URL uRL0 = null;
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher1 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray2 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher3 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray2);
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher4 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher5 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher4);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher6 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray7 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher8 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray7);
        org.apache.dubbo.remoting.Channel channel9 = null;
        java.lang.Throwable throwable10 = null;
        channelHandlerDispatcher8.caught(channel9, throwable10);
        org.apache.dubbo.remoting.Channel channel12 = null;
        channelHandlerDispatcher8.disconnected(channel12);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray14 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher15 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray14);
        org.apache.dubbo.remoting.Channel channel16 = null;
        java.lang.Throwable throwable17 = null;
        channelHandlerDispatcher15.caught(channel16, throwable17);
        org.apache.dubbo.remoting.Channel channel19 = null;
        channelHandlerDispatcher15.disconnected(channel19);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray21 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher22 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray21);
        org.apache.dubbo.common.URL uRL23 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler24 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher22, uRL23);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray25 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher26 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray25);
        org.apache.dubbo.common.URL uRL27 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler28 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher26, uRL27);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler29 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler28);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray30 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher6, channelHandlerDispatcher8, channelHandlerDispatcher15, channelHandlerDispatcher22, decodeHandler29 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher31 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher5, channelHandlerArray30);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray32 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher33 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray32);
        org.apache.dubbo.common.URL uRL34 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler35 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher33, uRL34);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler36 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler35);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate37 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray38 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher39 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray38);
        org.apache.dubbo.common.URL uRL40 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler41 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher39, uRL40);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState42 = null;
        java.net.InetSocketAddress inetSocketAddress43 = null;
        java.net.InetSocketAddress inetSocketAddress44 = null;
        org.apache.dubbo.remoting.RemotingException remotingException46 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress43, inetSocketAddress44, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable47 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate37, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler41, channelState42, (java.lang.Throwable) remotingException46);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher48 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState49 = null;
        java.net.InetSocketAddress inetSocketAddress51 = null;
        java.net.InetSocketAddress inetSocketAddress52 = null;
        org.apache.dubbo.remoting.ExecutionException executionException54 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress51, inetSocketAddress52, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable55 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate37, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher48, channelState49, (java.lang.Throwable) executionException54);
        decodeHandler36.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate37);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate57 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj58 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate57);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate59 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate57);
        exchangeHandlerDispatcher31.sent((org.apache.dubbo.remoting.Channel) channelDelegate37, (java.lang.Object) serverDelegate59);
        channelHandlerDispatcher3.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate37);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher62 = exchangeHandlerDispatcher1.addChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher3);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate63 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        exchangeHandlerDispatcher1.connected((org.apache.dubbo.remoting.Channel) channelDelegate63);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate65 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray66 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher67 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray66);
        org.apache.dubbo.common.URL uRL68 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler69 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher67, uRL68);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState70 = null;
        java.net.InetSocketAddress inetSocketAddress71 = null;
        java.net.InetSocketAddress inetSocketAddress72 = null;
        org.apache.dubbo.remoting.RemotingException remotingException74 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress71, inetSocketAddress72, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable75 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate65, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler69, channelState70, (java.lang.Throwable) remotingException74);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher76 = exchangeHandlerDispatcher1.addChannelHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler69);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.exchange.ExchangeServer exchangeServer77 = org.apache.dubbo.remoting.exchange.Exchangers.bind(uRL0, (org.apache.dubbo.remoting.exchange.ExchangeHandler) exchangeHandlerDispatcher76);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: url == null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray2);
        org.junit.Assert.assertNotNull(channelHandlerArray7);
        org.junit.Assert.assertNotNull(channelHandlerArray14);
        org.junit.Assert.assertNotNull(channelHandlerArray21);
        org.junit.Assert.assertNotNull(channelHandlerArray25);
        org.junit.Assert.assertNotNull(channelHandlerArray30);
        org.junit.Assert.assertNotNull(channelHandlerArray32);
        org.junit.Assert.assertNotNull(channelHandlerArray38);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(exchangeHandlerDispatcher62);
        org.junit.Assert.assertNotNull(channelHandlerArray66);
        org.junit.Assert.assertNotNull(exchangeHandlerDispatcher76);
    }

    @Test
    public void test293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test293");
        java.util.concurrent.CompletableFuture[] completableFutureArray1 = new java.util.concurrent.CompletableFuture[0];
        @SuppressWarnings("unchecked")
        java.util.concurrent.CompletableFuture<?>[] wildcardCompletableFutureArray2 = (java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1;
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture3 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1);
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture4 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1);
        java.util.concurrent.CompletableFuture[] completableFutureArray6 = new java.util.concurrent.CompletableFuture[0];
        @SuppressWarnings("unchecked")
        java.util.concurrent.CompletableFuture<?>[] wildcardCompletableFutureArray7 = (java.util.concurrent.CompletableFuture<?>[]) completableFutureArray6;
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture8 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray6);
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture9 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray6);
        int int10 = objCompletableFuture9.getNumberOfDependents();
        java.util.concurrent.CompletableFuture[] completableFutureArray12 = new java.util.concurrent.CompletableFuture[0];
        @SuppressWarnings("unchecked")
        java.util.concurrent.CompletableFuture<?>[] wildcardCompletableFutureArray13 = (java.util.concurrent.CompletableFuture<?>[]) completableFutureArray12;
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture14 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray12);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate15 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray16 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher17 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray16);
        org.apache.dubbo.common.URL uRL18 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler19 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher17, uRL18);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState20 = null;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        java.net.InetSocketAddress inetSocketAddress22 = null;
        org.apache.dubbo.remoting.RemotingException remotingException24 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress21, inetSocketAddress22, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable25 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate15, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler19, channelState20, (java.lang.Throwable) remotingException24);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher26 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState27 = null;
        java.net.InetSocketAddress inetSocketAddress29 = null;
        java.net.InetSocketAddress inetSocketAddress30 = null;
        org.apache.dubbo.remoting.ExecutionException executionException32 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress29, inetSocketAddress30, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable33 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate15, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher26, channelState27, (java.lang.Throwable) executionException32);
        java.util.concurrent.CompletableFuture<java.lang.Void> voidCompletableFuture34 = objCompletableFuture14.thenRunAsync((java.lang.Runnable) channelEventRunnable33);
        java.util.concurrent.CompletableFuture<java.lang.Void> voidCompletableFuture35 = objCompletableFuture9.thenRunAsync((java.lang.Runnable) channelEventRunnable33);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate36 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray37 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher38 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray37);
        org.apache.dubbo.common.URL uRL39 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler40 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher38, uRL39);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState41 = null;
        java.net.InetSocketAddress inetSocketAddress42 = null;
        java.net.InetSocketAddress inetSocketAddress43 = null;
        org.apache.dubbo.remoting.RemotingException remotingException45 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress42, inetSocketAddress43, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable46 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate36, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler40, channelState41, (java.lang.Throwable) remotingException45);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher47 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState48 = null;
        java.net.InetSocketAddress inetSocketAddress50 = null;
        java.net.InetSocketAddress inetSocketAddress51 = null;
        org.apache.dubbo.remoting.ExecutionException executionException53 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress50, inetSocketAddress51, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable54 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate36, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher47, channelState48, (java.lang.Throwable) executionException53);
        java.util.concurrent.CompletableFuture<java.lang.Void> voidCompletableFuture55 = objCompletableFuture4.runAfterBothAsync((java.util.concurrent.CompletionStage<java.lang.Object>) objCompletableFuture9, (java.lang.Runnable) channelEventRunnable54);
        java.util.concurrent.CompletableFuture[] completableFutureArray57 = new java.util.concurrent.CompletableFuture[0];
        @SuppressWarnings("unchecked")
        java.util.concurrent.CompletableFuture<?>[] wildcardCompletableFutureArray58 = (java.util.concurrent.CompletableFuture<?>[]) completableFutureArray57;
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture59 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray57);
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture60 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray57);
        int int61 = objCompletableFuture60.getNumberOfDependents();
        java.util.concurrent.CompletableFuture[] completableFutureArray63 = new java.util.concurrent.CompletableFuture[0];
        @SuppressWarnings("unchecked")
        java.util.concurrent.CompletableFuture<?>[] wildcardCompletableFutureArray64 = (java.util.concurrent.CompletableFuture<?>[]) completableFutureArray63;
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture65 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray63);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate66 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray67 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher68 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray67);
        org.apache.dubbo.common.URL uRL69 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler70 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher68, uRL69);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState71 = null;
        java.net.InetSocketAddress inetSocketAddress72 = null;
        java.net.InetSocketAddress inetSocketAddress73 = null;
        org.apache.dubbo.remoting.RemotingException remotingException75 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress72, inetSocketAddress73, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable76 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate66, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler70, channelState71, (java.lang.Throwable) remotingException75);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher77 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState78 = null;
        java.net.InetSocketAddress inetSocketAddress80 = null;
        java.net.InetSocketAddress inetSocketAddress81 = null;
        org.apache.dubbo.remoting.ExecutionException executionException83 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress80, inetSocketAddress81, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable84 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate66, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher77, channelState78, (java.lang.Throwable) executionException83);
        java.util.concurrent.CompletableFuture<java.lang.Void> voidCompletableFuture85 = objCompletableFuture65.thenRunAsync((java.lang.Runnable) channelEventRunnable84);
        java.util.concurrent.CompletableFuture<java.lang.Void> voidCompletableFuture86 = objCompletableFuture60.thenRunAsync((java.lang.Runnable) channelEventRunnable84);
        java.util.concurrent.CompletableFuture<java.lang.Void> voidCompletableFuture87 = java.util.concurrent.CompletableFuture.runAsync((java.lang.Runnable) channelEventRunnable84);
        java.util.concurrent.CompletableFuture<java.lang.Void> voidCompletableFuture88 = java.util.concurrent.CompletableFuture.runAsync((java.lang.Runnable) channelEventRunnable84);
        java.util.concurrent.Executor executor89 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.CompletableFuture<java.lang.Void> voidCompletableFuture90 = objCompletableFuture9.thenRunAsync((java.lang.Runnable) channelEventRunnable84, executor89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(completableFutureArray1);
        org.junit.Assert.assertNotNull(wildcardCompletableFutureArray2);
        org.junit.Assert.assertNotNull(objCompletableFuture3);
        org.junit.Assert.assertNotNull(objCompletableFuture4);
        org.junit.Assert.assertNotNull(completableFutureArray6);
        org.junit.Assert.assertNotNull(wildcardCompletableFutureArray7);
        org.junit.Assert.assertNotNull(objCompletableFuture8);
        org.junit.Assert.assertNotNull(objCompletableFuture9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(completableFutureArray12);
        org.junit.Assert.assertNotNull(wildcardCompletableFutureArray13);
        org.junit.Assert.assertNotNull(objCompletableFuture14);
        org.junit.Assert.assertNotNull(channelHandlerArray16);
        org.junit.Assert.assertNotNull(voidCompletableFuture34);
        org.junit.Assert.assertNotNull(voidCompletableFuture35);
        org.junit.Assert.assertNotNull(channelHandlerArray37);
        org.junit.Assert.assertNotNull(voidCompletableFuture55);
        org.junit.Assert.assertNotNull(completableFutureArray57);
        org.junit.Assert.assertNotNull(wildcardCompletableFutureArray58);
        org.junit.Assert.assertNotNull(objCompletableFuture59);
        org.junit.Assert.assertNotNull(objCompletableFuture60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(completableFutureArray63);
        org.junit.Assert.assertNotNull(wildcardCompletableFutureArray64);
        org.junit.Assert.assertNotNull(objCompletableFuture65);
        org.junit.Assert.assertNotNull(channelHandlerArray67);
        org.junit.Assert.assertNotNull(voidCompletableFuture85);
        org.junit.Assert.assertNotNull(voidCompletableFuture86);
        org.junit.Assert.assertNotNull(voidCompletableFuture87);
        org.junit.Assert.assertNotNull(voidCompletableFuture88);
    }

    @Test
    public void test294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test294");
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer1 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer5 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean6 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer5);
        heapChannelBuffer5.resetReaderIndex();
        heapChannelBuffer5.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream9 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer5);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer12 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer14 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean15 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer12, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer14);
        heapChannelBuffer14.resetReaderIndex();
        heapChannelBuffer14.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream18 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer14);
        int int20 = heapChannelBuffer5.setBytes((int) (byte) 10, (java.io.InputStream) channelBufferInputStream18, (int) (byte) 100);
        int int22 = dynamicChannelBuffer1.writeBytes((java.io.InputStream) channelBufferInputStream18, 0);
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer24 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        int int25 = dynamicChannelBuffer24.capacity();
        dynamicChannelBuffer24.clear();
        dynamicChannelBuffer1.writeBytes((org.apache.dubbo.remoting.buffer.ChannelBuffer) dynamicChannelBuffer24);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
    }

    @Test
    public void test295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test295");
        org.apache.dubbo.common.URL uRL0 = null;
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray1 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher2 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray1);
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher3 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher4 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher3);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher5 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray6 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher7 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray6);
        org.apache.dubbo.remoting.Channel channel8 = null;
        java.lang.Throwable throwable9 = null;
        channelHandlerDispatcher7.caught(channel8, throwable9);
        org.apache.dubbo.remoting.Channel channel11 = null;
        channelHandlerDispatcher7.disconnected(channel11);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray13 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher14 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray13);
        org.apache.dubbo.remoting.Channel channel15 = null;
        java.lang.Throwable throwable16 = null;
        channelHandlerDispatcher14.caught(channel15, throwable16);
        org.apache.dubbo.remoting.Channel channel18 = null;
        channelHandlerDispatcher14.disconnected(channel18);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray20 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher21 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray20);
        org.apache.dubbo.common.URL uRL22 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler23 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher21, uRL22);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray24 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher25 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray24);
        org.apache.dubbo.common.URL uRL26 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler27 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher25, uRL26);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler28 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler27);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray29 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher5, channelHandlerDispatcher7, channelHandlerDispatcher14, channelHandlerDispatcher21, decodeHandler28 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher30 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher4, channelHandlerArray29);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray31 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher32 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray31);
        org.apache.dubbo.common.URL uRL33 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler34 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher32, uRL33);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler35 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler34);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate36 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray37 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher38 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray37);
        org.apache.dubbo.common.URL uRL39 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler40 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher38, uRL39);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState41 = null;
        java.net.InetSocketAddress inetSocketAddress42 = null;
        java.net.InetSocketAddress inetSocketAddress43 = null;
        org.apache.dubbo.remoting.RemotingException remotingException45 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress42, inetSocketAddress43, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable46 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate36, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler40, channelState41, (java.lang.Throwable) remotingException45);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher47 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState48 = null;
        java.net.InetSocketAddress inetSocketAddress50 = null;
        java.net.InetSocketAddress inetSocketAddress51 = null;
        org.apache.dubbo.remoting.ExecutionException executionException53 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress50, inetSocketAddress51, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable54 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate36, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher47, channelState48, (java.lang.Throwable) executionException53);
        decodeHandler35.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate36);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate56 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj57 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate56);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate58 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate56);
        exchangeHandlerDispatcher30.sent((org.apache.dubbo.remoting.Channel) channelDelegate36, (java.lang.Object) serverDelegate58);
        channelHandlerDispatcher2.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate36);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray61 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher62 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray61);
        org.apache.dubbo.common.URL uRL63 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler64 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher62, uRL63);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher65 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher66 = channelHandlerDispatcher62.removeChannelHandler((org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher65);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState67 = org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState.RECEIVED;
        java.lang.Object obj68 = null;
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory69 = org.apache.dubbo.remoting.buffer.HeapChannelBufferFactory.getInstance();
        java.net.InetSocketAddress inetSocketAddress70 = null;
        java.net.InetSocketAddress inetSocketAddress71 = null;
        java.net.InetSocketAddress inetSocketAddress73 = null;
        java.net.InetSocketAddress inetSocketAddress74 = null;
        org.apache.dubbo.remoting.ExecutionException executionException76 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress73, inetSocketAddress74, "hi!");
        org.apache.dubbo.remoting.ExecutionException executionException77 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) channelBufferFactory69, inetSocketAddress70, inetSocketAddress71, (java.lang.Throwable) executionException76);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable78 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate36, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher65, channelState67, obj68, (java.lang.Throwable) executionException77);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.exchange.ExchangeClient exchangeClient79 = org.apache.dubbo.remoting.exchange.Exchangers.connect(uRL0, (org.apache.dubbo.remoting.exchange.ExchangeHandler) exchangeHandlerDispatcher65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: url == null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray1);
        org.junit.Assert.assertNotNull(channelHandlerArray6);
        org.junit.Assert.assertNotNull(channelHandlerArray13);
        org.junit.Assert.assertNotNull(channelHandlerArray20);
        org.junit.Assert.assertNotNull(channelHandlerArray24);
        org.junit.Assert.assertNotNull(channelHandlerArray29);
        org.junit.Assert.assertNotNull(channelHandlerArray31);
        org.junit.Assert.assertNotNull(channelHandlerArray37);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertNotNull(channelHandlerArray61);
        org.junit.Assert.assertNotNull(channelHandlerDispatcher66);
        org.junit.Assert.assertTrue("'" + channelState67 + "' != '" + org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState.RECEIVED + "'", channelState67.equals(org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState.RECEIVED));
        org.junit.Assert.assertNotNull(channelBufferFactory69);
    }

    @Test
    public void test296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test296");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.common.URL uRL2 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler3 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher1, uRL2);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler4 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler3);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate5 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        decodeHandler4.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate5);
        org.apache.dubbo.remoting.transport.ClientDelegate clientDelegate7 = new org.apache.dubbo.remoting.transport.ClientDelegate();
        // The following exception was thrown during execution in test generation
        try {
            decodeHandler4.received((org.apache.dubbo.remoting.Channel) clientDelegate7, (java.lang.Object) "connect.queue.warning.size");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray0);
    }

    @Test
    public void test297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test297");
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher0 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher1 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher0);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher2 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray3 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher4 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray3);
        org.apache.dubbo.remoting.Channel channel5 = null;
        java.lang.Throwable throwable6 = null;
        channelHandlerDispatcher4.caught(channel5, throwable6);
        org.apache.dubbo.remoting.Channel channel8 = null;
        channelHandlerDispatcher4.disconnected(channel8);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray10 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher11 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray10);
        org.apache.dubbo.remoting.Channel channel12 = null;
        java.lang.Throwable throwable13 = null;
        channelHandlerDispatcher11.caught(channel12, throwable13);
        org.apache.dubbo.remoting.Channel channel15 = null;
        channelHandlerDispatcher11.disconnected(channel15);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray17 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher18 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray17);
        org.apache.dubbo.common.URL uRL19 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler20 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher18, uRL19);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray21 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher22 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray21);
        org.apache.dubbo.common.URL uRL23 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler24 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher22, uRL23);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler25 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler24);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray26 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher2, channelHandlerDispatcher4, channelHandlerDispatcher11, channelHandlerDispatcher18, decodeHandler25 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher27 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher1, channelHandlerArray26);
        org.apache.dubbo.remoting.exchange.ExchangeChannel exchangeChannel28 = null;
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray29 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher30 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray29);
        org.apache.dubbo.common.URL uRL31 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler32 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher30, uRL31);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate33 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate34 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray35 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher36 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray35);
        org.apache.dubbo.common.URL uRL37 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler38 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher36, uRL37);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState39 = null;
        java.net.InetSocketAddress inetSocketAddress40 = null;
        java.net.InetSocketAddress inetSocketAddress41 = null;
        org.apache.dubbo.remoting.RemotingException remotingException43 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress40, inetSocketAddress41, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable44 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate34, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler38, channelState39, (java.lang.Throwable) remotingException43);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher45 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState46 = null;
        java.net.InetSocketAddress inetSocketAddress48 = null;
        java.net.InetSocketAddress inetSocketAddress49 = null;
        org.apache.dubbo.remoting.ExecutionException executionException51 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress48, inetSocketAddress49, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable52 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate34, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher45, channelState46, (java.lang.Throwable) executionException51);
        channelDelegate33.setChannel((org.apache.dubbo.remoting.Channel) channelDelegate34);
        channelHandlerDispatcher30.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate33);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj55 = replierDispatcher1.reply(exchangeChannel28, (java.lang.Object) channelDelegate33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Replier not found, Unsupported message object: class org.apache.dubbo.remoting.transport.ChannelDelegate");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray3);
        org.junit.Assert.assertNotNull(channelHandlerArray10);
        org.junit.Assert.assertNotNull(channelHandlerArray17);
        org.junit.Assert.assertNotNull(channelHandlerArray21);
        org.junit.Assert.assertNotNull(channelHandlerArray26);
        org.junit.Assert.assertNotNull(channelHandlerArray29);
        org.junit.Assert.assertNotNull(channelHandlerArray35);
    }

    @Test
    public void test298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test298");
        org.apache.dubbo.remoting.telnet.support.command.StatusTelnetHandler statusTelnetHandler0 = new org.apache.dubbo.remoting.telnet.support.command.StatusTelnetHandler();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray1 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher2 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray1);
        org.apache.dubbo.common.URL uRL3 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler4 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher2, uRL3);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate5 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate6 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray7 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher8 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray7);
        org.apache.dubbo.common.URL uRL9 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler10 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher8, uRL9);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState11 = null;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        org.apache.dubbo.remoting.RemotingException remotingException15 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress12, inetSocketAddress13, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable16 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate6, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler10, channelState11, (java.lang.Throwable) remotingException15);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher17 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState18 = null;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        org.apache.dubbo.remoting.ExecutionException executionException23 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress20, inetSocketAddress21, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable24 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate6, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher17, channelState18, (java.lang.Throwable) executionException23);
        channelDelegate5.setChannel((org.apache.dubbo.remoting.Channel) channelDelegate6);
        channelHandlerDispatcher2.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate5);
        java.lang.String str28 = statusTelnetHandler0.telnet((org.apache.dubbo.remoting.Channel) channelDelegate5, "dispacther");
        org.junit.Assert.assertNotNull(channelHandlerArray1);
        org.junit.Assert.assertNotNull(channelHandlerArray7);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Unsupported parameter dispacther for status." + "'", str28, "Unsupported parameter dispacther for status.");
    }

    @Test
    public void test299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test299");
        java.lang.String str0 = org.apache.dubbo.remoting.Constants.DEFAULT_PROMPT;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "dubbo>" + "'", str0, "dubbo>");
    }

    @Test
    public void test300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test300");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer1 = org.apache.dubbo.remoting.buffer.ChannelBuffers.directBuffer((-52));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Negative capacity: -52");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test301");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.common.URL uRL2 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler3 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher1, uRL2);
        org.apache.dubbo.remoting.ChannelHandler channelHandler4 = messageOnlyChannelHandler3.getHandler();
        org.apache.dubbo.remoting.ChannelHandler channelHandler5 = messageOnlyChannelHandler3.getHandler();
        messageOnlyChannelHandler3.close();
        org.apache.dubbo.remoting.transport.dispatcher.execution.ExecutionDispatcher executionDispatcher7 = new org.apache.dubbo.remoting.transport.dispatcher.execution.ExecutionDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray8 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher9 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray8);
        org.apache.dubbo.common.URL uRL10 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler11 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher9, uRL10);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher12 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher13 = channelHandlerDispatcher9.removeChannelHandler((org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher12);
        org.apache.dubbo.common.URL uRL14 = null;
        org.apache.dubbo.remoting.ChannelHandler channelHandler15 = executionDispatcher7.dispatch((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher13, uRL14);
        // The following exception was thrown during execution in test generation
        try {
            java.util.concurrent.ExecutorService executorService16 = messageOnlyChannelHandler3.getPreferredExecutorService((java.lang.Object) channelHandlerDispatcher13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray0);
        org.junit.Assert.assertNotNull(channelHandler4);
        org.junit.Assert.assertNotNull(channelHandler5);
        org.junit.Assert.assertNotNull(channelHandlerArray8);
        org.junit.Assert.assertNotNull(channelHandlerDispatcher13);
        org.junit.Assert.assertNotNull(channelHandler15);
    }

    @Test
    public void test302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test302");
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher0 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher1 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher0);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher2 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray3 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher4 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray3);
        org.apache.dubbo.remoting.Channel channel5 = null;
        java.lang.Throwable throwable6 = null;
        channelHandlerDispatcher4.caught(channel5, throwable6);
        org.apache.dubbo.remoting.Channel channel8 = null;
        channelHandlerDispatcher4.disconnected(channel8);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray10 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher11 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray10);
        org.apache.dubbo.remoting.Channel channel12 = null;
        java.lang.Throwable throwable13 = null;
        channelHandlerDispatcher11.caught(channel12, throwable13);
        org.apache.dubbo.remoting.Channel channel15 = null;
        channelHandlerDispatcher11.disconnected(channel15);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray17 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher18 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray17);
        org.apache.dubbo.common.URL uRL19 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler20 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher18, uRL19);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray21 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher22 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray21);
        org.apache.dubbo.common.URL uRL23 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler24 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher22, uRL23);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler25 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler24);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray26 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher2, channelHandlerDispatcher4, channelHandlerDispatcher11, channelHandlerDispatcher18, decodeHandler25 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher27 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher1, channelHandlerArray26);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray28 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher29 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray28);
        org.apache.dubbo.common.URL uRL30 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler31 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher29, uRL30);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler32 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler31);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate33 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray34 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher35 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray34);
        org.apache.dubbo.common.URL uRL36 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler37 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher35, uRL36);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState38 = null;
        java.net.InetSocketAddress inetSocketAddress39 = null;
        java.net.InetSocketAddress inetSocketAddress40 = null;
        org.apache.dubbo.remoting.RemotingException remotingException42 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress39, inetSocketAddress40, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable43 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate33, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler37, channelState38, (java.lang.Throwable) remotingException42);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher44 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState45 = null;
        java.net.InetSocketAddress inetSocketAddress47 = null;
        java.net.InetSocketAddress inetSocketAddress48 = null;
        org.apache.dubbo.remoting.ExecutionException executionException50 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress47, inetSocketAddress48, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable51 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate33, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher44, channelState45, (java.lang.Throwable) executionException50);
        decodeHandler32.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate33);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate53 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj54 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate53);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate55 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate53);
        exchangeHandlerDispatcher27.sent((org.apache.dubbo.remoting.Channel) channelDelegate33, (java.lang.Object) serverDelegate55);
        org.apache.dubbo.remoting.RemotingServer remotingServer57 = serverDelegate55.getServer();
        java.net.InetSocketAddress inetSocketAddress58 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.Channel channel59 = serverDelegate55.getChannel(inetSocketAddress58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray3);
        org.junit.Assert.assertNotNull(channelHandlerArray10);
        org.junit.Assert.assertNotNull(channelHandlerArray17);
        org.junit.Assert.assertNotNull(channelHandlerArray21);
        org.junit.Assert.assertNotNull(channelHandlerArray26);
        org.junit.Assert.assertNotNull(channelHandlerArray28);
        org.junit.Assert.assertNotNull(channelHandlerArray34);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(remotingServer57);
    }

    @Test
    public void test303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test303");
        org.apache.dubbo.common.URL uRL0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.common.serialize.Serialization serialization1 = org.apache.dubbo.remoting.transport.CodecSupport.getSerialization(uRL0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test304");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.remoting.Channel channel2 = null;
        java.lang.Throwable throwable3 = null;
        channelHandlerDispatcher1.caught(channel2, throwable3);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray5 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher6 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray5);
        org.apache.dubbo.common.URL uRL7 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler8 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher6, uRL7);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler9 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler8);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate10 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        decodeHandler9.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate10);
        channelHandlerDispatcher1.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate10);
        org.junit.Assert.assertNotNull(channelHandlerArray0);
        org.junit.Assert.assertNotNull(channelHandlerArray5);
    }

    @Test
    public void test305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test305");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        int int5 = heapChannelBuffer1.readerIndex();
        heapChannelBuffer1.clear();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer8 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer10 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean11 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer8, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer10);
        heapChannelBuffer10.resetReaderIndex();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer15 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray16 = heapChannelBuffer15.array();
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 20, (byte) 70, (byte) 10 };
        heapChannelBuffer15.writeBytes(byteArray21);
        heapChannelBuffer10.setBytes(0, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer15, (int) (byte) 1, 10);
        heapChannelBuffer1.writeBytes((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer15, (int) ' ', (int) (short) 10);
        int int29 = heapChannelBuffer15.writerIndex();
        int int30 = heapChannelBuffer15.readableBytes();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[1, 20, 70, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 20, 70, 10]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 4 + "'", int30 == 4);
    }

    @Test
    public void test306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test306");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray2 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher3 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray2);
        org.apache.dubbo.common.URL uRL4 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler5 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher3, uRL4);
        org.apache.dubbo.remoting.ChannelHandler channelHandler6 = messageOnlyChannelHandler5.getHandler();
        org.apache.dubbo.remoting.ChannelHandler channelHandler7 = messageOnlyChannelHandler5.getHandler();
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher8 = channelHandlerDispatcher1.addChannelHandler((org.apache.dubbo.remoting.ChannelHandler) messageOnlyChannelHandler5);
        org.apache.dubbo.common.URL uRL9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.ChannelHandler channelHandler10 = org.apache.dubbo.remoting.transport.dispatcher.ChannelHandlers.wrap((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher1, uRL9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Failed to create adaptive instance: java.lang.IllegalStateException: Can't create adaptive extension interface org.apache.dubbo.remoting.Dispatcher, cause: Failed to compile class, cause: javassist/ClassPath, class: org.apache.dubbo.remoting.Dispatcher$Adaptive, code: ?package org.apache.dubbo.remoting;?import org.apache.dubbo.common.extension.ExtensionLoader;?public class Dispatcher$Adaptive implements org.apache.dubbo.remoting.Dispatcher {?public org.apache.dubbo.remoting.ChannelHandler dispatch(org.apache.dubbo.remoting.ChannelHandler arg0, org.apache.dubbo.common.URL arg1)  {?if (arg1 == null) throw new IllegalArgumentException(\"url == null\");?org.apache.dubbo.common.URL url = arg1;?String extName = url.getParameter(\"dispatcher\", url.getParameter(\"dispather\", url.getParameter(\"channel.handler\", \"all\")));?if(extName == null) throw new IllegalStateException(\"Failed to get extension (org.apache.dubbo.remoting.Dispatcher) name from url (\" + url.toString() + \") use keys([dispatcher, dispather, channel.handler])\");?org.apache.dubbo.remoting.Dispatcher extension = (org.apache.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Dispatcher.class).getExtension(extName);?return extension.dispatch(arg0, arg1);?}?}?, stack: java.lang.NoClassDefFoundError: javassist/ClassPath??java.lang.NoClassDefFoundError: javassist/ClassPath??at org.apache.dubbo.common.compiler.support.JavassistCompiler.doCompile(JavassistCompiler.java:43)??at org.apache.dubbo.common.compiler.support.AbstractCompiler.compile(AbstractCompiler.java:58)??at org.apache.dubbo.common.compiler.support.AdaptiveCompiler.compile(AdaptiveCompiler.java:45)??at org.apache.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClass(ExtensionLoader.java:1039)??at org.apache.dubbo.common.extension.ExtensionLoader.getAdaptiveExtensionClass(ExtensionLoader.java:1032)??at org.apache.dubbo.common.extension.ExtensionLoader.createAdaptiveExtension(ExtensionLoader.java:1021)??at org.apache.dubbo.common.extension.ExtensionLoader.getAdaptiveExtension(ExtensionLoader.java:588)??at org.apache.dubbo.remoting.transport.dispatcher.ChannelHandlers.wrapInternal(ChannelHandlers.java:47)??at org.apache.dubbo.remoting.transport.dispatcher.ChannelHandlers.wrap(ChannelHandlers.java:34)??at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)??at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)??at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)??at java.lang.reflect.Method.invoke(Method.java:498)??at randoop.util.MethodReflectionCode.runReflectionCodeRaw(MethodReflectionCode.java:53)??at randoop.util.ReflectionCode.runReflectionCode(ReflectionCode.java:59)??at randoop.util.RunnerThread.executeReflectionCode(RunnerThread.java:49)??at randoop.util.RunnerThread.run(RunnerThread.java:43)?Caused by: java.lang.ClassNotFoundException: javassist.ClassPath??at java.net.URLClassLoader.findClass(URLClassLoader.java:382)??at java.lang.ClassLoader.loadClass(ClassLoader.java:418)??at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:355)??at java.lang.ClassLoader.loadClass(ClassLoader.java:351)??... 17 more?");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray0);
        org.junit.Assert.assertNotNull(channelHandlerArray2);
        org.junit.Assert.assertNotNull(channelHandler6);
        org.junit.Assert.assertNotNull(channelHandler7);
        org.junit.Assert.assertNotNull(channelHandlerDispatcher8);
    }

    @Test
    public void test307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test307");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher2 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher3 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher2);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher4 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray5 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher6 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray5);
        org.apache.dubbo.remoting.Channel channel7 = null;
        java.lang.Throwable throwable8 = null;
        channelHandlerDispatcher6.caught(channel7, throwable8);
        org.apache.dubbo.remoting.Channel channel10 = null;
        channelHandlerDispatcher6.disconnected(channel10);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray12 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher13 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray12);
        org.apache.dubbo.remoting.Channel channel14 = null;
        java.lang.Throwable throwable15 = null;
        channelHandlerDispatcher13.caught(channel14, throwable15);
        org.apache.dubbo.remoting.Channel channel17 = null;
        channelHandlerDispatcher13.disconnected(channel17);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray19 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher20 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray19);
        org.apache.dubbo.common.URL uRL21 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler22 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher20, uRL21);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray23 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher24 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray23);
        org.apache.dubbo.common.URL uRL25 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler26 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher24, uRL25);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler27 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler26);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray28 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher4, channelHandlerDispatcher6, channelHandlerDispatcher13, channelHandlerDispatcher20, decodeHandler27 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher29 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher3, channelHandlerArray28);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray30 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher31 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray30);
        org.apache.dubbo.common.URL uRL32 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler33 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher31, uRL32);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler34 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler33);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate35 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray36 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher37 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray36);
        org.apache.dubbo.common.URL uRL38 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler39 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher37, uRL38);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState40 = null;
        java.net.InetSocketAddress inetSocketAddress41 = null;
        java.net.InetSocketAddress inetSocketAddress42 = null;
        org.apache.dubbo.remoting.RemotingException remotingException44 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress41, inetSocketAddress42, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable45 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate35, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler39, channelState40, (java.lang.Throwable) remotingException44);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher46 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState47 = null;
        java.net.InetSocketAddress inetSocketAddress49 = null;
        java.net.InetSocketAddress inetSocketAddress50 = null;
        org.apache.dubbo.remoting.ExecutionException executionException52 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress49, inetSocketAddress50, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable53 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate35, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher46, channelState47, (java.lang.Throwable) executionException52);
        decodeHandler34.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate35);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate55 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj56 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate55);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate57 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate55);
        exchangeHandlerDispatcher29.sent((org.apache.dubbo.remoting.Channel) channelDelegate35, (java.lang.Object) serverDelegate57);
        channelHandlerDispatcher1.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate35);
        boolean boolean60 = org.apache.dubbo.remoting.exchange.support.DefaultFuture.hasFuture((org.apache.dubbo.remoting.Channel) channelDelegate35);
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer63 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer65 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        heapChannelBuffer65.writeByte((int) (short) 10);
        byte[] byteArray68 = heapChannelBuffer65.array();
        dynamicChannelBuffer63.writeBytes(byteArray68);
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer70 = org.apache.dubbo.remoting.buffer.ChannelBuffers.wrappedBuffer(byteArray68);
        // The following exception was thrown during execution in test generation
        try {
            channelDelegate35.setAttribute("payload", (java.lang.Object) byteArray68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray0);
        org.junit.Assert.assertNotNull(channelHandlerArray5);
        org.junit.Assert.assertNotNull(channelHandlerArray12);
        org.junit.Assert.assertNotNull(channelHandlerArray19);
        org.junit.Assert.assertNotNull(channelHandlerArray23);
        org.junit.Assert.assertNotNull(channelHandlerArray28);
        org.junit.Assert.assertNotNull(channelHandlerArray30);
        org.junit.Assert.assertNotNull(channelHandlerArray36);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(channelBuffer70);
    }

    @Test
    public void test308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test308");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        int int5 = heapChannelBuffer1.readerIndex();
        heapChannelBuffer1.clear();
        boolean boolean7 = heapChannelBuffer1.writable();
        boolean boolean8 = heapChannelBuffer1.readable();
        int int9 = heapChannelBuffer1.capacity();
        boolean boolean10 = heapChannelBuffer1.readable();
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer1.setIndex((int) (byte) 50, 3000);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test309");
        org.apache.dubbo.remoting.telnet.codec.TelnetCodec telnetCodec0 = new org.apache.dubbo.remoting.telnet.codec.TelnetCodec();
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate1 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate2 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray3 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher4 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray3);
        org.apache.dubbo.common.URL uRL5 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler6 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher4, uRL5);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState7 = null;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        org.apache.dubbo.remoting.RemotingException remotingException11 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress8, inetSocketAddress9, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable12 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate2, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler6, channelState7, (java.lang.Throwable) remotingException11);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher13 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState14 = null;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        org.apache.dubbo.remoting.ExecutionException executionException19 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress16, inetSocketAddress17, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable20 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate2, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher13, channelState14, (java.lang.Throwable) executionException19);
        channelDelegate1.setChannel((org.apache.dubbo.remoting.Channel) channelDelegate2);
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj23 = telnetCodec0.decode((org.apache.dubbo.remoting.Channel) channelDelegate2, channelBuffer22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray3);
    }

    @Test
    public void test310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test310");
        org.apache.dubbo.common.URL uRL0 = null;
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher1 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray2 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher3 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray2);
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher4 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher5 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher4);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher6 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray7 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher8 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray7);
        org.apache.dubbo.remoting.Channel channel9 = null;
        java.lang.Throwable throwable10 = null;
        channelHandlerDispatcher8.caught(channel9, throwable10);
        org.apache.dubbo.remoting.Channel channel12 = null;
        channelHandlerDispatcher8.disconnected(channel12);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray14 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher15 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray14);
        org.apache.dubbo.remoting.Channel channel16 = null;
        java.lang.Throwable throwable17 = null;
        channelHandlerDispatcher15.caught(channel16, throwable17);
        org.apache.dubbo.remoting.Channel channel19 = null;
        channelHandlerDispatcher15.disconnected(channel19);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray21 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher22 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray21);
        org.apache.dubbo.common.URL uRL23 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler24 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher22, uRL23);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray25 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher26 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray25);
        org.apache.dubbo.common.URL uRL27 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler28 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher26, uRL27);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler29 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler28);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray30 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher6, channelHandlerDispatcher8, channelHandlerDispatcher15, channelHandlerDispatcher22, decodeHandler29 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher31 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher5, channelHandlerArray30);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray32 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher33 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray32);
        org.apache.dubbo.common.URL uRL34 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler35 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher33, uRL34);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler36 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler35);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate37 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray38 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher39 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray38);
        org.apache.dubbo.common.URL uRL40 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler41 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher39, uRL40);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState42 = null;
        java.net.InetSocketAddress inetSocketAddress43 = null;
        java.net.InetSocketAddress inetSocketAddress44 = null;
        org.apache.dubbo.remoting.RemotingException remotingException46 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress43, inetSocketAddress44, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable47 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate37, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler41, channelState42, (java.lang.Throwable) remotingException46);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher48 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState49 = null;
        java.net.InetSocketAddress inetSocketAddress51 = null;
        java.net.InetSocketAddress inetSocketAddress52 = null;
        org.apache.dubbo.remoting.ExecutionException executionException54 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress51, inetSocketAddress52, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable55 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate37, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher48, channelState49, (java.lang.Throwable) executionException54);
        decodeHandler36.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate37);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate57 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj58 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate57);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate59 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate57);
        exchangeHandlerDispatcher31.sent((org.apache.dubbo.remoting.Channel) channelDelegate37, (java.lang.Object) serverDelegate59);
        channelHandlerDispatcher3.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate37);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher62 = exchangeHandlerDispatcher1.addChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher3);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.exchange.ExchangeServer exchangeServer63 = org.apache.dubbo.remoting.exchange.Exchangers.bind(uRL0, (org.apache.dubbo.remoting.exchange.ExchangeHandler) exchangeHandlerDispatcher1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: url == null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray2);
        org.junit.Assert.assertNotNull(channelHandlerArray7);
        org.junit.Assert.assertNotNull(channelHandlerArray14);
        org.junit.Assert.assertNotNull(channelHandlerArray21);
        org.junit.Assert.assertNotNull(channelHandlerArray25);
        org.junit.Assert.assertNotNull(channelHandlerArray30);
        org.junit.Assert.assertNotNull(channelHandlerArray32);
        org.junit.Assert.assertNotNull(channelHandlerArray38);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(exchangeHandlerDispatcher62);
    }

    @Test
    public void test311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test311");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer7 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        boolean boolean8 = dynamicChannelBuffer7.hasArray();
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory9 = dynamicChannelBuffer7.factory();
        int int10 = heapChannelBuffer3.compareTo((org.apache.dubbo.remoting.buffer.ChannelBuffer) dynamicChannelBuffer7);
        boolean boolean11 = dynamicChannelBuffer7.hasArray();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer14 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer16 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean17 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer14, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer16);
        int int18 = heapChannelBuffer14.readerIndex();
        heapChannelBuffer14.clear();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer21 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer23 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean24 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer21, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer23);
        heapChannelBuffer23.resetReaderIndex();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer28 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray29 = heapChannelBuffer28.array();
        byte[] byteArray34 = new byte[] { (byte) 1, (byte) 20, (byte) 70, (byte) 10 };
        heapChannelBuffer28.writeBytes(byteArray34);
        heapChannelBuffer23.setBytes(0, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer28, (int) (byte) 1, 10);
        heapChannelBuffer14.writeBytes((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer28, (int) ' ', (int) (short) 10);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer43 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer45 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean46 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer43, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer45);
        heapChannelBuffer45.resetReaderIndex();
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer49 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        boolean boolean50 = dynamicChannelBuffer49.hasArray();
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory51 = dynamicChannelBuffer49.factory();
        int int52 = heapChannelBuffer45.compareTo((org.apache.dubbo.remoting.buffer.ChannelBuffer) dynamicChannelBuffer49);
        boolean boolean53 = dynamicChannelBuffer49.hasArray();
        dynamicChannelBuffer49.writeByte((int) (byte) 40);
        byte[] byteArray56 = dynamicChannelBuffer49.array();
        heapChannelBuffer14.writeBytes(byteArray56);
        // The following exception was thrown during execution in test generation
        try {
            dynamicChannelBuffer7.setBytes((int) (short) 0, byteArray56, (int) (byte) 40, 8388608);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(channelBufferFactory9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[1, 20, 70, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[1, 20, 70, 10]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(channelBufferFactory51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[40]");
    }

    @Test
    public void test312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test312");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer8 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray9 = heapChannelBuffer8.array();
        byte[] byteArray14 = new byte[] { (byte) 1, (byte) 20, (byte) 70, (byte) 10 };
        heapChannelBuffer8.writeBytes(byteArray14);
        heapChannelBuffer3.setBytes(0, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer8, (int) (byte) 1, 10);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer20 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer22 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean23 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer20, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer22);
        heapChannelBuffer22.resetReaderIndex();
        heapChannelBuffer22.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream26 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer22);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer29 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer31 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean32 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer29, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer31);
        heapChannelBuffer31.resetReaderIndex();
        heapChannelBuffer31.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream35 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer31);
        int int37 = heapChannelBuffer22.setBytes((int) (byte) 10, (java.io.InputStream) channelBufferInputStream35, (int) (byte) 100);
        heapChannelBuffer8.writeBytes((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer22, (int) (byte) 0);
        java.nio.ByteBuffer byteBuffer40 = null;
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer8.readBytes(byteBuffer40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[1, 20, 70, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[1, 20, 70, 10]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
    }

    @Test
    public void test313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test313");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        boolean boolean5 = heapChannelBuffer1.writable();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer8 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer10 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean11 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer8, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer10);
        heapChannelBuffer10.resetReaderIndex();
        heapChannelBuffer10.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream14 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer10);
        int int16 = heapChannelBuffer1.setBytes(0, (java.io.InputStream) channelBufferInputStream14, (int) (byte) 40);
        java.lang.String str17 = heapChannelBuffer1.toString();
        heapChannelBuffer1.setByte(5, 100);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "HeapChannelBuffer(ridx=0, widx=0, cap=52)" + "'", str17, "HeapChannelBuffer(ridx=0, widx=0, cap=52)");
    }

    @Test
    public void test314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test314");
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher1 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher2 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.exchange.ExchangeServer exchangeServer3 = org.apache.dubbo.remoting.exchange.Exchangers.bind("telnet.log", (org.apache.dubbo.remoting.exchange.ExchangeHandler) exchangeHandlerDispatcher2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Failed to create adaptive instance: java.lang.IllegalStateException: Can't create adaptive extension interface org.apache.dubbo.remoting.Transporter, cause: Failed to compile class, cause: javassist/ClassPath, class: org.apache.dubbo.remoting.Transporter$Adaptive, code: ?package org.apache.dubbo.remoting;?import org.apache.dubbo.common.extension.ExtensionLoader;?public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {?public org.apache.dubbo.remoting.RemotingServer bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {?if (arg0 == null) throw new IllegalArgumentException(\"url == null\");?org.apache.dubbo.common.URL url = arg0;?String extName = url.getParameter(\"server\", url.getParameter(\"transporter\", \"netty\"));?if(extName == null) throw new IllegalStateException(\"Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (\" + url.toString() + \") use keys([server, transporter])\");?org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);?return extension.bind(arg0, arg1);?}?public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {?if (arg0 == null) throw new IllegalArgumentException(\"url == null\");?org.apache.dubbo.common.URL url = arg0;?String extName = url.getParameter(\"client\", url.getParameter(\"transporter\", \"netty\"));?if(extName == null) throw new IllegalStateException(\"Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (\" + url.toString() + \") use keys([client, transporter])\");?org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);?return extension.connect(arg0, arg1);?}?}?, stack: java.lang.NoClassDefFoundError: javassist/ClassPath??java.lang.NoClassDefFoundError: javassist/ClassPath??at org.apache.dubbo.common.compiler.support.JavassistCompiler.doCompile(JavassistCompiler.java:43)??at org.apache.dubbo.common.compiler.support.AbstractCompiler.compile(AbstractCompiler.java:58)??at org.apache.dubbo.common.compiler.support.AdaptiveCompiler.compile(AdaptiveCompiler.java:45)??at org.apache.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClass(ExtensionLoader.java:1039)??at org.apache.dubbo.common.extension.ExtensionLoader.getAdaptiveExtensionClass(ExtensionLoader.java:1032)??at org.apache.dubbo.common.extension.ExtensionLoader.createAdaptiveExtension(ExtensionLoader.java:1021)??at org.apache.dubbo.common.extension.ExtensionLoader.getAdaptiveExtension(ExtensionLoader.java:588)??at org.apache.dubbo.remoting.Transporters.getTransporter(Transporters.java:79)??at org.apache.dubbo.remoting.Transporters.connect(Transporters.java:75)??at org.apache.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:94)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:90)??at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)??at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)??at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)??at java.lang.reflect.Method.invoke(Method.java:498)??at randoop.util.MethodReflectionCode.runReflectionCodeRaw(MethodReflectionCode.java:53)??at randoop.util.ReflectionCode.runReflectionCode(ReflectionCode.java:59)??at randoop.util.RunnerThread.executeReflectionCode(RunnerThread.java:49)??at randoop.util.RunnerThread.run(RunnerThread.java:43)?Caused by: java.lang.ClassNotFoundException: javassist.ClassPath??at java.net.URLClassLoader.findClass(URLClassLoader.java:382)??at java.lang.ClassLoader.loadClass(ClassLoader.java:418)??at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:355)??at java.lang.ClassLoader.loadClass(ClassLoader.java:351)??... 21 more?");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
    }

    @Test
    public void test315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test315");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray2 = heapChannelBuffer1.array();
        byte[] byteArray7 = new byte[] { (byte) 1, (byte) 20, (byte) 70, (byte) 10 };
        heapChannelBuffer1.writeBytes(byteArray7);
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer10 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer12 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        heapChannelBuffer12.writeByte((int) (short) 10);
        byte[] byteArray15 = heapChannelBuffer12.array();
        dynamicChannelBuffer10.writeBytes(byteArray15);
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer17 = org.apache.dubbo.remoting.buffer.ChannelBuffers.wrappedBuffer(byteArray15);
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer1.readBytes(byteArray15);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[1, 20, 70, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1, 20, 70, 10]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(channelBuffer17);
    }

    @Test
    public void test316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test316");
        java.lang.String str0 = org.apache.dubbo.remoting.Constants.BIND_PORT_KEY;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "bind.port" + "'", str0, "bind.port");
    }

    @Test
    public void test317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test317");
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyDispatcher messageOnlyDispatcher0 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray1 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher2 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray1);
        org.apache.dubbo.common.URL uRL3 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler4 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher2, uRL3);
        org.apache.dubbo.remoting.ChannelHandler channelHandler5 = messageOnlyChannelHandler4.getHandler();
        org.apache.dubbo.common.URL uRL6 = null;
        org.apache.dubbo.remoting.ChannelHandler channelHandler7 = messageOnlyDispatcher0.dispatch(channelHandler5, uRL6);
        org.junit.Assert.assertNotNull(channelHandlerArray1);
        org.junit.Assert.assertNotNull(channelHandler5);
        org.junit.Assert.assertNotNull(channelHandler7);
    }

    @Test
    public void test318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test318");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) (byte) 0);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer5 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean6 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer5);
        int int7 = heapChannelBuffer3.readerIndex();
        heapChannelBuffer3.clear();
        boolean boolean9 = heapChannelBuffer3.writable();
        boolean boolean10 = heapChannelBuffer3.readable();
        int int11 = org.apache.dubbo.remoting.buffer.ChannelBuffers.compare((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        java.io.OutputStream outputStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer3.readBytes(outputStream12, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test319");
        org.apache.dubbo.remoting.transport.CodecSupport.checkSerialization("execution", "header", (java.lang.Byte) (byte) 100);
    }

    @Test
    public void test320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test320");
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher0 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher1 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher0);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher2 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher0);
    }

    @Test
    public void test321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test321");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray1 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher2 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray1);
        org.apache.dubbo.common.URL uRL3 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler4 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher2, uRL3);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate5 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate6 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray7 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher8 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray7);
        org.apache.dubbo.common.URL uRL9 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler10 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher8, uRL9);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState11 = null;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        org.apache.dubbo.remoting.RemotingException remotingException15 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress12, inetSocketAddress13, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable16 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate6, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler10, channelState11, (java.lang.Throwable) remotingException15);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher17 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState18 = null;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        org.apache.dubbo.remoting.ExecutionException executionException23 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress20, inetSocketAddress21, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable24 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate6, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher17, channelState18, (java.lang.Throwable) executionException23);
        channelDelegate5.setChannel((org.apache.dubbo.remoting.Channel) channelDelegate6);
        channelHandlerDispatcher2.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate5);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray27 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher28 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray27);
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher29 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher30 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher29);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher31 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray32 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher33 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray32);
        org.apache.dubbo.remoting.Channel channel34 = null;
        java.lang.Throwable throwable35 = null;
        channelHandlerDispatcher33.caught(channel34, throwable35);
        org.apache.dubbo.remoting.Channel channel37 = null;
        channelHandlerDispatcher33.disconnected(channel37);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray39 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher40 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray39);
        org.apache.dubbo.remoting.Channel channel41 = null;
        java.lang.Throwable throwable42 = null;
        channelHandlerDispatcher40.caught(channel41, throwable42);
        org.apache.dubbo.remoting.Channel channel44 = null;
        channelHandlerDispatcher40.disconnected(channel44);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray46 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher47 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray46);
        org.apache.dubbo.common.URL uRL48 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler49 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher47, uRL48);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray50 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher51 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray50);
        org.apache.dubbo.common.URL uRL52 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler53 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher51, uRL52);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler54 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler53);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray55 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher31, channelHandlerDispatcher33, channelHandlerDispatcher40, channelHandlerDispatcher47, decodeHandler54 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher56 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher30, channelHandlerArray55);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray57 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher58 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray57);
        org.apache.dubbo.common.URL uRL59 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler60 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher58, uRL59);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler61 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler60);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate62 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray63 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher64 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray63);
        org.apache.dubbo.common.URL uRL65 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler66 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher64, uRL65);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState67 = null;
        java.net.InetSocketAddress inetSocketAddress68 = null;
        java.net.InetSocketAddress inetSocketAddress69 = null;
        org.apache.dubbo.remoting.RemotingException remotingException71 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress68, inetSocketAddress69, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable72 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate62, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler66, channelState67, (java.lang.Throwable) remotingException71);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher73 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState74 = null;
        java.net.InetSocketAddress inetSocketAddress76 = null;
        java.net.InetSocketAddress inetSocketAddress77 = null;
        org.apache.dubbo.remoting.ExecutionException executionException79 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress76, inetSocketAddress77, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable80 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate62, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher73, channelState74, (java.lang.Throwable) executionException79);
        decodeHandler61.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate62);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate82 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj83 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate82);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate84 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate82);
        exchangeHandlerDispatcher56.sent((org.apache.dubbo.remoting.Channel) channelDelegate62, (java.lang.Object) serverDelegate84);
        channelHandlerDispatcher28.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate62);
        boolean boolean87 = org.apache.dubbo.remoting.exchange.support.DefaultFuture.hasFuture((org.apache.dubbo.remoting.Channel) channelDelegate62);
        java.net.InetSocketAddress inetSocketAddress89 = null;
        java.net.InetSocketAddress inetSocketAddress90 = null;
        org.apache.dubbo.remoting.ExecutionException executionException92 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress89, inetSocketAddress90, "hi!");
        java.net.InetSocketAddress inetSocketAddress93 = executionException92.getLocalAddress();
        channelHandlerDispatcher2.caught((org.apache.dubbo.remoting.Channel) channelDelegate62, (java.lang.Throwable) executionException92);
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher95 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher96 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher95);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.exchange.ExchangeClient exchangeClient97 = org.apache.dubbo.remoting.exchange.Exchangers.connect("", (org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher2, (org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: url == null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray1);
        org.junit.Assert.assertNotNull(channelHandlerArray7);
        org.junit.Assert.assertNotNull(channelHandlerArray27);
        org.junit.Assert.assertNotNull(channelHandlerArray32);
        org.junit.Assert.assertNotNull(channelHandlerArray39);
        org.junit.Assert.assertNotNull(channelHandlerArray46);
        org.junit.Assert.assertNotNull(channelHandlerArray50);
        org.junit.Assert.assertNotNull(channelHandlerArray55);
        org.junit.Assert.assertNotNull(channelHandlerArray57);
        org.junit.Assert.assertNotNull(channelHandlerArray63);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(inetSocketAddress93);
    }

    @Test
    public void test322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test322");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        heapChannelBuffer1.writeByte((int) (short) 10);
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer5 = org.apache.dubbo.remoting.buffer.ChannelBuffers.buffer((int) (short) 10);
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream6 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream(channelBuffer5);
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer1.writeBytes(channelBuffer5, (int) (byte) 80, (-52));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelBuffer5);
    }

    @Test
    public void test323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test323");
        org.apache.dubbo.remoting.Channel channel0 = null;
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray1 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher2 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray1);
        org.apache.dubbo.common.URL uRL3 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler4 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher2, uRL3);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState5 = null;
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable7 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable(channel0, (org.apache.dubbo.remoting.ChannelHandler) messageOnlyChannelHandler4, channelState5, (java.lang.Object) (short) 1);
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher8 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher9 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher8);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher10 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray11 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher12 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray11);
        org.apache.dubbo.remoting.Channel channel13 = null;
        java.lang.Throwable throwable14 = null;
        channelHandlerDispatcher12.caught(channel13, throwable14);
        org.apache.dubbo.remoting.Channel channel16 = null;
        channelHandlerDispatcher12.disconnected(channel16);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray18 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher19 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray18);
        org.apache.dubbo.remoting.Channel channel20 = null;
        java.lang.Throwable throwable21 = null;
        channelHandlerDispatcher19.caught(channel20, throwable21);
        org.apache.dubbo.remoting.Channel channel23 = null;
        channelHandlerDispatcher19.disconnected(channel23);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray25 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher26 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray25);
        org.apache.dubbo.common.URL uRL27 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler28 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher26, uRL27);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray29 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher30 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray29);
        org.apache.dubbo.common.URL uRL31 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler32 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher30, uRL31);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler33 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler32);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray34 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher10, channelHandlerDispatcher12, channelHandlerDispatcher19, channelHandlerDispatcher26, decodeHandler33 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher35 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher9, channelHandlerArray34);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray36 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher37 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray36);
        org.apache.dubbo.common.URL uRL38 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler39 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher37, uRL38);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler40 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler39);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate41 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray42 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher43 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray42);
        org.apache.dubbo.common.URL uRL44 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler45 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher43, uRL44);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState46 = null;
        java.net.InetSocketAddress inetSocketAddress47 = null;
        java.net.InetSocketAddress inetSocketAddress48 = null;
        org.apache.dubbo.remoting.RemotingException remotingException50 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress47, inetSocketAddress48, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable51 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate41, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler45, channelState46, (java.lang.Throwable) remotingException50);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher52 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState53 = null;
        java.net.InetSocketAddress inetSocketAddress55 = null;
        java.net.InetSocketAddress inetSocketAddress56 = null;
        org.apache.dubbo.remoting.ExecutionException executionException58 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress55, inetSocketAddress56, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable59 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate41, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher52, channelState53, (java.lang.Throwable) executionException58);
        decodeHandler40.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate41);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate61 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj62 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate61);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate63 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate61);
        exchangeHandlerDispatcher35.sent((org.apache.dubbo.remoting.Channel) channelDelegate41, (java.lang.Object) serverDelegate63);
        messageOnlyChannelHandler4.connected((org.apache.dubbo.remoting.Channel) channelDelegate41);
        messageOnlyChannelHandler4.close();
        org.junit.Assert.assertNotNull(channelHandlerArray1);
        org.junit.Assert.assertNotNull(channelHandlerArray11);
        org.junit.Assert.assertNotNull(channelHandlerArray18);
        org.junit.Assert.assertNotNull(channelHandlerArray25);
        org.junit.Assert.assertNotNull(channelHandlerArray29);
        org.junit.Assert.assertNotNull(channelHandlerArray34);
        org.junit.Assert.assertNotNull(channelHandlerArray36);
        org.junit.Assert.assertNotNull(channelHandlerArray42);
        org.junit.Assert.assertNotNull(obj62);
    }

    @Test
    public void test324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test324");
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate0 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray1 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher2 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray1);
        org.apache.dubbo.common.URL uRL3 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler4 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher2, uRL3);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState5 = null;
        java.net.InetSocketAddress inetSocketAddress6 = null;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        org.apache.dubbo.remoting.RemotingException remotingException9 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress6, inetSocketAddress7, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable10 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate0, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler4, channelState5, (java.lang.Throwable) remotingException9);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher11 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState12 = null;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        org.apache.dubbo.remoting.ExecutionException executionException17 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress14, inetSocketAddress15, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable18 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate0, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher11, channelState12, (java.lang.Throwable) executionException17);
        org.apache.dubbo.remoting.transport.MultiMessageHandler multiMessageHandler19 = new org.apache.dubbo.remoting.transport.MultiMessageHandler((org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher11);
        org.junit.Assert.assertNotNull(channelHandlerArray1);
    }

    @Test
    public void test325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test325");
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher1 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher2 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher1);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher3 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray4 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher5 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray4);
        org.apache.dubbo.remoting.Channel channel6 = null;
        java.lang.Throwable throwable7 = null;
        channelHandlerDispatcher5.caught(channel6, throwable7);
        org.apache.dubbo.remoting.Channel channel9 = null;
        channelHandlerDispatcher5.disconnected(channel9);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray11 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher12 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray11);
        org.apache.dubbo.remoting.Channel channel13 = null;
        java.lang.Throwable throwable14 = null;
        channelHandlerDispatcher12.caught(channel13, throwable14);
        org.apache.dubbo.remoting.Channel channel16 = null;
        channelHandlerDispatcher12.disconnected(channel16);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray18 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher19 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray18);
        org.apache.dubbo.common.URL uRL20 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler21 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher19, uRL20);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray22 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher23 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray22);
        org.apache.dubbo.common.URL uRL24 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler25 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher23, uRL24);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler26 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler25);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray27 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher3, channelHandlerDispatcher5, channelHandlerDispatcher12, channelHandlerDispatcher19, decodeHandler26 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher28 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher2, channelHandlerArray27);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher29 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher2);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray30 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher31 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray30);
        org.apache.dubbo.common.URL uRL32 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler33 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher31, uRL32);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler34 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler33);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate35 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        decodeHandler34.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate35);
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer38 = org.apache.dubbo.remoting.buffer.ChannelBuffers.directBuffer((int) (short) 10);
        exchangeHandlerDispatcher29.sent((org.apache.dubbo.remoting.Channel) channelDelegate35, (java.lang.Object) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.exchange.ExchangeClient exchangeClient40 = org.apache.dubbo.remoting.exchange.Exchangers.connect("Unsupported parameter dispacther for status.", (org.apache.dubbo.remoting.exchange.ExchangeHandler) exchangeHandlerDispatcher29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Failed to create adaptive instance: java.lang.IllegalStateException: Can't create adaptive extension interface org.apache.dubbo.remoting.Transporter, cause: Failed to compile class, cause: javassist/ClassPath, class: org.apache.dubbo.remoting.Transporter$Adaptive, code: ?package org.apache.dubbo.remoting;?import org.apache.dubbo.common.extension.ExtensionLoader;?public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {?public org.apache.dubbo.remoting.RemotingServer bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {?if (arg0 == null) throw new IllegalArgumentException(\"url == null\");?org.apache.dubbo.common.URL url = arg0;?String extName = url.getParameter(\"server\", url.getParameter(\"transporter\", \"netty\"));?if(extName == null) throw new IllegalStateException(\"Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (\" + url.toString() + \") use keys([server, transporter])\");?org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);?return extension.bind(arg0, arg1);?}?public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {?if (arg0 == null) throw new IllegalArgumentException(\"url == null\");?org.apache.dubbo.common.URL url = arg0;?String extName = url.getParameter(\"client\", url.getParameter(\"transporter\", \"netty\"));?if(extName == null) throw new IllegalStateException(\"Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (\" + url.toString() + \") use keys([client, transporter])\");?org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);?return extension.connect(arg0, arg1);?}?}?, stack: java.lang.NoClassDefFoundError: javassist/ClassPath??java.lang.NoClassDefFoundError: javassist/ClassPath??at org.apache.dubbo.common.compiler.support.JavassistCompiler.doCompile(JavassistCompiler.java:43)??at org.apache.dubbo.common.compiler.support.AbstractCompiler.compile(AbstractCompiler.java:58)??at org.apache.dubbo.common.compiler.support.AdaptiveCompiler.compile(AdaptiveCompiler.java:45)??at org.apache.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClass(ExtensionLoader.java:1039)??at org.apache.dubbo.common.extension.ExtensionLoader.getAdaptiveExtensionClass(ExtensionLoader.java:1032)??at org.apache.dubbo.common.extension.ExtensionLoader.createAdaptiveExtension(ExtensionLoader.java:1021)??at org.apache.dubbo.common.extension.ExtensionLoader.getAdaptiveExtension(ExtensionLoader.java:588)??at org.apache.dubbo.remoting.Transporters.getTransporter(Transporters.java:79)??at org.apache.dubbo.remoting.Transporters.connect(Transporters.java:75)??at org.apache.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:94)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:90)??at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)??at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)??at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)??at java.lang.reflect.Method.invoke(Method.java:498)??at randoop.util.MethodReflectionCode.runReflectionCodeRaw(MethodReflectionCode.java:53)??at randoop.util.ReflectionCode.runReflectionCode(ReflectionCode.java:59)??at randoop.util.RunnerThread.executeReflectionCode(RunnerThread.java:49)??at randoop.util.RunnerThread.run(RunnerThread.java:43)?Caused by: java.lang.ClassNotFoundException: javassist.ClassPath??at java.net.URLClassLoader.findClass(URLClassLoader.java:382)??at java.lang.ClassLoader.loadClass(ClassLoader.java:418)??at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:355)??at java.lang.ClassLoader.loadClass(ClassLoader.java:351)??... 21 more?");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray4);
        org.junit.Assert.assertNotNull(channelHandlerArray11);
        org.junit.Assert.assertNotNull(channelHandlerArray18);
        org.junit.Assert.assertNotNull(channelHandlerArray22);
        org.junit.Assert.assertNotNull(channelHandlerArray27);
        org.junit.Assert.assertNotNull(channelHandlerArray30);
        org.junit.Assert.assertNotNull(channelBuffer38);
    }

    @Test
    public void test326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test326");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.common.URL uRL2 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler3 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher1, uRL2);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray4 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher5 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray4);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray6 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher7 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray6);
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher8 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher9 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher8);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher10 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray11 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher12 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray11);
        org.apache.dubbo.remoting.Channel channel13 = null;
        java.lang.Throwable throwable14 = null;
        channelHandlerDispatcher12.caught(channel13, throwable14);
        org.apache.dubbo.remoting.Channel channel16 = null;
        channelHandlerDispatcher12.disconnected(channel16);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray18 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher19 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray18);
        org.apache.dubbo.remoting.Channel channel20 = null;
        java.lang.Throwable throwable21 = null;
        channelHandlerDispatcher19.caught(channel20, throwable21);
        org.apache.dubbo.remoting.Channel channel23 = null;
        channelHandlerDispatcher19.disconnected(channel23);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray25 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher26 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray25);
        org.apache.dubbo.common.URL uRL27 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler28 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher26, uRL27);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray29 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher30 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray29);
        org.apache.dubbo.common.URL uRL31 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler32 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher30, uRL31);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler33 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler32);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray34 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher10, channelHandlerDispatcher12, channelHandlerDispatcher19, channelHandlerDispatcher26, decodeHandler33 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher35 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher9, channelHandlerArray34);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray36 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher37 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray36);
        org.apache.dubbo.common.URL uRL38 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler39 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher37, uRL38);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler40 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler39);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate41 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray42 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher43 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray42);
        org.apache.dubbo.common.URL uRL44 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler45 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher43, uRL44);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState46 = null;
        java.net.InetSocketAddress inetSocketAddress47 = null;
        java.net.InetSocketAddress inetSocketAddress48 = null;
        org.apache.dubbo.remoting.RemotingException remotingException50 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress47, inetSocketAddress48, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable51 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate41, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler45, channelState46, (java.lang.Throwable) remotingException50);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher52 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState53 = null;
        java.net.InetSocketAddress inetSocketAddress55 = null;
        java.net.InetSocketAddress inetSocketAddress56 = null;
        org.apache.dubbo.remoting.ExecutionException executionException58 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress55, inetSocketAddress56, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable59 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate41, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher52, channelState53, (java.lang.Throwable) executionException58);
        decodeHandler40.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate41);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate61 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj62 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate61);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate63 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate61);
        exchangeHandlerDispatcher35.sent((org.apache.dubbo.remoting.Channel) channelDelegate41, (java.lang.Object) serverDelegate63);
        channelHandlerDispatcher7.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate41);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray66 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher67 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray66);
        org.apache.dubbo.common.URL uRL68 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler69 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher67, uRL68);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher70 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher71 = channelHandlerDispatcher67.removeChannelHandler((org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher70);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState72 = org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState.RECEIVED;
        java.lang.Object obj73 = null;
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory74 = org.apache.dubbo.remoting.buffer.HeapChannelBufferFactory.getInstance();
        java.net.InetSocketAddress inetSocketAddress75 = null;
        java.net.InetSocketAddress inetSocketAddress76 = null;
        java.net.InetSocketAddress inetSocketAddress78 = null;
        java.net.InetSocketAddress inetSocketAddress79 = null;
        org.apache.dubbo.remoting.ExecutionException executionException81 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress78, inetSocketAddress79, "hi!");
        org.apache.dubbo.remoting.ExecutionException executionException82 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) channelBufferFactory74, inetSocketAddress75, inetSocketAddress76, (java.lang.Throwable) executionException81);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable83 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate41, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher70, channelState72, obj73, (java.lang.Throwable) executionException82);
        org.apache.dubbo.remoting.Channel channel84 = channelDelegate41.getChannel();
        org.apache.dubbo.remoting.exchange.Request request85 = new org.apache.dubbo.remoting.exchange.Request();
        boolean boolean86 = request85.isTwoWay();
        long long87 = request85.getId();
        channelHandlerDispatcher5.received(channel84, (java.lang.Object) long87);
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher89 = channelHandlerDispatcher1.addChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher5);
        org.junit.Assert.assertNotNull(channelHandlerArray0);
        org.junit.Assert.assertNotNull(channelHandlerArray4);
        org.junit.Assert.assertNotNull(channelHandlerArray6);
        org.junit.Assert.assertNotNull(channelHandlerArray11);
        org.junit.Assert.assertNotNull(channelHandlerArray18);
        org.junit.Assert.assertNotNull(channelHandlerArray25);
        org.junit.Assert.assertNotNull(channelHandlerArray29);
        org.junit.Assert.assertNotNull(channelHandlerArray34);
        org.junit.Assert.assertNotNull(channelHandlerArray36);
        org.junit.Assert.assertNotNull(channelHandlerArray42);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNotNull(channelHandlerArray66);
        org.junit.Assert.assertNotNull(channelHandlerDispatcher71);
        org.junit.Assert.assertTrue("'" + channelState72 + "' != '" + org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState.RECEIVED + "'", channelState72.equals(org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState.RECEIVED));
        org.junit.Assert.assertNotNull(channelBufferFactory74);
        org.junit.Assert.assertNull(channel84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
// flaky:         org.junit.Assert.assertTrue("'" + long87 + "' != '" + 5L + "'", long87 == 5L);
        org.junit.Assert.assertNotNull(channelHandlerDispatcher89);
    }

    @Test
    public void test327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test327");
        org.apache.dubbo.remoting.exchange.Request request0 = new org.apache.dubbo.remoting.exchange.Request();
        request0.setTwoWay(false);
        request0.setHeartbeat(true);
    }

    @Test
    public void test328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test328");
        int int0 = org.apache.dubbo.remoting.Constants.DEFAULT_HEARTBEAT;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 60000 + "'", int0 == 60000);
    }

    @Test
    public void test329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test329");
        org.apache.dubbo.remoting.buffer.HeapChannelBufferFactory heapChannelBufferFactory0 = new org.apache.dubbo.remoting.buffer.HeapChannelBufferFactory();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer2 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer4 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean5 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer2, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer4);
        heapChannelBuffer4.resetReaderIndex();
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer8 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        boolean boolean9 = dynamicChannelBuffer8.hasArray();
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory10 = dynamicChannelBuffer8.factory();
        int int11 = heapChannelBuffer4.compareTo((org.apache.dubbo.remoting.buffer.ChannelBuffer) dynamicChannelBuffer8);
        boolean boolean12 = dynamicChannelBuffer8.hasArray();
        dynamicChannelBuffer8.writeByte((int) (byte) 40);
        byte[] byteArray15 = dynamicChannelBuffer8.array();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer18 = heapChannelBufferFactory0.getBuffer(byteArray15, 10, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(channelBufferFactory10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[40]");
    }

    @Test
    public void test330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test330");
        org.apache.dubbo.remoting.exchange.support.DefaultFuture defaultFuture1 = org.apache.dubbo.remoting.exchange.support.DefaultFuture.getFuture((long) (byte) 100);
        org.junit.Assert.assertNull(defaultFuture1);
    }

    @Test
    public void test331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test331");
        org.apache.dubbo.remoting.exchange.Request request0 = new org.apache.dubbo.remoting.exchange.Request();
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory1 = org.apache.dubbo.remoting.buffer.HeapChannelBufferFactory.getInstance();
        java.net.InetSocketAddress inetSocketAddress2 = null;
        java.net.InetSocketAddress inetSocketAddress3 = null;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        java.net.InetSocketAddress inetSocketAddress6 = null;
        org.apache.dubbo.remoting.ExecutionException executionException8 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress5, inetSocketAddress6, "hi!");
        org.apache.dubbo.remoting.ExecutionException executionException9 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) channelBufferFactory1, inetSocketAddress2, inetSocketAddress3, (java.lang.Throwable) executionException8);
        request0.setData((java.lang.Object) executionException8);
        org.junit.Assert.assertNotNull(channelBufferFactory1);
    }

    @Test
    public void test332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test332");
        org.apache.dubbo.remoting.Channel channel0 = null;
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray1 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher2 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray1);
        org.apache.dubbo.common.URL uRL3 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler4 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher2, uRL3);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState5 = null;
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable7 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable(channel0, (org.apache.dubbo.remoting.ChannelHandler) messageOnlyChannelHandler4, channelState5, (java.lang.Object) (short) 1);
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher8 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher9 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher8);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher10 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray11 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher12 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray11);
        org.apache.dubbo.remoting.Channel channel13 = null;
        java.lang.Throwable throwable14 = null;
        channelHandlerDispatcher12.caught(channel13, throwable14);
        org.apache.dubbo.remoting.Channel channel16 = null;
        channelHandlerDispatcher12.disconnected(channel16);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray18 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher19 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray18);
        org.apache.dubbo.remoting.Channel channel20 = null;
        java.lang.Throwable throwable21 = null;
        channelHandlerDispatcher19.caught(channel20, throwable21);
        org.apache.dubbo.remoting.Channel channel23 = null;
        channelHandlerDispatcher19.disconnected(channel23);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray25 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher26 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray25);
        org.apache.dubbo.common.URL uRL27 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler28 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher26, uRL27);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray29 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher30 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray29);
        org.apache.dubbo.common.URL uRL31 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler32 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher30, uRL31);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler33 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler32);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray34 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher10, channelHandlerDispatcher12, channelHandlerDispatcher19, channelHandlerDispatcher26, decodeHandler33 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher35 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher9, channelHandlerArray34);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray36 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher37 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray36);
        org.apache.dubbo.common.URL uRL38 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler39 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher37, uRL38);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler40 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler39);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate41 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray42 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher43 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray42);
        org.apache.dubbo.common.URL uRL44 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler45 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher43, uRL44);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState46 = null;
        java.net.InetSocketAddress inetSocketAddress47 = null;
        java.net.InetSocketAddress inetSocketAddress48 = null;
        org.apache.dubbo.remoting.RemotingException remotingException50 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress47, inetSocketAddress48, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable51 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate41, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler45, channelState46, (java.lang.Throwable) remotingException50);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher52 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState53 = null;
        java.net.InetSocketAddress inetSocketAddress55 = null;
        java.net.InetSocketAddress inetSocketAddress56 = null;
        org.apache.dubbo.remoting.ExecutionException executionException58 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress55, inetSocketAddress56, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable59 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate41, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher52, channelState53, (java.lang.Throwable) executionException58);
        decodeHandler40.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate41);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate61 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj62 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate61);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate63 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate61);
        exchangeHandlerDispatcher35.sent((org.apache.dubbo.remoting.Channel) channelDelegate41, (java.lang.Object) serverDelegate63);
        messageOnlyChannelHandler4.connected((org.apache.dubbo.remoting.Channel) channelDelegate41);
        org.apache.dubbo.remoting.Channel channel66 = channelDelegate41.getChannel();
        java.util.concurrent.CompletableFuture[] completableFutureArray69 = new java.util.concurrent.CompletableFuture[0];
        @SuppressWarnings("unchecked")
        java.util.concurrent.CompletableFuture<?>[] wildcardCompletableFutureArray70 = (java.util.concurrent.CompletableFuture<?>[]) completableFutureArray69;
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture71 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray69);
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture72 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray69);
        org.apache.dubbo.remoting.exchange.support.MultiMessage multiMessage73 = org.apache.dubbo.remoting.exchange.support.MultiMessage.createFromArray((java.lang.Object[]) completableFutureArray69);
        int int74 = multiMessage73.size();
        // The following exception was thrown during execution in test generation
        try {
            channelDelegate41.setAttribute("bind.ip", (java.lang.Object) int74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray1);
        org.junit.Assert.assertNotNull(channelHandlerArray11);
        org.junit.Assert.assertNotNull(channelHandlerArray18);
        org.junit.Assert.assertNotNull(channelHandlerArray25);
        org.junit.Assert.assertNotNull(channelHandlerArray29);
        org.junit.Assert.assertNotNull(channelHandlerArray34);
        org.junit.Assert.assertNotNull(channelHandlerArray36);
        org.junit.Assert.assertNotNull(channelHandlerArray42);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNull(channel66);
        org.junit.Assert.assertNotNull(completableFutureArray69);
        org.junit.Assert.assertNotNull(wildcardCompletableFutureArray70);
        org.junit.Assert.assertNotNull(objCompletableFuture71);
        org.junit.Assert.assertNotNull(objCompletableFuture72);
        org.junit.Assert.assertNotNull(multiMessage73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
    }

    @Test
    public void test333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test333");
        org.apache.dubbo.remoting.buffer.HeapChannelBufferFactory heapChannelBufferFactory0 = new org.apache.dubbo.remoting.buffer.HeapChannelBufferFactory();
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer2 = heapChannelBufferFactory0.getBuffer(3);
        org.junit.Assert.assertNotNull(channelBuffer2);
    }

    @Test
    public void test334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test334");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        int int5 = heapChannelBuffer1.readerIndex();
        heapChannelBuffer1.clear();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer8 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer10 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean11 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer8, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer10);
        heapChannelBuffer10.resetReaderIndex();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer15 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray16 = heapChannelBuffer15.array();
        byte[] byteArray21 = new byte[] { (byte) 1, (byte) 20, (byte) 70, (byte) 10 };
        heapChannelBuffer15.writeBytes(byteArray21);
        heapChannelBuffer10.setBytes(0, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer15, (int) (byte) 1, 10);
        heapChannelBuffer1.writeBytes((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer15, (int) ' ', (int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            java.nio.ByteBuffer byteBuffer31 = heapChannelBuffer15.toByteBuffer((-1), (int) (byte) 40);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[1, 20, 70, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[1, 20, 70, 10]");
    }

    @Test
    public void test335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test335");
        int int0 = org.apache.dubbo.remoting.Constants.DEFAULT_ACCEPTS;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 0 + "'", int0 == 0);
    }

    @Test
    public void test336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test336");
        org.apache.dubbo.common.URL uRL0 = null;
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray1 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher2 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.RemotingServer remotingServer3 = org.apache.dubbo.remoting.Transporters.bind(uRL0, channelHandlerArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: url == null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray1);
    }

    @Test
    public void test337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test337");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer8 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray9 = heapChannelBuffer8.array();
        byte[] byteArray14 = new byte[] { (byte) 1, (byte) 20, (byte) 70, (byte) 10 };
        heapChannelBuffer8.writeBytes(byteArray14);
        heapChannelBuffer3.setBytes(0, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer8, (int) (byte) 1, 10);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer20 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray21 = heapChannelBuffer20.array();
        byte[] byteArray22 = heapChannelBuffer20.array();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer23 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer(byteArray22);
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer8.writeBytes(byteArray22, (int) (short) 10, (int) (byte) 80);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[1, 20, 70, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[1, 20, 70, 10]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test338");
        org.apache.dubbo.remoting.exchange.Response response2 = new org.apache.dubbo.remoting.exchange.Response((long) (byte) 1, "");
        java.lang.String str3 = response2.getVersion();
        java.lang.Object obj4 = null;
        response2.setResult(obj4);
        response2.setHeartbeat(false);
        response2.setEvent(true);
        long long10 = response2.getId();
        java.lang.String str11 = response2.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Response [id=1, version=, status=20, event=true, error=null, result=null]" + "'", str11, "Response [id=1, version=, status=20, event=true, error=null, result=null]");
    }

    @Test
    public void test339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test339");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        heapChannelBuffer3.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream7 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        int int8 = channelBufferInputStream7.readBytes();
        boolean boolean9 = channelBufferInputStream7.markSupported();
        int int10 = channelBufferInputStream7.readBytes();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test340");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        heapChannelBuffer3.discardReadBytes();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer9 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer11 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean12 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer9, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer11);
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer13 = heapChannelBuffer9.copy();
        heapChannelBuffer3.setBytes((int) (byte) 0, channelBuffer13);
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer15 = heapChannelBuffer3.copy();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(channelBuffer13);
        org.junit.Assert.assertNotNull(channelBuffer15);
    }

    @Test
    public void test341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test341");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        boolean boolean5 = heapChannelBuffer1.writable();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer8 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer10 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean11 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer8, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer10);
        heapChannelBuffer10.resetReaderIndex();
        heapChannelBuffer10.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream14 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer10);
        int int16 = heapChannelBuffer1.setBytes(0, (java.io.InputStream) channelBufferInputStream14, (int) (byte) 40);
        java.lang.String str17 = heapChannelBuffer1.toString();
        int int18 = heapChannelBuffer1.writableBytes();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "HeapChannelBuffer(ridx=0, widx=0, cap=52)" + "'", str17, "HeapChannelBuffer(ridx=0, widx=0, cap=52)");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
    }

    @Test
    public void test342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test342");
        org.apache.dubbo.remoting.exchange.Response response2 = new org.apache.dubbo.remoting.exchange.Response((long) (byte) 1, "");
        java.lang.String str3 = response2.getVersion();
        java.lang.Object obj4 = null;
        response2.setResult(obj4);
        response2.setHeartbeat(false);
        response2.setStatus((byte) 80);
        boolean boolean10 = response2.isHeartbeat();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test343");
        java.lang.String[] strArray1 = new java.lang.String[] { "UTF-8" };
        java.util.ArrayList<java.util.List<java.lang.String>> strListList2 = new java.util.ArrayList<java.util.List<java.lang.String>>();
        java.lang.String str3 = org.apache.dubbo.remoting.telnet.support.TelnetUtils.toTable(strArray1, (java.util.List<java.util.List<java.lang.String>>) strListList2);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "+-------+\r\n| UTF-8 |\r\n+-------+\r\n+-------+\r\n" + "'", str3, "+-------+\r\n| UTF-8 |\r\n+-------+\r\n+-------+\r\n");
    }

    @Test
    public void test344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test344");
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory1 = org.apache.dubbo.remoting.buffer.DirectChannelBufferFactory.getInstance();
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer2 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 60, channelBufferFactory1);
        dynamicChannelBuffer2.discardReadBytes();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer5 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        heapChannelBuffer5.writeByte((int) (short) 10);
        byte[] byteArray8 = heapChannelBuffer5.array();
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer10 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer12 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer14 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean15 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer12, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer14);
        heapChannelBuffer14.resetReaderIndex();
        heapChannelBuffer14.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream18 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer14);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer21 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer23 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean24 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer21, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer23);
        heapChannelBuffer23.resetReaderIndex();
        heapChannelBuffer23.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream27 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer23);
        int int29 = heapChannelBuffer14.setBytes((int) (byte) 10, (java.io.InputStream) channelBufferInputStream27, (int) (byte) 100);
        int int31 = dynamicChannelBuffer10.writeBytes((java.io.InputStream) channelBufferInputStream27, 0);
        int int33 = heapChannelBuffer5.writeBytes((java.io.InputStream) channelBufferInputStream27, 0);
        dynamicChannelBuffer2.writeBytes((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer5);
        dynamicChannelBuffer2.writeByte((-52));
        org.junit.Assert.assertNotNull(channelBufferFactory1);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
    }

    @Test
    public void test345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test345");
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher1 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray2 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher3 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray2);
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher4 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher5 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher4);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher6 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray7 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher8 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray7);
        org.apache.dubbo.remoting.Channel channel9 = null;
        java.lang.Throwable throwable10 = null;
        channelHandlerDispatcher8.caught(channel9, throwable10);
        org.apache.dubbo.remoting.Channel channel12 = null;
        channelHandlerDispatcher8.disconnected(channel12);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray14 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher15 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray14);
        org.apache.dubbo.remoting.Channel channel16 = null;
        java.lang.Throwable throwable17 = null;
        channelHandlerDispatcher15.caught(channel16, throwable17);
        org.apache.dubbo.remoting.Channel channel19 = null;
        channelHandlerDispatcher15.disconnected(channel19);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray21 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher22 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray21);
        org.apache.dubbo.common.URL uRL23 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler24 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher22, uRL23);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray25 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher26 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray25);
        org.apache.dubbo.common.URL uRL27 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler28 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher26, uRL27);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler29 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler28);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray30 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher6, channelHandlerDispatcher8, channelHandlerDispatcher15, channelHandlerDispatcher22, decodeHandler29 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher31 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher5, channelHandlerArray30);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray32 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher33 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray32);
        org.apache.dubbo.common.URL uRL34 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler35 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher33, uRL34);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler36 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler35);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate37 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray38 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher39 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray38);
        org.apache.dubbo.common.URL uRL40 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler41 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher39, uRL40);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState42 = null;
        java.net.InetSocketAddress inetSocketAddress43 = null;
        java.net.InetSocketAddress inetSocketAddress44 = null;
        org.apache.dubbo.remoting.RemotingException remotingException46 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress43, inetSocketAddress44, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable47 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate37, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler41, channelState42, (java.lang.Throwable) remotingException46);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher48 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState49 = null;
        java.net.InetSocketAddress inetSocketAddress51 = null;
        java.net.InetSocketAddress inetSocketAddress52 = null;
        org.apache.dubbo.remoting.ExecutionException executionException54 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress51, inetSocketAddress52, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable55 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate37, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher48, channelState49, (java.lang.Throwable) executionException54);
        decodeHandler36.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate37);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate57 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj58 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate57);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate59 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate57);
        exchangeHandlerDispatcher31.sent((org.apache.dubbo.remoting.Channel) channelDelegate37, (java.lang.Object) serverDelegate59);
        channelHandlerDispatcher3.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate37);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher62 = exchangeHandlerDispatcher1.addChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher3);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray63 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher64 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray63);
        org.apache.dubbo.common.URL uRL65 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler66 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher64, uRL65);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler67 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler66);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate68 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        decodeHandler67.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate68);
        java.util.concurrent.CompletableFuture[] completableFutureArray71 = new java.util.concurrent.CompletableFuture[0];
        @SuppressWarnings("unchecked")
        java.util.concurrent.CompletableFuture<?>[] wildcardCompletableFutureArray72 = (java.util.concurrent.CompletableFuture<?>[]) completableFutureArray71;
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture73 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray71);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate74 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray75 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher76 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray75);
        org.apache.dubbo.common.URL uRL77 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler78 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher76, uRL77);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState79 = null;
        java.net.InetSocketAddress inetSocketAddress80 = null;
        java.net.InetSocketAddress inetSocketAddress81 = null;
        org.apache.dubbo.remoting.RemotingException remotingException83 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress80, inetSocketAddress81, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable84 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate74, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler78, channelState79, (java.lang.Throwable) remotingException83);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher85 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState86 = null;
        java.net.InetSocketAddress inetSocketAddress88 = null;
        java.net.InetSocketAddress inetSocketAddress89 = null;
        org.apache.dubbo.remoting.ExecutionException executionException91 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress88, inetSocketAddress89, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable92 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate74, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher85, channelState86, (java.lang.Throwable) executionException91);
        java.util.concurrent.CompletableFuture<java.lang.Void> voidCompletableFuture93 = objCompletableFuture73.thenRunAsync((java.lang.Runnable) channelEventRunnable92);
        channelHandlerDispatcher3.received((org.apache.dubbo.remoting.Channel) channelDelegate68, (java.lang.Object) channelEventRunnable92);
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher95 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.exchange.ExchangeServer exchangeServer96 = org.apache.dubbo.remoting.exchange.Exchangers.bind("netty", (org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher3, (org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Failed to create adaptive instance: java.lang.IllegalStateException: Can't create adaptive extension interface org.apache.dubbo.remoting.Transporter, cause: Failed to compile class, cause: javassist/ClassPath, class: org.apache.dubbo.remoting.Transporter$Adaptive, code: ?package org.apache.dubbo.remoting;?import org.apache.dubbo.common.extension.ExtensionLoader;?public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {?public org.apache.dubbo.remoting.RemotingServer bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {?if (arg0 == null) throw new IllegalArgumentException(\"url == null\");?org.apache.dubbo.common.URL url = arg0;?String extName = url.getParameter(\"server\", url.getParameter(\"transporter\", \"netty\"));?if(extName == null) throw new IllegalStateException(\"Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (\" + url.toString() + \") use keys([server, transporter])\");?org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);?return extension.bind(arg0, arg1);?}?public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {?if (arg0 == null) throw new IllegalArgumentException(\"url == null\");?org.apache.dubbo.common.URL url = arg0;?String extName = url.getParameter(\"client\", url.getParameter(\"transporter\", \"netty\"));?if(extName == null) throw new IllegalStateException(\"Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (\" + url.toString() + \") use keys([client, transporter])\");?org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);?return extension.connect(arg0, arg1);?}?}?, stack: java.lang.NoClassDefFoundError: javassist/ClassPath??java.lang.NoClassDefFoundError: javassist/ClassPath??at org.apache.dubbo.common.compiler.support.JavassistCompiler.doCompile(JavassistCompiler.java:43)??at org.apache.dubbo.common.compiler.support.AbstractCompiler.compile(AbstractCompiler.java:58)??at org.apache.dubbo.common.compiler.support.AdaptiveCompiler.compile(AdaptiveCompiler.java:45)??at org.apache.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClass(ExtensionLoader.java:1039)??at org.apache.dubbo.common.extension.ExtensionLoader.getAdaptiveExtensionClass(ExtensionLoader.java:1032)??at org.apache.dubbo.common.extension.ExtensionLoader.createAdaptiveExtension(ExtensionLoader.java:1021)??at org.apache.dubbo.common.extension.ExtensionLoader.getAdaptiveExtension(ExtensionLoader.java:588)??at org.apache.dubbo.remoting.Transporters.getTransporter(Transporters.java:79)??at org.apache.dubbo.remoting.Transporters.connect(Transporters.java:75)??at org.apache.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:94)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:90)??at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)??at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)??at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)??at java.lang.reflect.Method.invoke(Method.java:498)??at randoop.util.MethodReflectionCode.runReflectionCodeRaw(MethodReflectionCode.java:53)??at randoop.util.ReflectionCode.runReflectionCode(ReflectionCode.java:59)??at randoop.util.RunnerThread.executeReflectionCode(RunnerThread.java:49)??at randoop.util.RunnerThread.run(RunnerThread.java:43)?Caused by: java.lang.ClassNotFoundException: javassist.ClassPath??at java.net.URLClassLoader.findClass(URLClassLoader.java:382)??at java.lang.ClassLoader.loadClass(ClassLoader.java:418)??at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:355)??at java.lang.ClassLoader.loadClass(ClassLoader.java:351)??... 21 more?");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray2);
        org.junit.Assert.assertNotNull(channelHandlerArray7);
        org.junit.Assert.assertNotNull(channelHandlerArray14);
        org.junit.Assert.assertNotNull(channelHandlerArray21);
        org.junit.Assert.assertNotNull(channelHandlerArray25);
        org.junit.Assert.assertNotNull(channelHandlerArray30);
        org.junit.Assert.assertNotNull(channelHandlerArray32);
        org.junit.Assert.assertNotNull(channelHandlerArray38);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(exchangeHandlerDispatcher62);
        org.junit.Assert.assertNotNull(channelHandlerArray63);
        org.junit.Assert.assertNotNull(completableFutureArray71);
        org.junit.Assert.assertNotNull(wildcardCompletableFutureArray72);
        org.junit.Assert.assertNotNull(objCompletableFuture73);
        org.junit.Assert.assertNotNull(channelHandlerArray75);
        org.junit.Assert.assertNotNull(voidCompletableFuture93);
    }

    @Test
    public void test346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test346");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) (byte) 0);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer4 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        heapChannelBuffer4.writeByte((int) (short) 10);
        heapChannelBuffer4.discardReadBytes();
        heapChannelBuffer4.setByte((int) (byte) 10, (int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer13 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer15 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean16 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer13, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer15);
        int int17 = heapChannelBuffer13.readerIndex();
        heapChannelBuffer13.clear();
        boolean boolean19 = heapChannelBuffer13.writable();
        java.nio.ByteBuffer byteBuffer20 = heapChannelBuffer13.toByteBuffer();
        heapChannelBuffer4.getBytes((int) (byte) 40, byteBuffer20);
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer1.getBytes((int) (byte) -1, byteBuffer20);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(byteBuffer20);
    }

    @Test
    public void test347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test347");
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher0 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher1 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher0);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher2 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray3 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher4 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray3);
        org.apache.dubbo.remoting.Channel channel5 = null;
        java.lang.Throwable throwable6 = null;
        channelHandlerDispatcher4.caught(channel5, throwable6);
        org.apache.dubbo.remoting.Channel channel8 = null;
        channelHandlerDispatcher4.disconnected(channel8);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray10 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher11 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray10);
        org.apache.dubbo.remoting.Channel channel12 = null;
        java.lang.Throwable throwable13 = null;
        channelHandlerDispatcher11.caught(channel12, throwable13);
        org.apache.dubbo.remoting.Channel channel15 = null;
        channelHandlerDispatcher11.disconnected(channel15);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray17 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher18 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray17);
        org.apache.dubbo.common.URL uRL19 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler20 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher18, uRL19);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray21 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher22 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray21);
        org.apache.dubbo.common.URL uRL23 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler24 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher22, uRL23);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler25 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler24);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray26 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher2, channelHandlerDispatcher4, channelHandlerDispatcher11, channelHandlerDispatcher18, decodeHandler25 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher27 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher1, channelHandlerArray26);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray28 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher29 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray28);
        org.apache.dubbo.common.URL uRL30 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler31 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher29, uRL30);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler32 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler31);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate33 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray34 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher35 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray34);
        org.apache.dubbo.common.URL uRL36 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler37 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher35, uRL36);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState38 = null;
        java.net.InetSocketAddress inetSocketAddress39 = null;
        java.net.InetSocketAddress inetSocketAddress40 = null;
        org.apache.dubbo.remoting.RemotingException remotingException42 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress39, inetSocketAddress40, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable43 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate33, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler37, channelState38, (java.lang.Throwable) remotingException42);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher44 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState45 = null;
        java.net.InetSocketAddress inetSocketAddress47 = null;
        java.net.InetSocketAddress inetSocketAddress48 = null;
        org.apache.dubbo.remoting.ExecutionException executionException50 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress47, inetSocketAddress48, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable51 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate33, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher44, channelState45, (java.lang.Throwable) executionException50);
        decodeHandler32.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate33);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate53 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj54 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate53);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate55 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate53);
        exchangeHandlerDispatcher27.sent((org.apache.dubbo.remoting.Channel) channelDelegate33, (java.lang.Object) serverDelegate55);
        org.apache.dubbo.remoting.RemotingServer remotingServer57 = serverDelegate55.getServer();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer59 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer61 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean62 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer59, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer61);
        heapChannelBuffer61.resetReaderIndex();
        heapChannelBuffer61.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream65 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer61);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer68 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer70 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean71 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer68, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer70);
        heapChannelBuffer70.resetReaderIndex();
        heapChannelBuffer70.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream74 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer70);
        int int76 = heapChannelBuffer61.setBytes((int) (byte) 10, (java.io.InputStream) channelBufferInputStream74, (int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            serverDelegate55.send((java.lang.Object) heapChannelBuffer61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray3);
        org.junit.Assert.assertNotNull(channelHandlerArray10);
        org.junit.Assert.assertNotNull(channelHandlerArray17);
        org.junit.Assert.assertNotNull(channelHandlerArray21);
        org.junit.Assert.assertNotNull(channelHandlerArray26);
        org.junit.Assert.assertNotNull(channelHandlerArray28);
        org.junit.Assert.assertNotNull(channelHandlerArray34);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(remotingServer57);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
    }

    @Test
    public void test348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test348");
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory1 = org.apache.dubbo.remoting.buffer.DirectChannelBufferFactory.getInstance();
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer2 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 60, channelBufferFactory1);
        dynamicChannelBuffer2.discardReadBytes();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer5 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        heapChannelBuffer5.writeByte((int) (short) 10);
        byte[] byteArray8 = heapChannelBuffer5.array();
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer10 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer12 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer14 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean15 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer12, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer14);
        heapChannelBuffer14.resetReaderIndex();
        heapChannelBuffer14.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream18 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer14);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer21 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer23 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean24 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer21, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer23);
        heapChannelBuffer23.resetReaderIndex();
        heapChannelBuffer23.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream27 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer23);
        int int29 = heapChannelBuffer14.setBytes((int) (byte) 10, (java.io.InputStream) channelBufferInputStream27, (int) (byte) 100);
        int int31 = dynamicChannelBuffer10.writeBytes((java.io.InputStream) channelBufferInputStream27, 0);
        int int33 = heapChannelBuffer5.writeBytes((java.io.InputStream) channelBufferInputStream27, 0);
        dynamicChannelBuffer2.writeBytes((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer5);
        // The following exception was thrown during execution in test generation
        try {
            dynamicChannelBuffer2.skipBytes((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelBufferFactory1);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
    }

    @Test
    public void test349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test349");
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate1 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray2 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher3 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray2);
        org.apache.dubbo.common.URL uRL4 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler5 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher3, uRL4);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState6 = null;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        org.apache.dubbo.remoting.RemotingException remotingException10 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress7, inetSocketAddress8, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable11 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate1, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler5, channelState6, (java.lang.Throwable) remotingException10);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher12 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState13 = null;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        org.apache.dubbo.remoting.ExecutionException executionException18 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress15, inetSocketAddress16, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable19 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate1, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher12, channelState13, (java.lang.Throwable) executionException18);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.TimeoutException timeoutException21 = new org.apache.dubbo.remoting.TimeoutException(false, (org.apache.dubbo.remoting.Channel) channelDelegate1, "connect.queue.warning.size");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray2);
    }

    @Test
    public void test350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test350");
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher0 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray1 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher2 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray1);
        org.apache.dubbo.remoting.Channel channel3 = null;
        java.lang.Throwable throwable4 = null;
        channelHandlerDispatcher2.caught(channel3, throwable4);
        org.apache.dubbo.remoting.Channel channel6 = null;
        channelHandlerDispatcher2.disconnected(channel6);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher8 = exchangeHandlerDispatcher0.removeChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher2);
        org.junit.Assert.assertNotNull(channelHandlerArray1);
        org.junit.Assert.assertNotNull(exchangeHandlerDispatcher8);
    }

    @Test
    public void test351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test351");
        org.apache.dubbo.remoting.transport.dispatcher.execution.ExecutionDispatcher executionDispatcher0 = new org.apache.dubbo.remoting.transport.dispatcher.execution.ExecutionDispatcher();
        org.apache.dubbo.remoting.Channel channel1 = null;
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray2 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher3 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray2);
        org.apache.dubbo.common.URL uRL4 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler5 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher3, uRL4);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState6 = null;
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable8 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable(channel1, (org.apache.dubbo.remoting.ChannelHandler) messageOnlyChannelHandler5, channelState6, (java.lang.Object) (short) 1);
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher9 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher10 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher9);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher11 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray12 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher13 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray12);
        org.apache.dubbo.remoting.Channel channel14 = null;
        java.lang.Throwable throwable15 = null;
        channelHandlerDispatcher13.caught(channel14, throwable15);
        org.apache.dubbo.remoting.Channel channel17 = null;
        channelHandlerDispatcher13.disconnected(channel17);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray19 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher20 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray19);
        org.apache.dubbo.remoting.Channel channel21 = null;
        java.lang.Throwable throwable22 = null;
        channelHandlerDispatcher20.caught(channel21, throwable22);
        org.apache.dubbo.remoting.Channel channel24 = null;
        channelHandlerDispatcher20.disconnected(channel24);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray26 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher27 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray26);
        org.apache.dubbo.common.URL uRL28 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler29 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher27, uRL28);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray30 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher31 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray30);
        org.apache.dubbo.common.URL uRL32 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler33 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher31, uRL32);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler34 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler33);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray35 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher11, channelHandlerDispatcher13, channelHandlerDispatcher20, channelHandlerDispatcher27, decodeHandler34 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher36 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher10, channelHandlerArray35);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray37 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher38 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray37);
        org.apache.dubbo.common.URL uRL39 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler40 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher38, uRL39);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler41 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler40);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate42 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray43 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher44 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray43);
        org.apache.dubbo.common.URL uRL45 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler46 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher44, uRL45);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState47 = null;
        java.net.InetSocketAddress inetSocketAddress48 = null;
        java.net.InetSocketAddress inetSocketAddress49 = null;
        org.apache.dubbo.remoting.RemotingException remotingException51 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress48, inetSocketAddress49, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable52 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate42, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler46, channelState47, (java.lang.Throwable) remotingException51);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher53 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState54 = null;
        java.net.InetSocketAddress inetSocketAddress56 = null;
        java.net.InetSocketAddress inetSocketAddress57 = null;
        org.apache.dubbo.remoting.ExecutionException executionException59 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress56, inetSocketAddress57, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable60 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate42, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher53, channelState54, (java.lang.Throwable) executionException59);
        decodeHandler41.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate42);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate62 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj63 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate62);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate64 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate62);
        exchangeHandlerDispatcher36.sent((org.apache.dubbo.remoting.Channel) channelDelegate42, (java.lang.Object) serverDelegate64);
        messageOnlyChannelHandler5.connected((org.apache.dubbo.remoting.Channel) channelDelegate42);
        org.apache.dubbo.common.URL uRL67 = null;
        org.apache.dubbo.remoting.ChannelHandler channelHandler68 = executionDispatcher0.dispatch((org.apache.dubbo.remoting.ChannelHandler) messageOnlyChannelHandler5, uRL67);
        org.junit.Assert.assertNotNull(channelHandlerArray2);
        org.junit.Assert.assertNotNull(channelHandlerArray12);
        org.junit.Assert.assertNotNull(channelHandlerArray19);
        org.junit.Assert.assertNotNull(channelHandlerArray26);
        org.junit.Assert.assertNotNull(channelHandlerArray30);
        org.junit.Assert.assertNotNull(channelHandlerArray35);
        org.junit.Assert.assertNotNull(channelHandlerArray37);
        org.junit.Assert.assertNotNull(channelHandlerArray43);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertNotNull(channelHandler68);
    }

    @Test
    public void test352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test352");
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher0 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher();
    }

    @Test
    public void test353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test353");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        int int5 = heapChannelBuffer1.readerIndex();
        heapChannelBuffer1.clear();
        heapChannelBuffer1.resetWriterIndex();
        boolean boolean8 = heapChannelBuffer1.writable();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer11 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer13 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean14 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer11, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer13);
        heapChannelBuffer13.resetReaderIndex();
        heapChannelBuffer13.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream17 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer13);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer20 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray21 = heapChannelBuffer20.array();
        byte[] byteArray22 = heapChannelBuffer20.array();
        heapChannelBuffer13.getBytes((int) (short) 1, byteArray22, (int) (short) 0, (int) (byte) 20);
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer1.setBytes(600000, byteArray22, 600000, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test354");
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate0 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray1 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher2 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray1);
        org.apache.dubbo.common.URL uRL3 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler4 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher2, uRL3);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState5 = null;
        java.net.InetSocketAddress inetSocketAddress6 = null;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        org.apache.dubbo.remoting.RemotingException remotingException9 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress6, inetSocketAddress7, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable10 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate0, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler4, channelState5, (java.lang.Throwable) remotingException9);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = channelDelegate0.getAttribute("bind.port");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray1);
    }

    @Test
    public void test355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test355");
        org.apache.dubbo.remoting.exchange.support.MultiMessage multiMessage0 = org.apache.dubbo.remoting.exchange.support.MultiMessage.create();
        java.util.Collection collection1 = multiMessage0.getMessages();
        org.apache.dubbo.remoting.exchange.support.MultiMessage multiMessage2 = org.apache.dubbo.remoting.exchange.support.MultiMessage.create();
        java.util.Collection collection3 = multiMessage2.getMessages();
        multiMessage0.addMessages(collection3);
        java.util.Collection collection5 = multiMessage0.getMessages();
        org.apache.dubbo.remoting.exchange.support.MultiMessage multiMessage6 = org.apache.dubbo.remoting.exchange.support.MultiMessage.create();
        java.util.Collection collection7 = multiMessage6.getMessages();
        org.apache.dubbo.remoting.exchange.support.MultiMessage multiMessage8 = org.apache.dubbo.remoting.exchange.support.MultiMessage.create();
        java.util.Collection collection9 = multiMessage8.getMessages();
        multiMessage6.addMessages(collection9);
        java.util.Collection collection11 = multiMessage6.getMessages();
        multiMessage0.addMessages(collection11);
        java.lang.Object obj13 = null;
        multiMessage0.addMessage(obj13);
        org.junit.Assert.assertNotNull(multiMessage0);
        org.junit.Assert.assertNotNull(collection1);
        org.junit.Assert.assertNotNull(multiMessage2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertNotNull(multiMessage6);
        org.junit.Assert.assertNotNull(collection7);
        org.junit.Assert.assertNotNull(multiMessage8);
        org.junit.Assert.assertNotNull(collection9);
        org.junit.Assert.assertNotNull(collection11);
    }

    @Test
    public void test356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test356");
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate0 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.net.InetSocketAddress inetSocketAddress1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.exchange.ExchangeChannel exchangeChannel2 = exchangeServerDelegate0.getExchangeChannel(inetSocketAddress1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test357");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        heapChannelBuffer3.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory7 = heapChannelBuffer3.factory();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer10 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer12 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean13 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer10, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer12);
        int int14 = heapChannelBuffer10.readerIndex();
        heapChannelBuffer10.clear();
        boolean boolean16 = heapChannelBuffer10.writable();
        boolean boolean17 = heapChannelBuffer10.readable();
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer20 = heapChannelBuffer10.copy(3, 0);
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer3.setBytes((int) ' ', channelBuffer20, 5, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(channelBufferFactory7);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(channelBuffer20);
    }

    @Test
    public void test358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test358");
        java.util.concurrent.CompletableFuture[] completableFutureArray1 = new java.util.concurrent.CompletableFuture[0];
        @SuppressWarnings("unchecked")
        java.util.concurrent.CompletableFuture<?>[] wildcardCompletableFutureArray2 = (java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1;
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture3 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1);
        boolean boolean4 = objCompletableFuture3.isDone();
        org.junit.Assert.assertNotNull(completableFutureArray1);
        org.junit.Assert.assertNotNull(wildcardCompletableFutureArray2);
        org.junit.Assert.assertNotNull(objCompletableFuture3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test359");
        org.apache.dubbo.common.serialize.Serialization serialization1 = org.apache.dubbo.remoting.transport.CodecSupport.getSerializationById((java.lang.Byte) (byte) 60);
        org.junit.Assert.assertNull(serialization1);
    }

    @Test
    public void test360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test360");
        org.apache.dubbo.remoting.exchange.codec.ExchangeCodec exchangeCodec0 = new org.apache.dubbo.remoting.exchange.codec.ExchangeCodec();
    }

    @Test
    public void test361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test361");
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate0 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj1 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate0);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate2 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate0);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate3 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj4 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate3);
        exchangeServerDelegate0.setServer((org.apache.dubbo.remoting.exchange.ExchangeServer) exchangeServerDelegate3);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate6 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj7 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate6);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate8 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate6);
        exchangeServerDelegate3.setServer((org.apache.dubbo.remoting.exchange.ExchangeServer) exchangeServerDelegate6);
        org.apache.dubbo.common.Parameters parameters10 = null;
        // The following exception was thrown during execution in test generation
        try {
            exchangeServerDelegate6.reset(parameters10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj7);
    }

    @Test
    public void test362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test362");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher2 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher3 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher2);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher4 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray5 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher6 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray5);
        org.apache.dubbo.remoting.Channel channel7 = null;
        java.lang.Throwable throwable8 = null;
        channelHandlerDispatcher6.caught(channel7, throwable8);
        org.apache.dubbo.remoting.Channel channel10 = null;
        channelHandlerDispatcher6.disconnected(channel10);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray12 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher13 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray12);
        org.apache.dubbo.remoting.Channel channel14 = null;
        java.lang.Throwable throwable15 = null;
        channelHandlerDispatcher13.caught(channel14, throwable15);
        org.apache.dubbo.remoting.Channel channel17 = null;
        channelHandlerDispatcher13.disconnected(channel17);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray19 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher20 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray19);
        org.apache.dubbo.common.URL uRL21 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler22 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher20, uRL21);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray23 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher24 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray23);
        org.apache.dubbo.common.URL uRL25 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler26 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher24, uRL25);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler27 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler26);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray28 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher4, channelHandlerDispatcher6, channelHandlerDispatcher13, channelHandlerDispatcher20, decodeHandler27 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher29 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher3, channelHandlerArray28);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray30 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher31 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray30);
        org.apache.dubbo.common.URL uRL32 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler33 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher31, uRL32);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler34 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler33);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate35 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray36 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher37 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray36);
        org.apache.dubbo.common.URL uRL38 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler39 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher37, uRL38);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState40 = null;
        java.net.InetSocketAddress inetSocketAddress41 = null;
        java.net.InetSocketAddress inetSocketAddress42 = null;
        org.apache.dubbo.remoting.RemotingException remotingException44 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress41, inetSocketAddress42, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable45 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate35, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler39, channelState40, (java.lang.Throwable) remotingException44);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher46 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState47 = null;
        java.net.InetSocketAddress inetSocketAddress49 = null;
        java.net.InetSocketAddress inetSocketAddress50 = null;
        org.apache.dubbo.remoting.ExecutionException executionException52 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress49, inetSocketAddress50, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable53 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate35, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher46, channelState47, (java.lang.Throwable) executionException52);
        decodeHandler34.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate35);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate55 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj56 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate55);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate57 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate55);
        exchangeHandlerDispatcher29.sent((org.apache.dubbo.remoting.Channel) channelDelegate35, (java.lang.Object) serverDelegate57);
        channelHandlerDispatcher1.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate35);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray60 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher61 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray60);
        org.apache.dubbo.common.URL uRL62 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler63 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher61, uRL62);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher64 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher65 = channelHandlerDispatcher61.removeChannelHandler((org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher64);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState66 = org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState.RECEIVED;
        java.lang.Object obj67 = null;
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory68 = org.apache.dubbo.remoting.buffer.HeapChannelBufferFactory.getInstance();
        java.net.InetSocketAddress inetSocketAddress69 = null;
        java.net.InetSocketAddress inetSocketAddress70 = null;
        java.net.InetSocketAddress inetSocketAddress72 = null;
        java.net.InetSocketAddress inetSocketAddress73 = null;
        org.apache.dubbo.remoting.ExecutionException executionException75 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress72, inetSocketAddress73, "hi!");
        org.apache.dubbo.remoting.ExecutionException executionException76 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) channelBufferFactory68, inetSocketAddress69, inetSocketAddress70, (java.lang.Throwable) executionException75);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable77 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate35, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher64, channelState66, obj67, (java.lang.Throwable) executionException76);
        org.apache.dubbo.remoting.Channel channel78 = channelDelegate35.getChannel();
        // The following exception was thrown during execution in test generation
        try {
            channelDelegate35.startClose();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray0);
        org.junit.Assert.assertNotNull(channelHandlerArray5);
        org.junit.Assert.assertNotNull(channelHandlerArray12);
        org.junit.Assert.assertNotNull(channelHandlerArray19);
        org.junit.Assert.assertNotNull(channelHandlerArray23);
        org.junit.Assert.assertNotNull(channelHandlerArray28);
        org.junit.Assert.assertNotNull(channelHandlerArray30);
        org.junit.Assert.assertNotNull(channelHandlerArray36);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(channelHandlerArray60);
        org.junit.Assert.assertNotNull(channelHandlerDispatcher65);
        org.junit.Assert.assertTrue("'" + channelState66 + "' != '" + org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState.RECEIVED + "'", channelState66.equals(org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState.RECEIVED));
        org.junit.Assert.assertNotNull(channelBufferFactory68);
        org.junit.Assert.assertNull(channel78);
    }

    @Test
    public void test363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test363");
        org.apache.dubbo.remoting.transport.codec.TransportCodec transportCodec0 = new org.apache.dubbo.remoting.transport.codec.TransportCodec();
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher1 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray2 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher3 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray2);
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher4 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher5 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher4);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher6 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray7 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher8 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray7);
        org.apache.dubbo.remoting.Channel channel9 = null;
        java.lang.Throwable throwable10 = null;
        channelHandlerDispatcher8.caught(channel9, throwable10);
        org.apache.dubbo.remoting.Channel channel12 = null;
        channelHandlerDispatcher8.disconnected(channel12);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray14 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher15 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray14);
        org.apache.dubbo.remoting.Channel channel16 = null;
        java.lang.Throwable throwable17 = null;
        channelHandlerDispatcher15.caught(channel16, throwable17);
        org.apache.dubbo.remoting.Channel channel19 = null;
        channelHandlerDispatcher15.disconnected(channel19);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray21 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher22 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray21);
        org.apache.dubbo.common.URL uRL23 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler24 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher22, uRL23);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray25 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher26 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray25);
        org.apache.dubbo.common.URL uRL27 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler28 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher26, uRL27);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler29 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler28);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray30 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher6, channelHandlerDispatcher8, channelHandlerDispatcher15, channelHandlerDispatcher22, decodeHandler29 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher31 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher5, channelHandlerArray30);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray32 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher33 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray32);
        org.apache.dubbo.common.URL uRL34 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler35 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher33, uRL34);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler36 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler35);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate37 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray38 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher39 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray38);
        org.apache.dubbo.common.URL uRL40 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler41 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher39, uRL40);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState42 = null;
        java.net.InetSocketAddress inetSocketAddress43 = null;
        java.net.InetSocketAddress inetSocketAddress44 = null;
        org.apache.dubbo.remoting.RemotingException remotingException46 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress43, inetSocketAddress44, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable47 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate37, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler41, channelState42, (java.lang.Throwable) remotingException46);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher48 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState49 = null;
        java.net.InetSocketAddress inetSocketAddress51 = null;
        java.net.InetSocketAddress inetSocketAddress52 = null;
        org.apache.dubbo.remoting.ExecutionException executionException54 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress51, inetSocketAddress52, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable55 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate37, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher48, channelState49, (java.lang.Throwable) executionException54);
        decodeHandler36.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate37);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate57 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj58 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate57);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate59 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate57);
        exchangeHandlerDispatcher31.sent((org.apache.dubbo.remoting.Channel) channelDelegate37, (java.lang.Object) serverDelegate59);
        channelHandlerDispatcher3.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate37);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher62 = exchangeHandlerDispatcher1.addChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher3);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate63 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        exchangeHandlerDispatcher1.connected((org.apache.dubbo.remoting.Channel) channelDelegate63);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer66 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        int int67 = heapChannelBuffer66.readableBytes();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher68 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        // The following exception was thrown during execution in test generation
        try {
            transportCodec0.encode((org.apache.dubbo.remoting.Channel) channelDelegate63, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer66, (java.lang.Object) replierDispatcher68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray2);
        org.junit.Assert.assertNotNull(channelHandlerArray7);
        org.junit.Assert.assertNotNull(channelHandlerArray14);
        org.junit.Assert.assertNotNull(channelHandlerArray21);
        org.junit.Assert.assertNotNull(channelHandlerArray25);
        org.junit.Assert.assertNotNull(channelHandlerArray30);
        org.junit.Assert.assertNotNull(channelHandlerArray32);
        org.junit.Assert.assertNotNull(channelHandlerArray38);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(exchangeHandlerDispatcher62);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
    }

    @Test
    public void test364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test364");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        heapChannelBuffer1.writeByte((int) (short) 10);
        heapChannelBuffer1.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory5 = heapChannelBuffer1.factory();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer8 = heapChannelBuffer1.copy(60000, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelBufferFactory5);
    }

    @Test
    public void test365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test365");
        org.apache.dubbo.remoting.exchange.Response response2 = new org.apache.dubbo.remoting.exchange.Response((long) (byte) 1, "");
        java.lang.String str3 = response2.getVersion();
        java.lang.Object obj4 = response2.getResult();
        byte byte5 = response2.getStatus();
        response2.setVersion("message");
        response2.setHeartbeat(true);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 20 + "'", byte5 == (byte) 20);
    }

    @Test
    public void test366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test366");
        org.apache.dubbo.remoting.transport.dispatcher.all.AllDispatcher allDispatcher0 = new org.apache.dubbo.remoting.transport.dispatcher.all.AllDispatcher();
    }

    @Test
    public void test367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test367");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.common.URL uRL2 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler3 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher1, uRL2);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray4 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher5 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray4);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray6 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher7 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray6);
        org.apache.dubbo.common.URL uRL8 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler9 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher7, uRL8);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler10 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler9);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate11 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray12 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher13 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray12);
        org.apache.dubbo.common.URL uRL14 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler15 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher13, uRL14);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState16 = null;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        org.apache.dubbo.remoting.RemotingException remotingException20 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress17, inetSocketAddress18, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable21 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate11, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler15, channelState16, (java.lang.Throwable) remotingException20);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher22 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState23 = null;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        java.net.InetSocketAddress inetSocketAddress26 = null;
        org.apache.dubbo.remoting.ExecutionException executionException28 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress25, inetSocketAddress26, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable29 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate11, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher22, channelState23, (java.lang.Throwable) executionException28);
        decodeHandler10.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate11);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate31 = new org.apache.dubbo.remoting.transport.ChannelDelegate((org.apache.dubbo.remoting.Channel) channelDelegate11);
        channelHandlerDispatcher5.received((org.apache.dubbo.remoting.Channel) channelDelegate31, (java.lang.Object) (byte) 0);
        directChannelHandler3.connected((org.apache.dubbo.remoting.Channel) channelDelegate31);
        org.apache.dubbo.remoting.ChannelHandler channelHandler35 = directChannelHandler3.getHandler();
        org.junit.Assert.assertNotNull(channelHandlerArray0);
        org.junit.Assert.assertNotNull(channelHandlerArray4);
        org.junit.Assert.assertNotNull(channelHandlerArray6);
        org.junit.Assert.assertNotNull(channelHandlerArray12);
        org.junit.Assert.assertNotNull(channelHandler35);
    }

    @Test
    public void test368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test368");
        org.apache.dubbo.remoting.exchange.Response response2 = new org.apache.dubbo.remoting.exchange.Response((long) (byte) 1, "");
        java.lang.String str3 = response2.getVersion();
        response2.setEvent(false);
        java.lang.String str6 = response2.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Response [id=1, version=, status=20, event=false, error=null, result=null]" + "'", str6, "Response [id=1, version=, status=20, event=false, error=null, result=null]");
    }

    @Test
    public void test369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test369");
        org.apache.dubbo.remoting.exchange.support.header.HeaderExchanger headerExchanger0 = new org.apache.dubbo.remoting.exchange.support.header.HeaderExchanger();
        org.apache.dubbo.common.URL uRL1 = null;
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher2 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray3 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher4 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray3);
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher5 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher6 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher5);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher7 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray8 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher9 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray8);
        org.apache.dubbo.remoting.Channel channel10 = null;
        java.lang.Throwable throwable11 = null;
        channelHandlerDispatcher9.caught(channel10, throwable11);
        org.apache.dubbo.remoting.Channel channel13 = null;
        channelHandlerDispatcher9.disconnected(channel13);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray15 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher16 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray15);
        org.apache.dubbo.remoting.Channel channel17 = null;
        java.lang.Throwable throwable18 = null;
        channelHandlerDispatcher16.caught(channel17, throwable18);
        org.apache.dubbo.remoting.Channel channel20 = null;
        channelHandlerDispatcher16.disconnected(channel20);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray22 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher23 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray22);
        org.apache.dubbo.common.URL uRL24 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler25 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher23, uRL24);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray26 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher27 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray26);
        org.apache.dubbo.common.URL uRL28 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler29 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher27, uRL28);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler30 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler29);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray31 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher7, channelHandlerDispatcher9, channelHandlerDispatcher16, channelHandlerDispatcher23, decodeHandler30 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher32 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher6, channelHandlerArray31);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray33 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher34 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray33);
        org.apache.dubbo.common.URL uRL35 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler36 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher34, uRL35);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler37 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler36);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate38 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray39 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher40 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray39);
        org.apache.dubbo.common.URL uRL41 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler42 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher40, uRL41);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState43 = null;
        java.net.InetSocketAddress inetSocketAddress44 = null;
        java.net.InetSocketAddress inetSocketAddress45 = null;
        org.apache.dubbo.remoting.RemotingException remotingException47 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress44, inetSocketAddress45, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable48 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate38, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler42, channelState43, (java.lang.Throwable) remotingException47);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher49 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState50 = null;
        java.net.InetSocketAddress inetSocketAddress52 = null;
        java.net.InetSocketAddress inetSocketAddress53 = null;
        org.apache.dubbo.remoting.ExecutionException executionException55 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress52, inetSocketAddress53, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable56 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate38, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher49, channelState50, (java.lang.Throwable) executionException55);
        decodeHandler37.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate38);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate58 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj59 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate58);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate60 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate58);
        exchangeHandlerDispatcher32.sent((org.apache.dubbo.remoting.Channel) channelDelegate38, (java.lang.Object) serverDelegate60);
        channelHandlerDispatcher4.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate38);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher63 = exchangeHandlerDispatcher2.addChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher4);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.exchange.ExchangeClient exchangeClient64 = headerExchanger0.connect(uRL1, (org.apache.dubbo.remoting.exchange.ExchangeHandler) exchangeHandlerDispatcher63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: url == null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray3);
        org.junit.Assert.assertNotNull(channelHandlerArray8);
        org.junit.Assert.assertNotNull(channelHandlerArray15);
        org.junit.Assert.assertNotNull(channelHandlerArray22);
        org.junit.Assert.assertNotNull(channelHandlerArray26);
        org.junit.Assert.assertNotNull(channelHandlerArray31);
        org.junit.Assert.assertNotNull(channelHandlerArray33);
        org.junit.Assert.assertNotNull(channelHandlerArray39);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertNotNull(exchangeHandlerDispatcher63);
    }

    @Test
    public void test370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test370");
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher0 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher1 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher0);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher2 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray3 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher4 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray3);
        org.apache.dubbo.remoting.Channel channel5 = null;
        java.lang.Throwable throwable6 = null;
        channelHandlerDispatcher4.caught(channel5, throwable6);
        org.apache.dubbo.remoting.Channel channel8 = null;
        channelHandlerDispatcher4.disconnected(channel8);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray10 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher11 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray10);
        org.apache.dubbo.remoting.Channel channel12 = null;
        java.lang.Throwable throwable13 = null;
        channelHandlerDispatcher11.caught(channel12, throwable13);
        org.apache.dubbo.remoting.Channel channel15 = null;
        channelHandlerDispatcher11.disconnected(channel15);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray17 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher18 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray17);
        org.apache.dubbo.common.URL uRL19 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler20 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher18, uRL19);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray21 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher22 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray21);
        org.apache.dubbo.common.URL uRL23 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler24 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher22, uRL23);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler25 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler24);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray26 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher2, channelHandlerDispatcher4, channelHandlerDispatcher11, channelHandlerDispatcher18, decodeHandler25 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher27 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher1, channelHandlerArray26);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray28 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher29 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray28);
        org.apache.dubbo.common.URL uRL30 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler31 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher29, uRL30);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler32 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler31);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate33 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray34 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher35 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray34);
        org.apache.dubbo.common.URL uRL36 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler37 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher35, uRL36);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState38 = null;
        java.net.InetSocketAddress inetSocketAddress39 = null;
        java.net.InetSocketAddress inetSocketAddress40 = null;
        org.apache.dubbo.remoting.RemotingException remotingException42 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress39, inetSocketAddress40, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable43 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate33, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler37, channelState38, (java.lang.Throwable) remotingException42);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher44 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState45 = null;
        java.net.InetSocketAddress inetSocketAddress47 = null;
        java.net.InetSocketAddress inetSocketAddress48 = null;
        org.apache.dubbo.remoting.ExecutionException executionException50 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress47, inetSocketAddress48, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable51 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate33, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher44, channelState45, (java.lang.Throwable) executionException50);
        decodeHandler32.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate33);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate53 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj54 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate53);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate55 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate53);
        exchangeHandlerDispatcher27.sent((org.apache.dubbo.remoting.Channel) channelDelegate33, (java.lang.Object) serverDelegate55);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray57 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher58 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray57);
        org.apache.dubbo.common.URL uRL59 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler60 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher58, uRL59);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler61 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler60);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate62 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        decodeHandler61.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate62);
        org.apache.dubbo.remoting.transport.ExceedPayloadLimitException exceedPayloadLimitException65 = new org.apache.dubbo.remoting.transport.ExceedPayloadLimitException("codec.version");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.ExecutionException executionException66 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) serverDelegate55, (org.apache.dubbo.remoting.Channel) channelDelegate62, (java.lang.Throwable) exceedPayloadLimitException65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray3);
        org.junit.Assert.assertNotNull(channelHandlerArray10);
        org.junit.Assert.assertNotNull(channelHandlerArray17);
        org.junit.Assert.assertNotNull(channelHandlerArray21);
        org.junit.Assert.assertNotNull(channelHandlerArray26);
        org.junit.Assert.assertNotNull(channelHandlerArray28);
        org.junit.Assert.assertNotNull(channelHandlerArray34);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(channelHandlerArray57);
    }

    @Test
    public void test371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test371");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        heapChannelBuffer3.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream7 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        int int8 = channelBufferInputStream7.readBytes();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer10 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray11 = heapChannelBuffer10.array();
        int int12 = channelBufferInputStream7.read(byteArray11);
        boolean boolean13 = channelBufferInputStream7.markSupported();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test372");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState0 = org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState.CONNECTED;
        org.junit.Assert.assertTrue("'" + channelState0 + "' != '" + org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState.CONNECTED + "'", channelState0.equals(org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState.CONNECTED));
    }

    @Test
    public void test373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test373");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer7 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        boolean boolean8 = dynamicChannelBuffer7.hasArray();
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory9 = dynamicChannelBuffer7.factory();
        int int10 = heapChannelBuffer3.compareTo((org.apache.dubbo.remoting.buffer.ChannelBuffer) dynamicChannelBuffer7);
        boolean boolean11 = dynamicChannelBuffer7.hasArray();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer14 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer16 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean17 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer14, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer16);
        int int18 = heapChannelBuffer14.readerIndex();
        heapChannelBuffer14.clear();
        heapChannelBuffer14.resetWriterIndex();
        boolean boolean21 = heapChannelBuffer14.writable();
        // The following exception was thrown during execution in test generation
        try {
            dynamicChannelBuffer7.getBytes((int) (byte) 20, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer14, (int) (byte) 80, (int) (byte) 40);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(channelBufferFactory9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test374");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.common.URL uRL2 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler3 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher1, uRL2);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher4 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher5 = channelHandlerDispatcher1.removeChannelHandler((org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher4);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray6 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher7 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray6);
        org.apache.dubbo.common.URL uRL8 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler9 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher7, uRL8);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray10 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher11 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray10);
        org.apache.dubbo.common.URL uRL12 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler13 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher11, uRL12);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler14 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler13);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate15 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray16 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher17 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray16);
        org.apache.dubbo.common.URL uRL18 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler19 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher17, uRL18);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState20 = null;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        java.net.InetSocketAddress inetSocketAddress22 = null;
        org.apache.dubbo.remoting.RemotingException remotingException24 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress21, inetSocketAddress22, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable25 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate15, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler19, channelState20, (java.lang.Throwable) remotingException24);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher26 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState27 = null;
        java.net.InetSocketAddress inetSocketAddress29 = null;
        java.net.InetSocketAddress inetSocketAddress30 = null;
        org.apache.dubbo.remoting.ExecutionException executionException32 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress29, inetSocketAddress30, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable33 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate15, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher26, channelState27, (java.lang.Throwable) executionException32);
        decodeHandler14.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate15);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray35 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher36 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray35);
        org.apache.dubbo.remoting.Channel channel37 = null;
        java.lang.Throwable throwable38 = null;
        channelHandlerDispatcher36.caught(channel37, throwable38);
        directChannelHandler9.sent((org.apache.dubbo.remoting.Channel) channelDelegate15, (java.lang.Object) channel37);
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher41 = channelHandlerDispatcher1.removeChannelHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler9);
        java.util.Collection<org.apache.dubbo.remoting.ChannelHandler> channelHandlerCollection42 = channelHandlerDispatcher1.getChannelHandlers();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray43 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher44 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray43);
        org.apache.dubbo.common.URL uRL45 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler46 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher44, uRL45);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher47 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher48 = channelHandlerDispatcher44.removeChannelHandler((org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher47);
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher49 = channelHandlerDispatcher1.removeChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher44);
        org.junit.Assert.assertNotNull(channelHandlerArray0);
        org.junit.Assert.assertNotNull(channelHandlerDispatcher5);
        org.junit.Assert.assertNotNull(channelHandlerArray6);
        org.junit.Assert.assertNotNull(channelHandlerArray10);
        org.junit.Assert.assertNotNull(channelHandlerArray16);
        org.junit.Assert.assertNotNull(channelHandlerArray35);
        org.junit.Assert.assertNotNull(channelHandlerDispatcher41);
        org.junit.Assert.assertNotNull(channelHandlerCollection42);
        org.junit.Assert.assertNotNull(channelHandlerArray43);
        org.junit.Assert.assertNotNull(channelHandlerDispatcher48);
        org.junit.Assert.assertNotNull(channelHandlerDispatcher49);
    }

    @Test
    public void test375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test375");
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer1 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        boolean boolean2 = dynamicChannelBuffer1.hasArray();
        java.io.OutputStream outputStream4 = null;
        // The following exception was thrown during execution in test generation
        try {
            dynamicChannelBuffer1.getBytes((int) (byte) 80, outputStream4, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test376");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.exchange.ExchangeClient exchangeClient1 = org.apache.dubbo.remoting.exchange.Exchangers.connect("execution");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Failed to create adaptive instance: java.lang.IllegalStateException: Can't create adaptive extension interface org.apache.dubbo.remoting.Transporter, cause: Failed to compile class, cause: javassist/ClassPath, class: org.apache.dubbo.remoting.Transporter$Adaptive, code: ?package org.apache.dubbo.remoting;?import org.apache.dubbo.common.extension.ExtensionLoader;?public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {?public org.apache.dubbo.remoting.RemotingServer bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {?if (arg0 == null) throw new IllegalArgumentException(\"url == null\");?org.apache.dubbo.common.URL url = arg0;?String extName = url.getParameter(\"server\", url.getParameter(\"transporter\", \"netty\"));?if(extName == null) throw new IllegalStateException(\"Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (\" + url.toString() + \") use keys([server, transporter])\");?org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);?return extension.bind(arg0, arg1);?}?public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {?if (arg0 == null) throw new IllegalArgumentException(\"url == null\");?org.apache.dubbo.common.URL url = arg0;?String extName = url.getParameter(\"client\", url.getParameter(\"transporter\", \"netty\"));?if(extName == null) throw new IllegalStateException(\"Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (\" + url.toString() + \") use keys([client, transporter])\");?org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);?return extension.connect(arg0, arg1);?}?}?, stack: java.lang.NoClassDefFoundError: javassist/ClassPath??java.lang.NoClassDefFoundError: javassist/ClassPath??at org.apache.dubbo.common.compiler.support.JavassistCompiler.doCompile(JavassistCompiler.java:43)??at org.apache.dubbo.common.compiler.support.AbstractCompiler.compile(AbstractCompiler.java:58)??at org.apache.dubbo.common.compiler.support.AdaptiveCompiler.compile(AdaptiveCompiler.java:45)??at org.apache.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClass(ExtensionLoader.java:1039)??at org.apache.dubbo.common.extension.ExtensionLoader.getAdaptiveExtensionClass(ExtensionLoader.java:1032)??at org.apache.dubbo.common.extension.ExtensionLoader.createAdaptiveExtension(ExtensionLoader.java:1021)??at org.apache.dubbo.common.extension.ExtensionLoader.getAdaptiveExtension(ExtensionLoader.java:588)??at org.apache.dubbo.remoting.Transporters.getTransporter(Transporters.java:79)??at org.apache.dubbo.remoting.Transporters.connect(Transporters.java:75)??at org.apache.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:94)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:90)??at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)??at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)??at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)??at java.lang.reflect.Method.invoke(Method.java:498)??at randoop.util.MethodReflectionCode.runReflectionCodeRaw(MethodReflectionCode.java:53)??at randoop.util.ReflectionCode.runReflectionCode(ReflectionCode.java:59)??at randoop.util.RunnerThread.executeReflectionCode(RunnerThread.java:49)??at randoop.util.RunnerThread.run(RunnerThread.java:43)?Caused by: java.lang.ClassNotFoundException: javassist.ClassPath??at java.net.URLClassLoader.findClass(URLClassLoader.java:382)??at java.lang.ClassLoader.loadClass(ClassLoader.java:418)??at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:355)??at java.lang.ClassLoader.loadClass(ClassLoader.java:351)??... 21 more?");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
    }

    @Test
    public void test377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test377");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        boolean boolean5 = heapChannelBuffer1.writable();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer8 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer10 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean11 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer8, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer10);
        heapChannelBuffer10.resetReaderIndex();
        heapChannelBuffer10.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream14 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer10);
        int int16 = heapChannelBuffer1.setBytes(0, (java.io.InputStream) channelBufferInputStream14, (int) (byte) 40);
        java.nio.channels.ScatteringByteChannel scatteringByteChannel18 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int20 = heapChannelBuffer1.setBytes(3, scatteringByteChannel18, (int) (byte) 20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test378");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.common.URL uRL2 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler3 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher1, uRL2);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler4 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler3);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate5 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray6 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher7 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray6);
        org.apache.dubbo.common.URL uRL8 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler9 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher7, uRL8);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState10 = null;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        org.apache.dubbo.remoting.RemotingException remotingException14 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress11, inetSocketAddress12, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable15 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate5, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler9, channelState10, (java.lang.Throwable) remotingException14);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher16 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState17 = null;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        org.apache.dubbo.remoting.ExecutionException executionException22 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress19, inetSocketAddress20, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable23 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate5, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher16, channelState17, (java.lang.Throwable) executionException22);
        decodeHandler4.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate5);
        org.apache.dubbo.remoting.ChannelHandler channelHandler25 = decodeHandler4.getHandler();
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate26 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray27 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher28 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray27);
        org.apache.dubbo.common.URL uRL29 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler30 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher28, uRL29);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState31 = null;
        java.net.InetSocketAddress inetSocketAddress32 = null;
        java.net.InetSocketAddress inetSocketAddress33 = null;
        org.apache.dubbo.remoting.RemotingException remotingException35 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress32, inetSocketAddress33, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable36 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate26, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler30, channelState31, (java.lang.Throwable) remotingException35);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer38 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer40 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean41 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer38, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer40);
        int int42 = heapChannelBuffer38.readerIndex();
        heapChannelBuffer38.clear();
        // The following exception was thrown during execution in test generation
        try {
            decodeHandler4.received((org.apache.dubbo.remoting.Channel) channelDelegate26, (java.lang.Object) heapChannelBuffer38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray0);
        org.junit.Assert.assertNotNull(channelHandlerArray6);
        org.junit.Assert.assertNotNull(channelHandler25);
        org.junit.Assert.assertNotNull(channelHandlerArray27);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
    }

    @Test
    public void test379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test379");
        java.lang.Byte byte1 = org.apache.dubbo.remoting.transport.CodecSupport.getIDByName("sent");
        org.junit.Assert.assertNull(byte1);
    }

    @Test
    public void test380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test380");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer7 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        boolean boolean8 = dynamicChannelBuffer7.hasArray();
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory9 = dynamicChannelBuffer7.factory();
        int int10 = heapChannelBuffer3.compareTo((org.apache.dubbo.remoting.buffer.ChannelBuffer) dynamicChannelBuffer7);
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer11 = dynamicChannelBuffer7.copy();
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer13 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer15 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer17 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean18 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer15, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer17);
        heapChannelBuffer17.resetReaderIndex();
        heapChannelBuffer17.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream21 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer17);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer24 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer26 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean27 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer24, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer26);
        heapChannelBuffer26.resetReaderIndex();
        heapChannelBuffer26.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream30 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer26);
        int int32 = heapChannelBuffer17.setBytes((int) (byte) 10, (java.io.InputStream) channelBufferInputStream30, (int) (byte) 100);
        int int34 = dynamicChannelBuffer13.writeBytes((java.io.InputStream) channelBufferInputStream30, 0);
        channelBufferInputStream30.close();
        byte[] byteArray36 = org.apache.dubbo.remoting.transport.CodecSupport.getPayload((java.io.InputStream) channelBufferInputStream30);
        channelBufferInputStream30.mark(0);
        int int40 = dynamicChannelBuffer7.writeBytes((java.io.InputStream) channelBufferInputStream30, (int) (byte) -1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(channelBufferFactory9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(channelBuffer11);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
    }

    @Test
    public void test381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test381");
        org.apache.dubbo.remoting.telnet.support.command.StatusTelnetHandler statusTelnetHandler0 = new org.apache.dubbo.remoting.telnet.support.command.StatusTelnetHandler();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray1 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher2 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray1);
        org.apache.dubbo.common.URL uRL3 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler4 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher2, uRL3);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler5 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler4);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate6 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray7 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher8 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray7);
        org.apache.dubbo.common.URL uRL9 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler10 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher8, uRL9);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState11 = null;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        org.apache.dubbo.remoting.RemotingException remotingException15 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress12, inetSocketAddress13, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable16 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate6, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler10, channelState11, (java.lang.Throwable) remotingException15);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher17 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState18 = null;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        org.apache.dubbo.remoting.ExecutionException executionException23 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress20, inetSocketAddress21, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable24 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate6, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher17, channelState18, (java.lang.Throwable) executionException23);
        decodeHandler5.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate6);
        org.apache.dubbo.remoting.Channel channel26 = channelDelegate6.getChannel();
        java.lang.String str28 = statusTelnetHandler0.telnet((org.apache.dubbo.remoting.Channel) channelDelegate6, "Response [id=1, version=, status=20, event=false, error=null, result=null]");
        org.junit.Assert.assertNotNull(channelHandlerArray1);
        org.junit.Assert.assertNotNull(channelHandlerArray7);
        org.junit.Assert.assertNull(channel26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Unsupported parameter Response [id=1, version=, status=20, event=false, error=null, result=null] for status." + "'", str28, "Unsupported parameter Response [id=1, version=, status=20, event=false, error=null, result=null] for status.");
    }

    @Test
    public void test382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test382");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        int int5 = heapChannelBuffer1.readerIndex();
        heapChannelBuffer1.clear();
        boolean boolean7 = heapChannelBuffer1.writable();
        boolean boolean8 = heapChannelBuffer1.readable();
        int int9 = heapChannelBuffer1.capacity();
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer11 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer13 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer15 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean16 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer13, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer15);
        heapChannelBuffer15.resetReaderIndex();
        heapChannelBuffer15.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream19 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer15);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer22 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer24 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean25 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer22, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer24);
        heapChannelBuffer24.resetReaderIndex();
        heapChannelBuffer24.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream28 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer24);
        int int30 = heapChannelBuffer15.setBytes((int) (byte) 10, (java.io.InputStream) channelBufferInputStream28, (int) (byte) 100);
        int int32 = dynamicChannelBuffer11.writeBytes((java.io.InputStream) channelBufferInputStream28, 0);
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer34 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer36 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer38 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean39 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer36, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer38);
        heapChannelBuffer38.resetReaderIndex();
        heapChannelBuffer38.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream42 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer38);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer45 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer47 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean48 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer45, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer47);
        heapChannelBuffer47.resetReaderIndex();
        heapChannelBuffer47.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream51 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer47);
        int int53 = heapChannelBuffer38.setBytes((int) (byte) 10, (java.io.InputStream) channelBufferInputStream51, (int) (byte) 100);
        int int55 = dynamicChannelBuffer34.writeBytes((java.io.InputStream) channelBufferInputStream51, 0);
        int int57 = dynamicChannelBuffer11.writeBytes((java.io.InputStream) channelBufferInputStream51, (int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer1.writeBytes((org.apache.dubbo.remoting.buffer.ChannelBuffer) dynamicChannelBuffer11, (int) (byte) -1, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
    }

    @Test
    public void test383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test383");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        heapChannelBuffer1.writeByte((int) (short) 10);
        heapChannelBuffer1.discardReadBytes();
        heapChannelBuffer1.setByte((int) (byte) 10, (int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer10 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer12 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean13 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer10, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer12);
        int int14 = heapChannelBuffer10.readerIndex();
        heapChannelBuffer10.clear();
        boolean boolean16 = heapChannelBuffer10.writable();
        java.nio.ByteBuffer byteBuffer17 = heapChannelBuffer10.toByteBuffer();
        heapChannelBuffer1.getBytes((int) (byte) 40, byteBuffer17);
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer19 = org.apache.dubbo.remoting.buffer.ChannelBuffers.wrappedBuffer(byteBuffer17);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteBuffer17);
        org.junit.Assert.assertNotNull(channelBuffer19);
    }

    @Test
    public void test384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test384");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher2 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher(channelHandlerArray0);
        org.junit.Assert.assertNotNull(channelHandlerArray0);
    }

    @Test
    public void test385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test385");
        java.net.InetSocketAddress inetSocketAddress0 = null;
        java.net.InetSocketAddress inetSocketAddress1 = null;
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate3 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray4 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher5 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray4);
        org.apache.dubbo.common.URL uRL6 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler7 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher5, uRL6);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState8 = null;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        java.net.InetSocketAddress inetSocketAddress10 = null;
        org.apache.dubbo.remoting.RemotingException remotingException12 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress9, inetSocketAddress10, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable13 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate3, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler7, channelState8, (java.lang.Throwable) remotingException12);
        java.net.InetSocketAddress inetSocketAddress14 = null;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        org.apache.dubbo.remoting.RemotingException remotingException17 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress14, inetSocketAddress15, "charset");
        remotingException12.addSuppressed((java.lang.Throwable) remotingException17);
        java.net.InetSocketAddress inetSocketAddress19 = remotingException17.getLocalAddress();
        org.apache.dubbo.remoting.RemotingException remotingException20 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress0, inetSocketAddress1, "payload", (java.lang.Throwable) remotingException17);
        org.junit.Assert.assertNotNull(channelHandlerArray4);
        org.junit.Assert.assertNull(inetSocketAddress19);
    }

    @Test
    public void test386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test386");
        org.apache.dubbo.remoting.telnet.codec.TelnetCodec telnetCodec0 = new org.apache.dubbo.remoting.telnet.codec.TelnetCodec();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray1 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher2 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray1);
        org.apache.dubbo.common.URL uRL3 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler4 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher2, uRL3);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler5 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler4);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray6 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher7 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray6);
        org.apache.dubbo.common.URL uRL8 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler9 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher7, uRL8);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler10 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler9);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate11 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray12 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher13 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray12);
        org.apache.dubbo.common.URL uRL14 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler15 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher13, uRL14);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState16 = null;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        org.apache.dubbo.remoting.RemotingException remotingException20 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress17, inetSocketAddress18, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable21 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate11, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler15, channelState16, (java.lang.Throwable) remotingException20);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher22 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState23 = null;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        java.net.InetSocketAddress inetSocketAddress26 = null;
        org.apache.dubbo.remoting.ExecutionException executionException28 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress25, inetSocketAddress26, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable29 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate11, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher22, channelState23, (java.lang.Throwable) executionException28);
        decodeHandler10.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate11);
        decodeHandler5.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate11);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer33 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer35 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean36 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer33, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer35);
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer37 = heapChannelBuffer33.copy();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = telnetCodec0.decode((org.apache.dubbo.remoting.Channel) channelDelegate11, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray1);
        org.junit.Assert.assertNotNull(channelHandlerArray6);
        org.junit.Assert.assertNotNull(channelHandlerArray12);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(channelBuffer37);
    }

    @Test
    public void test387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test387");
        org.apache.dubbo.remoting.telnet.support.command.HelpTelnetHandler helpTelnetHandler0 = new org.apache.dubbo.remoting.telnet.support.command.HelpTelnetHandler();
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher1 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray2 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher3 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray2);
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher4 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher5 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher4);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher6 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray7 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher8 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray7);
        org.apache.dubbo.remoting.Channel channel9 = null;
        java.lang.Throwable throwable10 = null;
        channelHandlerDispatcher8.caught(channel9, throwable10);
        org.apache.dubbo.remoting.Channel channel12 = null;
        channelHandlerDispatcher8.disconnected(channel12);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray14 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher15 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray14);
        org.apache.dubbo.remoting.Channel channel16 = null;
        java.lang.Throwable throwable17 = null;
        channelHandlerDispatcher15.caught(channel16, throwable17);
        org.apache.dubbo.remoting.Channel channel19 = null;
        channelHandlerDispatcher15.disconnected(channel19);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray21 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher22 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray21);
        org.apache.dubbo.common.URL uRL23 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler24 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher22, uRL23);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray25 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher26 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray25);
        org.apache.dubbo.common.URL uRL27 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler28 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher26, uRL27);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler29 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler28);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray30 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher6, channelHandlerDispatcher8, channelHandlerDispatcher15, channelHandlerDispatcher22, decodeHandler29 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher31 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher5, channelHandlerArray30);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray32 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher33 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray32);
        org.apache.dubbo.common.URL uRL34 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler35 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher33, uRL34);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler36 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler35);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate37 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray38 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher39 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray38);
        org.apache.dubbo.common.URL uRL40 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler41 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher39, uRL40);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState42 = null;
        java.net.InetSocketAddress inetSocketAddress43 = null;
        java.net.InetSocketAddress inetSocketAddress44 = null;
        org.apache.dubbo.remoting.RemotingException remotingException46 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress43, inetSocketAddress44, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable47 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate37, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler41, channelState42, (java.lang.Throwable) remotingException46);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher48 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState49 = null;
        java.net.InetSocketAddress inetSocketAddress51 = null;
        java.net.InetSocketAddress inetSocketAddress52 = null;
        org.apache.dubbo.remoting.ExecutionException executionException54 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress51, inetSocketAddress52, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable55 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate37, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher48, channelState49, (java.lang.Throwable) executionException54);
        decodeHandler36.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate37);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate57 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj58 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate57);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate59 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate57);
        exchangeHandlerDispatcher31.sent((org.apache.dubbo.remoting.Channel) channelDelegate37, (java.lang.Object) serverDelegate59);
        channelHandlerDispatcher3.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate37);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher62 = exchangeHandlerDispatcher1.addChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher3);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray63 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher64 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray63);
        org.apache.dubbo.common.URL uRL65 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler66 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher64, uRL65);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler67 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler66);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate68 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        decodeHandler67.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate68);
        java.util.concurrent.CompletableFuture[] completableFutureArray71 = new java.util.concurrent.CompletableFuture[0];
        @SuppressWarnings("unchecked")
        java.util.concurrent.CompletableFuture<?>[] wildcardCompletableFutureArray72 = (java.util.concurrent.CompletableFuture<?>[]) completableFutureArray71;
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture73 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray71);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate74 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray75 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher76 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray75);
        org.apache.dubbo.common.URL uRL77 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler78 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher76, uRL77);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState79 = null;
        java.net.InetSocketAddress inetSocketAddress80 = null;
        java.net.InetSocketAddress inetSocketAddress81 = null;
        org.apache.dubbo.remoting.RemotingException remotingException83 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress80, inetSocketAddress81, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable84 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate74, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler78, channelState79, (java.lang.Throwable) remotingException83);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher85 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState86 = null;
        java.net.InetSocketAddress inetSocketAddress88 = null;
        java.net.InetSocketAddress inetSocketAddress89 = null;
        org.apache.dubbo.remoting.ExecutionException executionException91 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress88, inetSocketAddress89, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable92 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate74, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher85, channelState86, (java.lang.Throwable) executionException91);
        java.util.concurrent.CompletableFuture<java.lang.Void> voidCompletableFuture93 = objCompletableFuture73.thenRunAsync((java.lang.Runnable) channelEventRunnable92);
        channelHandlerDispatcher3.received((org.apache.dubbo.remoting.Channel) channelDelegate68, (java.lang.Object) channelEventRunnable92);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate95 = new org.apache.dubbo.remoting.transport.ChannelDelegate((org.apache.dubbo.remoting.Channel) channelDelegate68);
        java.lang.String str97 = helpTelnetHandler0.telnet((org.apache.dubbo.remoting.Channel) channelDelegate68, "netty");
        org.junit.Assert.assertNotNull(channelHandlerArray2);
        org.junit.Assert.assertNotNull(channelHandlerArray7);
        org.junit.Assert.assertNotNull(channelHandlerArray14);
        org.junit.Assert.assertNotNull(channelHandlerArray21);
        org.junit.Assert.assertNotNull(channelHandlerArray25);
        org.junit.Assert.assertNotNull(channelHandlerArray30);
        org.junit.Assert.assertNotNull(channelHandlerArray32);
        org.junit.Assert.assertNotNull(channelHandlerArray38);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(exchangeHandlerDispatcher62);
        org.junit.Assert.assertNotNull(channelHandlerArray63);
        org.junit.Assert.assertNotNull(completableFutureArray71);
        org.junit.Assert.assertNotNull(wildcardCompletableFutureArray72);
        org.junit.Assert.assertNotNull(objCompletableFuture73);
        org.junit.Assert.assertNotNull(channelHandlerArray75);
        org.junit.Assert.assertNotNull(voidCompletableFuture93);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "No such command netty" + "'", str97, "No such command netty");
    }

    @Test
    public void test388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test388");
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate0 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj1 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate0);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate2 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate0);
        org.apache.dubbo.common.Parameters parameters3 = null;
        // The following exception was thrown during execution in test generation
        try {
            serverDelegate2.reset(parameters3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj1);
    }

    @Test
    public void test389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test389");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        heapChannelBuffer1.writeByte((int) (short) 10);
        heapChannelBuffer1.discardReadBytes();
        heapChannelBuffer1.setByte((int) (byte) 10, (int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer10 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer12 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean13 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer10, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer12);
        int int14 = heapChannelBuffer10.readerIndex();
        heapChannelBuffer10.clear();
        boolean boolean16 = heapChannelBuffer10.writable();
        java.nio.ByteBuffer byteBuffer17 = heapChannelBuffer10.toByteBuffer();
        heapChannelBuffer1.getBytes((int) (byte) 40, byteBuffer17);
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory21 = org.apache.dubbo.remoting.buffer.DirectChannelBufferFactory.getInstance();
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer22 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer(10, channelBufferFactory21);
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer23 = dynamicChannelBuffer22.copy();
        channelBuffer23.resetWriterIndex();
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer1.setBytes((int) ' ', channelBuffer23, 3000, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(byteBuffer17);
        org.junit.Assert.assertNotNull(channelBufferFactory21);
        org.junit.Assert.assertNotNull(channelBuffer23);
    }

    @Test
    public void test390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test390");
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher1 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher2 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher1);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher3 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray4 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher5 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray4);
        org.apache.dubbo.remoting.Channel channel6 = null;
        java.lang.Throwable throwable7 = null;
        channelHandlerDispatcher5.caught(channel6, throwable7);
        org.apache.dubbo.remoting.Channel channel9 = null;
        channelHandlerDispatcher5.disconnected(channel9);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray11 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher12 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray11);
        org.apache.dubbo.remoting.Channel channel13 = null;
        java.lang.Throwable throwable14 = null;
        channelHandlerDispatcher12.caught(channel13, throwable14);
        org.apache.dubbo.remoting.Channel channel16 = null;
        channelHandlerDispatcher12.disconnected(channel16);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray18 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher19 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray18);
        org.apache.dubbo.common.URL uRL20 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler21 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher19, uRL20);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray22 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher23 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray22);
        org.apache.dubbo.common.URL uRL24 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler25 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher23, uRL24);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler26 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler25);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray27 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher3, channelHandlerDispatcher5, channelHandlerDispatcher12, channelHandlerDispatcher19, decodeHandler26 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher28 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher2, channelHandlerArray27);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher29 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher2);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.exchange.ExchangeClient exchangeClient30 = org.apache.dubbo.remoting.exchange.Exchangers.connect("netty", (org.apache.dubbo.remoting.exchange.ExchangeHandler) exchangeHandlerDispatcher29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Failed to create adaptive instance: java.lang.IllegalStateException: Can't create adaptive extension interface org.apache.dubbo.remoting.Transporter, cause: Failed to compile class, cause: javassist/ClassPath, class: org.apache.dubbo.remoting.Transporter$Adaptive, code: ?package org.apache.dubbo.remoting;?import org.apache.dubbo.common.extension.ExtensionLoader;?public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {?public org.apache.dubbo.remoting.RemotingServer bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {?if (arg0 == null) throw new IllegalArgumentException(\"url == null\");?org.apache.dubbo.common.URL url = arg0;?String extName = url.getParameter(\"server\", url.getParameter(\"transporter\", \"netty\"));?if(extName == null) throw new IllegalStateException(\"Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (\" + url.toString() + \") use keys([server, transporter])\");?org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);?return extension.bind(arg0, arg1);?}?public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {?if (arg0 == null) throw new IllegalArgumentException(\"url == null\");?org.apache.dubbo.common.URL url = arg0;?String extName = url.getParameter(\"client\", url.getParameter(\"transporter\", \"netty\"));?if(extName == null) throw new IllegalStateException(\"Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (\" + url.toString() + \") use keys([client, transporter])\");?org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);?return extension.connect(arg0, arg1);?}?}?, stack: java.lang.NoClassDefFoundError: javassist/ClassPath??java.lang.NoClassDefFoundError: javassist/ClassPath??at org.apache.dubbo.common.compiler.support.JavassistCompiler.doCompile(JavassistCompiler.java:43)??at org.apache.dubbo.common.compiler.support.AbstractCompiler.compile(AbstractCompiler.java:58)??at org.apache.dubbo.common.compiler.support.AdaptiveCompiler.compile(AdaptiveCompiler.java:45)??at org.apache.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClass(ExtensionLoader.java:1039)??at org.apache.dubbo.common.extension.ExtensionLoader.getAdaptiveExtensionClass(ExtensionLoader.java:1032)??at org.apache.dubbo.common.extension.ExtensionLoader.createAdaptiveExtension(ExtensionLoader.java:1021)??at org.apache.dubbo.common.extension.ExtensionLoader.getAdaptiveExtension(ExtensionLoader.java:588)??at org.apache.dubbo.remoting.Transporters.getTransporter(Transporters.java:79)??at org.apache.dubbo.remoting.Transporters.connect(Transporters.java:75)??at org.apache.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:94)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:90)??at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)??at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)??at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)??at java.lang.reflect.Method.invoke(Method.java:498)??at randoop.util.MethodReflectionCode.runReflectionCodeRaw(MethodReflectionCode.java:53)??at randoop.util.ReflectionCode.runReflectionCode(ReflectionCode.java:59)??at randoop.util.RunnerThread.executeReflectionCode(RunnerThread.java:49)??at randoop.util.RunnerThread.run(RunnerThread.java:43)?Caused by: java.lang.ClassNotFoundException: javassist.ClassPath??at java.net.URLClassLoader.findClass(URLClassLoader.java:382)??at java.lang.ClassLoader.loadClass(ClassLoader.java:418)??at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:355)??at java.lang.ClassLoader.loadClass(ClassLoader.java:351)??... 21 more?");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray4);
        org.junit.Assert.assertNotNull(channelHandlerArray11);
        org.junit.Assert.assertNotNull(channelHandlerArray18);
        org.junit.Assert.assertNotNull(channelHandlerArray22);
        org.junit.Assert.assertNotNull(channelHandlerArray27);
    }

    @Test
    public void test391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test391");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.common.URL uRL2 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler3 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher1, uRL2);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher4 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher5 = channelHandlerDispatcher1.removeChannelHandler((org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher4);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray6 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher7 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray6);
        org.apache.dubbo.common.URL uRL8 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler9 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher7, uRL8);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray10 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher11 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray10);
        org.apache.dubbo.common.URL uRL12 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler13 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher11, uRL12);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler14 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler13);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate15 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray16 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher17 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray16);
        org.apache.dubbo.common.URL uRL18 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler19 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher17, uRL18);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState20 = null;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        java.net.InetSocketAddress inetSocketAddress22 = null;
        org.apache.dubbo.remoting.RemotingException remotingException24 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress21, inetSocketAddress22, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable25 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate15, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler19, channelState20, (java.lang.Throwable) remotingException24);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher26 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState27 = null;
        java.net.InetSocketAddress inetSocketAddress29 = null;
        java.net.InetSocketAddress inetSocketAddress30 = null;
        org.apache.dubbo.remoting.ExecutionException executionException32 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress29, inetSocketAddress30, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable33 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate15, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher26, channelState27, (java.lang.Throwable) executionException32);
        decodeHandler14.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate15);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray35 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher36 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray35);
        org.apache.dubbo.remoting.Channel channel37 = null;
        java.lang.Throwable throwable38 = null;
        channelHandlerDispatcher36.caught(channel37, throwable38);
        directChannelHandler9.sent((org.apache.dubbo.remoting.Channel) channelDelegate15, (java.lang.Object) channel37);
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher41 = channelHandlerDispatcher1.removeChannelHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler9);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate42 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray43 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher44 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray43);
        org.apache.dubbo.common.URL uRL45 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler46 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher44, uRL45);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState47 = null;
        java.net.InetSocketAddress inetSocketAddress48 = null;
        java.net.InetSocketAddress inetSocketAddress49 = null;
        org.apache.dubbo.remoting.RemotingException remotingException51 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress48, inetSocketAddress49, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable52 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate42, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler46, channelState47, (java.lang.Throwable) remotingException51);
        channelHandlerDispatcher41.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate42);
        org.junit.Assert.assertNotNull(channelHandlerArray0);
        org.junit.Assert.assertNotNull(channelHandlerDispatcher5);
        org.junit.Assert.assertNotNull(channelHandlerArray6);
        org.junit.Assert.assertNotNull(channelHandlerArray10);
        org.junit.Assert.assertNotNull(channelHandlerArray16);
        org.junit.Assert.assertNotNull(channelHandlerArray35);
        org.junit.Assert.assertNotNull(channelHandlerDispatcher41);
        org.junit.Assert.assertNotNull(channelHandlerArray43);
    }

    @Test
    public void test392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test392");
        java.util.concurrent.CompletableFuture[] completableFutureArray1 = new java.util.concurrent.CompletableFuture[0];
        @SuppressWarnings("unchecked")
        java.util.concurrent.CompletableFuture<?>[] wildcardCompletableFutureArray2 = (java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1;
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture3 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1);
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture4 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState5 = org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState.CAUGHT;
        objCompletableFuture4.obtrudeValue((java.lang.Object) channelState5);
        java.net.InetSocketAddress inetSocketAddress7 = null;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        java.net.InetSocketAddress inetSocketAddress10 = null;
        org.apache.dubbo.remoting.RemotingException remotingException12 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress9, inetSocketAddress10, "charset");
        org.apache.dubbo.remoting.RemotingException remotingException13 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress7, inetSocketAddress8, (java.lang.Throwable) remotingException12);
        java.lang.Throwable[] throwableArray14 = remotingException13.getSuppressed();
        boolean boolean15 = objCompletableFuture4.completeExceptionally((java.lang.Throwable) remotingException13);
        java.util.concurrent.TimeUnit timeUnit17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = objCompletableFuture4.get((long) (byte) 10, timeUnit17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(completableFutureArray1);
        org.junit.Assert.assertNotNull(wildcardCompletableFutureArray2);
        org.junit.Assert.assertNotNull(objCompletableFuture3);
        org.junit.Assert.assertNotNull(objCompletableFuture4);
        org.junit.Assert.assertTrue("'" + channelState5 + "' != '" + org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState.CAUGHT + "'", channelState5.equals(org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState.CAUGHT));
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test393");
        java.lang.String str0 = org.apache.dubbo.remoting.Constants.CONNECTIONS_KEY;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "connections" + "'", str0, "connections");
    }

    @Test
    public void test394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test394");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) (byte) 1);
    }

    @Test
    public void test395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test395");
        java.lang.Object obj0 = org.apache.dubbo.remoting.Codec.NEED_MORE_INPUT;
        org.junit.Assert.assertNotNull(obj0);
    }

    @Test
    public void test396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test396");
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory1 = org.apache.dubbo.remoting.buffer.DirectChannelBufferFactory.getInstance();
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer2 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 60, channelBufferFactory1);
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer4 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer6 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer8 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean9 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer6, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer8);
        heapChannelBuffer8.resetReaderIndex();
        heapChannelBuffer8.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream12 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer8);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer15 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer17 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean18 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer15, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer17);
        heapChannelBuffer17.resetReaderIndex();
        heapChannelBuffer17.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream21 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer17);
        int int23 = heapChannelBuffer8.setBytes((int) (byte) 10, (java.io.InputStream) channelBufferInputStream21, (int) (byte) 100);
        int int25 = dynamicChannelBuffer4.writeBytes((java.io.InputStream) channelBufferInputStream21, 0);
        channelBufferInputStream21.close();
        int int28 = dynamicChannelBuffer2.writeBytes((java.io.InputStream) channelBufferInputStream21, (int) (byte) 10);
        org.junit.Assert.assertNotNull(channelBufferFactory1);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
    }

    @Test
    public void test397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test397");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray1 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher2 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray1);
        org.apache.dubbo.common.URL uRL3 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler4 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher2, uRL3);
        org.apache.dubbo.remoting.ChannelHandler channelHandler5 = messageOnlyChannelHandler4.getHandler();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher6 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher7 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher6);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.exchange.ExchangeClient exchangeClient8 = org.apache.dubbo.remoting.exchange.Exchangers.connect("Unsupported parameter Response [id=1, version=, status=20, event=false, error=null, result=null] for status.", channelHandler5, (org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Failed to create adaptive instance: java.lang.IllegalStateException: Can't create adaptive extension interface org.apache.dubbo.remoting.Transporter, cause: Failed to compile class, cause: javassist/ClassPath, class: org.apache.dubbo.remoting.Transporter$Adaptive, code: ?package org.apache.dubbo.remoting;?import org.apache.dubbo.common.extension.ExtensionLoader;?public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {?public org.apache.dubbo.remoting.RemotingServer bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {?if (arg0 == null) throw new IllegalArgumentException(\"url == null\");?org.apache.dubbo.common.URL url = arg0;?String extName = url.getParameter(\"server\", url.getParameter(\"transporter\", \"netty\"));?if(extName == null) throw new IllegalStateException(\"Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (\" + url.toString() + \") use keys([server, transporter])\");?org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);?return extension.bind(arg0, arg1);?}?public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {?if (arg0 == null) throw new IllegalArgumentException(\"url == null\");?org.apache.dubbo.common.URL url = arg0;?String extName = url.getParameter(\"client\", url.getParameter(\"transporter\", \"netty\"));?if(extName == null) throw new IllegalStateException(\"Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (\" + url.toString() + \") use keys([client, transporter])\");?org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);?return extension.connect(arg0, arg1);?}?}?, stack: java.lang.NoClassDefFoundError: javassist/ClassPath??java.lang.NoClassDefFoundError: javassist/ClassPath??at org.apache.dubbo.common.compiler.support.JavassistCompiler.doCompile(JavassistCompiler.java:43)??at org.apache.dubbo.common.compiler.support.AbstractCompiler.compile(AbstractCompiler.java:58)??at org.apache.dubbo.common.compiler.support.AdaptiveCompiler.compile(AdaptiveCompiler.java:45)??at org.apache.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClass(ExtensionLoader.java:1039)??at org.apache.dubbo.common.extension.ExtensionLoader.getAdaptiveExtensionClass(ExtensionLoader.java:1032)??at org.apache.dubbo.common.extension.ExtensionLoader.createAdaptiveExtension(ExtensionLoader.java:1021)??at org.apache.dubbo.common.extension.ExtensionLoader.getAdaptiveExtension(ExtensionLoader.java:588)??at org.apache.dubbo.remoting.Transporters.getTransporter(Transporters.java:79)??at org.apache.dubbo.remoting.Transporters.connect(Transporters.java:75)??at org.apache.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:94)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:90)??at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)??at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)??at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)??at java.lang.reflect.Method.invoke(Method.java:498)??at randoop.util.MethodReflectionCode.runReflectionCodeRaw(MethodReflectionCode.java:53)??at randoop.util.ReflectionCode.runReflectionCode(ReflectionCode.java:59)??at randoop.util.RunnerThread.executeReflectionCode(RunnerThread.java:49)??at randoop.util.RunnerThread.run(RunnerThread.java:43)?Caused by: java.lang.ClassNotFoundException: javassist.ClassPath??at java.net.URLClassLoader.findClass(URLClassLoader.java:382)??at java.lang.ClassLoader.loadClass(ClassLoader.java:418)??at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:355)??at java.lang.ClassLoader.loadClass(ClassLoader.java:351)??... 21 more?");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray1);
        org.junit.Assert.assertNotNull(channelHandler5);
    }

    @Test
    public void test398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test398");
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer1 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        boolean boolean2 = dynamicChannelBuffer1.hasArray();
        dynamicChannelBuffer1.markReaderIndex();
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory4 = dynamicChannelBuffer1.factory();
        // The following exception was thrown during execution in test generation
        try {
            dynamicChannelBuffer1.readerIndex((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(channelBufferFactory4);
    }

    @Test
    public void test399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test399");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        int int5 = heapChannelBuffer1.readerIndex();
        heapChannelBuffer1.clear();
        boolean boolean7 = heapChannelBuffer1.writable();
        boolean boolean8 = heapChannelBuffer1.readable();
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer11 = heapChannelBuffer1.copy(3, 0);
        channelBuffer11.discardReadBytes();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(channelBuffer11);
    }

    @Test
    public void test400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test400");
        int int0 = org.apache.dubbo.remoting.TimeoutException.SERVER_SIDE;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 1 + "'", int0 == 1);
    }

    @Test
    public void test401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test401");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer6 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer8 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean9 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer6, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer8);
        heapChannelBuffer3.writeBytes((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer6);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer12 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer14 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean15 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer12, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer14);
        int int16 = heapChannelBuffer12.readerIndex();
        heapChannelBuffer12.clear();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer19 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer21 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean22 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer19, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer21);
        heapChannelBuffer21.resetReaderIndex();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer26 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray27 = heapChannelBuffer26.array();
        byte[] byteArray32 = new byte[] { (byte) 1, (byte) 20, (byte) 70, (byte) 10 };
        heapChannelBuffer26.writeBytes(byteArray32);
        heapChannelBuffer21.setBytes(0, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer26, (int) (byte) 1, 10);
        heapChannelBuffer12.writeBytes((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer26, (int) ' ', (int) (short) 10);
        int int40 = heapChannelBuffer6.compareTo((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer26);
        heapChannelBuffer6.markWriterIndex();
        int int42 = heapChannelBuffer6.capacity();
        java.io.OutputStream outputStream44 = null;
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer6.getBytes((int) (short) 0, outputStream44, 60000);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, 20, 70, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[1, 20, 70, 10]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-4) + "'", int40 == (-4));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
    }

    @Test
    public void test402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test402");
        org.apache.dubbo.remoting.exchange.support.header.HeaderExchanger headerExchanger0 = new org.apache.dubbo.remoting.exchange.support.header.HeaderExchanger();
        org.apache.dubbo.common.URL uRL1 = null;
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray2 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher3 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray2);
        org.apache.dubbo.common.URL uRL4 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler5 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher3, uRL4);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher6 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher7 = channelHandlerDispatcher3.removeChannelHandler((org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher6);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray8 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher9 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray8);
        org.apache.dubbo.common.URL uRL10 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler11 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher9, uRL10);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler12 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler11);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate13 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray14 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher15 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray14);
        org.apache.dubbo.common.URL uRL16 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler17 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher15, uRL16);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState18 = null;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        org.apache.dubbo.remoting.RemotingException remotingException22 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress19, inetSocketAddress20, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable23 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate13, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler17, channelState18, (java.lang.Throwable) remotingException22);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher24 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState25 = null;
        java.net.InetSocketAddress inetSocketAddress27 = null;
        java.net.InetSocketAddress inetSocketAddress28 = null;
        org.apache.dubbo.remoting.ExecutionException executionException30 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress27, inetSocketAddress28, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable31 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate13, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher24, channelState25, (java.lang.Throwable) executionException30);
        decodeHandler12.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate13);
        org.apache.dubbo.remoting.ChannelHandler channelHandler33 = decodeHandler12.getHandler();
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher34 = exchangeHandlerDispatcher6.addChannelHandler(channelHandler33);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.exchange.ExchangeClient exchangeClient35 = headerExchanger0.connect(uRL1, (org.apache.dubbo.remoting.exchange.ExchangeHandler) exchangeHandlerDispatcher34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: url == null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray2);
        org.junit.Assert.assertNotNull(channelHandlerDispatcher7);
        org.junit.Assert.assertNotNull(channelHandlerArray8);
        org.junit.Assert.assertNotNull(channelHandlerArray14);
        org.junit.Assert.assertNotNull(channelHandler33);
        org.junit.Assert.assertNotNull(exchangeHandlerDispatcher34);
    }

    @Test
    public void test403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test403");
        java.util.concurrent.CompletableFuture[] completableFutureArray1 = new java.util.concurrent.CompletableFuture[0];
        @SuppressWarnings("unchecked")
        java.util.concurrent.CompletableFuture<?>[] wildcardCompletableFutureArray2 = (java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1;
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture3 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1);
        java.util.concurrent.CompletableFuture<java.lang.Void> voidCompletableFuture4 = java.util.concurrent.CompletableFuture.allOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1);
        org.junit.Assert.assertNotNull(completableFutureArray1);
        org.junit.Assert.assertNotNull(wildcardCompletableFutureArray2);
        org.junit.Assert.assertNotNull(objCompletableFuture3);
        org.junit.Assert.assertNotNull(voidCompletableFuture4);
    }

    @Test
    public void test404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test404");
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate0 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj1 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate0);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate2 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate0);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate3 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj4 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate3);
        exchangeServerDelegate0.setServer((org.apache.dubbo.remoting.exchange.ExchangeServer) exchangeServerDelegate3);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate6 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj7 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate6);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate8 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate6);
        exchangeServerDelegate3.setServer((org.apache.dubbo.remoting.exchange.ExchangeServer) exchangeServerDelegate6);
        org.apache.dubbo.common.URL uRL10 = null;
        // The following exception was thrown during execution in test generation
        try {
            exchangeServerDelegate6.reset(uRL10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertNotNull(obj7);
    }

    @Test
    public void test405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test405");
        org.apache.dubbo.remoting.utils.PayloadDropper payloadDropper0 = new org.apache.dubbo.remoting.utils.PayloadDropper();
    }

    @Test
    public void test406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test406");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.common.URL uRL2 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler3 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher1, uRL2);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler4 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler3);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate5 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray6 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher7 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray6);
        org.apache.dubbo.common.URL uRL8 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler9 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher7, uRL8);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState10 = null;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        org.apache.dubbo.remoting.RemotingException remotingException14 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress11, inetSocketAddress12, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable15 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate5, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler9, channelState10, (java.lang.Throwable) remotingException14);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher16 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState17 = null;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        org.apache.dubbo.remoting.ExecutionException executionException22 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress19, inetSocketAddress20, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable23 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate5, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher16, channelState17, (java.lang.Throwable) executionException22);
        decodeHandler4.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate5);
        java.lang.Object obj25 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) channelDelegate5);
        org.apache.dubbo.remoting.exchange.Request request26 = new org.apache.dubbo.remoting.exchange.Request();
        boolean boolean27 = request26.isTwoWay();
        java.util.concurrent.ExecutorService executorService29 = null;
        org.apache.dubbo.remoting.exchange.support.DefaultFuture defaultFuture30 = org.apache.dubbo.remoting.exchange.support.DefaultFuture.newFuture((org.apache.dubbo.remoting.Channel) channelDelegate5, request26, (int) (byte) 100, executorService29);
        request26.setEvent("No such command netty");
        request26.setVersion("");
        boolean boolean35 = request26.isHeartbeat();
        org.junit.Assert.assertNotNull(channelHandlerArray0);
        org.junit.Assert.assertNotNull(channelHandlerArray6);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(defaultFuture30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test407");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.common.URL uRL2 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler3 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher1, uRL2);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher4 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher5 = channelHandlerDispatcher1.removeChannelHandler((org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher4);
        org.apache.dubbo.remoting.Channel channel6 = null;
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray7 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher8 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray7);
        org.apache.dubbo.common.URL uRL9 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler10 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher8, uRL9);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState11 = null;
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable13 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable(channel6, (org.apache.dubbo.remoting.ChannelHandler) messageOnlyChannelHandler10, channelState11, (java.lang.Object) (short) 1);
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher14 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher15 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher14);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher16 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray17 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher18 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray17);
        org.apache.dubbo.remoting.Channel channel19 = null;
        java.lang.Throwable throwable20 = null;
        channelHandlerDispatcher18.caught(channel19, throwable20);
        org.apache.dubbo.remoting.Channel channel22 = null;
        channelHandlerDispatcher18.disconnected(channel22);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray24 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher25 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray24);
        org.apache.dubbo.remoting.Channel channel26 = null;
        java.lang.Throwable throwable27 = null;
        channelHandlerDispatcher25.caught(channel26, throwable27);
        org.apache.dubbo.remoting.Channel channel29 = null;
        channelHandlerDispatcher25.disconnected(channel29);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray31 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher32 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray31);
        org.apache.dubbo.common.URL uRL33 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler34 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher32, uRL33);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray35 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher36 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray35);
        org.apache.dubbo.common.URL uRL37 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler38 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher36, uRL37);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler39 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler38);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray40 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher16, channelHandlerDispatcher18, channelHandlerDispatcher25, channelHandlerDispatcher32, decodeHandler39 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher41 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher15, channelHandlerArray40);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray42 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher43 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray42);
        org.apache.dubbo.common.URL uRL44 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler45 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher43, uRL44);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler46 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler45);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate47 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray48 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher49 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray48);
        org.apache.dubbo.common.URL uRL50 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler51 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher49, uRL50);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState52 = null;
        java.net.InetSocketAddress inetSocketAddress53 = null;
        java.net.InetSocketAddress inetSocketAddress54 = null;
        org.apache.dubbo.remoting.RemotingException remotingException56 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress53, inetSocketAddress54, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable57 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate47, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler51, channelState52, (java.lang.Throwable) remotingException56);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher58 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState59 = null;
        java.net.InetSocketAddress inetSocketAddress61 = null;
        java.net.InetSocketAddress inetSocketAddress62 = null;
        org.apache.dubbo.remoting.ExecutionException executionException64 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress61, inetSocketAddress62, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable65 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate47, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher58, channelState59, (java.lang.Throwable) executionException64);
        decodeHandler46.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate47);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate67 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj68 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate67);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate69 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate67);
        exchangeHandlerDispatcher41.sent((org.apache.dubbo.remoting.Channel) channelDelegate47, (java.lang.Object) serverDelegate69);
        messageOnlyChannelHandler10.connected((org.apache.dubbo.remoting.Channel) channelDelegate47);
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory72 = org.apache.dubbo.remoting.buffer.HeapChannelBufferFactory.getInstance();
        java.net.InetSocketAddress inetSocketAddress73 = null;
        java.net.InetSocketAddress inetSocketAddress74 = null;
        java.net.InetSocketAddress inetSocketAddress76 = null;
        java.net.InetSocketAddress inetSocketAddress77 = null;
        org.apache.dubbo.remoting.ExecutionException executionException79 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress76, inetSocketAddress77, "hi!");
        org.apache.dubbo.remoting.ExecutionException executionException80 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) channelBufferFactory72, inetSocketAddress73, inetSocketAddress74, (java.lang.Throwable) executionException79);
        java.net.InetSocketAddress inetSocketAddress81 = executionException80.getRemoteAddress();
        channelHandlerDispatcher5.caught((org.apache.dubbo.remoting.Channel) channelDelegate47, (java.lang.Throwable) executionException80);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate83 = new org.apache.dubbo.remoting.transport.ChannelDelegate((org.apache.dubbo.remoting.Channel) channelDelegate47);
        org.junit.Assert.assertNotNull(channelHandlerArray0);
        org.junit.Assert.assertNotNull(channelHandlerDispatcher5);
        org.junit.Assert.assertNotNull(channelHandlerArray7);
        org.junit.Assert.assertNotNull(channelHandlerArray17);
        org.junit.Assert.assertNotNull(channelHandlerArray24);
        org.junit.Assert.assertNotNull(channelHandlerArray31);
        org.junit.Assert.assertNotNull(channelHandlerArray35);
        org.junit.Assert.assertNotNull(channelHandlerArray40);
        org.junit.Assert.assertNotNull(channelHandlerArray42);
        org.junit.Assert.assertNotNull(channelHandlerArray48);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertNotNull(channelBufferFactory72);
        org.junit.Assert.assertNull(inetSocketAddress81);
    }

    @Test
    public void test408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test408");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        boolean boolean5 = heapChannelBuffer1.writable();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer8 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer10 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean11 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer8, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer10);
        heapChannelBuffer10.resetReaderIndex();
        heapChannelBuffer10.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream14 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer10);
        int int16 = heapChannelBuffer1.setBytes(0, (java.io.InputStream) channelBufferInputStream14, (int) (byte) 40);
        java.lang.String str17 = heapChannelBuffer1.toString();
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer1.setByte(60000, (int) (byte) 30);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 60000");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "HeapChannelBuffer(ridx=0, widx=0, cap=52)" + "'", str17, "HeapChannelBuffer(ridx=0, widx=0, cap=52)");
    }

    @Test
    public void test409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test409");
        org.apache.dubbo.remoting.transport.ClientDelegate clientDelegate0 = new org.apache.dubbo.remoting.transport.ClientDelegate();
        org.apache.dubbo.remoting.transport.ClientDelegate clientDelegate1 = new org.apache.dubbo.remoting.transport.ClientDelegate();
        clientDelegate0.setClient((org.apache.dubbo.remoting.Client) clientDelegate1);
        org.apache.dubbo.common.Parameters parameters3 = null;
        // The following exception was thrown during execution in test generation
        try {
            clientDelegate1.reset(parameters3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test410");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher2 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher3 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher2);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher4 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray5 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher6 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray5);
        org.apache.dubbo.remoting.Channel channel7 = null;
        java.lang.Throwable throwable8 = null;
        channelHandlerDispatcher6.caught(channel7, throwable8);
        org.apache.dubbo.remoting.Channel channel10 = null;
        channelHandlerDispatcher6.disconnected(channel10);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray12 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher13 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray12);
        org.apache.dubbo.remoting.Channel channel14 = null;
        java.lang.Throwable throwable15 = null;
        channelHandlerDispatcher13.caught(channel14, throwable15);
        org.apache.dubbo.remoting.Channel channel17 = null;
        channelHandlerDispatcher13.disconnected(channel17);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray19 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher20 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray19);
        org.apache.dubbo.common.URL uRL21 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler22 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher20, uRL21);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray23 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher24 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray23);
        org.apache.dubbo.common.URL uRL25 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler26 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher24, uRL25);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler27 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler26);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray28 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher4, channelHandlerDispatcher6, channelHandlerDispatcher13, channelHandlerDispatcher20, decodeHandler27 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher29 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher3, channelHandlerArray28);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray30 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher31 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray30);
        org.apache.dubbo.common.URL uRL32 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler33 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher31, uRL32);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler34 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler33);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate35 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray36 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher37 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray36);
        org.apache.dubbo.common.URL uRL38 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler39 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher37, uRL38);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState40 = null;
        java.net.InetSocketAddress inetSocketAddress41 = null;
        java.net.InetSocketAddress inetSocketAddress42 = null;
        org.apache.dubbo.remoting.RemotingException remotingException44 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress41, inetSocketAddress42, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable45 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate35, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler39, channelState40, (java.lang.Throwable) remotingException44);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher46 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState47 = null;
        java.net.InetSocketAddress inetSocketAddress49 = null;
        java.net.InetSocketAddress inetSocketAddress50 = null;
        org.apache.dubbo.remoting.ExecutionException executionException52 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress49, inetSocketAddress50, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable53 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate35, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher46, channelState47, (java.lang.Throwable) executionException52);
        decodeHandler34.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate35);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate55 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj56 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate55);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate57 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate55);
        exchangeHandlerDispatcher29.sent((org.apache.dubbo.remoting.Channel) channelDelegate35, (java.lang.Object) serverDelegate57);
        channelHandlerDispatcher1.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate35);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray60 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher61 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray60);
        org.apache.dubbo.common.URL uRL62 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler63 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher61, uRL62);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher64 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher65 = channelHandlerDispatcher61.removeChannelHandler((org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher64);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState66 = org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState.RECEIVED;
        java.lang.Object obj67 = null;
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory68 = org.apache.dubbo.remoting.buffer.HeapChannelBufferFactory.getInstance();
        java.net.InetSocketAddress inetSocketAddress69 = null;
        java.net.InetSocketAddress inetSocketAddress70 = null;
        java.net.InetSocketAddress inetSocketAddress72 = null;
        java.net.InetSocketAddress inetSocketAddress73 = null;
        org.apache.dubbo.remoting.ExecutionException executionException75 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress72, inetSocketAddress73, "hi!");
        org.apache.dubbo.remoting.ExecutionException executionException76 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) channelBufferFactory68, inetSocketAddress69, inetSocketAddress70, (java.lang.Throwable) executionException75);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable77 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate35, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher64, channelState66, obj67, (java.lang.Throwable) executionException76);
        java.util.concurrent.CompletableFuture<java.lang.Void> voidCompletableFuture78 = java.util.concurrent.CompletableFuture.runAsync((java.lang.Runnable) channelEventRunnable77);
        org.junit.Assert.assertNotNull(channelHandlerArray0);
        org.junit.Assert.assertNotNull(channelHandlerArray5);
        org.junit.Assert.assertNotNull(channelHandlerArray12);
        org.junit.Assert.assertNotNull(channelHandlerArray19);
        org.junit.Assert.assertNotNull(channelHandlerArray23);
        org.junit.Assert.assertNotNull(channelHandlerArray28);
        org.junit.Assert.assertNotNull(channelHandlerArray30);
        org.junit.Assert.assertNotNull(channelHandlerArray36);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(channelHandlerArray60);
        org.junit.Assert.assertNotNull(channelHandlerDispatcher65);
        org.junit.Assert.assertTrue("'" + channelState66 + "' != '" + org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState.RECEIVED + "'", channelState66.equals(org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState.RECEIVED));
        org.junit.Assert.assertNotNull(channelBufferFactory68);
        org.junit.Assert.assertNotNull(voidCompletableFuture78);
    }

    @Test
    public void test411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test411");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        heapChannelBuffer3.discardReadBytes();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer9 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer11 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean12 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer9, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer11);
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer13 = heapChannelBuffer9.copy();
        heapChannelBuffer3.setBytes((int) (byte) 0, channelBuffer13);
        boolean boolean15 = heapChannelBuffer3.isDirect();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(channelBuffer13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test412");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer6 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer8 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean9 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer6, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer8);
        heapChannelBuffer3.writeBytes((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer6);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer12 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer14 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean15 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer12, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer14);
        int int16 = heapChannelBuffer12.readerIndex();
        heapChannelBuffer12.clear();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer19 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer21 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean22 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer19, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer21);
        heapChannelBuffer21.resetReaderIndex();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer26 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray27 = heapChannelBuffer26.array();
        byte[] byteArray32 = new byte[] { (byte) 1, (byte) 20, (byte) 70, (byte) 10 };
        heapChannelBuffer26.writeBytes(byteArray32);
        heapChannelBuffer21.setBytes(0, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer26, (int) (byte) 1, 10);
        heapChannelBuffer12.writeBytes((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer26, (int) ' ', (int) (short) 10);
        int int40 = heapChannelBuffer6.compareTo((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer26);
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer42 = null;
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer6.setBytes((int) (byte) 40, channelBuffer42, 3000);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1, 20, 70, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[1, 20, 70, 10]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-4) + "'", int40 == (-4));
    }

    @Test
    public void test413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test413");
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher0 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.ExchangeChannel exchangeChannel1 = null;
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray2 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher3 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray2);
        org.apache.dubbo.common.URL uRL4 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler5 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher3, uRL4);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher6 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher7 = channelHandlerDispatcher3.removeChannelHandler((org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher6);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray8 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher9 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray8);
        org.apache.dubbo.common.URL uRL10 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler11 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher9, uRL10);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray12 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher13 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray12);
        org.apache.dubbo.common.URL uRL14 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler15 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher13, uRL14);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler16 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler15);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate17 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray18 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher19 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray18);
        org.apache.dubbo.common.URL uRL20 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler21 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher19, uRL20);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState22 = null;
        java.net.InetSocketAddress inetSocketAddress23 = null;
        java.net.InetSocketAddress inetSocketAddress24 = null;
        org.apache.dubbo.remoting.RemotingException remotingException26 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress23, inetSocketAddress24, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable27 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate17, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler21, channelState22, (java.lang.Throwable) remotingException26);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher28 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState29 = null;
        java.net.InetSocketAddress inetSocketAddress31 = null;
        java.net.InetSocketAddress inetSocketAddress32 = null;
        org.apache.dubbo.remoting.ExecutionException executionException34 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress31, inetSocketAddress32, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable35 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate17, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher28, channelState29, (java.lang.Throwable) executionException34);
        decodeHandler16.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate17);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray37 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher38 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray37);
        org.apache.dubbo.remoting.Channel channel39 = null;
        java.lang.Throwable throwable40 = null;
        channelHandlerDispatcher38.caught(channel39, throwable40);
        directChannelHandler11.sent((org.apache.dubbo.remoting.Channel) channelDelegate17, (java.lang.Object) channel39);
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher43 = channelHandlerDispatcher3.removeChannelHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler11);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray44 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher45 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray44);
        org.apache.dubbo.common.URL uRL46 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler47 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher45, uRL46);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray48 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher49 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray48);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray50 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher51 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray50);
        org.apache.dubbo.common.URL uRL52 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler53 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher51, uRL52);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler54 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler53);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate55 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray56 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher57 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray56);
        org.apache.dubbo.common.URL uRL58 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler59 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher57, uRL58);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState60 = null;
        java.net.InetSocketAddress inetSocketAddress61 = null;
        java.net.InetSocketAddress inetSocketAddress62 = null;
        org.apache.dubbo.remoting.RemotingException remotingException64 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress61, inetSocketAddress62, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable65 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate55, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler59, channelState60, (java.lang.Throwable) remotingException64);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher66 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState67 = null;
        java.net.InetSocketAddress inetSocketAddress69 = null;
        java.net.InetSocketAddress inetSocketAddress70 = null;
        org.apache.dubbo.remoting.ExecutionException executionException72 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress69, inetSocketAddress70, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable73 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate55, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher66, channelState67, (java.lang.Throwable) executionException72);
        decodeHandler54.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate55);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate75 = new org.apache.dubbo.remoting.transport.ChannelDelegate((org.apache.dubbo.remoting.Channel) channelDelegate55);
        channelHandlerDispatcher49.received((org.apache.dubbo.remoting.Channel) channelDelegate75, (java.lang.Object) (byte) 0);
        directChannelHandler47.connected((org.apache.dubbo.remoting.Channel) channelDelegate75);
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher79 = channelHandlerDispatcher43.addChannelHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler47);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj80 = replierDispatcher0.reply(exchangeChannel1, (java.lang.Object) directChannelHandler47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Replier not found, Unsupported message object: class org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray2);
        org.junit.Assert.assertNotNull(channelHandlerDispatcher7);
        org.junit.Assert.assertNotNull(channelHandlerArray8);
        org.junit.Assert.assertNotNull(channelHandlerArray12);
        org.junit.Assert.assertNotNull(channelHandlerArray18);
        org.junit.Assert.assertNotNull(channelHandlerArray37);
        org.junit.Assert.assertNotNull(channelHandlerDispatcher43);
        org.junit.Assert.assertNotNull(channelHandlerArray44);
        org.junit.Assert.assertNotNull(channelHandlerArray48);
        org.junit.Assert.assertNotNull(channelHandlerArray50);
        org.junit.Assert.assertNotNull(channelHandlerArray56);
        org.junit.Assert.assertNotNull(channelHandlerDispatcher79);
    }

    @Test
    public void test414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test414");
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer1 = org.apache.dubbo.remoting.buffer.ChannelBuffers.buffer((int) (short) 10);
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream2 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream(channelBuffer1);
        int int3 = channelBuffer1.capacity();
        org.junit.Assert.assertNotNull(channelBuffer1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 10 + "'", int3 == 10);
    }

    @Test
    public void test415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test415");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        int int5 = heapChannelBuffer1.readerIndex();
        heapChannelBuffer1.clear();
        heapChannelBuffer1.resetWriterIndex();
        boolean boolean8 = heapChannelBuffer1.writable();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream10 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: length: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test416");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.common.URL uRL2 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler3 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher1, uRL2);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher4 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher5 = channelHandlerDispatcher1.removeChannelHandler((org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher4);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray6 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher7 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray6);
        org.apache.dubbo.common.URL uRL8 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler9 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher7, uRL8);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray10 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher11 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray10);
        org.apache.dubbo.common.URL uRL12 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler13 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher11, uRL12);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler14 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler13);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate15 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray16 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher17 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray16);
        org.apache.dubbo.common.URL uRL18 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler19 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher17, uRL18);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState20 = null;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        java.net.InetSocketAddress inetSocketAddress22 = null;
        org.apache.dubbo.remoting.RemotingException remotingException24 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress21, inetSocketAddress22, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable25 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate15, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler19, channelState20, (java.lang.Throwable) remotingException24);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher26 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState27 = null;
        java.net.InetSocketAddress inetSocketAddress29 = null;
        java.net.InetSocketAddress inetSocketAddress30 = null;
        org.apache.dubbo.remoting.ExecutionException executionException32 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress29, inetSocketAddress30, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable33 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate15, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher26, channelState27, (java.lang.Throwable) executionException32);
        decodeHandler14.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate15);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray35 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher36 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray35);
        org.apache.dubbo.remoting.Channel channel37 = null;
        java.lang.Throwable throwable38 = null;
        channelHandlerDispatcher36.caught(channel37, throwable38);
        directChannelHandler9.sent((org.apache.dubbo.remoting.Channel) channelDelegate15, (java.lang.Object) channel37);
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher41 = channelHandlerDispatcher1.removeChannelHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler9);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray42 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher43 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray42);
        org.apache.dubbo.common.URL uRL44 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler45 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher43, uRL44);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray46 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher47 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray46);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray48 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher49 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray48);
        org.apache.dubbo.common.URL uRL50 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler51 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher49, uRL50);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler52 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler51);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate53 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray54 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher55 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray54);
        org.apache.dubbo.common.URL uRL56 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler57 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher55, uRL56);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState58 = null;
        java.net.InetSocketAddress inetSocketAddress59 = null;
        java.net.InetSocketAddress inetSocketAddress60 = null;
        org.apache.dubbo.remoting.RemotingException remotingException62 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress59, inetSocketAddress60, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable63 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate53, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler57, channelState58, (java.lang.Throwable) remotingException62);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher64 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState65 = null;
        java.net.InetSocketAddress inetSocketAddress67 = null;
        java.net.InetSocketAddress inetSocketAddress68 = null;
        org.apache.dubbo.remoting.ExecutionException executionException70 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress67, inetSocketAddress68, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable71 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate53, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher64, channelState65, (java.lang.Throwable) executionException70);
        decodeHandler52.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate53);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate73 = new org.apache.dubbo.remoting.transport.ChannelDelegate((org.apache.dubbo.remoting.Channel) channelDelegate53);
        channelHandlerDispatcher47.received((org.apache.dubbo.remoting.Channel) channelDelegate73, (java.lang.Object) (byte) 0);
        directChannelHandler45.connected((org.apache.dubbo.remoting.Channel) channelDelegate73);
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher77 = channelHandlerDispatcher41.addChannelHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler45);
        java.util.Collection<org.apache.dubbo.remoting.ChannelHandler> channelHandlerCollection78 = channelHandlerDispatcher41.getChannelHandlers();
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher79 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerCollection78);
        org.junit.Assert.assertNotNull(channelHandlerArray0);
        org.junit.Assert.assertNotNull(channelHandlerDispatcher5);
        org.junit.Assert.assertNotNull(channelHandlerArray6);
        org.junit.Assert.assertNotNull(channelHandlerArray10);
        org.junit.Assert.assertNotNull(channelHandlerArray16);
        org.junit.Assert.assertNotNull(channelHandlerArray35);
        org.junit.Assert.assertNotNull(channelHandlerDispatcher41);
        org.junit.Assert.assertNotNull(channelHandlerArray42);
        org.junit.Assert.assertNotNull(channelHandlerArray46);
        org.junit.Assert.assertNotNull(channelHandlerArray48);
        org.junit.Assert.assertNotNull(channelHandlerArray54);
        org.junit.Assert.assertNotNull(channelHandlerDispatcher77);
        org.junit.Assert.assertNotNull(channelHandlerCollection78);
    }

    @Test
    public void test417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test417");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) (byte) 0);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer5 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean6 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer5);
        int int7 = heapChannelBuffer3.readerIndex();
        heapChannelBuffer3.clear();
        boolean boolean9 = heapChannelBuffer3.writable();
        boolean boolean10 = heapChannelBuffer3.readable();
        int int11 = org.apache.dubbo.remoting.buffer.ChannelBuffers.compare((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer1.resetWriterIndex();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer14 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray15 = heapChannelBuffer14.array();
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer1.readBytes(byteArray15);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test418");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray0 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher1 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray0);
        org.apache.dubbo.common.URL uRL2 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler3 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher1, uRL2);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler4 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler3);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate5 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray6 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher7 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray6);
        org.apache.dubbo.common.URL uRL8 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler9 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher7, uRL8);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState10 = null;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        org.apache.dubbo.remoting.RemotingException remotingException14 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress11, inetSocketAddress12, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable15 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate5, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler9, channelState10, (java.lang.Throwable) remotingException14);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher16 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState17 = null;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        org.apache.dubbo.remoting.ExecutionException executionException22 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress19, inetSocketAddress20, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable23 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate5, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher16, channelState17, (java.lang.Throwable) executionException22);
        decodeHandler4.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate5);
        java.lang.Object obj25 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) channelDelegate5);
        org.apache.dubbo.remoting.exchange.Request request26 = new org.apache.dubbo.remoting.exchange.Request();
        boolean boolean27 = request26.isTwoWay();
        java.util.concurrent.ExecutorService executorService29 = null;
        org.apache.dubbo.remoting.exchange.support.DefaultFuture defaultFuture30 = org.apache.dubbo.remoting.exchange.support.DefaultFuture.newFuture((org.apache.dubbo.remoting.Channel) channelDelegate5, request26, (int) (byte) 100, executorService29);
        request26.setEvent("No such command netty");
        request26.setVersion("");
        boolean boolean35 = request26.isTwoWay();
        org.junit.Assert.assertNotNull(channelHandlerArray0);
        org.junit.Assert.assertNotNull(channelHandlerArray6);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(defaultFuture30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test419");
        java.net.InetSocketAddress inetSocketAddress0 = null;
        java.net.InetSocketAddress inetSocketAddress1 = null;
        org.apache.dubbo.remoting.RemotingException remotingException3 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress0, inetSocketAddress1, "netty");
    }

    @Test
    public void test420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test420");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer8 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray9 = heapChannelBuffer8.array();
        byte[] byteArray14 = new byte[] { (byte) 1, (byte) 20, (byte) 70, (byte) 10 };
        heapChannelBuffer8.writeBytes(byteArray14);
        heapChannelBuffer3.setBytes(0, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer8, (int) (byte) 1, 10);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer20 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer22 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean23 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer20, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer22);
        heapChannelBuffer22.resetReaderIndex();
        heapChannelBuffer22.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream26 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer22);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer29 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer31 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean32 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer29, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer31);
        heapChannelBuffer31.resetReaderIndex();
        heapChannelBuffer31.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream35 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer31);
        int int37 = heapChannelBuffer22.setBytes((int) (byte) 10, (java.io.InputStream) channelBufferInputStream35, (int) (byte) 100);
        heapChannelBuffer8.writeBytes((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer22, (int) (byte) 0);
        java.nio.ByteBuffer byteBuffer40 = heapChannelBuffer22.toByteBuffer();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[1, 20, 70, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[1, 20, 70, 10]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(byteBuffer40);
    }

    @Test
    public void test421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test421");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer7 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        boolean boolean8 = dynamicChannelBuffer7.hasArray();
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory9 = dynamicChannelBuffer7.factory();
        int int10 = heapChannelBuffer3.compareTo((org.apache.dubbo.remoting.buffer.ChannelBuffer) dynamicChannelBuffer7);
        boolean boolean11 = dynamicChannelBuffer7.hasArray();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer14 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        heapChannelBuffer14.writeByte((int) (short) 10);
        heapChannelBuffer14.discardReadBytes();
        java.lang.String str18 = heapChannelBuffer14.toString();
        dynamicChannelBuffer7.setBytes(1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer14, (int) ' ', (int) (byte) 0);
        int int22 = dynamicChannelBuffer7.arrayOffset();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(channelBufferFactory9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "HeapChannelBuffer(ridx=0, widx=1, cap=52)" + "'", str18, "HeapChannelBuffer(ridx=0, widx=1, cap=52)");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test422");
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher1 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.exchange.ExchangeServer exchangeServer2 = org.apache.dubbo.remoting.exchange.Exchangers.bind("Response [id=1, version=, status=20, event=false, error=null, result=null]", (org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Failed to create adaptive instance: java.lang.IllegalStateException: Can't create adaptive extension interface org.apache.dubbo.remoting.Transporter, cause: Failed to compile class, cause: javassist/ClassPath, class: org.apache.dubbo.remoting.Transporter$Adaptive, code: ?package org.apache.dubbo.remoting;?import org.apache.dubbo.common.extension.ExtensionLoader;?public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {?public org.apache.dubbo.remoting.RemotingServer bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {?if (arg0 == null) throw new IllegalArgumentException(\"url == null\");?org.apache.dubbo.common.URL url = arg0;?String extName = url.getParameter(\"server\", url.getParameter(\"transporter\", \"netty\"));?if(extName == null) throw new IllegalStateException(\"Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (\" + url.toString() + \") use keys([server, transporter])\");?org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);?return extension.bind(arg0, arg1);?}?public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {?if (arg0 == null) throw new IllegalArgumentException(\"url == null\");?org.apache.dubbo.common.URL url = arg0;?String extName = url.getParameter(\"client\", url.getParameter(\"transporter\", \"netty\"));?if(extName == null) throw new IllegalStateException(\"Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (\" + url.toString() + \") use keys([client, transporter])\");?org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);?return extension.connect(arg0, arg1);?}?}?, stack: java.lang.NoClassDefFoundError: javassist/ClassPath??java.lang.NoClassDefFoundError: javassist/ClassPath??at org.apache.dubbo.common.compiler.support.JavassistCompiler.doCompile(JavassistCompiler.java:43)??at org.apache.dubbo.common.compiler.support.AbstractCompiler.compile(AbstractCompiler.java:58)??at org.apache.dubbo.common.compiler.support.AdaptiveCompiler.compile(AdaptiveCompiler.java:45)??at org.apache.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClass(ExtensionLoader.java:1039)??at org.apache.dubbo.common.extension.ExtensionLoader.getAdaptiveExtensionClass(ExtensionLoader.java:1032)??at org.apache.dubbo.common.extension.ExtensionLoader.createAdaptiveExtension(ExtensionLoader.java:1021)??at org.apache.dubbo.common.extension.ExtensionLoader.getAdaptiveExtension(ExtensionLoader.java:588)??at org.apache.dubbo.remoting.Transporters.getTransporter(Transporters.java:79)??at org.apache.dubbo.remoting.Transporters.connect(Transporters.java:75)??at org.apache.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:94)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:90)??at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)??at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)??at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)??at java.lang.reflect.Method.invoke(Method.java:498)??at randoop.util.MethodReflectionCode.runReflectionCodeRaw(MethodReflectionCode.java:53)??at randoop.util.ReflectionCode.runReflectionCode(ReflectionCode.java:59)??at randoop.util.RunnerThread.executeReflectionCode(RunnerThread.java:49)??at randoop.util.RunnerThread.run(RunnerThread.java:43)?Caused by: java.lang.ClassNotFoundException: javassist.ClassPath??at java.net.URLClassLoader.findClass(URLClassLoader.java:382)??at java.lang.ClassLoader.loadClass(ClassLoader.java:418)??at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:355)??at java.lang.ClassLoader.loadClass(ClassLoader.java:351)??... 21 more?");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
    }

    @Test
    public void test423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test423");
        org.apache.dubbo.remoting.Channel channel0 = null;
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray1 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher2 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray1);
        org.apache.dubbo.common.URL uRL3 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler4 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher2, uRL3);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState5 = null;
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable7 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable(channel0, (org.apache.dubbo.remoting.ChannelHandler) messageOnlyChannelHandler4, channelState5, (java.lang.Object) (short) 1);
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher8 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher9 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher8);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher10 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray11 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher12 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray11);
        org.apache.dubbo.remoting.Channel channel13 = null;
        java.lang.Throwable throwable14 = null;
        channelHandlerDispatcher12.caught(channel13, throwable14);
        org.apache.dubbo.remoting.Channel channel16 = null;
        channelHandlerDispatcher12.disconnected(channel16);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray18 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher19 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray18);
        org.apache.dubbo.remoting.Channel channel20 = null;
        java.lang.Throwable throwable21 = null;
        channelHandlerDispatcher19.caught(channel20, throwable21);
        org.apache.dubbo.remoting.Channel channel23 = null;
        channelHandlerDispatcher19.disconnected(channel23);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray25 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher26 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray25);
        org.apache.dubbo.common.URL uRL27 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler28 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher26, uRL27);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray29 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher30 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray29);
        org.apache.dubbo.common.URL uRL31 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler32 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher30, uRL31);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler33 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler32);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray34 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher10, channelHandlerDispatcher12, channelHandlerDispatcher19, channelHandlerDispatcher26, decodeHandler33 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher35 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher9, channelHandlerArray34);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray36 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher37 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray36);
        org.apache.dubbo.common.URL uRL38 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler39 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher37, uRL38);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler40 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler39);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate41 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray42 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher43 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray42);
        org.apache.dubbo.common.URL uRL44 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler45 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher43, uRL44);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState46 = null;
        java.net.InetSocketAddress inetSocketAddress47 = null;
        java.net.InetSocketAddress inetSocketAddress48 = null;
        org.apache.dubbo.remoting.RemotingException remotingException50 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress47, inetSocketAddress48, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable51 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate41, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler45, channelState46, (java.lang.Throwable) remotingException50);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher52 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState53 = null;
        java.net.InetSocketAddress inetSocketAddress55 = null;
        java.net.InetSocketAddress inetSocketAddress56 = null;
        org.apache.dubbo.remoting.ExecutionException executionException58 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress55, inetSocketAddress56, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable59 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate41, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher52, channelState53, (java.lang.Throwable) executionException58);
        decodeHandler40.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate41);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate61 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj62 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate61);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate63 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate61);
        exchangeHandlerDispatcher35.sent((org.apache.dubbo.remoting.Channel) channelDelegate41, (java.lang.Object) serverDelegate63);
        messageOnlyChannelHandler4.connected((org.apache.dubbo.remoting.Channel) channelDelegate41);
        org.apache.dubbo.remoting.Channel channel66 = channelDelegate41.getChannel();
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate67 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray68 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher69 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray68);
        org.apache.dubbo.common.URL uRL70 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler71 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher69, uRL70);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState72 = null;
        java.net.InetSocketAddress inetSocketAddress73 = null;
        java.net.InetSocketAddress inetSocketAddress74 = null;
        org.apache.dubbo.remoting.RemotingException remotingException76 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress73, inetSocketAddress74, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable77 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate67, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler71, channelState72, (java.lang.Throwable) remotingException76);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher78 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState79 = null;
        java.net.InetSocketAddress inetSocketAddress81 = null;
        java.net.InetSocketAddress inetSocketAddress82 = null;
        org.apache.dubbo.remoting.ExecutionException executionException84 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress81, inetSocketAddress82, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable85 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate67, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher78, channelState79, (java.lang.Throwable) executionException84);
        org.apache.dubbo.remoting.Channel channel86 = channelDelegate67.getChannel();
        channelDelegate41.setChannel((org.apache.dubbo.remoting.Channel) channelDelegate67);
        org.junit.Assert.assertNotNull(channelHandlerArray1);
        org.junit.Assert.assertNotNull(channelHandlerArray11);
        org.junit.Assert.assertNotNull(channelHandlerArray18);
        org.junit.Assert.assertNotNull(channelHandlerArray25);
        org.junit.Assert.assertNotNull(channelHandlerArray29);
        org.junit.Assert.assertNotNull(channelHandlerArray34);
        org.junit.Assert.assertNotNull(channelHandlerArray36);
        org.junit.Assert.assertNotNull(channelHandlerArray42);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNull(channel66);
        org.junit.Assert.assertNotNull(channelHandlerArray68);
        org.junit.Assert.assertNull(channel86);
    }

    @Test
    public void test424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test424");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        heapChannelBuffer3.discardReadBytes();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer9 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray10 = heapChannelBuffer9.array();
        // The following exception was thrown during execution in test generation
        try {
            heapChannelBuffer3.setBytes(8388608, byteArray10, (int) (short) 100, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test425");
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer1 = org.apache.dubbo.remoting.buffer.ChannelBuffers.buffer((int) (short) 10);
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream2 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream(channelBuffer1);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer4 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer6 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean7 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer4, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer6);
        int int8 = heapChannelBuffer4.readerIndex();
        heapChannelBuffer4.clear();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer11 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer13 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean14 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer11, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer13);
        heapChannelBuffer13.resetReaderIndex();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer18 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray19 = heapChannelBuffer18.array();
        byte[] byteArray24 = new byte[] { (byte) 1, (byte) 20, (byte) 70, (byte) 10 };
        heapChannelBuffer18.writeBytes(byteArray24);
        heapChannelBuffer13.setBytes(0, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer18, (int) (byte) 1, 10);
        heapChannelBuffer4.writeBytes((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer18, (int) ' ', (int) (short) 10);
        int int32 = heapChannelBuffer18.writerIndex();
        boolean boolean33 = channelBuffer1.equals((java.lang.Object) heapChannelBuffer18);
        org.junit.Assert.assertNotNull(channelBuffer1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 20, 70, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[1, 20, 70, 10]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 4 + "'", int32 == 4);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test426");
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher0 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher1 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher0);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray2 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher3 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray2);
        org.apache.dubbo.common.URL uRL4 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler5 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher3, uRL4);
        org.apache.dubbo.remoting.ChannelHandler channelHandler6 = messageOnlyChannelHandler5.getHandler();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray7 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher8 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray7);
        org.apache.dubbo.common.URL uRL9 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler10 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher8, uRL9);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler11 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler10);
        org.apache.dubbo.common.URL uRL12 = null;
        org.apache.dubbo.remoting.transport.dispatcher.WrappedChannelHandler wrappedChannelHandler13 = new org.apache.dubbo.remoting.transport.dispatcher.WrappedChannelHandler((org.apache.dubbo.remoting.ChannelHandler) decodeHandler11, uRL12);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray14 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher15 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray14);
        org.apache.dubbo.common.URL uRL16 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler17 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher15, uRL16);
        org.apache.dubbo.remoting.Channel channel18 = null;
        messageOnlyChannelHandler17.connected(channel18);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher20 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray21 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher22 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray21);
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher23 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher24 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher23);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher25 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray26 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher27 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray26);
        org.apache.dubbo.remoting.Channel channel28 = null;
        java.lang.Throwable throwable29 = null;
        channelHandlerDispatcher27.caught(channel28, throwable29);
        org.apache.dubbo.remoting.Channel channel31 = null;
        channelHandlerDispatcher27.disconnected(channel31);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray33 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher34 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray33);
        org.apache.dubbo.remoting.Channel channel35 = null;
        java.lang.Throwable throwable36 = null;
        channelHandlerDispatcher34.caught(channel35, throwable36);
        org.apache.dubbo.remoting.Channel channel38 = null;
        channelHandlerDispatcher34.disconnected(channel38);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray40 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher41 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray40);
        org.apache.dubbo.common.URL uRL42 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler43 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher41, uRL42);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray44 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher45 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray44);
        org.apache.dubbo.common.URL uRL46 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler47 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher45, uRL46);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler48 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler47);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray49 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher25, channelHandlerDispatcher27, channelHandlerDispatcher34, channelHandlerDispatcher41, decodeHandler48 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher50 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher24, channelHandlerArray49);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray51 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher52 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray51);
        org.apache.dubbo.common.URL uRL53 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler54 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher52, uRL53);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler55 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler54);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate56 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray57 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher58 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray57);
        org.apache.dubbo.common.URL uRL59 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler60 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher58, uRL59);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState61 = null;
        java.net.InetSocketAddress inetSocketAddress62 = null;
        java.net.InetSocketAddress inetSocketAddress63 = null;
        org.apache.dubbo.remoting.RemotingException remotingException65 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress62, inetSocketAddress63, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable66 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate56, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler60, channelState61, (java.lang.Throwable) remotingException65);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher67 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState68 = null;
        java.net.InetSocketAddress inetSocketAddress70 = null;
        java.net.InetSocketAddress inetSocketAddress71 = null;
        org.apache.dubbo.remoting.ExecutionException executionException73 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress70, inetSocketAddress71, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable74 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate56, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher67, channelState68, (java.lang.Throwable) executionException73);
        decodeHandler55.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate56);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate76 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj77 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate76);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate78 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate76);
        exchangeHandlerDispatcher50.sent((org.apache.dubbo.remoting.Channel) channelDelegate56, (java.lang.Object) serverDelegate78);
        channelHandlerDispatcher22.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate56);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher81 = exchangeHandlerDispatcher20.addChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher22);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray82 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher83 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray82);
        org.apache.dubbo.common.URL uRL84 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler85 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher83, uRL84);
        org.apache.dubbo.remoting.Channel channel86 = null;
        messageOnlyChannelHandler85.connected(channel86);
        org.apache.dubbo.remoting.ChannelHandler channelHandler88 = messageOnlyChannelHandler85.getHandler();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray89 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher90 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray89);
        org.apache.dubbo.common.URL uRL91 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler92 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher90, uRL91);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher93 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher94 = channelHandlerDispatcher90.removeChannelHandler((org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher93);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray95 = new org.apache.dubbo.remoting.ChannelHandler[] { channelHandler6, decodeHandler11, messageOnlyChannelHandler17, exchangeHandlerDispatcher20, channelHandler88, channelHandlerDispatcher94 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher96 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher1, channelHandlerArray95);
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher97 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray95);
        org.junit.Assert.assertNotNull(channelHandlerArray2);
        org.junit.Assert.assertNotNull(channelHandler6);
        org.junit.Assert.assertNotNull(channelHandlerArray7);
        org.junit.Assert.assertNotNull(channelHandlerArray14);
        org.junit.Assert.assertNotNull(channelHandlerArray21);
        org.junit.Assert.assertNotNull(channelHandlerArray26);
        org.junit.Assert.assertNotNull(channelHandlerArray33);
        org.junit.Assert.assertNotNull(channelHandlerArray40);
        org.junit.Assert.assertNotNull(channelHandlerArray44);
        org.junit.Assert.assertNotNull(channelHandlerArray49);
        org.junit.Assert.assertNotNull(channelHandlerArray51);
        org.junit.Assert.assertNotNull(channelHandlerArray57);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertNotNull(exchangeHandlerDispatcher81);
        org.junit.Assert.assertNotNull(channelHandlerArray82);
        org.junit.Assert.assertNotNull(channelHandler88);
        org.junit.Assert.assertNotNull(channelHandlerArray89);
        org.junit.Assert.assertNotNull(channelHandlerDispatcher94);
        org.junit.Assert.assertNotNull(channelHandlerArray95);
    }

    @Test
    public void test427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test427");
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer1 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        boolean boolean2 = dynamicChannelBuffer1.hasArray();
        dynamicChannelBuffer1.ensureWritableBytes((int) (byte) 1);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer6 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray7 = heapChannelBuffer6.array();
        byte[] byteArray8 = heapChannelBuffer6.array();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer9 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer(byteArray8);
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer10 = heapChannelBuffer9.copy();
        int int11 = dynamicChannelBuffer1.compareTo(channelBuffer10);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate12 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj13 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate12);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate14 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate12);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate15 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj16 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate15);
        exchangeServerDelegate12.setServer((org.apache.dubbo.remoting.exchange.ExchangeServer) exchangeServerDelegate15);
        boolean boolean18 = dynamicChannelBuffer1.equals((java.lang.Object) exchangeServerDelegate12);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(channelBuffer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-52) + "'", int11 == (-52));
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test428");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState0 = org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState.DISCONNECTED;
        org.junit.Assert.assertTrue("'" + channelState0 + "' != '" + org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState.DISCONNECTED + "'", channelState0.equals(org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState.DISCONNECTED));
    }

    @Test
    public void test429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test429");
        org.apache.dubbo.remoting.transport.ClientDelegate clientDelegate0 = new org.apache.dubbo.remoting.transport.ClientDelegate();
        org.apache.dubbo.remoting.transport.ClientDelegate clientDelegate1 = new org.apache.dubbo.remoting.transport.ClientDelegate();
        clientDelegate0.setClient((org.apache.dubbo.remoting.Client) clientDelegate1);
        org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeClient headerExchangeClient4 = new org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeClient((org.apache.dubbo.remoting.Client) clientDelegate0, false);
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyDispatcher messageOnlyDispatcher5 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyDispatcher();
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate6 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray7 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher8 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray7);
        org.apache.dubbo.common.URL uRL9 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler10 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher8, uRL9);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState11 = null;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        org.apache.dubbo.remoting.RemotingException remotingException15 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress12, inetSocketAddress13, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable16 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate6, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler10, channelState11, (java.lang.Throwable) remotingException15);
        org.apache.dubbo.common.URL uRL17 = null;
        org.apache.dubbo.remoting.ChannelHandler channelHandler18 = messageOnlyDispatcher5.dispatch((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler10, uRL17);
        // The following exception was thrown during execution in test generation
        try {
            headerExchangeClient4.send((java.lang.Object) messageOnlyDispatcher5, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray7);
        org.junit.Assert.assertNotNull(channelHandler18);
    }

    @Test
    public void test430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test430");
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray1 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher2 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray1);
        org.apache.dubbo.common.URL uRL3 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler4 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher2, uRL3);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray5 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher6 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray5);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray7 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher8 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray7);
        org.apache.dubbo.common.URL uRL9 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler10 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher8, uRL9);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler11 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler10);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate12 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray13 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher14 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray13);
        org.apache.dubbo.common.URL uRL15 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler16 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher14, uRL15);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState17 = null;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        org.apache.dubbo.remoting.RemotingException remotingException21 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress18, inetSocketAddress19, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable22 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate12, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler16, channelState17, (java.lang.Throwable) remotingException21);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher23 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState24 = null;
        java.net.InetSocketAddress inetSocketAddress26 = null;
        java.net.InetSocketAddress inetSocketAddress27 = null;
        org.apache.dubbo.remoting.ExecutionException executionException29 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress26, inetSocketAddress27, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable30 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate12, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher23, channelState24, (java.lang.Throwable) executionException29);
        decodeHandler11.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate12);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate32 = new org.apache.dubbo.remoting.transport.ChannelDelegate((org.apache.dubbo.remoting.Channel) channelDelegate12);
        channelHandlerDispatcher6.received((org.apache.dubbo.remoting.Channel) channelDelegate32, (java.lang.Object) (byte) 0);
        directChannelHandler4.connected((org.apache.dubbo.remoting.Channel) channelDelegate32);
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher36 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.exchange.ExchangeServer exchangeServer37 = org.apache.dubbo.remoting.exchange.Exchangers.bind("No such command netty", (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler4, (org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Failed to create adaptive instance: java.lang.IllegalStateException: Can't create adaptive extension interface org.apache.dubbo.remoting.Transporter, cause: Failed to compile class, cause: javassist/ClassPath, class: org.apache.dubbo.remoting.Transporter$Adaptive, code: ?package org.apache.dubbo.remoting;?import org.apache.dubbo.common.extension.ExtensionLoader;?public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {?public org.apache.dubbo.remoting.RemotingServer bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {?if (arg0 == null) throw new IllegalArgumentException(\"url == null\");?org.apache.dubbo.common.URL url = arg0;?String extName = url.getParameter(\"server\", url.getParameter(\"transporter\", \"netty\"));?if(extName == null) throw new IllegalStateException(\"Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (\" + url.toString() + \") use keys([server, transporter])\");?org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);?return extension.bind(arg0, arg1);?}?public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {?if (arg0 == null) throw new IllegalArgumentException(\"url == null\");?org.apache.dubbo.common.URL url = arg0;?String extName = url.getParameter(\"client\", url.getParameter(\"transporter\", \"netty\"));?if(extName == null) throw new IllegalStateException(\"Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (\" + url.toString() + \") use keys([client, transporter])\");?org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);?return extension.connect(arg0, arg1);?}?}?, stack: java.lang.NoClassDefFoundError: javassist/ClassPath??java.lang.NoClassDefFoundError: javassist/ClassPath??at org.apache.dubbo.common.compiler.support.JavassistCompiler.doCompile(JavassistCompiler.java:43)??at org.apache.dubbo.common.compiler.support.AbstractCompiler.compile(AbstractCompiler.java:58)??at org.apache.dubbo.common.compiler.support.AdaptiveCompiler.compile(AdaptiveCompiler.java:45)??at org.apache.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClass(ExtensionLoader.java:1039)??at org.apache.dubbo.common.extension.ExtensionLoader.getAdaptiveExtensionClass(ExtensionLoader.java:1032)??at org.apache.dubbo.common.extension.ExtensionLoader.createAdaptiveExtension(ExtensionLoader.java:1021)??at org.apache.dubbo.common.extension.ExtensionLoader.getAdaptiveExtension(ExtensionLoader.java:588)??at org.apache.dubbo.remoting.Transporters.getTransporter(Transporters.java:79)??at org.apache.dubbo.remoting.Transporters.connect(Transporters.java:75)??at org.apache.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:94)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:90)??at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)??at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)??at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)??at java.lang.reflect.Method.invoke(Method.java:498)??at randoop.util.MethodReflectionCode.runReflectionCodeRaw(MethodReflectionCode.java:53)??at randoop.util.ReflectionCode.runReflectionCode(ReflectionCode.java:59)??at randoop.util.RunnerThread.executeReflectionCode(RunnerThread.java:49)??at randoop.util.RunnerThread.run(RunnerThread.java:43)?Caused by: java.lang.ClassNotFoundException: javassist.ClassPath??at java.net.URLClassLoader.findClass(URLClassLoader.java:382)??at java.lang.ClassLoader.loadClass(ClassLoader.java:418)??at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:355)??at java.lang.ClassLoader.loadClass(ClassLoader.java:351)??... 21 more?");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(channelHandlerArray1);
        org.junit.Assert.assertNotNull(channelHandlerArray5);
        org.junit.Assert.assertNotNull(channelHandlerArray7);
        org.junit.Assert.assertNotNull(channelHandlerArray13);
    }

    @Test
    public void test431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test431");
        java.util.concurrent.CompletableFuture[] completableFutureArray1 = new java.util.concurrent.CompletableFuture[0];
        @SuppressWarnings("unchecked")
        java.util.concurrent.CompletableFuture<?>[] wildcardCompletableFutureArray2 = (java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1;
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture3 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray4 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher5 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray4);
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher6 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher7 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher6);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher8 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray9 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher10 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray9);
        org.apache.dubbo.remoting.Channel channel11 = null;
        java.lang.Throwable throwable12 = null;
        channelHandlerDispatcher10.caught(channel11, throwable12);
        org.apache.dubbo.remoting.Channel channel14 = null;
        channelHandlerDispatcher10.disconnected(channel14);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray16 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher17 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray16);
        org.apache.dubbo.remoting.Channel channel18 = null;
        java.lang.Throwable throwable19 = null;
        channelHandlerDispatcher17.caught(channel18, throwable19);
        org.apache.dubbo.remoting.Channel channel21 = null;
        channelHandlerDispatcher17.disconnected(channel21);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray23 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher24 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray23);
        org.apache.dubbo.common.URL uRL25 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler26 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher24, uRL25);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray27 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher28 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray27);
        org.apache.dubbo.common.URL uRL29 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler30 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher28, uRL29);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler31 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler30);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray32 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher8, channelHandlerDispatcher10, channelHandlerDispatcher17, channelHandlerDispatcher24, decodeHandler31 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher33 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher7, channelHandlerArray32);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray34 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher35 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray34);
        org.apache.dubbo.common.URL uRL36 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler37 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher35, uRL36);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler38 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler37);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate39 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray40 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher41 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray40);
        org.apache.dubbo.common.URL uRL42 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler43 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher41, uRL42);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState44 = null;
        java.net.InetSocketAddress inetSocketAddress45 = null;
        java.net.InetSocketAddress inetSocketAddress46 = null;
        org.apache.dubbo.remoting.RemotingException remotingException48 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress45, inetSocketAddress46, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable49 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate39, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler43, channelState44, (java.lang.Throwable) remotingException48);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher50 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState51 = null;
        java.net.InetSocketAddress inetSocketAddress53 = null;
        java.net.InetSocketAddress inetSocketAddress54 = null;
        org.apache.dubbo.remoting.ExecutionException executionException56 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress53, inetSocketAddress54, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable57 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate39, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher50, channelState51, (java.lang.Throwable) executionException56);
        decodeHandler38.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate39);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate59 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj60 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate59);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate61 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate59);
        exchangeHandlerDispatcher33.sent((org.apache.dubbo.remoting.Channel) channelDelegate39, (java.lang.Object) serverDelegate61);
        channelHandlerDispatcher5.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate39);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray64 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher65 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray64);
        org.apache.dubbo.common.URL uRL66 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler67 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher65, uRL66);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher68 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher69 = channelHandlerDispatcher65.removeChannelHandler((org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher68);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState70 = org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState.RECEIVED;
        java.lang.Object obj71 = null;
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory72 = org.apache.dubbo.remoting.buffer.HeapChannelBufferFactory.getInstance();
        java.net.InetSocketAddress inetSocketAddress73 = null;
        java.net.InetSocketAddress inetSocketAddress74 = null;
        java.net.InetSocketAddress inetSocketAddress76 = null;
        java.net.InetSocketAddress inetSocketAddress77 = null;
        org.apache.dubbo.remoting.ExecutionException executionException79 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress76, inetSocketAddress77, "hi!");
        org.apache.dubbo.remoting.ExecutionException executionException80 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) channelBufferFactory72, inetSocketAddress73, inetSocketAddress74, (java.lang.Throwable) executionException79);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable81 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate39, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher68, channelState70, obj71, (java.lang.Throwable) executionException80);
        java.util.concurrent.CompletableFuture<java.lang.Void> voidCompletableFuture82 = objCompletableFuture3.thenRunAsync((java.lang.Runnable) channelEventRunnable81);
        java.util.concurrent.TimeUnit timeUnit84 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj85 = objCompletableFuture3.get((long) (byte) 100, timeUnit84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(completableFutureArray1);
        org.junit.Assert.assertNotNull(wildcardCompletableFutureArray2);
        org.junit.Assert.assertNotNull(objCompletableFuture3);
        org.junit.Assert.assertNotNull(channelHandlerArray4);
        org.junit.Assert.assertNotNull(channelHandlerArray9);
        org.junit.Assert.assertNotNull(channelHandlerArray16);
        org.junit.Assert.assertNotNull(channelHandlerArray23);
        org.junit.Assert.assertNotNull(channelHandlerArray27);
        org.junit.Assert.assertNotNull(channelHandlerArray32);
        org.junit.Assert.assertNotNull(channelHandlerArray34);
        org.junit.Assert.assertNotNull(channelHandlerArray40);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(channelHandlerArray64);
        org.junit.Assert.assertNotNull(channelHandlerDispatcher69);
        org.junit.Assert.assertTrue("'" + channelState70 + "' != '" + org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState.RECEIVED + "'", channelState70.equals(org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState.RECEIVED));
        org.junit.Assert.assertNotNull(channelBufferFactory72);
        org.junit.Assert.assertNotNull(voidCompletableFuture82);
    }

    @Test
    public void test432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test432");
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate0 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj1 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate0);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate2 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate0);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate3 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj4 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate3);
        exchangeServerDelegate0.setServer((org.apache.dubbo.remoting.exchange.ExchangeServer) exchangeServerDelegate3);
        org.apache.dubbo.common.Parameters parameters6 = null;
        // The following exception was thrown during execution in test generation
        try {
            exchangeServerDelegate3.reset(parameters6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj1);
        org.junit.Assert.assertNotNull(obj4);
    }

    @Test
    public void test433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test433");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer8 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray9 = heapChannelBuffer8.array();
        byte[] byteArray14 = new byte[] { (byte) 1, (byte) 20, (byte) 70, (byte) 10 };
        heapChannelBuffer8.writeBytes(byteArray14);
        heapChannelBuffer3.setBytes(0, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer8, (int) (byte) 1, 10);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer21 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer23 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean24 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer21, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer23);
        heapChannelBuffer23.resetReaderIndex();
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer27 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        boolean boolean28 = dynamicChannelBuffer27.hasArray();
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory29 = dynamicChannelBuffer27.factory();
        int int30 = heapChannelBuffer23.compareTo((org.apache.dubbo.remoting.buffer.ChannelBuffer) dynamicChannelBuffer27);
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer31 = dynamicChannelBuffer27.copy();
        heapChannelBuffer8.setBytes((int) (short) 0, (org.apache.dubbo.remoting.buffer.ChannelBuffer) dynamicChannelBuffer27);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[1, 20, 70, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[1, 20, 70, 10]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(channelBufferFactory29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(channelBuffer31);
    }

    @Test
    public void test434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test434");
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectDispatcher directDispatcher0 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectDispatcher();
    }

    @Test
    public void test435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test435");
        org.apache.dubbo.remoting.buffer.ChannelBuffer channelBuffer1 = org.apache.dubbo.remoting.buffer.ChannelBuffers.directBuffer((int) (byte) 0);
        org.junit.Assert.assertNotNull(channelBuffer1);
    }

    @Test
    public void test436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test436");
        int int0 = org.apache.dubbo.remoting.Constants.DEFAULT_BACKLOG;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 1024 + "'", int0 == 1024);
    }

    @Test
    public void test437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test437");
        org.apache.dubbo.remoting.exchange.Response response2 = new org.apache.dubbo.remoting.exchange.Response((long) (byte) 1, "");
        java.lang.String str3 = response2.getVersion();
        java.lang.Object obj4 = null;
        response2.setResult(obj4);
        response2.setHeartbeat(false);
        response2.setStatus((byte) 80);
        byte byte10 = response2.getStatus();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + byte10 + "' != '" + (byte) 80 + "'", byte10 == (byte) 80);
    }

    @Test
    public void test438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test438");
        org.apache.dubbo.remoting.exchange.Request request0 = new org.apache.dubbo.remoting.exchange.Request();
        boolean boolean1 = request0.isTwoWay();
        request0.setEvent(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
    }

    @Test
    public void test439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test439");
        org.apache.dubbo.remoting.telnet.support.TelnetHandlerAdapter telnetHandlerAdapter0 = new org.apache.dubbo.remoting.telnet.support.TelnetHandlerAdapter();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray1 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher2 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray1);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray3 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher4 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray3);
        org.apache.dubbo.common.URL uRL5 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler6 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher4, uRL5);
        org.apache.dubbo.remoting.ChannelHandler channelHandler7 = messageOnlyChannelHandler6.getHandler();
        org.apache.dubbo.remoting.ChannelHandler channelHandler8 = messageOnlyChannelHandler6.getHandler();
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher9 = channelHandlerDispatcher2.addChannelHandler((org.apache.dubbo.remoting.ChannelHandler) messageOnlyChannelHandler6);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray10 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher11 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray10);
        org.apache.dubbo.common.URL uRL12 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler13 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher11, uRL12);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler14 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler13);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate15 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray16 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher17 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray16);
        org.apache.dubbo.common.URL uRL18 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler19 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher17, uRL18);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState20 = null;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        java.net.InetSocketAddress inetSocketAddress22 = null;
        org.apache.dubbo.remoting.RemotingException remotingException24 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress21, inetSocketAddress22, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable25 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate15, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler19, channelState20, (java.lang.Throwable) remotingException24);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher26 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState27 = null;
        java.net.InetSocketAddress inetSocketAddress29 = null;
        java.net.InetSocketAddress inetSocketAddress30 = null;
        org.apache.dubbo.remoting.ExecutionException executionException32 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress29, inetSocketAddress30, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable33 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate15, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher26, channelState27, (java.lang.Throwable) executionException32);
        decodeHandler14.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate15);
        org.apache.dubbo.remoting.ChannelHandler channelHandler35 = decodeHandler14.getHandler();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray36 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher37 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray36);
        org.apache.dubbo.common.URL uRL38 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler39 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher37, uRL38);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler40 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler39);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate41 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray42 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher43 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray42);
        org.apache.dubbo.common.URL uRL44 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler45 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher43, uRL44);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState46 = null;
        java.net.InetSocketAddress inetSocketAddress47 = null;
        java.net.InetSocketAddress inetSocketAddress48 = null;
        org.apache.dubbo.remoting.RemotingException remotingException50 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress47, inetSocketAddress48, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable51 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate41, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler45, channelState46, (java.lang.Throwable) remotingException50);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher52 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState53 = null;
        java.net.InetSocketAddress inetSocketAddress55 = null;
        java.net.InetSocketAddress inetSocketAddress56 = null;
        org.apache.dubbo.remoting.ExecutionException executionException58 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress55, inetSocketAddress56, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable59 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate41, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher52, channelState53, (java.lang.Throwable) executionException58);
        decodeHandler40.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate41);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate61 = new org.apache.dubbo.remoting.transport.ChannelDelegate((org.apache.dubbo.remoting.Channel) channelDelegate41);
        decodeHandler14.connected((org.apache.dubbo.remoting.Channel) channelDelegate41);
        channelHandlerDispatcher2.connected((org.apache.dubbo.remoting.Channel) channelDelegate41);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer65 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer67 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean68 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer65, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer67);
        heapChannelBuffer67.resetReaderIndex();
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer71 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        boolean boolean72 = dynamicChannelBuffer71.hasArray();
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory73 = dynamicChannelBuffer71.factory();
        int int74 = heapChannelBuffer67.compareTo((org.apache.dubbo.remoting.buffer.ChannelBuffer) dynamicChannelBuffer71);
        boolean boolean75 = dynamicChannelBuffer71.hasArray();
        boolean boolean77 = dynamicChannelBuffer71.equals((java.lang.Object) 2L);
        telnetHandlerAdapter0.received((org.apache.dubbo.remoting.Channel) channelDelegate41, (java.lang.Object) boolean77);
        org.junit.Assert.assertNotNull(channelHandlerArray1);
        org.junit.Assert.assertNotNull(channelHandlerArray3);
        org.junit.Assert.assertNotNull(channelHandler7);
        org.junit.Assert.assertNotNull(channelHandler8);
        org.junit.Assert.assertNotNull(channelHandlerDispatcher9);
        org.junit.Assert.assertNotNull(channelHandlerArray10);
        org.junit.Assert.assertNotNull(channelHandlerArray16);
        org.junit.Assert.assertNotNull(channelHandler35);
        org.junit.Assert.assertNotNull(channelHandlerArray36);
        org.junit.Assert.assertNotNull(channelHandlerArray42);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(channelBufferFactory73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test440");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.dubbo.remoting.exchange.ExchangeClient exchangeClient1 = org.apache.dubbo.remoting.exchange.Exchangers.connect("Response [id=1, version=, status=20, event=true, error=null, result=null]");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Failed to create adaptive instance: java.lang.IllegalStateException: Can't create adaptive extension interface org.apache.dubbo.remoting.Transporter, cause: Failed to compile class, cause: javassist/ClassPath, class: org.apache.dubbo.remoting.Transporter$Adaptive, code: ?package org.apache.dubbo.remoting;?import org.apache.dubbo.common.extension.ExtensionLoader;?public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {?public org.apache.dubbo.remoting.RemotingServer bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {?if (arg0 == null) throw new IllegalArgumentException(\"url == null\");?org.apache.dubbo.common.URL url = arg0;?String extName = url.getParameter(\"server\", url.getParameter(\"transporter\", \"netty\"));?if(extName == null) throw new IllegalStateException(\"Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (\" + url.toString() + \") use keys([server, transporter])\");?org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);?return extension.bind(arg0, arg1);?}?public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {?if (arg0 == null) throw new IllegalArgumentException(\"url == null\");?org.apache.dubbo.common.URL url = arg0;?String extName = url.getParameter(\"client\", url.getParameter(\"transporter\", \"netty\"));?if(extName == null) throw new IllegalStateException(\"Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (\" + url.toString() + \") use keys([client, transporter])\");?org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);?return extension.connect(arg0, arg1);?}?}?, stack: java.lang.NoClassDefFoundError: javassist/ClassPath??java.lang.NoClassDefFoundError: javassist/ClassPath??at org.apache.dubbo.common.compiler.support.JavassistCompiler.doCompile(JavassistCompiler.java:43)??at org.apache.dubbo.common.compiler.support.AbstractCompiler.compile(AbstractCompiler.java:58)??at org.apache.dubbo.common.compiler.support.AdaptiveCompiler.compile(AdaptiveCompiler.java:45)??at org.apache.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClass(ExtensionLoader.java:1039)??at org.apache.dubbo.common.extension.ExtensionLoader.getAdaptiveExtensionClass(ExtensionLoader.java:1032)??at org.apache.dubbo.common.extension.ExtensionLoader.createAdaptiveExtension(ExtensionLoader.java:1021)??at org.apache.dubbo.common.extension.ExtensionLoader.getAdaptiveExtension(ExtensionLoader.java:588)??at org.apache.dubbo.remoting.Transporters.getTransporter(Transporters.java:79)??at org.apache.dubbo.remoting.Transporters.connect(Transporters.java:75)??at org.apache.dubbo.remoting.exchange.support.header.HeaderExchanger.connect(HeaderExchanger.java:39)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:109)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:94)??at org.apache.dubbo.remoting.exchange.Exchangers.connect(Exchangers.java:90)??at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)??at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)??at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)??at java.lang.reflect.Method.invoke(Method.java:498)??at randoop.util.MethodReflectionCode.runReflectionCodeRaw(MethodReflectionCode.java:53)??at randoop.util.ReflectionCode.runReflectionCode(ReflectionCode.java:59)??at randoop.util.RunnerThread.executeReflectionCode(RunnerThread.java:49)??at randoop.util.RunnerThread.run(RunnerThread.java:43)?Caused by: java.lang.ClassNotFoundException: javassist.ClassPath??at java.net.URLClassLoader.findClass(URLClassLoader.java:382)??at java.lang.ClassLoader.loadClass(ClassLoader.java:418)??at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:355)??at java.lang.ClassLoader.loadClass(ClassLoader.java:351)??... 21 more?");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
    }

    @Test
    public void test441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test441");
        org.apache.dubbo.remoting.exchange.support.MultiMessage multiMessage0 = org.apache.dubbo.remoting.exchange.support.MultiMessage.create();
        java.util.Collection collection1 = multiMessage0.getMessages();
        org.apache.dubbo.remoting.exchange.support.MultiMessage multiMessage2 = org.apache.dubbo.remoting.exchange.support.MultiMessage.create();
        java.util.Collection collection3 = multiMessage2.getMessages();
        multiMessage0.addMessages(collection3);
        java.util.Collection collection5 = multiMessage0.getMessages();
        java.util.Collection collection6 = multiMessage0.removeMessages();
        org.junit.Assert.assertNotNull(multiMessage0);
        org.junit.Assert.assertNotNull(collection1);
        org.junit.Assert.assertNotNull(multiMessage2);
        org.junit.Assert.assertNotNull(collection3);
        org.junit.Assert.assertNotNull(collection5);
        org.junit.Assert.assertNotNull(collection6);
    }

    @Test
    public void test442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test442");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer7 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        boolean boolean8 = dynamicChannelBuffer7.hasArray();
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory9 = dynamicChannelBuffer7.factory();
        int int10 = heapChannelBuffer3.compareTo((org.apache.dubbo.remoting.buffer.ChannelBuffer) dynamicChannelBuffer7);
        boolean boolean11 = dynamicChannelBuffer7.hasArray();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer14 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        heapChannelBuffer14.writeByte((int) (short) 10);
        heapChannelBuffer14.discardReadBytes();
        java.lang.String str18 = heapChannelBuffer14.toString();
        dynamicChannelBuffer7.setBytes(1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer14, (int) ' ', (int) (byte) 0);
        int int22 = heapChannelBuffer14.writerIndex();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(channelBufferFactory9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "HeapChannelBuffer(ridx=0, widx=1, cap=52)" + "'", str18, "HeapChannelBuffer(ridx=0, widx=1, cap=52)");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
    }

    @Test
    public void test443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test443");
        java.util.concurrent.CompletableFuture[] completableFutureArray1 = new java.util.concurrent.CompletableFuture[0];
        @SuppressWarnings("unchecked")
        java.util.concurrent.CompletableFuture<?>[] wildcardCompletableFutureArray2 = (java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1;
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture3 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1);
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture4 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1);
        org.apache.dubbo.remoting.exchange.support.MultiMessage multiMessage5 = org.apache.dubbo.remoting.exchange.support.MultiMessage.createFromArray((java.lang.Object[]) completableFutureArray1);
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture6 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1);
        org.junit.Assert.assertNotNull(completableFutureArray1);
        org.junit.Assert.assertNotNull(wildcardCompletableFutureArray2);
        org.junit.Assert.assertNotNull(objCompletableFuture3);
        org.junit.Assert.assertNotNull(objCompletableFuture4);
        org.junit.Assert.assertNotNull(multiMessage5);
        org.junit.Assert.assertNotNull(objCompletableFuture6);
    }

    @Test
    public void test444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test444");
        org.apache.dubbo.remoting.transport.ClientDelegate clientDelegate0 = new org.apache.dubbo.remoting.transport.ClientDelegate();
        org.apache.dubbo.remoting.transport.ClientDelegate clientDelegate1 = new org.apache.dubbo.remoting.transport.ClientDelegate();
        clientDelegate0.setClient((org.apache.dubbo.remoting.Client) clientDelegate1);
        org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeClient headerExchangeClient4 = new org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeClient((org.apache.dubbo.remoting.Client) clientDelegate0, false);
        java.util.concurrent.CompletableFuture[] completableFutureArray6 = new java.util.concurrent.CompletableFuture[0];
        @SuppressWarnings("unchecked")
        java.util.concurrent.CompletableFuture<?>[] wildcardCompletableFutureArray7 = (java.util.concurrent.CompletableFuture<?>[]) completableFutureArray6;
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture8 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray6);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate9 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray10 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher11 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray10);
        org.apache.dubbo.common.URL uRL12 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler13 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher11, uRL12);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState14 = null;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        org.apache.dubbo.remoting.RemotingException remotingException18 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress15, inetSocketAddress16, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable19 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate9, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler13, channelState14, (java.lang.Throwable) remotingException18);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher20 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState21 = null;
        java.net.InetSocketAddress inetSocketAddress23 = null;
        java.net.InetSocketAddress inetSocketAddress24 = null;
        org.apache.dubbo.remoting.ExecutionException executionException26 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress23, inetSocketAddress24, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable27 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate9, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher20, channelState21, (java.lang.Throwable) executionException26);
        java.util.concurrent.CompletableFuture<java.lang.Void> voidCompletableFuture28 = objCompletableFuture8.thenRunAsync((java.lang.Runnable) channelEventRunnable27);
        int int29 = objCompletableFuture8.getNumberOfDependents();
        int int30 = objCompletableFuture8.getNumberOfDependents();
        // The following exception was thrown during execution in test generation
        try {
            clientDelegate0.send((java.lang.Object) int30, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(completableFutureArray6);
        org.junit.Assert.assertNotNull(wildcardCompletableFutureArray7);
        org.junit.Assert.assertNotNull(objCompletableFuture8);
        org.junit.Assert.assertNotNull(channelHandlerArray10);
        org.junit.Assert.assertNotNull(voidCompletableFuture28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
    }

    @Test
    public void test445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test445");
        org.apache.dubbo.remoting.buffer.DynamicChannelBuffer dynamicChannelBuffer1 = new org.apache.dubbo.remoting.buffer.DynamicChannelBuffer((int) (byte) 1);
        boolean boolean2 = dynamicChannelBuffer1.hasArray();
        dynamicChannelBuffer1.markReaderIndex();
        boolean boolean4 = dynamicChannelBuffer1.isDirect();
        dynamicChannelBuffer1.writeByte((-1));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test446");
        java.lang.String str0 = org.apache.dubbo.remoting.Constants.CODEC_KEY;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "codec" + "'", str0, "codec");
    }

    @Test
    public void test447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test447");
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher0 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.ClientDelegate clientDelegate1 = new org.apache.dubbo.remoting.transport.ClientDelegate();
        exchangeHandlerDispatcher0.sent((org.apache.dubbo.remoting.Channel) clientDelegate1, (java.lang.Object) 1);
        java.net.InetSocketAddress inetSocketAddress4 = null;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray10 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher11 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray10);
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher12 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher13 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher12);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher14 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray15 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher16 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray15);
        org.apache.dubbo.remoting.Channel channel17 = null;
        java.lang.Throwable throwable18 = null;
        channelHandlerDispatcher16.caught(channel17, throwable18);
        org.apache.dubbo.remoting.Channel channel20 = null;
        channelHandlerDispatcher16.disconnected(channel20);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray22 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher23 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray22);
        org.apache.dubbo.remoting.Channel channel24 = null;
        java.lang.Throwable throwable25 = null;
        channelHandlerDispatcher23.caught(channel24, throwable25);
        org.apache.dubbo.remoting.Channel channel27 = null;
        channelHandlerDispatcher23.disconnected(channel27);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray29 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher30 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray29);
        org.apache.dubbo.common.URL uRL31 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler32 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher30, uRL31);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray33 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher34 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray33);
        org.apache.dubbo.common.URL uRL35 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler36 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher34, uRL35);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler37 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler36);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray38 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher14, channelHandlerDispatcher16, channelHandlerDispatcher23, channelHandlerDispatcher30, decodeHandler37 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher39 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher13, channelHandlerArray38);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray40 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher41 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray40);
        org.apache.dubbo.common.URL uRL42 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler43 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher41, uRL42);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler44 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler43);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate45 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray46 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher47 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray46);
        org.apache.dubbo.common.URL uRL48 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler49 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher47, uRL48);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState50 = null;
        java.net.InetSocketAddress inetSocketAddress51 = null;
        java.net.InetSocketAddress inetSocketAddress52 = null;
        org.apache.dubbo.remoting.RemotingException remotingException54 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress51, inetSocketAddress52, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable55 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate45, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler49, channelState50, (java.lang.Throwable) remotingException54);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher56 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState57 = null;
        java.net.InetSocketAddress inetSocketAddress59 = null;
        java.net.InetSocketAddress inetSocketAddress60 = null;
        org.apache.dubbo.remoting.ExecutionException executionException62 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress59, inetSocketAddress60, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable63 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate45, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher56, channelState57, (java.lang.Throwable) executionException62);
        decodeHandler44.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate45);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate65 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj66 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate65);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate67 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate65);
        exchangeHandlerDispatcher39.sent((org.apache.dubbo.remoting.Channel) channelDelegate45, (java.lang.Object) serverDelegate67);
        channelHandlerDispatcher11.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate45);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray70 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher71 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray70);
        org.apache.dubbo.common.URL uRL72 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler73 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher71, uRL72);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher74 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher75 = channelHandlerDispatcher71.removeChannelHandler((org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher74);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState76 = org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState.RECEIVED;
        java.lang.Object obj77 = null;
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory78 = org.apache.dubbo.remoting.buffer.HeapChannelBufferFactory.getInstance();
        java.net.InetSocketAddress inetSocketAddress79 = null;
        java.net.InetSocketAddress inetSocketAddress80 = null;
        java.net.InetSocketAddress inetSocketAddress82 = null;
        java.net.InetSocketAddress inetSocketAddress83 = null;
        org.apache.dubbo.remoting.ExecutionException executionException85 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress82, inetSocketAddress83, "hi!");
        org.apache.dubbo.remoting.ExecutionException executionException86 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) channelBufferFactory78, inetSocketAddress79, inetSocketAddress80, (java.lang.Throwable) executionException85);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable87 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate45, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher74, channelState76, obj77, (java.lang.Throwable) executionException86);
        org.apache.dubbo.remoting.RemotingException remotingException88 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress7, inetSocketAddress8, "codec.version", (java.lang.Throwable) executionException86);
        java.util.concurrent.CompletableFuture<org.apache.dubbo.remoting.ExecutionException> executionExceptionCompletableFuture89 = java.util.concurrent.CompletableFuture.completedFuture(executionException86);
        org.apache.dubbo.remoting.ExecutionException executionException90 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) exchangeHandlerDispatcher0, inetSocketAddress4, inetSocketAddress5, "UTF-8", (java.lang.Throwable) executionException86);
        org.junit.Assert.assertNotNull(channelHandlerArray10);
        org.junit.Assert.assertNotNull(channelHandlerArray15);
        org.junit.Assert.assertNotNull(channelHandlerArray22);
        org.junit.Assert.assertNotNull(channelHandlerArray29);
        org.junit.Assert.assertNotNull(channelHandlerArray33);
        org.junit.Assert.assertNotNull(channelHandlerArray38);
        org.junit.Assert.assertNotNull(channelHandlerArray40);
        org.junit.Assert.assertNotNull(channelHandlerArray46);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(channelHandlerArray70);
        org.junit.Assert.assertNotNull(channelHandlerDispatcher75);
        org.junit.Assert.assertTrue("'" + channelState76 + "' != '" + org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState.RECEIVED + "'", channelState76.equals(org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState.RECEIVED));
        org.junit.Assert.assertNotNull(channelBufferFactory78);
        org.junit.Assert.assertNotNull(executionExceptionCompletableFuture89);
    }

    @Test
    public void test448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test448");
        java.util.concurrent.CompletableFuture[] completableFutureArray1 = new java.util.concurrent.CompletableFuture[0];
        @SuppressWarnings("unchecked")
        java.util.concurrent.CompletableFuture<?>[] wildcardCompletableFutureArray2 = (java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1;
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture3 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1);
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture4 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState5 = org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState.CAUGHT;
        objCompletableFuture4.obtrudeValue((java.lang.Object) channelState5);
        java.lang.Object obj7 = objCompletableFuture4.join();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray8 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher9 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray8);
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher10 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher11 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher10);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher12 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray13 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher14 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray13);
        org.apache.dubbo.remoting.Channel channel15 = null;
        java.lang.Throwable throwable16 = null;
        channelHandlerDispatcher14.caught(channel15, throwable16);
        org.apache.dubbo.remoting.Channel channel18 = null;
        channelHandlerDispatcher14.disconnected(channel18);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray20 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher21 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray20);
        org.apache.dubbo.remoting.Channel channel22 = null;
        java.lang.Throwable throwable23 = null;
        channelHandlerDispatcher21.caught(channel22, throwable23);
        org.apache.dubbo.remoting.Channel channel25 = null;
        channelHandlerDispatcher21.disconnected(channel25);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray27 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher28 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray27);
        org.apache.dubbo.common.URL uRL29 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler30 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher28, uRL29);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray31 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher32 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray31);
        org.apache.dubbo.common.URL uRL33 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler34 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher32, uRL33);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler35 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler34);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray36 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher12, channelHandlerDispatcher14, channelHandlerDispatcher21, channelHandlerDispatcher28, decodeHandler35 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher37 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher11, channelHandlerArray36);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray38 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher39 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray38);
        org.apache.dubbo.common.URL uRL40 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler41 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher39, uRL40);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler42 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler41);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate43 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray44 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher45 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray44);
        org.apache.dubbo.common.URL uRL46 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler47 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher45, uRL46);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState48 = null;
        java.net.InetSocketAddress inetSocketAddress49 = null;
        java.net.InetSocketAddress inetSocketAddress50 = null;
        org.apache.dubbo.remoting.RemotingException remotingException52 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress49, inetSocketAddress50, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable53 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate43, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler47, channelState48, (java.lang.Throwable) remotingException52);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher54 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState55 = null;
        java.net.InetSocketAddress inetSocketAddress57 = null;
        java.net.InetSocketAddress inetSocketAddress58 = null;
        org.apache.dubbo.remoting.ExecutionException executionException60 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress57, inetSocketAddress58, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable61 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate43, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher54, channelState55, (java.lang.Throwable) executionException60);
        decodeHandler42.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate43);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate63 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj64 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate63);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate65 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate63);
        exchangeHandlerDispatcher37.sent((org.apache.dubbo.remoting.Channel) channelDelegate43, (java.lang.Object) serverDelegate65);
        channelHandlerDispatcher9.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate43);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray68 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher69 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray68);
        org.apache.dubbo.common.URL uRL70 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler71 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher69, uRL70);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher72 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher73 = channelHandlerDispatcher69.removeChannelHandler((org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher72);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState74 = org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState.RECEIVED;
        java.lang.Object obj75 = null;
        org.apache.dubbo.remoting.buffer.ChannelBufferFactory channelBufferFactory76 = org.apache.dubbo.remoting.buffer.HeapChannelBufferFactory.getInstance();
        java.net.InetSocketAddress inetSocketAddress77 = null;
        java.net.InetSocketAddress inetSocketAddress78 = null;
        java.net.InetSocketAddress inetSocketAddress80 = null;
        java.net.InetSocketAddress inetSocketAddress81 = null;
        org.apache.dubbo.remoting.ExecutionException executionException83 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress80, inetSocketAddress81, "hi!");
        org.apache.dubbo.remoting.ExecutionException executionException84 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) channelBufferFactory76, inetSocketAddress77, inetSocketAddress78, (java.lang.Throwable) executionException83);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable85 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate43, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher72, channelState74, obj75, (java.lang.Throwable) executionException84);
        java.util.concurrent.CompletableFuture<java.lang.Void> voidCompletableFuture86 = objCompletableFuture4.thenRun((java.lang.Runnable) channelEventRunnable85);
        boolean boolean87 = objCompletableFuture4.isDone();
        org.junit.Assert.assertNotNull(completableFutureArray1);
        org.junit.Assert.assertNotNull(wildcardCompletableFutureArray2);
        org.junit.Assert.assertNotNull(objCompletableFuture3);
        org.junit.Assert.assertNotNull(objCompletableFuture4);
        org.junit.Assert.assertTrue("'" + channelState5 + "' != '" + org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState.CAUGHT + "'", channelState5.equals(org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState.CAUGHT));
        org.junit.Assert.assertTrue("'" + obj7 + "' != '" + org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState.CAUGHT + "'", obj7.equals(org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState.CAUGHT));
        org.junit.Assert.assertNotNull(channelHandlerArray8);
        org.junit.Assert.assertNotNull(channelHandlerArray13);
        org.junit.Assert.assertNotNull(channelHandlerArray20);
        org.junit.Assert.assertNotNull(channelHandlerArray27);
        org.junit.Assert.assertNotNull(channelHandlerArray31);
        org.junit.Assert.assertNotNull(channelHandlerArray36);
        org.junit.Assert.assertNotNull(channelHandlerArray38);
        org.junit.Assert.assertNotNull(channelHandlerArray44);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertNotNull(channelHandlerArray68);
        org.junit.Assert.assertNotNull(channelHandlerDispatcher73);
        org.junit.Assert.assertTrue("'" + channelState74 + "' != '" + org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState.RECEIVED + "'", channelState74.equals(org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState.RECEIVED));
        org.junit.Assert.assertNotNull(channelBufferFactory76);
        org.junit.Assert.assertNotNull(voidCompletableFuture86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test449");
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer1 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer3 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean4 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer1, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer3);
        heapChannelBuffer3.resetReaderIndex();
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer8 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray9 = heapChannelBuffer8.array();
        byte[] byteArray14 = new byte[] { (byte) 1, (byte) 20, (byte) 70, (byte) 10 };
        heapChannelBuffer8.writeBytes(byteArray14);
        heapChannelBuffer3.setBytes(0, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer8, (int) (byte) 1, 10);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer20 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer22 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean23 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer20, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer22);
        heapChannelBuffer22.resetReaderIndex();
        heapChannelBuffer22.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream26 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer22);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer29 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer31 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        boolean boolean32 = org.apache.dubbo.remoting.buffer.ChannelBuffers.equals((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer29, (org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer31);
        heapChannelBuffer31.resetReaderIndex();
        heapChannelBuffer31.discardReadBytes();
        org.apache.dubbo.remoting.buffer.ChannelBufferInputStream channelBufferInputStream35 = new org.apache.dubbo.remoting.buffer.ChannelBufferInputStream((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer31);
        int int37 = heapChannelBuffer22.setBytes((int) (byte) 10, (java.io.InputStream) channelBufferInputStream35, (int) (byte) 100);
        heapChannelBuffer8.writeBytes((org.apache.dubbo.remoting.buffer.ChannelBuffer) heapChannelBuffer22, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            byte byte40 = heapChannelBuffer22.readByte();
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[1, 20, 70, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[1, 20, 70, 10]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
    }

    @Test
    public void test450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test450");
        java.util.concurrent.CompletableFuture[] completableFutureArray1 = new java.util.concurrent.CompletableFuture[0];
        @SuppressWarnings("unchecked")
        java.util.concurrent.CompletableFuture<?>[] wildcardCompletableFutureArray2 = (java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1;
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture3 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1);
        java.util.concurrent.CompletableFuture<java.lang.Object> objCompletableFuture4 = java.util.concurrent.CompletableFuture.anyOf((java.util.concurrent.CompletableFuture<?>[]) completableFutureArray1);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState5 = org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState.CAUGHT;
        objCompletableFuture4.obtrudeValue((java.lang.Object) channelState5);
        java.lang.Object obj7 = objCompletableFuture4.join();
        java.lang.String str8 = objCompletableFuture4.toString();
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher9 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray10 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher11 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray10);
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher12 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher();
        org.apache.dubbo.remoting.exchange.support.ReplierDispatcher replierDispatcher13 = new org.apache.dubbo.remoting.exchange.support.ReplierDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher12);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher14 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray15 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher16 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray15);
        org.apache.dubbo.remoting.Channel channel17 = null;
        java.lang.Throwable throwable18 = null;
        channelHandlerDispatcher16.caught(channel17, throwable18);
        org.apache.dubbo.remoting.Channel channel20 = null;
        channelHandlerDispatcher16.disconnected(channel20);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray22 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher23 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray22);
        org.apache.dubbo.remoting.Channel channel24 = null;
        java.lang.Throwable throwable25 = null;
        channelHandlerDispatcher23.caught(channel24, throwable25);
        org.apache.dubbo.remoting.Channel channel27 = null;
        channelHandlerDispatcher23.disconnected(channel27);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray29 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher30 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray29);
        org.apache.dubbo.common.URL uRL31 = null;
        org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler messageOnlyChannelHandler32 = new org.apache.dubbo.remoting.transport.dispatcher.message.MessageOnlyChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher30, uRL31);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray33 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher34 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray33);
        org.apache.dubbo.common.URL uRL35 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler36 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher34, uRL35);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler37 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler36);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray38 = new org.apache.dubbo.remoting.ChannelHandler[] { exchangeHandlerDispatcher14, channelHandlerDispatcher16, channelHandlerDispatcher23, channelHandlerDispatcher30, decodeHandler37 };
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher39 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher((org.apache.dubbo.remoting.exchange.support.Replier<java.lang.Object>) replierDispatcher13, channelHandlerArray38);
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray40 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher41 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray40);
        org.apache.dubbo.common.URL uRL42 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler43 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher41, uRL42);
        org.apache.dubbo.remoting.transport.DecodeHandler decodeHandler44 = new org.apache.dubbo.remoting.transport.DecodeHandler((org.apache.dubbo.remoting.ChannelHandler) directChannelHandler43);
        org.apache.dubbo.remoting.transport.ChannelDelegate channelDelegate45 = new org.apache.dubbo.remoting.transport.ChannelDelegate();
        org.apache.dubbo.remoting.ChannelHandler[] channelHandlerArray46 = new org.apache.dubbo.remoting.ChannelHandler[] {};
        org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher channelHandlerDispatcher47 = new org.apache.dubbo.remoting.transport.ChannelHandlerDispatcher(channelHandlerArray46);
        org.apache.dubbo.common.URL uRL48 = null;
        org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler directChannelHandler49 = new org.apache.dubbo.remoting.transport.dispatcher.direct.DirectChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher47, uRL48);
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState50 = null;
        java.net.InetSocketAddress inetSocketAddress51 = null;
        java.net.InetSocketAddress inetSocketAddress52 = null;
        org.apache.dubbo.remoting.RemotingException remotingException54 = new org.apache.dubbo.remoting.RemotingException(inetSocketAddress51, inetSocketAddress52, "charset");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable55 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate45, (org.apache.dubbo.remoting.ChannelHandler) directChannelHandler49, channelState50, (java.lang.Throwable) remotingException54);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher56 = new org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher();
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState channelState57 = null;
        java.net.InetSocketAddress inetSocketAddress59 = null;
        java.net.InetSocketAddress inetSocketAddress60 = null;
        org.apache.dubbo.remoting.ExecutionException executionException62 = new org.apache.dubbo.remoting.ExecutionException((java.lang.Object) "hi!", inetSocketAddress59, inetSocketAddress60, "hi!");
        org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable channelEventRunnable63 = new org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable((org.apache.dubbo.remoting.Channel) channelDelegate45, (org.apache.dubbo.remoting.ChannelHandler) exchangeHandlerDispatcher56, channelState57, (java.lang.Throwable) executionException62);
        decodeHandler44.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate45);
        org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate exchangeServerDelegate65 = new org.apache.dubbo.remoting.exchange.support.ExchangeServerDelegate();
        java.lang.Object obj66 = org.apache.dubbo.remoting.utils.PayloadDropper.getRequestWithoutData((java.lang.Object) exchangeServerDelegate65);
        org.apache.dubbo.remoting.transport.ServerDelegate serverDelegate67 = new org.apache.dubbo.remoting.transport.ServerDelegate((org.apache.dubbo.remoting.RemotingServer) exchangeServerDelegate65);
        exchangeHandlerDispatcher39.sent((org.apache.dubbo.remoting.Channel) channelDelegate45, (java.lang.Object) serverDelegate67);
        channelHandlerDispatcher11.disconnected((org.apache.dubbo.remoting.Channel) channelDelegate45);
        org.apache.dubbo.remoting.exchange.support.ExchangeHandlerDispatcher exchangeHandlerDispatcher70 = exchangeHandlerDispatcher9.addChannelHandler((org.apache.dubbo.remoting.ChannelHandler) channelHandlerDispatcher11);
        boolean boolean71 = objCompletableFuture4.complete((java.lang.Object) channelHandlerDispatcher11);
        org.apache.dubbo.remoting.buffer.HeapChannelBuffer heapChannelBuffer73 = new org.apache.dubbo.remoting.buffer.HeapChannelBuffer((int) '4');
        byte[] byteArray74 = heapChannelBuffer73.array();
        byte[] byteArray75 = heapChannelBuffer73.array();
        objCompletableFuture4.obtrudeValue((java.lang.Object) byteArray75);
        org.junit.Assert.assertNotNull(completableFutureArray1);
        org.junit.Assert.assertNotNull(wildcardCompletableFutureArray2);
        org.junit.Assert.assertNotNull(objCompletableFuture3);
        org.junit.Assert.assertNotNull(objCompletableFuture4);
        org.junit.Assert.assertTrue("'" + channelState5 + "' != '" + org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState.CAUGHT + "'", channelState5.equals(org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState.CAUGHT));
        org.junit.Assert.assertTrue("'" + obj7 + "' != '" + org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState.CAUGHT + "'", obj7.equals(org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.ChannelState.CAUGHT));
        org.junit.Assert.assertNotNull(channelHandlerArray10);
        org.junit.Assert.assertNotNull(channelHandlerArray15);
        org.junit.Assert.assertNotNull(channelHandlerArray22);
        org.junit.Assert.assertNotNull(channelHandlerArray29);
        org.junit.Assert.assertNotNull(channelHandlerArray33);
        org.junit.Assert.assertNotNull(channelHandlerArray38);
        org.junit.Assert.assertNotNull(channelHandlerArray40);
        org.junit.Assert.assertNotNull(channelHandlerArray46);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(exchangeHandlerDispatcher70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
    }
}
