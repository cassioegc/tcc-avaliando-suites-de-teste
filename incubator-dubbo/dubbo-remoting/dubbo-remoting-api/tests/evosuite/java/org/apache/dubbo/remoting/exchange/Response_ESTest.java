/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 10 03:57:09 GMT 2021
 */

package org.apache.dubbo.remoting.exchange;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.dubbo.remoting.exchange.Response;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Response_ESTest extends Response_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Response response0 = new Response();
      assertFalse(response0.isEvent());
      
      response0.setEvent(true);
      boolean boolean0 = response0.isEvent();
      assertTrue(response0.isHeartbeat());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Response response0 = new Response((-1L), "[u'_j2D[c");
      response0.getVersion();
      assertEquals((-1L), response0.getId());
      assertEquals((byte)20, response0.getStatus());
      assertFalse(response0.isEvent());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Response response0 = new Response();
      response0.setVersion("");
      response0.getVersion();
      assertEquals((byte)20, response0.getStatus());
      assertEquals(0L, response0.getId());
      assertFalse(response0.isEvent());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Response response0 = new Response();
      assertEquals((byte)20, response0.getStatus());
      
      response0.setStatus((byte)0);
      byte byte0 = response0.getStatus();
      assertEquals((byte)0, byte0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Response response0 = new Response((-201L), " y'Is");
      assertEquals((byte)20, response0.getStatus());
      
      response0.setStatus((byte) (-1));
      byte byte0 = response0.getStatus();
      assertEquals((byte) (-1), byte0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Response response0 = new Response((-121L));
      long long0 = response0.getId();
      assertFalse(response0.isEvent());
      assertEquals((-121L), long0);
      assertEquals((byte)20, response0.getStatus());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Response response0 = new Response();
      response0.setErrorMessage("A=.Wn\"-v");
      response0.getErrorMessage();
      assertEquals(0L, response0.getId());
      assertFalse(response0.isHeartbeat());
      assertEquals((byte)20, response0.getStatus());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Response response0 = new Response(0L, "[ gqPBt gtn/CL_#");
      response0.setErrorMessage("");
      response0.getErrorMessage();
      assertEquals((byte)20, response0.getStatus());
      assertFalse(response0.isEvent());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Response response0 = new Response(0L);
      String string0 = response0.toString();
      assertEquals("Response [id=0, version=null, status=20, event=false, error=null, result=null]", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Response response0 = new Response(0L);
      assertFalse(response0.isEvent());
      
      response0.setHeartbeat(true);
      assertTrue(response0.isHeartbeat());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Response response0 = new Response(0L);
      response0.setHeartbeat(false);
      assertEquals((byte)20, response0.getStatus());
      assertFalse(response0.isHeartbeat());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Response response0 = new Response(0L);
      response0.setEvent((String) null);
      response0.setResult("");
      boolean boolean0 = response0.isHeartbeat();
      assertTrue(response0.isEvent());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Response response0 = new Response();
      boolean boolean0 = response0.isHeartbeat();
      assertEquals(0L, response0.getId());
      assertEquals((byte)20, response0.getStatus());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Response response0 = new Response(0L);
      response0.getResult();
      assertEquals((byte)20, response0.getStatus());
      assertFalse(response0.isHeartbeat());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Response response0 = new Response(0L);
      response0.setStatus((byte) (-12));
      response0.toString();
      assertEquals((byte) (-12), response0.getStatus());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Response response0 = new Response(0L);
      assertFalse(response0.isEvent());
      
      response0.setEvent((String) null);
      boolean boolean0 = response0.isHeartbeat();
      assertTrue(response0.isEvent());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Response response0 = new Response(0L);
      response0.getVersion();
      assertEquals((byte)20, response0.getStatus());
      assertFalse(response0.isHeartbeat());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Response response0 = new Response();
      response0.setId((byte)31);
      long long0 = response0.getId();
      assertEquals(31L, long0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Response response0 = new Response(0L);
      response0.setResult("");
      response0.getResult();
      assertEquals((byte)20, response0.getStatus());
      assertFalse(response0.isEvent());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Response response0 = new Response();
      response0.getErrorMessage();
      assertEquals(0L, response0.getId());
      assertEquals((byte)20, response0.getStatus());
      assertFalse(response0.isEvent());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Response response0 = new Response();
      long long0 = response0.getId();
      assertEquals(0L, long0);
      assertFalse(response0.isEvent());
      assertEquals((byte)20, response0.getStatus());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Response response0 = new Response();
      byte byte0 = response0.getStatus();
      assertEquals((byte)20, byte0);
      assertEquals(0L, response0.getId());
      assertFalse(response0.isEvent());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Response response0 = new Response();
      boolean boolean0 = response0.isEvent();
      assertFalse(boolean0);
      assertEquals(0L, response0.getId());
      assertEquals((byte)20, response0.getStatus());
  }
}
