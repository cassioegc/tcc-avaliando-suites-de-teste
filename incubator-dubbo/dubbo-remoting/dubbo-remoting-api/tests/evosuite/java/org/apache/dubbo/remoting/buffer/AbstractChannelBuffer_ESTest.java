/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 10 03:14:17 GMT 2021
 */

package org.apache.dubbo.remoting.buffer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.util.Enumeration;
import org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBuffer;
import org.apache.dubbo.remoting.buffer.ChannelBuffer;
import org.apache.dubbo.remoting.buffer.ChannelBufferFactory;
import org.apache.dubbo.remoting.buffer.DirectChannelBufferFactory;
import org.apache.dubbo.remoting.buffer.DynamicChannelBuffer;
import org.apache.dubbo.remoting.buffer.HeapChannelBuffer;
import org.apache.dubbo.remoting.buffer.HeapChannelBufferFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractChannelBuffer_ESTest extends AbstractChannelBuffer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(0);
      dynamicChannelBuffer0.skipBytes(0);
      assertEquals(0, dynamicChannelBuffer0.readerIndex());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(2699);
      dynamicChannelBuffer0.skipBytes((-2206));
      dynamicChannelBuffer0.skipBytes((byte)0);
      assertTrue(dynamicChannelBuffer0.readable());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1);
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      ChannelBufferFactory channelBufferFactory0 = byteBufferBackedChannelBuffer0.factory();
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(1469, channelBufferFactory0);
      dynamicChannelBuffer0.readBytes((ChannelBuffer) byteBufferBackedChannelBuffer0);
      assertEquals(0, dynamicChannelBuffer0.readableBytes());
      assertEquals(1, byteBufferBackedChannelBuffer0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(23);
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(1);
      heapChannelBuffer0.setBytes(23, (ChannelBuffer) dynamicChannelBuffer0, 0);
      assertEquals(0, dynamicChannelBuffer0.readableBytes());
      assertEquals(0, dynamicChannelBuffer0.readerIndex());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(0);
      heapChannelBuffer0.ensureWritableBytes(0);
      assertEquals(0, heapChannelBuffer0.capacity());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer((byte)51);
      heapChannelBuffer0.writerIndex((int) (byte)40);
      assertEquals(40, heapChannelBuffer0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(0);
      byte[] byteArray0 = new byte[4];
      dynamicChannelBuffer0.writeBytes(byteArray0, 0, (int) (byte)0);
      assertEquals(0, dynamicChannelBuffer0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(byteArray0);
      ChannelBufferFactory channelBufferFactory0 = heapChannelBuffer0.factory();
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer((byte)1, channelBufferFactory0);
      dynamicChannelBuffer0.writeBytes((ChannelBuffer) heapChannelBuffer0, (int) (byte)1);
      assertEquals(6, heapChannelBuffer0.readableBytes());
      assertEquals(1, dynamicChannelBuffer0.readableBytes());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(256);
      heapChannelBuffer0.writeByte((-370));
      assertTrue(heapChannelBuffer0.readable());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(31);
      dynamicChannelBuffer0.checkReadableBytes((byte) (-8));
      assertEquals(0, dynamicChannelBuffer0.readerIndex());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(6034);
      byte[] byteArray0 = new byte[9];
      dynamicChannelBuffer0.writeBytes(byteArray0);
      assertEquals(9, dynamicChannelBuffer0.readableBytes());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(40);
      byte[] byteArray0 = new byte[1];
      heapChannelBuffer0.setBytes(7, byteArray0);
      assertFalse(heapChannelBuffer0.isDirect());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(byteArray0);
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(0);
      ByteBuffer byteBuffer0 = dynamicChannelBuffer0.toByteBuffer(0, 0);
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      heapChannelBuffer0.setBytes(0, (ChannelBuffer) byteBufferBackedChannelBuffer0);
      assertEquals(0, byteBufferBackedChannelBuffer0.readerIndex());
      assertEquals(0, byteBufferBackedChannelBuffer0.readableBytes());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(byteArray0);
      heapChannelBuffer0.readBytes(byteArray0);
      assertEquals(9, heapChannelBuffer0.readerIndex());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(byteArray0);
      heapChannelBuffer0.getBytes((int) (byte)0, byteArray0);
      assertEquals(4, heapChannelBuffer0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(40);
      ChannelBuffer channelBuffer0 = dynamicChannelBuffer0.copy();
      dynamicChannelBuffer0.getBytes(40, channelBuffer0);
      assertFalse(dynamicChannelBuffer0.isDirect());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(0);
      int int0 = dynamicChannelBuffer0.writableBytes();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(2699);
      dynamicChannelBuffer0.skipBytes((-2206));
      int int0 = dynamicChannelBuffer0.readerIndex();
      assertTrue(dynamicChannelBuffer0.readable());
      assertEquals((-2206), int0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(byteArray0);
      int int0 = heapChannelBuffer0.readableBytes();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-88);
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(byteArray0);
      byte byte0 = heapChannelBuffer0.readByte();
      assertEquals(1, heapChannelBuffer0.readerIndex());
      assertEquals((byte) (-88), byte0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(byteArray0);
      ChannelBuffer channelBuffer0 = heapChannelBuffer0.copy();
      assertEquals(13, channelBuffer0.readableBytes());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(0);
      int int0 = dynamicChannelBuffer0.compareTo((ChannelBuffer) dynamicChannelBuffer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(1);
      DirectChannelBufferFactory directChannelBufferFactory0 = new DirectChannelBufferFactory();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(1);
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = (ByteBufferBackedChannelBuffer)directChannelBufferFactory0.getBuffer(byteBuffer0);
      int int0 = byteBufferBackedChannelBuffer0.compareTo((ChannelBuffer) dynamicChannelBuffer0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(byteArray0);
      ChannelBufferFactory channelBufferFactory0 = heapChannelBuffer0.factory();
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(2699, channelBufferFactory0);
      int int0 = dynamicChannelBuffer0.compareTo((ChannelBuffer) heapChannelBuffer0);
      assertEquals((-5), int0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(52);
      byte[] byteArray0 = new byte[4];
      // Undeclared exception!
      try { 
        heapChannelBuffer0.writeBytes(byteArray0, 58, (int) (byte)31);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(byteArray0);
      // Undeclared exception!
      try { 
        heapChannelBuffer0.writeBytes(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(byteArray0);
      // Undeclared exception!
      try { 
        heapChannelBuffer0.writeBytes((ChannelBuffer) null, 3458, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.buffer.HeapChannelBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(byteArray0);
      // Undeclared exception!
      try { 
        heapChannelBuffer0.writeBytes((ChannelBuffer) heapChannelBuffer0, 1849, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        byteBufferBackedChannelBuffer0.writeBytes((ChannelBuffer) byteBufferBackedChannelBuffer0, (-1867));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteBuffer byteBuffer0 = charset0.encode(charBuffer0);
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      MockFile mockFile0 = new MockFile("SENSITIVE", "SENSITIVE");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      byteBufferBackedChannelBuffer0.readBytes((OutputStream) mockPrintStream0, (-3219));
      // Undeclared exception!
      try { 
        byteBufferBackedChannelBuffer0.writeBytes((ChannelBuffer) byteBufferBackedChannelBuffer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(2699);
      dynamicChannelBuffer0.skipBytes((-2206));
      byte[] byteArray0 = new byte[7];
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(byteArray0);
      // Undeclared exception!
      try { 
        heapChannelBuffer0.writeBytes((ChannelBuffer) dynamicChannelBuffer0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(919);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2110);
      // Undeclared exception!
      try { 
        heapChannelBuffer0.writeBytes(byteBuffer0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteBuffer byteBuffer0 = charset0.encode(charBuffer0);
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        byteBufferBackedChannelBuffer0.writeBytes(byteBuffer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(1);
      // Undeclared exception!
      try { 
        dynamicChannelBuffer0.writeBytes((InputStream) null, 902);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.buffer.HeapChannelBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(1);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null, 1);
      // Undeclared exception!
      try { 
        heapChannelBuffer0.writeBytes((InputStream) bufferedInputStream0, 2175);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        byteBufferBackedChannelBuffer0.writeByte(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer((byte)0);
      dynamicChannelBuffer0.skipBytes((byte) (-89));
      // Undeclared exception!
      try { 
        dynamicChannelBuffer0.toByteBuffer();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(0);
      // Undeclared exception!
      try { 
        heapChannelBuffer0.setBytes((-2294), (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.buffer.AbstractChannelBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(0);
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        dynamicChannelBuffer0.setBytes(1405, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer((byte)64);
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(2065);
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        dynamicChannelBuffer0.setBytes((int) (byte) (-93), (ChannelBuffer) byteBufferBackedChannelBuffer0, (int) (byte)7);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(0);
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(1);
      // Undeclared exception!
      try { 
        heapChannelBuffer0.setBytes(0, (ChannelBuffer) dynamicChannelBuffer0, (-22));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(2809);
      // Undeclared exception!
      try { 
        dynamicChannelBuffer0.setBytes(2809, (ChannelBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.buffer.AbstractChannelBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteBuffer byteBuffer0 = charset0.encode(charBuffer0);
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        byteBufferBackedChannelBuffer0.setBytes((-1), (ChannelBuffer) byteBufferBackedChannelBuffer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(byteArray0);
      // Undeclared exception!
      try { 
        heapChannelBuffer0.readBytes(byteArray0, (int) (byte)0, 20);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.buffer.AbstractChannelBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(0);
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        heapChannelBuffer0.readBytes(byteArray0, (int) (byte) (-89), 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(2101);
      byte[] byteArray0 = new byte[6];
      // Undeclared exception!
      try { 
        heapChannelBuffer0.readBytes(byteArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.buffer.AbstractChannelBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(2699);
      dynamicChannelBuffer0.skipBytes((-2206));
      byte[] byteArray0 = new byte[7];
      // Undeclared exception!
      try { 
        dynamicChannelBuffer0.readBytes(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(0);
      // Undeclared exception!
      try { 
        dynamicChannelBuffer0.readBytes((ChannelBuffer) null, 0, (-2481));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.buffer.HeapChannelBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(0);
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        byteBufferBackedChannelBuffer0.readBytes((ChannelBuffer) byteBufferBackedChannelBuffer0, 0, (-1969));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(byteArray0);
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer((byte)0);
      // Undeclared exception!
      try { 
        heapChannelBuffer0.readBytes((ChannelBuffer) dynamicChannelBuffer0, 0, (-130));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(0);
      // Undeclared exception!
      try { 
        dynamicChannelBuffer0.readBytes((ChannelBuffer) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.buffer.AbstractChannelBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteBuffer byteBuffer0 = charset0.encode(charBuffer0);
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        byteBufferBackedChannelBuffer0.readBytes((ChannelBuffer) byteBufferBackedChannelBuffer0, (-656));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(0);
      // Undeclared exception!
      try { 
        dynamicChannelBuffer0.readBytes((ChannelBuffer) dynamicChannelBuffer0, (-296));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(0);
      HeapChannelBufferFactory heapChannelBufferFactory0 = new HeapChannelBufferFactory();
      ChannelBuffer channelBuffer0 = heapChannelBufferFactory0.getBuffer(22);
      // Undeclared exception!
      try { 
        dynamicChannelBuffer0.readBytes(channelBuffer0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.buffer.AbstractChannelBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ChannelBufferFactory channelBufferFactory0 = HeapChannelBufferFactory.getInstance();
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(0, channelBufferFactory0);
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("4");
      // Undeclared exception!
      try { 
        dynamicChannelBuffer0.readBytes(byteBuffer0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.buffer.AbstractChannelBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        byteBufferBackedChannelBuffer0.readBytes((OutputStream) null, (int) (byte) (-92));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      // Undeclared exception!
      try { 
        dynamicChannelBuffer0.readBytes((OutputStream) byteArrayOutputStream0, (-12));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(1);
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("}U");
      // Undeclared exception!
      try { 
        byteBufferBackedChannelBuffer0.readBytes((OutputStream) mockPrintStream0, 256);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.buffer.AbstractChannelBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(31);
      // Undeclared exception!
      try { 
        dynamicChannelBuffer0.readBytes(31);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.buffer.AbstractChannelBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(2699);
      dynamicChannelBuffer0.skipBytes((-2206));
      // Undeclared exception!
      try { 
        dynamicChannelBuffer0.hashCode();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2206
         //
         verifyException("org.apache.dubbo.remoting.buffer.HeapChannelBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(0);
      byte[] byteArray0 = new byte[4];
      // Undeclared exception!
      try { 
        dynamicChannelBuffer0.getBytes(995, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(0);
      // Undeclared exception!
      try { 
        dynamicChannelBuffer0.getBytes((-1163), (ChannelBuffer) null, (int) (byte)0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.buffer.AbstractChannelBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(byteArray0);
      // Undeclared exception!
      try { 
        heapChannelBuffer0.getBytes(3, (ChannelBuffer) heapChannelBuffer0, (int) (byte) (-29));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(byteArray0);
      // Undeclared exception!
      try { 
        heapChannelBuffer0.getBytes((int) (byte) (-61), (ChannelBuffer) heapChannelBuffer0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(2699);
      dynamicChannelBuffer0.skipBytes((-2206));
      // Undeclared exception!
      try { 
        dynamicChannelBuffer0.discardReadBytes();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(2699);
      dynamicChannelBuffer0.skipBytes((-2206));
      byte[] byteArray0 = new byte[7];
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(byteArray0);
      // Undeclared exception!
      try { 
        dynamicChannelBuffer0.compareTo((ChannelBuffer) heapChannelBuffer0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2206
         //
         verifyException("org.apache.dubbo.remoting.buffer.HeapChannelBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(byteArray0);
      // Undeclared exception!
      try { 
        heapChannelBuffer0.checkReadableBytes((byte)41);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.buffer.AbstractChannelBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      int int0 = heapChannelBuffer0.writeBytes((InputStream) pipedInputStream0, (int) (byte)0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(2699);
      byte[] byteArray0 = new byte[7];
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(byteArray0);
      // Undeclared exception!
      try { 
        heapChannelBuffer0.writeBytes((ChannelBuffer) dynamicChannelBuffer0, (-2206));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(0);
      // Undeclared exception!
      try { 
        dynamicChannelBuffer0.setIndex((-1246), (-2014));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.buffer.AbstractChannelBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(byteArray0);
      // Undeclared exception!
      try { 
        heapChannelBuffer0.setIndex(41, (byte) (-11));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.buffer.AbstractChannelBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(0);
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      byteBufferBackedChannelBuffer0.setIndex(0, 0);
      assertEquals(0, byteBufferBackedChannelBuffer0.arrayOffset());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(0);
      // Undeclared exception!
      try { 
        dynamicChannelBuffer0.setIndex(0, 3521);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.buffer.AbstractChannelBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DirectChannelBufferFactory directChannelBufferFactory0 = new DirectChannelBufferFactory();
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(1001, directChannelBufferFactory0);
      ByteBuffer byteBuffer0 = dynamicChannelBuffer0.toByteBuffer(0, 0);
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      byteBufferBackedChannelBuffer0.readerIndex(0);
      assertEquals(0, byteBufferBackedChannelBuffer0.readableBytes());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(0);
      int int0 = dynamicChannelBuffer0.readableBytes();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ChannelBufferFactory channelBufferFactory0 = DirectChannelBufferFactory.getInstance();
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(2068, channelBufferFactory0);
      int int0 = dynamicChannelBuffer0.writerIndex();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteBuffer byteBuffer0 = charset0.encode(charBuffer0);
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        byteBufferBackedChannelBuffer0.writeBytes((ChannelBuffer) byteBufferBackedChannelBuffer0, 11, (-1541));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DirectChannelBufferFactory directChannelBufferFactory0 = new DirectChannelBufferFactory();
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(3153, directChannelBufferFactory0);
      int int0 = dynamicChannelBuffer0.readerIndex();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("O3dz1PC[-");
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
      try { 
        byteBufferBackedChannelBuffer0.writeBytes(byteArray0, (-530), (-261));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(31);
      dynamicChannelBuffer0.clear();
      assertEquals(0, dynamicChannelBuffer0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ChannelBufferFactory channelBufferFactory0 = DirectChannelBufferFactory.getInstance();
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(1124, channelBufferFactory0);
      int int0 = dynamicChannelBuffer0.writableBytes();
      assertEquals(1124, int0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(0);
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(1);
      // Undeclared exception!
      try { 
        dynamicChannelBuffer0.readBytes((ChannelBuffer) heapChannelBuffer0, (-1), 7);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.buffer.AbstractChannelBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ChannelBufferFactory channelBufferFactory0 = HeapChannelBufferFactory.getInstance();
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(0, channelBufferFactory0);
      boolean boolean0 = dynamicChannelBuffer0.equals(dynamicChannelBuffer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(byteArray0);
      boolean boolean0 = heapChannelBuffer0.equals("c7hgF(I");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      int int0 = dynamicChannelBuffer0.writeBytes((InputStream) sequenceInputStream0, 3459);
      assertEquals((-1), int0);
      assertEquals(0, dynamicChannelBuffer0.readableBytes());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(byteArray0);
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(0);
      // Undeclared exception!
      try { 
        dynamicChannelBuffer0.writeBytes((ChannelBuffer) heapChannelBuffer0, 31);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.buffer.AbstractChannelBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(1);
      // Undeclared exception!
      try { 
        dynamicChannelBuffer0.skipBytes(1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.buffer.AbstractChannelBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(byteArray0, 0, 0);
      // Undeclared exception!
      try { 
        heapChannelBuffer0.readBytes((ChannelBuffer) heapChannelBuffer0, 1033);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.buffer.AbstractChannelBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ChannelBufferFactory channelBufferFactory0 = HeapChannelBufferFactory.getInstance();
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(0, channelBufferFactory0);
      ChannelBuffer channelBuffer0 = dynamicChannelBuffer0.readBytes(0);
      assertFalse(channelBuffer0.isDirect());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(byteArray0);
      // Undeclared exception!
      try { 
        heapChannelBuffer0.readBytes((-52));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // capacity can not be negative
         //
         verifyException("org.apache.dubbo.remoting.buffer.ChannelBuffers", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(40);
      // Undeclared exception!
      try { 
        dynamicChannelBuffer0.readByte();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.buffer.AbstractChannelBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(byteArray0);
      heapChannelBuffer0.readByte();
      assertEquals(3, heapChannelBuffer0.readableBytes());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(byteArray0);
      // Undeclared exception!
      try { 
        heapChannelBuffer0.setBytes(256, (ChannelBuffer) heapChannelBuffer0, 256);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.buffer.AbstractChannelBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(3282);
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        byteBufferBackedChannelBuffer0.getBytes(7, (ChannelBuffer) byteBufferBackedChannelBuffer0, 3282);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.buffer.AbstractChannelBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(byteArray0);
      heapChannelBuffer0.getBytes(3, (ChannelBuffer) heapChannelBuffer0, (int) (byte)0);
      assertEquals(3, heapChannelBuffer0.writerIndex());
      assertEquals(3, heapChannelBuffer0.readableBytes());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(byteArray0);
      // Undeclared exception!
      try { 
        heapChannelBuffer0.ensureWritableBytes(370);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.buffer.AbstractChannelBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteBuffer byteBuffer0 = charset0.encode(charBuffer0);
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      byteBufferBackedChannelBuffer0.discardReadBytes();
      assertFalse(byteBufferBackedChannelBuffer0.readable());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1);
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      ChannelBufferFactory channelBufferFactory0 = byteBufferBackedChannelBuffer0.factory();
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(1469, channelBufferFactory0);
      boolean boolean0 = dynamicChannelBuffer0.writable();
      assertEquals(1, byteBufferBackedChannelBuffer0.readableBytes());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(byteArray0);
      boolean boolean0 = heapChannelBuffer0.writable();
      assertFalse(boolean0);
      assertTrue(heapChannelBuffer0.readable());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(2699);
      dynamicChannelBuffer0.skipBytes((-2206));
      boolean boolean0 = dynamicChannelBuffer0.readable();
      assertEquals((-2206), dynamicChannelBuffer0.readerIndex());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(byteArray0, (byte)0, 0);
      boolean boolean0 = heapChannelBuffer0.readable();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        byteBufferBackedChannelBuffer0.writerIndex(1040);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.buffer.AbstractChannelBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(0);
      // Undeclared exception!
      try { 
        dynamicChannelBuffer0.writerIndex((-2650));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.buffer.AbstractChannelBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(604);
      // Undeclared exception!
      try { 
        dynamicChannelBuffer0.readerIndex(604);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.buffer.AbstractChannelBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(256);
      // Undeclared exception!
      try { 
        heapChannelBuffer0.readerIndex((int) (byte) (-8));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.buffer.AbstractChannelBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(0);
      heapChannelBuffer0.markWriterIndex();
      assertFalse(heapChannelBuffer0.isDirect());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(byteArray0);
      heapChannelBuffer0.resetReaderIndex();
      assertEquals(0, heapChannelBuffer0.readerIndex());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(byteArray0);
      heapChannelBuffer0.markReaderIndex();
      assertTrue(heapChannelBuffer0.readable());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteBuffer byteBuffer0 = charset0.encode(charBuffer0);
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      byteBufferBackedChannelBuffer0.resetWriterIndex();
      assertEquals(0, byteBufferBackedChannelBuffer0.writerIndex());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(byteArray0);
      // Undeclared exception!
      try { 
        heapChannelBuffer0.setBytes(1455, (ChannelBuffer) heapChannelBuffer0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteBuffer byteBuffer0 = charset0.encode(charBuffer0);
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      byteBufferBackedChannelBuffer0.writeBytes((ChannelBuffer) byteBufferBackedChannelBuffer0);
      assertEquals(0, byteBufferBackedChannelBuffer0.readerIndex());
      assertEquals(0, byteBufferBackedChannelBuffer0.readableBytes());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(byteArray0);
      // Undeclared exception!
      try { 
        heapChannelBuffer0.writeByte(605);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.dubbo.remoting.buffer.HeapChannelBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      HeapChannelBufferFactory heapChannelBufferFactory0 = new HeapChannelBufferFactory();
      ChannelBuffer channelBuffer0 = heapChannelBufferFactory0.getBuffer(0);
      // Undeclared exception!
      try { 
        channelBuffer0.writeBytes((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.buffer.AbstractChannelBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteBuffer byteBuffer0 = charset0.encode(charBuffer0);
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        byteBufferBackedChannelBuffer0.compareTo((ChannelBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.buffer.ChannelBuffers", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(0);
      ByteBuffer byteBuffer0 = dynamicChannelBuffer0.toByteBuffer();
      assertEquals(0, byteBuffer0.arrayOffset());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteBuffer byteBuffer0 = charset0.encode(charBuffer0);
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      // Undeclared exception!
      try { 
        byteBufferBackedChannelBuffer0.readBytes((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.buffer.AbstractChannelBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(0);
      String string0 = dynamicChannelBuffer0.toString();
      assertEquals("DynamicChannelBuffer(ridx=0, widx=0, cap=0)", string0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(byteArray0);
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      heapChannelBuffer0.readBytes(byteBuffer0);
      assertFalse(byteBuffer0.hasRemaining());
      
      heapChannelBuffer0.discardReadBytes();
      assertEquals(0, heapChannelBuffer0.readableBytes());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(0);
      // Undeclared exception!
      try { 
        dynamicChannelBuffer0.writeBytes((byte[]) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(0);
      byte[] byteArray0 = new byte[1];
      heapChannelBuffer0.readBytes(byteArray0, (int) (byte)0, 0);
      assertEquals(0, heapChannelBuffer0.readableBytes());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("org.apache.dubbo.remoting.buffer.AbstractChannelBuffer");
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      byte[] byteArray0 = new byte[7];
      // Undeclared exception!
      try { 
        byteBufferBackedChannelBuffer0.getBytes((-1287), byteArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.buffer.ByteBufferBackedChannelBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(0);
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(1);
      assertEquals(0, dynamicChannelBuffer0.writerIndex());
      
      dynamicChannelBuffer0.readBytes((ChannelBuffer) heapChannelBuffer0, 0);
      assertEquals(0, dynamicChannelBuffer0.readerIndex());
      assertEquals(0, heapChannelBuffer0.readableBytes());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      HeapChannelBuffer heapChannelBuffer0 = new HeapChannelBuffer(0);
      heapChannelBuffer0.ensureWritableBytes((-1163));
      assertEquals(0, heapChannelBuffer0.readableBytes());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(0);
      assertEquals(0, dynamicChannelBuffer0.readableBytes());
      
      dynamicChannelBuffer0.hashCode();
      assertEquals(0, dynamicChannelBuffer0.readerIndex());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(1);
      // Undeclared exception!
      try { 
        dynamicChannelBuffer0.getBytes(1, (ChannelBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.buffer.AbstractChannelBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteBuffer byteBuffer0 = charset0.encode(charBuffer0);
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      byteBufferBackedChannelBuffer0.writeBytes(byteBuffer0);
      assertEquals(0, byteBufferBackedChannelBuffer0.readableBytes());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteBuffer byteBuffer0 = charset0.encode(charBuffer0);
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        byteBufferBackedChannelBuffer0.setBytes(744, byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }
}
