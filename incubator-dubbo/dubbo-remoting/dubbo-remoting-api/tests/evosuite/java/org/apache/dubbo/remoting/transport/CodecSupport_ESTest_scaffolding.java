/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Sat Apr 10 03:34:41 GMT 2021
 */

package org.apache.dubbo.remoting.transport;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class CodecSupport_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.apache.dubbo.remoting.transport.CodecSupport"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "BR"); 
    java.lang.System.setProperty("user.dir", "/home/cassioegc/incubator-dubbo/dubbo-remoting/dubbo-remoting-api"); 
    java.lang.System.setProperty("user.home", "/home/cassioegc"); 
    java.lang.System.setProperty("user.language", "pt"); 
    java.lang.System.setProperty("user.name", "cassioegc"); 
    java.lang.System.setProperty("user.timezone", "America/Recife"); 
    java.lang.System.setProperty("log4j.configuration", "SUT.log4j.properties"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(CodecSupport_ESTest_scaffolding.class.getClassLoader() ,
      "org.apache.dubbo.config.SslConfig",
      "org.apache.dubbo.config.ApplicationConfig",
      "org.apache.dubbo.common.extension.Adaptive",
      "org.apache.log4j.DefaultCategoryFactory",
      "org.apache.dubbo.common.utils.ArrayUtils",
      "org.apache.log4j.or.RendererMap",
      "org.apache.dubbo.common.utils.NetUtils",
      "org.apache.dubbo.remoting.transport.CodecSupport",
      "org.apache.dubbo.config.AbstractMethodConfig",
      "org.apache.dubbo.rpc.model.MethodDescriptor",
      "org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter",
      "org.apache.dubbo.common.serialize.DataInput",
      "org.apache.log4j.Level",
      "org.apache.dubbo.config.MetricsConfig",
      "org.apache.dubbo.common.utils.Holder",
      "org.apache.dubbo.common.config.Configuration",
      "org.apache.dubbo.common.extension.DubboLoadingStrategy",
      "org.apache.dubbo.rpc.service.GenericServiceDetector",
      "org.apache.dubbo.common.context.FrameworkExt",
      "org.apache.dubbo.common.logger.log4j.Log4jLogger",
      "org.apache.dubbo.common.extension.SPI",
      "org.apache.log4j.CategoryKey",
      "org.apache.dubbo.config.AbstractInterfaceConfig",
      "org.apache.dubbo.common.extension.factory.AdaptiveExtensionFactory",
      "org.apache.dubbo.common.context.Lifecycle",
      "org.apache.dubbo.common.extension.ExtensionLoader",
      "org.apache.dubbo.common.utils.ClassUtils",
      "org.apache.dubbo.common.logger.LoggerAdapter",
      "org.apache.dubbo.common.extension.ServicesLoadingStrategy",
      "org.apache.dubbo.common.io.UnsafeStringWriter",
      "org.apache.dubbo.config.ConsumerConfig",
      "org.apache.log4j.helpers.Loader",
      "org.apache.dubbo.config.ModuleConfig",
      "org.apache.log4j.ProvisionNode",
      "org.apache.log4j.Hierarchy",
      "org.apache.dubbo.common.extension.Activate",
      "org.apache.log4j.helpers.FileWatchdog",
      "org.apache.dubbo.rpc.service.GenericService",
      "org.apache.dubbo.config.ServiceConfigBase",
      "org.apache.dubbo.config.RegistryConfig",
      "org.apache.dubbo.common.extension.LoadingStrategy",
      "org.apache.log4j.helpers.NullEnumeration",
      "org.apache.log4j.spi.DefaultRepositorySelector",
      "org.apache.log4j.spi.RootLogger",
      "org.apache.dubbo.common.extension.ExtensionFactory",
      "org.apache.dubbo.common.utils.CollectionUtils",
      "org.apache.dubbo.rpc.model.ConsumerModel",
      "org.apache.log4j.spi.RendererSupport",
      "org.apache.dubbo.common.extension.DubboInternalLoadingStrategy",
      "org.apache.dubbo.rpc.model.ServiceRepository",
      "org.apache.dubbo.config.ProviderConfig",
      "org.apache.dubbo.rpc.service.EchoService",
      "org.apache.log4j.helpers.OptionConverter",
      "org.apache.dubbo.common.logger.LoggerFactory",
      "org.apache.dubbo.common.lang.Prioritized",
      "org.apache.dubbo.common.Version",
      "org.apache.log4j.or.ObjectRenderer",
      "org.apache.dubbo.common.logger.jcl.JclLoggerAdapter",
      "org.apache.dubbo.config.AbstractConfig",
      "org.apache.log4j.Logger",
      "org.apache.dubbo.common.URL",
      "org.apache.dubbo.common.utils.ReflectUtils",
      "org.apache.dubbo.common.extension.factory.SpiExtensionFactory",
      "org.apache.log4j.helpers.LogLog",
      "org.apache.dubbo.rpc.model.ServiceMetadata",
      "org.apache.log4j.Category",
      "com.alibaba.dubbo.common.extension.Activate",
      "org.apache.dubbo.common.logger.support.FailsafeLogger",
      "org.apache.dubbo.common.logger.log4j.Log4jLoggerAdapter",
      "org.apache.log4j.spi.RepositorySelector",
      "org.apache.dubbo.rpc.model.ServiceDescriptor",
      "org.apache.log4j.spi.LoggerFactory",
      "org.apache.log4j.spi.Configurator",
      "org.apache.dubbo.common.logger.log4j2.Log4j2LoggerAdapter",
      "org.apache.log4j.or.DefaultRenderer",
      "org.apache.dubbo.config.AbstractReferenceConfig",
      "org.apache.dubbo.common.serialize.DataOutput",
      "org.apache.dubbo.common.serialize.hessian2.Hessian2Serialization",
      "org.apache.dubbo.config.AbstractServiceConfig",
      "org.apache.log4j.PropertyWatchdog",
      "org.apache.dubbo.config.ConfigCenterConfig",
      "org.apache.dubbo.rpc.model.BuiltinServiceDetector",
      "org.apache.log4j.spi.ThrowableRendererSupport",
      "org.apache.log4j.PropertyConfigurator",
      "org.apache.dubbo.common.context.LifecycleAdapter",
      "org.apache.dubbo.config.ReferenceConfigBase",
      "org.apache.dubbo.config.context.ConfigManager",
      "org.apache.dubbo.config.MetadataReportConfig",
      "org.apache.dubbo.common.utils.StringUtils",
      "org.apache.dubbo.rpc.model.ProviderModel",
      "org.apache.dubbo.common.logger.jdk.JdkLoggerAdapter",
      "org.apache.dubbo.common.BaseServiceMetadata",
      "org.apache.dubbo.common.config.Environment",
      "org.apache.dubbo.rpc.service.GenericException",
      "org.apache.dubbo.rpc.model.ApplicationModel",
      "org.apache.dubbo.common.logger.Logger",
      "org.apache.log4j.spi.AppenderAttachable",
      "org.apache.dubbo.config.MonitorConfig",
      "org.apache.dubbo.common.serialize.Serialization",
      "org.apache.dubbo.common.serialize.ObjectOutput",
      "org.apache.dubbo.common.utils.LRUCache",
      "org.apache.log4j.Priority",
      "org.apache.dubbo.config.ProtocolConfig",
      "org.apache.log4j.spi.LoggerRepository",
      "org.apache.dubbo.rpc.service.EchoServiceDetector",
      "org.apache.log4j.LogManager",
      "org.apache.dubbo.common.serialize.ObjectInput"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("java.io.InputStream", false, CodecSupport_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("org.apache.dubbo.common.URL", false, CodecSupport_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(CodecSupport_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.apache.dubbo.common.logger.log4j.Log4jLoggerAdapter",
      "org.apache.log4j.Hierarchy",
      "org.apache.log4j.Category",
      "org.apache.log4j.Logger",
      "org.apache.log4j.spi.RootLogger",
      "org.apache.log4j.Priority",
      "org.apache.log4j.Level",
      "org.apache.log4j.or.DefaultRenderer",
      "org.apache.log4j.or.RendererMap",
      "org.apache.log4j.DefaultCategoryFactory",
      "org.apache.log4j.spi.DefaultRepositorySelector",
      "org.apache.log4j.helpers.OptionConverter",
      "org.apache.log4j.helpers.Loader",
      "org.apache.log4j.helpers.LogLog",
      "org.apache.log4j.PropertyConfigurator",
      "org.apache.log4j.LogManager",
      "org.apache.log4j.helpers.NullEnumeration",
      "org.apache.dubbo.common.logger.log4j.Log4jLogger",
      "org.apache.log4j.CategoryKey",
      "org.apache.log4j.ProvisionNode",
      "org.apache.dubbo.common.logger.LoggerFactory",
      "org.apache.dubbo.common.logger.support.FailsafeLogger",
      "org.apache.dubbo.common.lang.Prioritized",
      "org.apache.dubbo.common.extension.DubboInternalLoadingStrategy",
      "org.apache.dubbo.common.extension.DubboLoadingStrategy",
      "org.apache.dubbo.common.extension.ServicesLoadingStrategy",
      "org.apache.dubbo.common.extension.ExtensionLoader",
      "org.apache.dubbo.common.utils.Holder",
      "org.apache.dubbo.common.utils.CollectionUtils",
      "org.apache.dubbo.common.utils.ClassUtils",
      "org.apache.dubbo.common.utils.StringUtils",
      "org.apache.dubbo.common.extension.factory.AdaptiveExtensionFactory",
      "org.apache.dubbo.common.extension.factory.SpiExtensionFactory",
      "org.apache.dubbo.common.utils.ArrayUtils",
      "org.apache.dubbo.common.serialize.hessian2.Hessian2Serialization",
      "org.apache.dubbo.remoting.transport.CodecSupport",
      "org.apache.dubbo.rpc.model.ApplicationModel",
      "org.apache.dubbo.common.URL",
      "org.apache.dubbo.common.context.LifecycleAdapter",
      "org.apache.dubbo.config.context.ConfigManager",
      "org.apache.dubbo.common.config.Environment",
      "org.apache.dubbo.rpc.model.ServiceRepository",
      "org.apache.dubbo.rpc.service.EchoServiceDetector",
      "org.apache.dubbo.rpc.service.GenericServiceDetector",
      "org.apache.dubbo.rpc.model.ServiceDescriptor",
      "org.apache.dubbo.common.utils.ReflectUtils",
      "org.apache.dubbo.rpc.model.MethodDescriptor",
      "org.apache.dubbo.common.utils.LRUCache",
      "org.apache.dubbo.common.utils.NetUtils",
      "org.apache.dubbo.common.Version"
    );
  }
}
