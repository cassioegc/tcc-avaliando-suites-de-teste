/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 10 03:16:25 GMT 2021
 */

package org.apache.dubbo.remoting.exchange.support.header;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.dubbo.remoting.RemotingServer;
import org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeServer;
import org.apache.dubbo.remoting.transport.ServerDelegate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HeaderExchangeServer_ESTest extends HeaderExchangeServer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ServerDelegate serverDelegate0 = new ServerDelegate();
      serverDelegate0.setServer(serverDelegate0);
      HeaderExchangeServer headerExchangeServer0 = null;
      try {
        headerExchangeServer0 = new HeaderExchangeServer(serverDelegate0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HeaderExchangeServer headerExchangeServer0 = null;
      try {
        headerExchangeServer0 = new HeaderExchangeServer((RemotingServer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // server == null
         //
         verifyException("org.apache.dubbo.common.utils.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ServerDelegate serverDelegate0 = new ServerDelegate();
      HeaderExchangeServer headerExchangeServer0 = null;
      try {
        headerExchangeServer0 = new HeaderExchangeServer(serverDelegate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.transport.ServerDelegate", e);
      }
  }
}
