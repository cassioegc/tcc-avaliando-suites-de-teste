/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 10 03:48:06 GMT 2021
 */

package org.apache.dubbo.remoting.transport;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.dubbo.remoting.Channel;
import org.apache.dubbo.remoting.ChannelHandler;
import org.apache.dubbo.remoting.transport.DecodeHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DecodeHandler_ESTest extends DecodeHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DecodeHandler decodeHandler0 = null;
      try {
        decodeHandler0 = new DecodeHandler((ChannelHandler) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // handler == null
         //
         verifyException("org.apache.dubbo.common.utils.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ChannelHandler channelHandler0 = mock(ChannelHandler.class, new ViolatedAssumptionAnswer());
      DecodeHandler decodeHandler0 = new DecodeHandler(channelHandler0);
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      decodeHandler0.received(channel0, decodeHandler0);
  }
}
