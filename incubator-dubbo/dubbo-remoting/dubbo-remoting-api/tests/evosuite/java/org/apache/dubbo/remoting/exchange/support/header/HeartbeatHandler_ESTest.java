/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 10 03:28:51 GMT 2021
 */

package org.apache.dubbo.remoting.exchange.support.header;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.dubbo.remoting.Channel;
import org.apache.dubbo.remoting.ChannelHandler;
import org.apache.dubbo.remoting.exchange.support.header.HeartbeatHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HeartbeatHandler_ESTest extends HeartbeatHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ChannelHandler channelHandler0 = mock(ChannelHandler.class, new ViolatedAssumptionAnswer());
      HeartbeatHandler heartbeatHandler0 = new HeartbeatHandler(channelHandler0);
      // Undeclared exception!
      try { 
        heartbeatHandler0.sent((Channel) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.exchange.support.header.HeartbeatHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ChannelHandler channelHandler0 = mock(ChannelHandler.class, new ViolatedAssumptionAnswer());
      HeartbeatHandler heartbeatHandler0 = new HeartbeatHandler(channelHandler0);
      // Undeclared exception!
      try { 
        heartbeatHandler0.received((Channel) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.exchange.support.header.HeartbeatHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ChannelHandler channelHandler0 = mock(ChannelHandler.class, new ViolatedAssumptionAnswer());
      HeartbeatHandler heartbeatHandler0 = new HeartbeatHandler(channelHandler0);
      // Undeclared exception!
      try { 
        heartbeatHandler0.disconnected((Channel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.exchange.support.header.HeartbeatHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HeartbeatHandler heartbeatHandler0 = null;
      try {
        heartbeatHandler0 = new HeartbeatHandler((ChannelHandler) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // handler == null
         //
         verifyException("org.apache.dubbo.common.utils.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ChannelHandler channelHandler0 = mock(ChannelHandler.class, new ViolatedAssumptionAnswer());
      HeartbeatHandler heartbeatHandler0 = new HeartbeatHandler(channelHandler0);
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      heartbeatHandler0.connected(channel0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ChannelHandler channelHandler0 = mock(ChannelHandler.class, new ViolatedAssumptionAnswer());
      HeartbeatHandler heartbeatHandler0 = new HeartbeatHandler(channelHandler0);
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      heartbeatHandler0.received(channel0, heartbeatHandler0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ChannelHandler channelHandler0 = mock(ChannelHandler.class, new ViolatedAssumptionAnswer());
      HeartbeatHandler heartbeatHandler0 = new HeartbeatHandler(channelHandler0);
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      heartbeatHandler0.disconnected(channel0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ChannelHandler channelHandler0 = mock(ChannelHandler.class, new ViolatedAssumptionAnswer());
      HeartbeatHandler heartbeatHandler0 = new HeartbeatHandler(channelHandler0);
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      heartbeatHandler0.sent(channel0, heartbeatHandler0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ChannelHandler channelHandler0 = mock(ChannelHandler.class, new ViolatedAssumptionAnswer());
      HeartbeatHandler heartbeatHandler0 = new HeartbeatHandler(channelHandler0);
      // Undeclared exception!
      try { 
        heartbeatHandler0.connected((Channel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.exchange.support.header.HeartbeatHandler", e);
      }
  }
}
