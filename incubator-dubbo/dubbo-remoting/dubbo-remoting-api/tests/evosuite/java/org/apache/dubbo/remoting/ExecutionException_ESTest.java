/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 10 04:30:52 GMT 2021
 */

package org.apache.dubbo.remoting;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.InetSocketAddress;
import org.apache.dubbo.remoting.Channel;
import org.apache.dubbo.remoting.ExecutionException;
import org.apache.dubbo.remoting.transport.ChannelDelegate;
import org.apache.dubbo.remoting.transport.ClientDelegate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.mock.java.net.MockInetSocketAddress;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ExecutionException_ESTest extends ExecutionException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ClientDelegate clientDelegate0 = new ClientDelegate();
      Object object0 = new Object();
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(506);
      ExecutionException executionException0 = new ExecutionException(object0, mockInetSocketAddress0, mockInetSocketAddress0, "");
      ExecutionException executionException1 = null;
      try {
        executionException1 = new ExecutionException("OIcL2}&", clientDelegate0, "OIcL2}&", executionException0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.transport.ClientDelegate", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ClientDelegate clientDelegate0 = new ClientDelegate();
      ExecutionException executionException0 = null;
      try {
        executionException0 = new ExecutionException("Client Shared Connections: ", clientDelegate0, "Client Shared Connections: ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.transport.ClientDelegate", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Object object0 = new Object();
      MockThrowable mockThrowable0 = new MockThrowable((String) null);
      ExecutionException executionException0 = new ExecutionException(object0, (Channel) null, mockThrowable0);
      Object object1 = executionException0.getRequest();
      assertSame(object1, object0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      ExecutionException executionException0 = new ExecutionException("", (InetSocketAddress) null, (InetSocketAddress) null, "", mockThrowable0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Object object0 = new Object();
      InetSocketAddress inetSocketAddress0 = MockInetSocketAddress.createUnresolved("$]gKZnaWl8HO[R(L", 1);
      ExecutionException executionException0 = new ExecutionException("$]gKZnaWl8HO[R(L", inetSocketAddress0, inetSocketAddress0, "local");
      ExecutionException executionException1 = new ExecutionException(object0, inetSocketAddress0, inetSocketAddress0, executionException0);
      assertFalse(executionException1.equals((Object)executionException0));
  }
}
