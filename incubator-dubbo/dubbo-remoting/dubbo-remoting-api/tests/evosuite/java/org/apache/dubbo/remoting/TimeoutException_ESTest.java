/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 10 03:58:54 GMT 2021
 */

package org.apache.dubbo.remoting;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.InetSocketAddress;
import org.apache.dubbo.remoting.Channel;
import org.apache.dubbo.remoting.TimeoutException;
import org.apache.dubbo.remoting.transport.ChannelDelegate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TimeoutException_ESTest extends TimeoutException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TimeoutException timeoutException0 = new TimeoutException(false, (InetSocketAddress) null, (InetSocketAddress) null, "");
      int int0 = timeoutException0.getPhase();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ChannelDelegate channelDelegate0 = new ChannelDelegate();
      TimeoutException timeoutException0 = null;
      try {
        timeoutException0 = new TimeoutException(false, channelDelegate0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.transport.ChannelDelegate", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TimeoutException timeoutException0 = new TimeoutException(true, (InetSocketAddress) null, (InetSocketAddress) null, "remote");
      boolean boolean0 = timeoutException0.isClientSide();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TimeoutException timeoutException0 = new TimeoutException(true, (InetSocketAddress) null, (InetSocketAddress) null, "remote");
      boolean boolean0 = timeoutException0.isServerSide();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TimeoutException timeoutException0 = new TimeoutException(false, (InetSocketAddress) null, (InetSocketAddress) null, "");
      boolean boolean0 = timeoutException0.isClientSide();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TimeoutException timeoutException0 = new TimeoutException(true, (Channel) null, "1.>8 ,(fSb'/bne");
      assertEquals(0, TimeoutException.CLIENT_SIDE);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      TimeoutException timeoutException0 = new TimeoutException(true, (InetSocketAddress) null, (InetSocketAddress) null, "remote");
      int int0 = timeoutException0.getPhase();
      assertEquals(1, int0);
  }
}
