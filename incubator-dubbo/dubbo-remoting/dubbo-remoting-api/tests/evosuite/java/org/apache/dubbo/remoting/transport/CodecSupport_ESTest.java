/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 10 03:34:41 GMT 2021
 */

package org.apache.dubbo.remoting.transport;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.InputStream;
import org.apache.dubbo.common.URL;
import org.apache.dubbo.common.serialize.Serialization;
import org.apache.dubbo.remoting.transport.CodecSupport;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CodecSupport_ESTest extends CodecSupport_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      URL uRL0 = null;
      // Undeclared exception!
      try { 
        CodecSupport.getSerialization((URL) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.transport.CodecSupport", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      InputStream inputStream0 = null;
      // Undeclared exception!
      try { 
        CodecSupport.getPayload((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.transport.CodecSupport", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte byte0 = (byte)66;
      Byte byte1 = new Byte((byte)66);
      CodecSupport.getSerializationById(byte1);
      CodecSupport.getIDByName("E");
      Byte byte2 = new Byte((byte)16);
      CodecSupport.getSerializationById(byte2);
      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(inputStream0).available();
      doReturn(0, 0, 0, 0, 0).when(inputStream0).read(any(byte[].class));
      // Undeclared exception!
      CodecSupport.getPayload(inputStream0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte byte0 = (byte)126;
      Byte byte1 = new Byte((byte)126);
      CodecSupport.getSerializationById(byte1);
      // Undeclared exception!
      try { 
        CodecSupport.getNullBytesOf((Serialization) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.transport.CodecSupport", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      URL uRL0 = mock(URL.class, new ViolatedAssumptionAnswer());
      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
      try { 
        CodecSupport.deserialize(uRL0, inputStream0, (byte)0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unrecognized serialize type from consumer: 0
         //
         verifyException("org.apache.dubbo.remoting.transport.CodecSupport", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      URL uRL0 = mock(URL.class, new ViolatedAssumptionAnswer());
      byte byte0 = (byte)85;
      Byte byte1 = new Byte((byte)85);
      try { 
        CodecSupport.getSerialization(uRL0, byte1);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unrecognized serialize type from consumer: 85
         //
         verifyException("org.apache.dubbo.remoting.transport.CodecSupport", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      URL uRL0 = mock(URL.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(uRL0).getParameter(anyString() , anyString());
      // Undeclared exception!
      try { 
        CodecSupport.getSerialization(uRL0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Extension name == null
         //
         verifyException("org.apache.dubbo.common.extension.ExtensionLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-78);
      byteArray0[1] = (byte) (-63);
      byteArray0[2] = (byte) (-123);
      byteArray0[3] = (byte) (-106);
      byteArray0[4] = (byte) (-29);
      byteArray0[5] = (byte)59;
      byteArray0[6] = (byte)83;
      byteArray0[7] = (byte) (-41);
      // Undeclared exception!
      try { 
        CodecSupport.isHeartBeat(byteArray0, (byte)59);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.transport.CodecSupport", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      byte byte0 = (byte) (-31);
      // Undeclared exception!
      try { 
        CodecSupport.isHeartBeat(byteArray0, (byte) (-31));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.transport.CodecSupport", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-107);
      byteArray0[4] = (byte) (-31);
      // Undeclared exception!
      try { 
        CodecSupport.isHeartBeat(byteArray0, (byte) (-31));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.transport.CodecSupport", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      URL uRL0 = mock(URL.class, new ViolatedAssumptionAnswer());
      Byte byte0 = new Byte((byte) (-52));
      try { 
        CodecSupport.getSerialization(uRL0, byte0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unrecognized serialize type from consumer: -52
         //
         verifyException("org.apache.dubbo.remoting.transport.CodecSupport", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte)0;
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte) (-114);
      byteArray0[4] = (byte) (-121);
      // Undeclared exception!
      try { 
        CodecSupport.isHeartBeat(byteArray0, (byte)0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.transport.CodecSupport", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(inputStream0).available();
      doReturn(0, 0, 0, 0, 0).when(inputStream0).read(any(byte[].class));
      // Undeclared exception!
      CodecSupport.getPayload(inputStream0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CodecSupport.getIDByName((String) null);
      URL uRL0 = mock(URL.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(uRL0).getParameter(anyString() , anyString());
      // Undeclared exception!
      try { 
        CodecSupport.getSerialization(uRL0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Extension name == null
         //
         verifyException("org.apache.dubbo.common.extension.ExtensionLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      URL uRL0 = mock(URL.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(uRL0).getParameter(anyString() , anyString());
      // Undeclared exception!
      try { 
        CodecSupport.getSerialization(uRL0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Extension name == null
         //
         verifyException("org.apache.dubbo.common.extension.ExtensionLoader", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Byte byte0 = new Byte((byte)0);
      CodecSupport.checkSerialization("Y2dZa4c[dFXq-xves(", "h}uA:c^NWeG", byte0);
      CodecSupport.getIDByName("");
      URL uRL0 = mock(URL.class, new ViolatedAssumptionAnswer());
      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
      try { 
        CodecSupport.deserialize(uRL0, inputStream0, (byte)0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unrecognized serialize type from consumer: 0
         //
         verifyException("org.apache.dubbo.remoting.transport.CodecSupport", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      URL uRL0 = mock(URL.class, new ViolatedAssumptionAnswer());
      Byte byte0 = new Byte((byte) (-1));
      try { 
        CodecSupport.getSerialization(uRL0, byte0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Unrecognized serialize type from consumer: -1
         //
         verifyException("org.apache.dubbo.remoting.transport.CodecSupport", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = " has duplicate id to Serialization extension ";
      String string1 = "";
      byte byte0 = (byte)0;
      Byte byte1 = new Byte((byte)0);
      CodecSupport.checkSerialization(" has duplicate id to Serialization extension ", "", byte1);
      CodecSupport.getSerializationById(byte1);
      // Undeclared exception!
      try { 
        CodecSupport.getNullBytesOf((Serialization) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.dubbo.remoting.transport.CodecSupport", e);
      }
  }
}
